  I0420 14:12:19.621270      15 e2e.go:117] Starting e2e run "b8ba6184-7f72-49b5-bf7a-e8b69be702d5" on Ginkgo node 1
  Apr 20 14:12:19.701: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713622339 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Apr 20 14:12:20.166: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:12:20.178: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 20 14:12:20.282: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 20 14:12:20.293: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Apr 20 14:12:20.293: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Apr 20 14:12:20.293: INFO: e2e test version: v1.28.9
  Apr 20 14:12:20.298: INFO: kube-apiserver version: v1.28.9
  Apr 20 14:12:20.298: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:12:20.313: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.147 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/20/24 14:12:20.866
  Apr 20 14:12:20.866: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:12:20.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:12:20.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:12:20.938
  STEP: Creating pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364 @ 04/20/24 14:12:20.943
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:12:41.114
  Apr 20 14:12:41.121: INFO: Initial restart count of pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 is 0
  Apr 20 14:12:41.126: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:43.139: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:45.151: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:47.162: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:49.177: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:51.188: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:53.197: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:55.203: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:57.212: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:12:59.225: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:01.240: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:03.247: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:05.259: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:07.267: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:09.277: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:11.293: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:13.306: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:15.318: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:17.327: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:19.335: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:21.342: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:23.350: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:25.357: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:27.366: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:29.375: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:31.385: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:33.395: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:35.403: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:37.414: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:39.422: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:41.430: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:43.440: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:45.449: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:47.465: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:49.477: INFO: Get pod test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 in namespace container-probe-5364
  Apr 20 14:13:49.477: INFO: Restart count of pod container-probe-5364/test-grpc-0e99ecd4-2f89-47f8-925f-ac268f40e253 is now 1 (1m8.35527643s elapsed)
  Apr 20 14:13:49.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 14:13:49.49
  STEP: Destroying namespace "container-probe-5364" for this suite. @ 04/20/24 14:13:49.525
â€¢ [88.688 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 04/20/24 14:13:49.557
  Apr 20 14:13:49.558: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:13:49.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:49.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:49.625
  STEP: Creating service test in namespace statefulset-3167 @ 04/20/24 14:13:49.636
  STEP: Creating stateful set ss in namespace statefulset-3167 @ 04/20/24 14:13:49.646
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3167 @ 04/20/24 14:13:49.669
  Apr 20 14:13:49.688: INFO: Found 0 stateful pods, waiting for 1
  Apr 20 14:13:59.696: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/20/24 14:13:59.696
  Apr 20 14:13:59.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 14:14:00.086: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 14:14:00.086: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 14:14:00.086: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 14:14:00.094: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Apr 20 14:14:10.103: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 14:14:10.103: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 14:14:10.135: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 20 14:14:10.136: INFO: ss-0  aat3reeth3ee-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:13:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:13:49 +0000 UTC  }]
  Apr 20 14:14:10.136: INFO: 
  Apr 20 14:14:10.136: INFO: StatefulSet ss has not reached scale 3, at 1
  Apr 20 14:14:11.147: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.987641701s
  Apr 20 14:14:12.157: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.977174549s
  Apr 20 14:14:13.165: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.967607513s
  Apr 20 14:14:14.174: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.959283173s
  Apr 20 14:14:15.187: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.949619818s
  Apr 20 14:14:16.197: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.937885559s
  Apr 20 14:14:17.206: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.927040492s
  Apr 20 14:14:18.226: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.918020168s
  Apr 20 14:14:19.235: INFO: Verifying statefulset ss doesn't scale past 3 for another 898.744269ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3167 @ 04/20/24 14:14:20.236
  Apr 20 14:14:20.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 14:14:20.524: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 14:14:20.524: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 14:14:20.524: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 14:14:20.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 14:14:20.726: INFO: rc: 1
  Apr 20 14:14:20.727: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: unable to upgrade connection: container not found ("webserver")

  error:
  exit status 1
  Apr 20 14:14:30.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 14:14:31.010: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 20 14:14:31.010: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 14:14:31.010: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 14:14:31.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 14:14:31.290: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 20 14:14:31.290: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 14:14:31.290: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 14:14:31.299: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:14:31.299: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:14:31.299: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/20/24 14:14:31.299
  Apr 20 14:14:31.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 14:14:31.544: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 14:14:31.544: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 14:14:31.544: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 14:14:31.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 14:14:31.749: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 14:14:31.749: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 14:14:31.749: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 14:14:31.749: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-3167 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 14:14:31.970: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 14:14:31.970: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 14:14:31.970: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 14:14:31.970: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 14:14:31.977: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Apr 20 14:14:41.994: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 14:14:41.995: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 14:14:41.995: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 14:14:42.026: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 20 14:14:42.026: INFO: ss-0  aat3reeth3ee-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:13:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:13:49 +0000 UTC  }]
  Apr 20 14:14:42.026: INFO: ss-1  aat3reeth3ee-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC  }]
  Apr 20 14:14:42.026: INFO: ss-2  aat3reeth3ee-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC  }]
  Apr 20 14:14:42.026: INFO: 
  Apr 20 14:14:42.026: INFO: StatefulSet ss has not reached scale 0, at 3
  Apr 20 14:14:43.037: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Apr 20 14:14:43.037: INFO: ss-1  aat3reeth3ee-2  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC  }]
  Apr 20 14:14:43.037: INFO: ss-2  aat3reeth3ee-1  Succeeded  0s     [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:32 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:14:10 +0000 UTC  }]
  Apr 20 14:14:43.037: INFO: 
  Apr 20 14:14:43.037: INFO: StatefulSet ss has not reached scale 0, at 2
  Apr 20 14:14:44.043: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.977680434s
  Apr 20 14:14:45.050: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.971782945s
  Apr 20 14:14:46.057: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.965515671s
  Apr 20 14:14:47.064: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.958590725s
  Apr 20 14:14:48.072: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.950869211s
  Apr 20 14:14:49.081: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.942823973s
  Apr 20 14:14:50.087: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.933957415s
  Apr 20 14:14:51.096: INFO: Verifying statefulset ss doesn't scale past 0 for another 927.417395ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3167 @ 04/20/24 14:14:52.097
  Apr 20 14:14:52.104: INFO: Scaling statefulset ss to 0
  Apr 20 14:14:52.149: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 14:14:52.159: INFO: Deleting all statefulset in ns statefulset-3167
  Apr 20 14:14:52.166: INFO: Scaling statefulset ss to 0
  Apr 20 14:14:52.218: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 14:14:52.225: INFO: Deleting statefulset ss
  Apr 20 14:14:52.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3167" for this suite. @ 04/20/24 14:14:52.278
â€¢ [62.744 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/20/24 14:14:52.302
  Apr 20 14:14:52.302: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:14:52.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:52.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:52.362
  STEP: Creating pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325 @ 04/20/24 14:14:52.37
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:15:02.45
  Apr 20 14:15:02.464: INFO: Initial restart count of pod liveness-56bae661-39a5-4999-a098-402a82fc0adc is 0
  Apr 20 14:15:02.476: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:04.482: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:06.490: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:08.499: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:10.504: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:12.513: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:14.524: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:14.524: INFO: Restart count of pod container-probe-3325/liveness-56bae661-39a5-4999-a098-402a82fc0adc is now 1 (12.059995767s elapsed)
  Apr 20 14:15:16.533: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:18.540: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:20.548: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:22.557: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:24.564: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:26.575: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:28.589: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:30.598: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:32.609: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:34.618: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:34.618: INFO: Restart count of pod container-probe-3325/liveness-56bae661-39a5-4999-a098-402a82fc0adc is now 2 (32.153929714s elapsed)
  Apr 20 14:15:36.633: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:38.642: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:40.654: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:42.664: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:44.673: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:46.682: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:48.703: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:50.715: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:52.724: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:54.732: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:54.732: INFO: Restart count of pod container-probe-3325/liveness-56bae661-39a5-4999-a098-402a82fc0adc is now 3 (52.267297504s elapsed)
  Apr 20 14:15:56.740: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:15:58.747: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:00.753: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:02.771: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:04.780: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:06.788: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:08.796: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:10.804: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:12.813: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:14.831: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:14.831: INFO: Restart count of pod container-probe-3325/liveness-56bae661-39a5-4999-a098-402a82fc0adc is now 4 (1m12.366686246s elapsed)
  Apr 20 14:16:16.839: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:18.846: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:20.855: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:22.864: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:24.882: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:26.890: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:28.897: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:30.905: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:32.931: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:34.939: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:36.947: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:38.953: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:40.962: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:42.973: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:44.982: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:46.991: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:48.998: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:51.010: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:53.019: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:55.031: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:57.040: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:16:59.050: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:01.059: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:03.067: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:05.074: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:07.104: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:09.113: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:11.121: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:13.138: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:15.149: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:17.156: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:19.165: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:21.172: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:23.182: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:25.193: INFO: Get pod liveness-56bae661-39a5-4999-a098-402a82fc0adc in namespace container-probe-3325
  Apr 20 14:17:25.193: INFO: Restart count of pod container-probe-3325/liveness-56bae661-39a5-4999-a098-402a82fc0adc is now 5 (2m22.728803359s elapsed)
  Apr 20 14:17:25.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 14:17:25.209
  STEP: Destroying namespace "container-probe-3325" for this suite. @ 04/20/24 14:17:25.246
â€¢ [152.959 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 04/20/24 14:17:25.266
  Apr 20 14:17:25.266: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:17:25.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:25.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:25.322
  Apr 20 14:17:25.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4727" for this suite. @ 04/20/24 14:17:25.444
â€¢ [0.205 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/20/24 14:17:25.476
  Apr 20 14:17:25.476: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 14:17:25.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:25.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:25.529
  STEP: Creating two CSIDrivers @ 04/20/24 14:17:25.537
  STEP: Getting "inline-driver-b74bdab8-3cbd-4d14-82bb-6a2163f8b05b" & "inline-driver-0474de71-f4fc-42b6-9f32-da54d150e858" @ 04/20/24 14:17:25.623
  STEP: Patching the CSIDriver "inline-driver-0474de71-f4fc-42b6-9f32-da54d150e858" @ 04/20/24 14:17:25.656
  STEP: Updating the CSIDriver "inline-driver-0474de71-f4fc-42b6-9f32-da54d150e858" @ 04/20/24 14:17:25.67
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2149" @ 04/20/24 14:17:25.694
  STEP: Deleting CSIDriver "inline-driver-b74bdab8-3cbd-4d14-82bb-6a2163f8b05b" @ 04/20/24 14:17:25.701
  STEP: Confirm deletion of CSIDriver "inline-driver-b74bdab8-3cbd-4d14-82bb-6a2163f8b05b" @ 04/20/24 14:17:25.718
  STEP: Deleting CSIDriver "inline-driver-0474de71-f4fc-42b6-9f32-da54d150e858" via DeleteCollection @ 04/20/24 14:17:25.729
  STEP: Confirm deletion of CSIDriver "inline-driver-0474de71-f4fc-42b6-9f32-da54d150e858" @ 04/20/24 14:17:25.748
  Apr 20 14:17:25.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2149" for this suite. @ 04/20/24 14:17:25.765
â€¢ [0.301 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/20/24 14:17:25.779
  Apr 20 14:17:25.779: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:17:25.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:25.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:25.819
  STEP: Creating secret with name secret-test-map-6271aa35-f2c5-4b85-afc6-af22228b3410 @ 04/20/24 14:17:25.824
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:17:25.833
  STEP: Saw pod success @ 04/20/24 14:17:29.875
  Apr 20 14:17:29.883: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-21b1f106-12e9-4e68-a134-04c93bd7dbb1 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:17:29.925
  Apr 20 14:17:29.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4523" for this suite. @ 04/20/24 14:17:29.969
â€¢ [4.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 04/20/24 14:17:29.984
  Apr 20 14:17:29.984: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:17:29.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:30.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:30.021
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-ed9c09b7-eee1-4665-a91b-b4860ffa25d9 @ 04/20/24 14:17:30.041
  STEP: Creating the pod @ 04/20/24 14:17:30.052
  STEP: Updating configmap projected-configmap-test-upd-ed9c09b7-eee1-4665-a91b-b4860ffa25d9 @ 04/20/24 14:17:32.113
  STEP: waiting to observe update in volume @ 04/20/24 14:17:32.137
  Apr 20 14:18:48.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4701" for this suite. @ 04/20/24 14:18:48.895
â€¢ [78.926 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 04/20/24 14:18:48.91
  Apr 20 14:18:48.910: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:18:48.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:48.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:48.964
  STEP: Creating configMap with name configmap-test-upd-b3fb0e08-b313-42c5-9bcf-b7d6543e2a94 @ 04/20/24 14:18:48.98
  STEP: Creating the pod @ 04/20/24 14:18:48.991
  STEP: Updating configmap configmap-test-upd-b3fb0e08-b313-42c5-9bcf-b7d6543e2a94 @ 04/20/24 14:18:51.053
  STEP: waiting to observe update in volume @ 04/20/24 14:18:51.064
  Apr 20 14:20:15.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-487" for this suite. @ 04/20/24 14:20:15.915
â€¢ [87.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 04/20/24 14:20:15.94
  Apr 20 14:20:15.940: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:20:15.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:15.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:15.992
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 14:20:15.998
  STEP: Saw pod success @ 04/20/24 14:20:20.047
  Apr 20 14:20:20.055: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-01ac51c9-ad45-4e09-9f74-e9b1ce493c61 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:20:20.069
  Apr 20 14:20:20.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-875" for this suite. @ 04/20/24 14:20:20.107
â€¢ [4.189 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 04/20/24 14:20:20.129
  Apr 20 14:20:20.129: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:20:20.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:20.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:20.224
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:20:20.231
  STEP: Saw pod success @ 04/20/24 14:20:24.316
  Apr 20 14:20:24.325: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-df792bc7-3b13-4585-ac22-341e4aa83831 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:20:24.343
  Apr 20 14:20:24.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6779" for this suite. @ 04/20/24 14:20:24.39
â€¢ [4.280 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/20/24 14:20:24.41
  Apr 20 14:20:24.410: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 14:20:24.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:24.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:24.488
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2252 @ 04/20/24 14:20:24.497
  STEP: changing the ExternalName service to type=NodePort @ 04/20/24 14:20:24.527
  STEP: creating replication controller externalname-service in namespace services-2252 @ 04/20/24 14:20:24.584
  I0420 14:20:24.620061      15 runners.go:197] Created replication controller with name: externalname-service, namespace: services-2252, replica count: 2
  I0420 14:20:27.672984      15 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:20:27.673: INFO: Creating new exec pod
  Apr 20 14:20:30.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-2252 exec execpodcm4k9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 14:20:31.091: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 14:20:31.091: INFO: stdout: "externalname-service-mjlj9"
  Apr 20 14:20:31.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-2252 exec execpodcm4k9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.55.115 80'
  Apr 20 14:20:31.371: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.55.115 80\nConnection to 10.233.55.115 80 port [tcp/http] succeeded!\n"
  Apr 20 14:20:31.371: INFO: stdout: "externalname-service-mjlj9"
  Apr 20 14:20:31.372: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-2252 exec execpodcm4k9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.170 31450'
  Apr 20 14:20:31.640: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.170 31450\nConnection to 192.168.121.170 31450 port [tcp/*] succeeded!\n"
  Apr 20 14:20:31.640: INFO: stdout: ""
  Apr 20 14:20:32.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-2252 exec execpodcm4k9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.170 31450'
  Apr 20 14:20:32.942: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.170 31450\nConnection to 192.168.121.170 31450 port [tcp/*] succeeded!\n"
  Apr 20 14:20:32.942: INFO: stdout: ""
  Apr 20 14:20:33.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-2252 exec execpodcm4k9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.170 31450'
  Apr 20 14:20:33.941: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.170 31450\nConnection to 192.168.121.170 31450 port [tcp/*] succeeded!\n"
  Apr 20 14:20:33.941: INFO: stdout: "externalname-service-c6kbw"
  Apr 20 14:20:33.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-2252 exec execpodcm4k9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.198 31450'
  Apr 20 14:20:34.256: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.198 31450\nConnection to 192.168.121.198 31450 port [tcp/*] succeeded!\n"
  Apr 20 14:20:34.256: INFO: stdout: ""
  Apr 20 14:20:35.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-2252 exec execpodcm4k9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.198 31450'
  Apr 20 14:20:35.545: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.198 31450\nConnection to 192.168.121.198 31450 port [tcp/*] succeeded!\n"
  Apr 20 14:20:35.545: INFO: stdout: "externalname-service-mjlj9"
  Apr 20 14:20:35.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 14:20:35.560: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-2252" for this suite. @ 04/20/24 14:20:35.649
â€¢ [11.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/20/24 14:20:35.694
  Apr 20 14:20:35.695: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:20:35.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:35.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:35.752
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/20/24 14:20:35.757
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:20:35.775
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/20/24 14:20:37.814
  STEP: Waiting for all pods to be running @ 04/20/24 14:20:37.814
  Apr 20 14:20:37.825: INFO: pods: 0 < 3
  Apr 20 14:20:39.850: INFO: running pods: 2 < 3
  STEP: locating a running pod @ 04/20/24 14:20:41.836
  STEP: Updating the pdb to allow a pod to be evicted @ 04/20/24 14:20:41.871
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:20:41.898
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 14:20:43.917
  STEP: Waiting for all pods to be running @ 04/20/24 14:20:43.917
  STEP: Waiting for the pdb to observed all healthy pods @ 04/20/24 14:20:43.925
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/20/24 14:20:43.985
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:20:44.087
  STEP: Waiting for all pods to be running @ 04/20/24 14:20:46.117
  STEP: locating a running pod @ 04/20/24 14:20:46.125
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/20/24 14:20:46.169
  STEP: Waiting for the pdb to be deleted @ 04/20/24 14:20:46.197
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 14:20:46.203
  STEP: Waiting for all pods to be running @ 04/20/24 14:20:46.203
  Apr 20 14:20:46.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5709" for this suite. @ 04/20/24 14:20:46.352
â€¢ [10.716 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 04/20/24 14:20:46.414
  Apr 20 14:20:46.414: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:20:46.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:46.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:46.491
  STEP: validating cluster-info @ 04/20/24 14:20:46.499
  Apr 20 14:20:46.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-58 cluster-info'
  Apr 20 14:20:46.645: INFO: stderr: ""
  Apr 20 14:20:46.645: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 20 14:20:46.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-58" for this suite. @ 04/20/24 14:20:46.666
â€¢ [0.269 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 04/20/24 14:20:46.686
  Apr 20 14:20:46.686: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:20:46.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:46.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:46.742
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:20:46.747
  STEP: Saw pod success @ 04/20/24 14:20:50.816
  Apr 20 14:20:50.824: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-3f621392-fa16-4bb5-a2ea-ea298bc8ab02 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:20:50.84
  Apr 20 14:20:50.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5711" for this suite. @ 04/20/24 14:20:50.889
â€¢ [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 04/20/24 14:20:50.908
  Apr 20 14:20:50.908: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:20:50.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:50.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:50.957
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/20/24 14:20:50.963
  STEP: Saw pod success @ 04/20/24 14:20:55.014
  Apr 20 14:20:55.021: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-b0ab590f-1c46-4c9d-8b47-6689f2023872 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:20:55.036
  Apr 20 14:20:55.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4630" for this suite. @ 04/20/24 14:20:55.083
â€¢ [4.191 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/20/24 14:20:55.099
  Apr 20 14:20:55.100: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename hostport @ 04/20/24 14:20:55.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:55.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:55.146
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/20/24 14:20:55.159
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.170 on the node which pod1 resides and expect scheduled @ 04/20/24 14:21:07.253
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.170 but use UDP protocol on the node which pod2 resides @ 04/20/24 14:21:09.288
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/20/24 14:21:13.353
  Apr 20 14:21:13.353: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.170 http://127.0.0.1:54323/hostname] Namespace:hostport-3863 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:21:13.354: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:21:13.356: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:21:13.356: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-3863/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.170+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.170, port: 54323 @ 04/20/24 14:21:13.525
  Apr 20 14:21:13.525: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.170:54323/hostname] Namespace:hostport-3863 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:21:13.525: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:21:13.527: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:21:13.527: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-3863/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.170%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.170, port: 54323 UDP @ 04/20/24 14:21:13.649
  Apr 20 14:21:13.649: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.170 54323] Namespace:hostport-3863 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:21:13.649: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:21:13.651: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:21:13.651: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-3863/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.170+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Apr 20 14:21:18.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3863" for this suite. @ 04/20/24 14:21:18.789
â€¢ [23.701 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/20/24 14:21:18.803
  Apr 20 14:21:18.803: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:21:18.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:18.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:18.834
  STEP: creating the pdb @ 04/20/24 14:21:18.838
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:21:18.846
  STEP: updating the pdb @ 04/20/24 14:21:18.854
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:21:18.873
  STEP: patching the pdb @ 04/20/24 14:21:20.887
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:21:20.908
  STEP: Waiting for the pdb to be deleted @ 04/20/24 14:21:22.939
  Apr 20 14:21:22.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6298" for this suite. @ 04/20/24 14:21:22.956
â€¢ [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/20/24 14:21:22.972
  Apr 20 14:21:22.972: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:21:22.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:23.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:23.023
  STEP: creating the pod @ 04/20/24 14:21:23.027
  STEP: submitting the pod to kubernetes @ 04/20/24 14:21:23.027
  STEP: verifying the pod is in kubernetes @ 04/20/24 14:21:25.073
  STEP: updating the pod @ 04/20/24 14:21:25.091
  Apr 20 14:21:25.618: INFO: Successfully updated pod "pod-update-99b47b6b-f139-458f-8446-14d0ca920ba6"
  STEP: verifying the updated pod is in kubernetes @ 04/20/24 14:21:25.628
  Apr 20 14:21:25.633: INFO: Pod update OK
  Apr 20 14:21:25.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1373" for this suite. @ 04/20/24 14:21:25.644
â€¢ [2.686 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/20/24 14:21:25.659
  Apr 20 14:21:25.659: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:21:25.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:25.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:25.697
  STEP: Setting up server cert @ 04/20/24 14:21:25.749
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:21:27.004
  STEP: Deploying the webhook pod @ 04/20/24 14:21:27.024
  STEP: Wait for the deployment to be ready @ 04/20/24 14:21:27.05
  Apr 20 14:21:27.066: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:21:29.09
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:21:29.115
  Apr 20 14:21:30.117: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 14:21:30.132
  STEP: create a pod that should be denied by the webhook @ 04/20/24 14:21:30.173
  STEP: create a pod that causes the webhook to hang @ 04/20/24 14:21:30.203
  STEP: create a configmap that should be denied by the webhook @ 04/20/24 14:21:40.217
  STEP: create a configmap that should be admitted by the webhook @ 04/20/24 14:21:40.287
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 14:21:40.305
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 14:21:40.321
  STEP: create a namespace that bypass the webhook @ 04/20/24 14:21:40.331
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/20/24 14:21:40.36
  Apr 20 14:21:40.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6471" for this suite. @ 04/20/24 14:21:40.535
  STEP: Destroying namespace "webhook-markers-4959" for this suite. @ 04/20/24 14:21:40.56
  STEP: Destroying namespace "exempted-namespace-2005" for this suite. @ 04/20/24 14:21:40.579
â€¢ [14.937 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/20/24 14:21:40.599
  Apr 20 14:21:40.599: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svc-latency @ 04/20/24 14:21:40.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:40.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:40.682
  Apr 20 14:21:40.686: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-233 @ 04/20/24 14:21:40.691
  I0420 14:21:40.716353      15 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-233, replica count: 1
  I0420 14:21:41.768135      15 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:21:41.895: INFO: Created: latency-svc-2llws
  Apr 20 14:21:41.915: INFO: Got endpoints: latency-svc-2llws [46.427678ms]
  Apr 20 14:21:41.942: INFO: Created: latency-svc-czvvm
  Apr 20 14:21:41.955: INFO: Got endpoints: latency-svc-czvvm [40.259516ms]
  Apr 20 14:21:41.974: INFO: Created: latency-svc-pdc5l
  Apr 20 14:21:41.990: INFO: Created: latency-svc-p4zwr
  Apr 20 14:21:41.991: INFO: Got endpoints: latency-svc-pdc5l [74.887243ms]
  Apr 20 14:21:42.009: INFO: Created: latency-svc-hl98n
  Apr 20 14:21:42.014: INFO: Got endpoints: latency-svc-p4zwr [95.343864ms]
  Apr 20 14:21:42.025: INFO: Got endpoints: latency-svc-hl98n [109.092565ms]
  Apr 20 14:21:42.170: INFO: Created: latency-svc-brzrt
  Apr 20 14:21:42.177: INFO: Created: latency-svc-2pf82
  Apr 20 14:21:42.185: INFO: Created: latency-svc-cth5s
  Apr 20 14:21:42.185: INFO: Created: latency-svc-lpcv5
  Apr 20 14:21:42.186: INFO: Created: latency-svc-t56bd
  Apr 20 14:21:42.186: INFO: Created: latency-svc-45wrq
  Apr 20 14:21:42.186: INFO: Created: latency-svc-sgjhk
  Apr 20 14:21:42.191: INFO: Created: latency-svc-mxbbz
  Apr 20 14:21:42.191: INFO: Created: latency-svc-lld84
  Apr 20 14:21:42.191: INFO: Created: latency-svc-5xsfj
  Apr 20 14:21:42.191: INFO: Created: latency-svc-6l4sn
  Apr 20 14:21:42.191: INFO: Created: latency-svc-nf7zj
  Apr 20 14:21:42.191: INFO: Created: latency-svc-rwpj4
  Apr 20 14:21:42.215: INFO: Created: latency-svc-mmwkp
  Apr 20 14:21:42.215: INFO: Created: latency-svc-pxlsf
  Apr 20 14:21:42.249: INFO: Got endpoints: latency-svc-2pf82 [258.093128ms]
  Apr 20 14:21:42.253: INFO: Got endpoints: latency-svc-t56bd [330.751405ms]
  Apr 20 14:21:42.300: INFO: Got endpoints: latency-svc-45wrq [375.799801ms]
  Apr 20 14:21:42.318: INFO: Got endpoints: latency-svc-brzrt [401.628995ms]
  Apr 20 14:21:42.336: INFO: Got endpoints: latency-svc-cth5s [413.422753ms]
  Apr 20 14:21:42.360: INFO: Got endpoints: latency-svc-lld84 [438.31689ms]
  Apr 20 14:21:42.361: INFO: Got endpoints: latency-svc-rwpj4 [436.73223ms]
  Apr 20 14:21:42.360: INFO: Got endpoints: latency-svc-nf7zj [437.327402ms]
  Apr 20 14:21:42.361: INFO: Got endpoints: latency-svc-5xsfj [442.855707ms]
  Apr 20 14:21:42.360: INFO: Got endpoints: latency-svc-lpcv5 [345.747974ms]
  Apr 20 14:21:42.383: INFO: Got endpoints: latency-svc-sgjhk [357.745819ms]
  Apr 20 14:21:42.391: INFO: Got endpoints: latency-svc-pxlsf [467.434322ms]
  Apr 20 14:21:42.400: INFO: Got endpoints: latency-svc-mmwkp [476.776856ms]
  Apr 20 14:21:42.400: INFO: Got endpoints: latency-svc-mxbbz [477.820171ms]
  Apr 20 14:21:42.400: INFO: Got endpoints: latency-svc-6l4sn [444.762344ms]
  Apr 20 14:21:42.421: INFO: Created: latency-svc-9b4qb
  Apr 20 14:21:42.443: INFO: Created: latency-svc-kcdfn
  Apr 20 14:21:42.452: INFO: Got endpoints: latency-svc-9b4qb [202.445802ms]
  Apr 20 14:21:42.468: INFO: Got endpoints: latency-svc-kcdfn [106.555726ms]
  Apr 20 14:21:42.487: INFO: Created: latency-svc-lsrs4
  Apr 20 14:21:42.499: INFO: Got endpoints: latency-svc-lsrs4 [137.787009ms]
  Apr 20 14:21:42.512: INFO: Created: latency-svc-hmg8m
  Apr 20 14:21:42.537: INFO: Got endpoints: latency-svc-hmg8m [237.196705ms]
  Apr 20 14:21:42.554: INFO: Created: latency-svc-4frgl
  Apr 20 14:21:42.570: INFO: Got endpoints: latency-svc-4frgl [251.790962ms]
  Apr 20 14:21:42.585: INFO: Created: latency-svc-hrwzm
  Apr 20 14:21:42.604: INFO: Got endpoints: latency-svc-hrwzm [267.562197ms]
  Apr 20 14:21:42.621: INFO: Created: latency-svc-xr6hx
  Apr 20 14:21:42.651: INFO: Got endpoints: latency-svc-xr6hx [290.997318ms]
  Apr 20 14:21:42.651: INFO: Created: latency-svc-czlkd
  Apr 20 14:21:42.672: INFO: Got endpoints: latency-svc-czlkd [311.275484ms]
  Apr 20 14:21:42.679: INFO: Created: latency-svc-2g98q
  Apr 20 14:21:42.700: INFO: Got endpoints: latency-svc-2g98q [338.8658ms]
  Apr 20 14:21:42.701: INFO: Created: latency-svc-qb564
  Apr 20 14:21:42.719: INFO: Created: latency-svc-czrhn
  Apr 20 14:21:42.733: INFO: Got endpoints: latency-svc-qb564 [479.569767ms]
  Apr 20 14:21:42.746: INFO: Got endpoints: latency-svc-czrhn [363.138953ms]
  Apr 20 14:21:42.751: INFO: Created: latency-svc-rrnvh
  Apr 20 14:21:42.777: INFO: Created: latency-svc-5k8zx
  Apr 20 14:21:42.808: INFO: Got endpoints: latency-svc-rrnvh [407.589392ms]
  Apr 20 14:21:42.809: INFO: Got endpoints: latency-svc-5k8zx [407.133303ms]
  Apr 20 14:21:42.810: INFO: Created: latency-svc-8f5gc
  Apr 20 14:21:42.832: INFO: Created: latency-svc-5sx8r
  Apr 20 14:21:42.848: INFO: Got endpoints: latency-svc-8f5gc [455.81128ms]
  Apr 20 14:21:42.867: INFO: Created: latency-svc-wn6r7
  Apr 20 14:21:42.876: INFO: Got endpoints: latency-svc-5sx8r [475.415864ms]
  Apr 20 14:21:42.910: INFO: Got endpoints: latency-svc-wn6r7 [442.186455ms]
  Apr 20 14:21:42.929: INFO: Created: latency-svc-xjz9g
  Apr 20 14:21:42.959: INFO: Created: latency-svc-889r8
  Apr 20 14:21:42.968: INFO: Got endpoints: latency-svc-xjz9g [516.45305ms]
  Apr 20 14:21:42.997: INFO: Created: latency-svc-t9bgs
  Apr 20 14:21:43.008: INFO: Got endpoints: latency-svc-889r8 [509.064568ms]
  Apr 20 14:21:43.025: INFO: Got endpoints: latency-svc-t9bgs [488.086025ms]
  Apr 20 14:21:43.178: INFO: Created: latency-svc-gs2qs
  Apr 20 14:21:43.183: INFO: Created: latency-svc-4xvbr
  Apr 20 14:21:43.187: INFO: Created: latency-svc-skpnk
  Apr 20 14:21:43.191: INFO: Created: latency-svc-4l48d
  Apr 20 14:21:43.191: INFO: Created: latency-svc-khj4j
  Apr 20 14:21:43.191: INFO: Created: latency-svc-qk6rx
  Apr 20 14:21:43.192: INFO: Created: latency-svc-rgmf2
  Apr 20 14:21:43.193: INFO: Created: latency-svc-hd4xl
  Apr 20 14:21:43.195: INFO: Created: latency-svc-px9p5
  Apr 20 14:21:43.195: INFO: Created: latency-svc-5mg4m
  Apr 20 14:21:43.197: INFO: Created: latency-svc-25npj
  Apr 20 14:21:43.198: INFO: Created: latency-svc-z8qv9
  Apr 20 14:21:43.199: INFO: Created: latency-svc-bqqkc
  Apr 20 14:21:43.199: INFO: Created: latency-svc-lgf2s
  Apr 20 14:21:43.200: INFO: Created: latency-svc-ssrvs
  Apr 20 14:21:43.200: INFO: Got endpoints: latency-svc-ssrvs [454.166822ms]
  Apr 20 14:21:43.238: INFO: Got endpoints: latency-svc-4l48d [586.505468ms]
  Apr 20 14:21:43.282: INFO: Got endpoints: latency-svc-gs2qs [711.512769ms]
  Apr 20 14:21:43.283: INFO: Got endpoints: latency-svc-skpnk [473.974738ms]
  Apr 20 14:21:43.283: INFO: Got endpoints: latency-svc-z8qv9 [678.985388ms]
  Apr 20 14:21:43.283: INFO: Got endpoints: latency-svc-px9p5 [407.536493ms]
  Apr 20 14:21:43.304: INFO: Got endpoints: latency-svc-25npj [295.651745ms]
  Apr 20 14:21:43.340: INFO: Created: latency-svc-cvvh8
  Apr 20 14:21:43.345: INFO: Got endpoints: latency-svc-5mg4m [497.145131ms]
  Apr 20 14:21:43.345: INFO: Got endpoints: latency-svc-qk6rx [645.330395ms]
  Apr 20 14:21:43.346: INFO: Got endpoints: latency-svc-khj4j [673.577561ms]
  Apr 20 14:21:43.349: INFO: Got endpoints: latency-svc-rgmf2 [323.454383ms]
  Apr 20 14:21:43.372: INFO: Got endpoints: latency-svc-bqqkc [403.393574ms]
  Apr 20 14:21:43.374: INFO: Got endpoints: latency-svc-4xvbr [641.112184ms]
  Apr 20 14:21:43.387: INFO: Got endpoints: latency-svc-lgf2s [578.349153ms]
  Apr 20 14:21:43.392: INFO: Got endpoints: latency-svc-cvvh8 [191.73899ms]
  Apr 20 14:21:43.400: INFO: Got endpoints: latency-svc-hd4xl [489.893997ms]
  Apr 20 14:21:43.414: INFO: Created: latency-svc-z9467
  Apr 20 14:21:43.421: INFO: Created: latency-svc-fvkxc
  Apr 20 14:21:43.442: INFO: Created: latency-svc-vkrgj
  Apr 20 14:21:43.457: INFO: Got endpoints: latency-svc-fvkxc [112.088508ms]
  Apr 20 14:21:43.458: INFO: Got endpoints: latency-svc-z9467 [219.418032ms]
  Apr 20 14:21:43.460: INFO: Got endpoints: latency-svc-vkrgj [177.031903ms]
  Apr 20 14:21:43.486: INFO: Created: latency-svc-9mg9r
  Apr 20 14:21:43.519: INFO: Got endpoints: latency-svc-9mg9r [236.345799ms]
  Apr 20 14:21:43.524: INFO: Created: latency-svc-xn9f6
  Apr 20 14:21:43.568: INFO: Got endpoints: latency-svc-xn9f6 [284.839745ms]
  Apr 20 14:21:43.578: INFO: Created: latency-svc-492nj
  Apr 20 14:21:43.578: INFO: Got endpoints: latency-svc-492nj [273.626903ms]
  Apr 20 14:21:43.585: INFO: Created: latency-svc-b5478
  Apr 20 14:21:43.605: INFO: Created: latency-svc-4wd27
  Apr 20 14:21:43.609: INFO: Got endpoints: latency-svc-b5478 [327.68281ms]
  Apr 20 14:21:43.639: INFO: Got endpoints: latency-svc-4wd27 [290.135431ms]
  Apr 20 14:21:43.803: INFO: Created: latency-svc-cclbx
  Apr 20 14:21:43.804: INFO: Created: latency-svc-tmvjf
  Apr 20 14:21:43.805: INFO: Created: latency-svc-6xnq7
  Apr 20 14:21:43.805: INFO: Created: latency-svc-qv8b8
  Apr 20 14:21:43.805: INFO: Created: latency-svc-5p8qj
  Apr 20 14:21:43.810: INFO: Created: latency-svc-qscs7
  Apr 20 14:21:43.810: INFO: Created: latency-svc-5g7z2
  Apr 20 14:21:43.810: INFO: Created: latency-svc-m9spw
  Apr 20 14:21:43.813: INFO: Created: latency-svc-gtpkr
  Apr 20 14:21:43.813: INFO: Created: latency-svc-2p7bb
  Apr 20 14:21:43.823: INFO: Created: latency-svc-kxhzl
  Apr 20 14:21:43.824: INFO: Created: latency-svc-hq2qc
  Apr 20 14:21:43.843: INFO: Created: latency-svc-7gx59
  Apr 20 14:21:43.843: INFO: Created: latency-svc-wptgl
  Apr 20 14:21:43.843: INFO: Created: latency-svc-ldlvw
  Apr 20 14:21:43.849: INFO: Got endpoints: latency-svc-5p8qj [503.895739ms]
  Apr 20 14:21:43.850: INFO: Got endpoints: latency-svc-6xnq7 [504.058389ms]
  Apr 20 14:21:43.874: INFO: Got endpoints: latency-svc-7gx59 [499.354168ms]
  Apr 20 14:21:43.897: INFO: Got endpoints: latency-svc-wptgl [435.482627ms]
  Apr 20 14:21:43.898: INFO: Got endpoints: latency-svc-2p7bb [438.921185ms]
  Apr 20 14:21:43.921: INFO: Got endpoints: latency-svc-gtpkr [353.159935ms]
  Apr 20 14:21:43.923: INFO: Created: latency-svc-7nc5m
  Apr 20 14:21:43.939: INFO: Created: latency-svc-b2bt8
  Apr 20 14:21:43.948: INFO: Got endpoints: latency-svc-tmvjf [338.547839ms]
  Apr 20 14:21:43.950: INFO: Created: latency-svc-tn4mg
  Apr 20 14:21:43.967: INFO: Created: latency-svc-zw52j
  Apr 20 14:21:43.991: INFO: Got endpoints: latency-svc-cclbx [604.247334ms]
  Apr 20 14:21:44.000: INFO: Created: latency-svc-7bqpr
  Apr 20 14:21:44.014: INFO: Created: latency-svc-z8mfr
  Apr 20 14:21:44.037: INFO: Created: latency-svc-5xwks
  Apr 20 14:21:44.047: INFO: Got endpoints: latency-svc-hq2qc [407.736033ms]
  Apr 20 14:21:44.049: INFO: Created: latency-svc-ldg7f
  Apr 20 14:21:44.067: INFO: Created: latency-svc-pfkqx
  Apr 20 14:21:44.097: INFO: Got endpoints: latency-svc-5g7z2 [704.27977ms]
  Apr 20 14:21:44.117: INFO: Created: latency-svc-q7bqf
  Apr 20 14:21:44.145: INFO: Got endpoints: latency-svc-qv8b8 [683.786582ms]
  Apr 20 14:21:44.191: INFO: Created: latency-svc-2tmfq
  Apr 20 14:21:44.203: INFO: Got endpoints: latency-svc-kxhzl [831.143478ms]
  Apr 20 14:21:44.231: INFO: Created: latency-svc-h9vx8
  Apr 20 14:21:44.258: INFO: Got endpoints: latency-svc-ldlvw [680.255079ms]
  Apr 20 14:21:44.286: INFO: Created: latency-svc-cd6pm
  Apr 20 14:21:44.291: INFO: Got endpoints: latency-svc-m9spw [891.196038ms]
  Apr 20 14:21:44.327: INFO: Created: latency-svc-8k6cw
  Apr 20 14:21:44.341: INFO: Got endpoints: latency-svc-qscs7 [820.388904ms]
  Apr 20 14:21:44.382: INFO: Created: latency-svc-ssgnz
  Apr 20 14:21:44.404: INFO: Got endpoints: latency-svc-7nc5m [554.456882ms]
  Apr 20 14:21:44.439: INFO: Got endpoints: latency-svc-b2bt8 [588.692482ms]
  Apr 20 14:21:44.464: INFO: Created: latency-svc-g8qm6
  Apr 20 14:21:44.502: INFO: Created: latency-svc-gq54t
  Apr 20 14:21:44.510: INFO: Got endpoints: latency-svc-tn4mg [635.698583ms]
  Apr 20 14:21:44.546: INFO: Created: latency-svc-rgbcq
  Apr 20 14:21:44.568: INFO: Got endpoints: latency-svc-zw52j [670.198199ms]
  Apr 20 14:21:44.616: INFO: Got endpoints: latency-svc-7bqpr [717.748311ms]
  Apr 20 14:21:44.637: INFO: Created: latency-svc-cwgm4
  Apr 20 14:21:44.659: INFO: Got endpoints: latency-svc-z8mfr [737.96593ms]
  Apr 20 14:21:44.668: INFO: Created: latency-svc-l2d5b
  Apr 20 14:21:44.693: INFO: Got endpoints: latency-svc-5xwks [701.416487ms]
  Apr 20 14:21:44.699: INFO: Created: latency-svc-j9fv9
  Apr 20 14:21:44.723: INFO: Created: latency-svc-mskbg
  Apr 20 14:21:44.734: INFO: Got endpoints: latency-svc-ldg7f [786.357756ms]
  Apr 20 14:21:44.771: INFO: Created: latency-svc-cf4xb
  Apr 20 14:21:44.795: INFO: Got endpoints: latency-svc-pfkqx [747.748695ms]
  Apr 20 14:21:44.831: INFO: Created: latency-svc-zvhz7
  Apr 20 14:21:44.847: INFO: Got endpoints: latency-svc-q7bqf [750.196353ms]
  Apr 20 14:21:44.873: INFO: Created: latency-svc-6jqpw
  Apr 20 14:21:44.895: INFO: Got endpoints: latency-svc-2tmfq [750.060588ms]
  Apr 20 14:21:44.936: INFO: Created: latency-svc-74fdx
  Apr 20 14:21:44.951: INFO: Got endpoints: latency-svc-h9vx8 [747.057821ms]
  Apr 20 14:21:44.973: INFO: Created: latency-svc-6pwhc
  Apr 20 14:21:44.991: INFO: Got endpoints: latency-svc-cd6pm [732.362423ms]
  Apr 20 14:21:45.028: INFO: Created: latency-svc-wsx2d
  Apr 20 14:21:45.045: INFO: Got endpoints: latency-svc-8k6cw [753.21577ms]
  Apr 20 14:21:45.080: INFO: Created: latency-svc-p6tv4
  Apr 20 14:21:45.086: INFO: Got endpoints: latency-svc-ssgnz [745.034881ms]
  Apr 20 14:21:45.112: INFO: Created: latency-svc-gs2hz
  Apr 20 14:21:45.135: INFO: Got endpoints: latency-svc-g8qm6 [730.952797ms]
  Apr 20 14:21:45.156: INFO: Created: latency-svc-6mgv9
  Apr 20 14:21:45.183: INFO: Got endpoints: latency-svc-gq54t [744.46873ms]
  Apr 20 14:21:45.207: INFO: Created: latency-svc-6684p
  Apr 20 14:21:45.237: INFO: Got endpoints: latency-svc-rgbcq [726.689734ms]
  Apr 20 14:21:45.258: INFO: Created: latency-svc-rbdr8
  Apr 20 14:21:45.292: INFO: Got endpoints: latency-svc-cwgm4 [724.118474ms]
  Apr 20 14:21:45.314: INFO: Created: latency-svc-zmlj2
  Apr 20 14:21:45.335: INFO: Got endpoints: latency-svc-l2d5b [718.954767ms]
  Apr 20 14:21:45.358: INFO: Created: latency-svc-g929w
  Apr 20 14:21:45.382: INFO: Got endpoints: latency-svc-j9fv9 [722.93093ms]
  Apr 20 14:21:45.419: INFO: Created: latency-svc-qjkk9
  Apr 20 14:21:45.441: INFO: Got endpoints: latency-svc-mskbg [747.639569ms]
  Apr 20 14:21:45.469: INFO: Created: latency-svc-cxvtf
  Apr 20 14:21:45.490: INFO: Got endpoints: latency-svc-cf4xb [755.424532ms]
  Apr 20 14:21:45.518: INFO: Created: latency-svc-f7pj4
  Apr 20 14:21:45.535: INFO: Got endpoints: latency-svc-zvhz7 [739.940848ms]
  Apr 20 14:21:45.580: INFO: Created: latency-svc-rgj42
  Apr 20 14:21:45.588: INFO: Got endpoints: latency-svc-6jqpw [740.792408ms]
  Apr 20 14:21:45.643: INFO: Created: latency-svc-vw485
  Apr 20 14:21:45.655: INFO: Got endpoints: latency-svc-74fdx [759.781633ms]
  Apr 20 14:21:45.702: INFO: Created: latency-svc-7ftjv
  Apr 20 14:21:45.708: INFO: Got endpoints: latency-svc-6pwhc [756.932851ms]
  Apr 20 14:21:45.746: INFO: Got endpoints: latency-svc-wsx2d [755.027213ms]
  Apr 20 14:21:45.758: INFO: Created: latency-svc-dqtr9
  Apr 20 14:21:45.791: INFO: Created: latency-svc-rm6zf
  Apr 20 14:21:45.797: INFO: Got endpoints: latency-svc-p6tv4 [751.954274ms]
  Apr 20 14:21:45.834: INFO: Created: latency-svc-46dgc
  Apr 20 14:21:45.845: INFO: Got endpoints: latency-svc-gs2hz [758.194373ms]
  Apr 20 14:21:45.873: INFO: Created: latency-svc-x77gt
  Apr 20 14:21:45.889: INFO: Got endpoints: latency-svc-6mgv9 [753.877405ms]
  Apr 20 14:21:45.921: INFO: Created: latency-svc-lspth
  Apr 20 14:21:45.951: INFO: Got endpoints: latency-svc-6684p [767.818771ms]
  Apr 20 14:21:45.988: INFO: Created: latency-svc-mnbc4
  Apr 20 14:21:45.996: INFO: Got endpoints: latency-svc-rbdr8 [759.115308ms]
  Apr 20 14:21:46.041: INFO: Created: latency-svc-4gdn9
  Apr 20 14:21:46.058: INFO: Got endpoints: latency-svc-zmlj2 [766.075614ms]
  Apr 20 14:21:46.094: INFO: Got endpoints: latency-svc-g929w [759.102663ms]
  Apr 20 14:21:46.107: INFO: Created: latency-svc-h8phn
  Apr 20 14:21:46.144: INFO: Created: latency-svc-425pd
  Apr 20 14:21:46.164: INFO: Got endpoints: latency-svc-qjkk9 [781.799767ms]
  Apr 20 14:21:46.207: INFO: Got endpoints: latency-svc-cxvtf [766.299876ms]
  Apr 20 14:21:46.267: INFO: Created: latency-svc-9jnkk
  Apr 20 14:21:46.283: INFO: Got endpoints: latency-svc-f7pj4 [791.649793ms]
  Apr 20 14:21:46.302: INFO: Created: latency-svc-7xrwh
  Apr 20 14:21:46.305: INFO: Got endpoints: latency-svc-rgj42 [770.02238ms]
  Apr 20 14:21:46.358: INFO: Got endpoints: latency-svc-vw485 [770.393527ms]
  Apr 20 14:21:46.407: INFO: Created: latency-svc-tt6hj
  Apr 20 14:21:46.424: INFO: Created: latency-svc-n94fx
  Apr 20 14:21:46.450: INFO: Got endpoints: latency-svc-7ftjv [795.30281ms]
  Apr 20 14:21:46.488: INFO: Created: latency-svc-j4sfs
  Apr 20 14:21:46.512: INFO: Created: latency-svc-vl698
  Apr 20 14:21:46.512: INFO: Got endpoints: latency-svc-dqtr9 [804.485008ms]
  Apr 20 14:21:46.521: INFO: Got endpoints: latency-svc-rm6zf [775.193457ms]
  Apr 20 14:21:46.549: INFO: Got endpoints: latency-svc-46dgc [751.737473ms]
  Apr 20 14:21:46.570: INFO: Created: latency-svc-wc9cf
  Apr 20 14:21:46.592: INFO: Created: latency-svc-btghl
  Apr 20 14:21:46.605: INFO: Got endpoints: latency-svc-x77gt [759.894742ms]
  Apr 20 14:21:46.625: INFO: Created: latency-svc-5jzrc
  Apr 20 14:21:46.638: INFO: Got endpoints: latency-svc-lspth [749.35615ms]
  Apr 20 14:21:46.669: INFO: Created: latency-svc-q7pb6
  Apr 20 14:21:46.675: INFO: Created: latency-svc-cxsft
  Apr 20 14:21:46.697: INFO: Got endpoints: latency-svc-mnbc4 [745.714454ms]
  Apr 20 14:21:46.733: INFO: Created: latency-svc-6jxxt
  Apr 20 14:21:46.744: INFO: Got endpoints: latency-svc-4gdn9 [747.411706ms]
  Apr 20 14:21:46.775: INFO: Created: latency-svc-qzvtl
  Apr 20 14:21:46.824: INFO: Got endpoints: latency-svc-h8phn [765.932164ms]
  Apr 20 14:21:46.852: INFO: Got endpoints: latency-svc-425pd [757.609576ms]
  Apr 20 14:21:46.896: INFO: Created: latency-svc-rnhhc
  Apr 20 14:21:46.901: INFO: Got endpoints: latency-svc-9jnkk [736.985033ms]
  Apr 20 14:21:46.906: INFO: Created: latency-svc-9pls2
  Apr 20 14:21:46.942: INFO: Created: latency-svc-7cmgj
  Apr 20 14:21:46.950: INFO: Got endpoints: latency-svc-7xrwh [743.003311ms]
  Apr 20 14:21:46.985: INFO: Created: latency-svc-vfn52
  Apr 20 14:21:46.995: INFO: Got endpoints: latency-svc-tt6hj [712.027599ms]
  Apr 20 14:21:47.031: INFO: Created: latency-svc-52gjt
  Apr 20 14:21:47.051: INFO: Got endpoints: latency-svc-n94fx [745.987534ms]
  Apr 20 14:21:47.082: INFO: Created: latency-svc-9fbtl
  Apr 20 14:21:47.093: INFO: Got endpoints: latency-svc-j4sfs [735.154791ms]
  Apr 20 14:21:47.136: INFO: Created: latency-svc-vttcr
  Apr 20 14:21:47.162: INFO: Got endpoints: latency-svc-vl698 [709.599528ms]
  Apr 20 14:21:47.196: INFO: Got endpoints: latency-svc-wc9cf [683.376203ms]
  Apr 20 14:21:47.216: INFO: Created: latency-svc-57kgm
  Apr 20 14:21:47.233: INFO: Created: latency-svc-nf8nn
  Apr 20 14:21:47.244: INFO: Got endpoints: latency-svc-btghl [722.937219ms]
  Apr 20 14:21:47.264: INFO: Created: latency-svc-fwllr
  Apr 20 14:21:47.292: INFO: Got endpoints: latency-svc-5jzrc [742.819124ms]
  Apr 20 14:21:47.308: INFO: Created: latency-svc-jwrhc
  Apr 20 14:21:47.334: INFO: Got endpoints: latency-svc-q7pb6 [729.086109ms]
  Apr 20 14:21:47.351: INFO: Created: latency-svc-m27xl
  Apr 20 14:21:47.384: INFO: Got endpoints: latency-svc-cxsft [745.345063ms]
  Apr 20 14:21:47.402: INFO: Created: latency-svc-mh8sf
  Apr 20 14:21:47.434: INFO: Got endpoints: latency-svc-6jxxt [736.899021ms]
  Apr 20 14:21:47.459: INFO: Created: latency-svc-q599c
  Apr 20 14:21:47.486: INFO: Got endpoints: latency-svc-qzvtl [742.060697ms]
  Apr 20 14:21:47.515: INFO: Created: latency-svc-p2kcn
  Apr 20 14:21:47.537: INFO: Got endpoints: latency-svc-rnhhc [712.278937ms]
  Apr 20 14:21:47.562: INFO: Created: latency-svc-zphr2
  Apr 20 14:21:47.585: INFO: Got endpoints: latency-svc-9pls2 [733.575659ms]
  Apr 20 14:21:47.603: INFO: Created: latency-svc-vmj2f
  Apr 20 14:21:47.633: INFO: Got endpoints: latency-svc-7cmgj [731.51736ms]
  Apr 20 14:21:47.653: INFO: Created: latency-svc-vtbqt
  Apr 20 14:21:47.686: INFO: Got endpoints: latency-svc-vfn52 [735.493129ms]
  Apr 20 14:21:47.707: INFO: Created: latency-svc-7n455
  Apr 20 14:21:47.739: INFO: Got endpoints: latency-svc-52gjt [743.965404ms]
  Apr 20 14:21:47.758: INFO: Created: latency-svc-96d97
  Apr 20 14:21:47.786: INFO: Got endpoints: latency-svc-9fbtl [734.221096ms]
  Apr 20 14:21:47.806: INFO: Created: latency-svc-kwt9d
  Apr 20 14:21:47.838: INFO: Got endpoints: latency-svc-vttcr [744.374767ms]
  Apr 20 14:21:47.857: INFO: Created: latency-svc-7426b
  Apr 20 14:21:47.886: INFO: Got endpoints: latency-svc-57kgm [723.727904ms]
  Apr 20 14:21:47.905: INFO: Created: latency-svc-j5wtw
  Apr 20 14:21:47.942: INFO: Got endpoints: latency-svc-nf8nn [746.28473ms]
  Apr 20 14:21:47.959: INFO: Created: latency-svc-5wbf6
  Apr 20 14:21:47.988: INFO: Got endpoints: latency-svc-fwllr [744.316519ms]
  Apr 20 14:21:48.014: INFO: Created: latency-svc-jzpqs
  Apr 20 14:21:48.050: INFO: Got endpoints: latency-svc-jwrhc [757.889032ms]
  Apr 20 14:21:48.077: INFO: Created: latency-svc-sdlhz
  Apr 20 14:21:48.096: INFO: Got endpoints: latency-svc-m27xl [762.400953ms]
  Apr 20 14:21:48.113: INFO: Created: latency-svc-vlcgx
  Apr 20 14:21:48.146: INFO: Got endpoints: latency-svc-mh8sf [762.154531ms]
  Apr 20 14:21:48.196: INFO: Got endpoints: latency-svc-q599c [761.528802ms]
  Apr 20 14:21:48.199: INFO: Created: latency-svc-szdpk
  Apr 20 14:21:48.269: INFO: Created: latency-svc-jlczm
  Apr 20 14:21:48.272: INFO: Got endpoints: latency-svc-p2kcn [786.021743ms]
  Apr 20 14:21:48.312: INFO: Created: latency-svc-cvtz8
  Apr 20 14:21:48.316: INFO: Got endpoints: latency-svc-zphr2 [778.715589ms]
  Apr 20 14:21:48.345: INFO: Got endpoints: latency-svc-vmj2f [758.460649ms]
  Apr 20 14:21:48.367: INFO: Created: latency-svc-jww77
  Apr 20 14:21:48.391: INFO: Created: latency-svc-g2zb9
  Apr 20 14:21:48.398: INFO: Got endpoints: latency-svc-vtbqt [765.49996ms]
  Apr 20 14:21:48.438: INFO: Created: latency-svc-24mcz
  Apr 20 14:21:48.446: INFO: Got endpoints: latency-svc-7n455 [759.406895ms]
  Apr 20 14:21:48.473: INFO: Created: latency-svc-mj9rn
  Apr 20 14:21:48.485: INFO: Got endpoints: latency-svc-96d97 [745.473085ms]
  Apr 20 14:21:48.508: INFO: Created: latency-svc-krfh8
  Apr 20 14:21:48.540: INFO: Got endpoints: latency-svc-kwt9d [754.069589ms]
  Apr 20 14:21:48.557: INFO: Created: latency-svc-f6gqw
  Apr 20 14:21:48.588: INFO: Got endpoints: latency-svc-7426b [749.778266ms]
  Apr 20 14:21:48.611: INFO: Created: latency-svc-8xw6w
  Apr 20 14:21:48.638: INFO: Got endpoints: latency-svc-j5wtw [751.156299ms]
  Apr 20 14:21:48.658: INFO: Created: latency-svc-h5x2k
  Apr 20 14:21:48.682: INFO: Got endpoints: latency-svc-5wbf6 [740.194524ms]
  Apr 20 14:21:48.711: INFO: Created: latency-svc-qxphw
  Apr 20 14:21:48.756: INFO: Got endpoints: latency-svc-jzpqs [767.544663ms]
  Apr 20 14:21:48.780: INFO: Created: latency-svc-9sjxq
  Apr 20 14:21:48.793: INFO: Got endpoints: latency-svc-sdlhz [743.348419ms]
  Apr 20 14:21:48.816: INFO: Created: latency-svc-dkdv4
  Apr 20 14:21:48.845: INFO: Got endpoints: latency-svc-vlcgx [748.86692ms]
  Apr 20 14:21:48.870: INFO: Created: latency-svc-fvccs
  Apr 20 14:21:48.892: INFO: Got endpoints: latency-svc-szdpk [746.337426ms]
  Apr 20 14:21:48.936: INFO: Created: latency-svc-9zfgz
  Apr 20 14:21:48.944: INFO: Got endpoints: latency-svc-jlczm [747.085813ms]
  Apr 20 14:21:48.979: INFO: Created: latency-svc-88z6h
  Apr 20 14:21:48.997: INFO: Got endpoints: latency-svc-cvtz8 [724.869279ms]
  Apr 20 14:21:49.017: INFO: Created: latency-svc-5bkl6
  Apr 20 14:21:49.033: INFO: Got endpoints: latency-svc-jww77 [717.487349ms]
  Apr 20 14:21:49.060: INFO: Created: latency-svc-9sjpg
  Apr 20 14:21:49.092: INFO: Got endpoints: latency-svc-g2zb9 [746.897006ms]
  Apr 20 14:21:49.120: INFO: Created: latency-svc-4nqbk
  Apr 20 14:21:49.135: INFO: Got endpoints: latency-svc-24mcz [736.395534ms]
  Apr 20 14:21:49.165: INFO: Created: latency-svc-c8j6d
  Apr 20 14:21:49.190: INFO: Got endpoints: latency-svc-mj9rn [744.495875ms]
  Apr 20 14:21:49.206: INFO: Created: latency-svc-plzc9
  Apr 20 14:21:49.237: INFO: Got endpoints: latency-svc-krfh8 [752.380688ms]
  Apr 20 14:21:49.254: INFO: Created: latency-svc-5ztk4
  Apr 20 14:21:49.285: INFO: Got endpoints: latency-svc-f6gqw [745.501707ms]
  Apr 20 14:21:49.305: INFO: Created: latency-svc-fzskm
  Apr 20 14:21:49.334: INFO: Got endpoints: latency-svc-8xw6w [745.867113ms]
  Apr 20 14:21:49.354: INFO: Created: latency-svc-xncmj
  Apr 20 14:21:49.384: INFO: Got endpoints: latency-svc-h5x2k [746.751125ms]
  Apr 20 14:21:49.410: INFO: Created: latency-svc-hpsr8
  Apr 20 14:21:49.443: INFO: Got endpoints: latency-svc-qxphw [760.666154ms]
  Apr 20 14:21:49.484: INFO: Created: latency-svc-k6mfj
  Apr 20 14:21:49.497: INFO: Got endpoints: latency-svc-9sjxq [741.287647ms]
  Apr 20 14:21:49.529: INFO: Created: latency-svc-f7z47
  Apr 20 14:21:49.545: INFO: Got endpoints: latency-svc-dkdv4 [751.853985ms]
  Apr 20 14:21:49.578: INFO: Created: latency-svc-nbzxt
  Apr 20 14:21:49.602: INFO: Got endpoints: latency-svc-fvccs [756.550221ms]
  Apr 20 14:21:49.643: INFO: Got endpoints: latency-svc-9zfgz [750.697665ms]
  Apr 20 14:21:49.654: INFO: Created: latency-svc-jqdh6
  Apr 20 14:21:49.672: INFO: Created: latency-svc-r6zll
  Apr 20 14:21:49.687: INFO: Got endpoints: latency-svc-88z6h [742.747049ms]
  Apr 20 14:21:49.712: INFO: Created: latency-svc-zgvgp
  Apr 20 14:21:49.741: INFO: Got endpoints: latency-svc-5bkl6 [743.553585ms]
  Apr 20 14:21:49.767: INFO: Created: latency-svc-vlgkn
  Apr 20 14:21:49.785: INFO: Got endpoints: latency-svc-9sjpg [752.029032ms]
  Apr 20 14:21:49.839: INFO: Got endpoints: latency-svc-4nqbk [746.941645ms]
  Apr 20 14:21:49.889: INFO: Got endpoints: latency-svc-c8j6d [753.578201ms]
  Apr 20 14:21:49.940: INFO: Got endpoints: latency-svc-plzc9 [749.529108ms]
  Apr 20 14:21:49.985: INFO: Got endpoints: latency-svc-5ztk4 [747.924011ms]
  Apr 20 14:21:50.032: INFO: Got endpoints: latency-svc-fzskm [746.171573ms]
  Apr 20 14:21:50.089: INFO: Got endpoints: latency-svc-xncmj [755.476883ms]
  Apr 20 14:21:50.137: INFO: Got endpoints: latency-svc-hpsr8 [752.717277ms]
  Apr 20 14:21:50.181: INFO: Got endpoints: latency-svc-k6mfj [738.278572ms]
  Apr 20 14:21:50.244: INFO: Got endpoints: latency-svc-f7z47 [746.928518ms]
  Apr 20 14:21:50.287: INFO: Got endpoints: latency-svc-nbzxt [741.606428ms]
  Apr 20 14:21:50.338: INFO: Got endpoints: latency-svc-jqdh6 [736.075504ms]
  Apr 20 14:21:50.385: INFO: Got endpoints: latency-svc-r6zll [741.99186ms]
  Apr 20 14:21:50.437: INFO: Got endpoints: latency-svc-zgvgp [749.387419ms]
  Apr 20 14:21:50.485: INFO: Got endpoints: latency-svc-vlgkn [744.639904ms]
  Apr 20 14:21:50.485: INFO: Latencies: [40.259516ms 74.887243ms 95.343864ms 106.555726ms 109.092565ms 112.088508ms 137.787009ms 177.031903ms 191.73899ms 202.445802ms 219.418032ms 236.345799ms 237.196705ms 251.790962ms 258.093128ms 267.562197ms 273.626903ms 284.839745ms 290.135431ms 290.997318ms 295.651745ms 311.275484ms 323.454383ms 327.68281ms 330.751405ms 338.547839ms 338.8658ms 345.747974ms 353.159935ms 357.745819ms 363.138953ms 375.799801ms 401.628995ms 403.393574ms 407.133303ms 407.536493ms 407.589392ms 407.736033ms 413.422753ms 435.482627ms 436.73223ms 437.327402ms 438.31689ms 438.921185ms 442.186455ms 442.855707ms 444.762344ms 454.166822ms 455.81128ms 467.434322ms 473.974738ms 475.415864ms 476.776856ms 477.820171ms 479.569767ms 488.086025ms 489.893997ms 497.145131ms 499.354168ms 503.895739ms 504.058389ms 509.064568ms 516.45305ms 554.456882ms 578.349153ms 586.505468ms 588.692482ms 604.247334ms 635.698583ms 641.112184ms 645.330395ms 670.198199ms 673.577561ms 678.985388ms 680.255079ms 683.376203ms 683.786582ms 701.416487ms 704.27977ms 709.599528ms 711.512769ms 712.027599ms 712.278937ms 717.487349ms 717.748311ms 718.954767ms 722.93093ms 722.937219ms 723.727904ms 724.118474ms 724.869279ms 726.689734ms 729.086109ms 730.952797ms 731.51736ms 732.362423ms 733.575659ms 734.221096ms 735.154791ms 735.493129ms 736.075504ms 736.395534ms 736.899021ms 736.985033ms 737.96593ms 738.278572ms 739.940848ms 740.194524ms 740.792408ms 741.287647ms 741.606428ms 741.99186ms 742.060697ms 742.747049ms 742.819124ms 743.003311ms 743.348419ms 743.553585ms 743.965404ms 744.316519ms 744.374767ms 744.46873ms 744.495875ms 744.639904ms 745.034881ms 745.345063ms 745.473085ms 745.501707ms 745.714454ms 745.867113ms 745.987534ms 746.171573ms 746.28473ms 746.337426ms 746.751125ms 746.897006ms 746.928518ms 746.941645ms 747.057821ms 747.085813ms 747.411706ms 747.639569ms 747.748695ms 747.924011ms 748.86692ms 749.35615ms 749.387419ms 749.529108ms 749.778266ms 750.060588ms 750.196353ms 750.697665ms 751.156299ms 751.737473ms 751.853985ms 751.954274ms 752.029032ms 752.380688ms 752.717277ms 753.21577ms 753.578201ms 753.877405ms 754.069589ms 755.027213ms 755.424532ms 755.476883ms 756.550221ms 756.932851ms 757.609576ms 757.889032ms 758.194373ms 758.460649ms 759.102663ms 759.115308ms 759.406895ms 759.781633ms 759.894742ms 760.666154ms 761.528802ms 762.154531ms 762.400953ms 765.49996ms 765.932164ms 766.075614ms 766.299876ms 767.544663ms 767.818771ms 770.02238ms 770.393527ms 775.193457ms 778.715589ms 781.799767ms 786.021743ms 786.357756ms 791.649793ms 795.30281ms 804.485008ms 820.388904ms 831.143478ms 891.196038ms]
  Apr 20 14:21:50.486: INFO: 50 %ile: 736.075504ms
  Apr 20 14:21:50.488: INFO: 90 %ile: 762.400953ms
  Apr 20 14:21:50.488: INFO: 99 %ile: 831.143478ms
  Apr 20 14:21:50.488: INFO: Total sample count: 200
  Apr 20 14:21:50.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-233" for this suite. @ 04/20/24 14:21:50.503
â€¢ [9.921 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 04/20/24 14:21:50.522
  Apr 20 14:21:50.522: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:21:50.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:50.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:50.565
  STEP: Creating ReplicationController "e2e-rc-xn4tl" @ 04/20/24 14:21:50.57
  Apr 20 14:21:50.580: INFO: Get Replication Controller "e2e-rc-xn4tl" to confirm replicas
  Apr 20 14:21:51.586: INFO: Get Replication Controller "e2e-rc-xn4tl" to confirm replicas
  Apr 20 14:21:51.593: INFO: Found 1 replicas for "e2e-rc-xn4tl" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-xn4tl" @ 04/20/24 14:21:51.593
  STEP: Updating a scale subresource @ 04/20/24 14:21:51.6
  STEP: Verifying replicas where modified for replication controller "e2e-rc-xn4tl" @ 04/20/24 14:21:51.616
  Apr 20 14:21:51.616: INFO: Get Replication Controller "e2e-rc-xn4tl" to confirm replicas
  Apr 20 14:21:52.623: INFO: Get Replication Controller "e2e-rc-xn4tl" to confirm replicas
  Apr 20 14:21:52.634: INFO: Found 2 replicas for "e2e-rc-xn4tl" replication controller
  Apr 20 14:21:52.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1404" for this suite. @ 04/20/24 14:21:52.642
â€¢ [2.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/20/24 14:21:52.666
  Apr 20 14:21:52.666: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:21:52.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:52.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:52.708
  Apr 20 14:21:52.714: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: creating the pod @ 04/20/24 14:21:52.717
  STEP: submitting the pod to kubernetes @ 04/20/24 14:21:52.717
  Apr 20 14:21:56.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1468" for this suite. @ 04/20/24 14:21:56.953
â€¢ [4.321 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/20/24 14:21:56.988
  Apr 20 14:21:56.989: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 14:21:56.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:57.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:57.077
  Apr 20 14:21:57.126: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 14:22:57.216: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 14:22:57.222
  Apr 20 14:22:57.315: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 20 14:22:57.338: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 20 14:22:57.442: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 20 14:22:57.489: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 20 14:22:57.592: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 20 14:22:57.618: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 14:22:57.618
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/20/24 14:22:59.676
  Apr 20 14:23:05.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8551" for this suite. @ 04/20/24 14:23:05.885
â€¢ [68.912 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 04/20/24 14:23:05.901
  Apr 20 14:23:05.901: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:23:05.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:05.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:05.946
  STEP: creating a ServiceAccount @ 04/20/24 14:23:05.953
  STEP: watching for the ServiceAccount to be added @ 04/20/24 14:23:05.967
  STEP: patching the ServiceAccount @ 04/20/24 14:23:05.97
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/20/24 14:23:05.987
  STEP: deleting the ServiceAccount @ 04/20/24 14:23:05.996
  Apr 20 14:23:06.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-720" for this suite. @ 04/20/24 14:23:06.059
â€¢ [0.233 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/20/24 14:23:06.135
  Apr 20 14:23:06.135: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:23:06.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:06.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:06.209
  STEP: Setting up server cert @ 04/20/24 14:23:06.294
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:23:07.299
  STEP: Deploying the webhook pod @ 04/20/24 14:23:07.323
  STEP: Wait for the deployment to be ready @ 04/20/24 14:23:07.362
  Apr 20 14:23:07.380: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:23:09.4
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:23:09.427
  Apr 20 14:23:10.427: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/20/24 14:23:10.542
  STEP: Creating a configMap that should be mutated @ 04/20/24 14:23:10.574
  STEP: Deleting the collection of validation webhooks @ 04/20/24 14:23:10.627
  STEP: Creating a configMap that should not be mutated @ 04/20/24 14:23:10.733
  Apr 20 14:23:10.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6176" for this suite. @ 04/20/24 14:23:10.89
  STEP: Destroying namespace "webhook-markers-7730" for this suite. @ 04/20/24 14:23:10.918
â€¢ [4.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 04/20/24 14:23:10.949
  Apr 20 14:23:10.949: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:23:10.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:10.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:11.003
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:23:11.009
  STEP: Saw pod success @ 04/20/24 14:23:15.07
  Apr 20 14:23:15.078: INFO: Trying to get logs from node aat3reeth3ee-3 pod downward-api-7db158b9-4eb6-421e-a70a-b1f26a535bfe container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:23:15.116
  Apr 20 14:23:15.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5248" for this suite. @ 04/20/24 14:23:15.155
â€¢ [4.219 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/20/24 14:23:15.169
  Apr 20 14:23:15.169: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:23:15.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:15.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:15.211
  STEP: Setting up data @ 04/20/24 14:23:15.216
  STEP: Creating pod pod-subpath-test-configmap-sj8s @ 04/20/24 14:23:15.232
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:23:15.233
  STEP: Saw pod success @ 04/20/24 14:23:39.382
  Apr 20 14:23:39.391: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-subpath-test-configmap-sj8s container test-container-subpath-configmap-sj8s: <nil>
  STEP: delete the pod @ 04/20/24 14:23:39.416
  STEP: Deleting pod pod-subpath-test-configmap-sj8s @ 04/20/24 14:23:39.454
  Apr 20 14:23:39.454: INFO: Deleting pod "pod-subpath-test-configmap-sj8s" in namespace "subpath-1089"
  Apr 20 14:23:39.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1089" for this suite. @ 04/20/24 14:23:39.477
â€¢ [24.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 04/20/24 14:23:39.507
  Apr 20 14:23:39.507: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:23:39.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:39.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:39.56
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:23:39.57
  STEP: Saw pod success @ 04/20/24 14:23:43.637
  Apr 20 14:23:43.643: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-5e340be7-5e89-4e40-8e3e-465a5fd839ce container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:23:43.656
  Apr 20 14:23:43.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6267" for this suite. @ 04/20/24 14:23:43.699
â€¢ [4.203 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 04/20/24 14:23:43.714
  Apr 20 14:23:43.714: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:23:43.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:43.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:43.755
  STEP: creating Agnhost RC @ 04/20/24 14:23:43.761
  Apr 20 14:23:43.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6936 create -f -'
  Apr 20 14:23:44.356: INFO: stderr: ""
  Apr 20 14:23:44.357: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 14:23:44.357
  Apr 20 14:23:45.368: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:23:45.368: INFO: Found 1 / 1
  Apr 20 14:23:45.368: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/20/24 14:23:45.368
  Apr 20 14:23:45.375: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:23:45.376: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 14:23:45.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6936 patch pod agnhost-primary-99zc2 -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 20 14:23:45.570: INFO: stderr: ""
  Apr 20 14:23:45.570: INFO: stdout: "pod/agnhost-primary-99zc2 patched\n"
  STEP: checking annotations @ 04/20/24 14:23:45.57
  Apr 20 14:23:45.608: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:23:45.608: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 14:23:45.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6936" for this suite. @ 04/20/24 14:23:45.624
â€¢ [1.929 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 04/20/24 14:23:45.644
  Apr 20 14:23:45.644: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:23:45.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:45.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:45.694
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:23:45.71
  STEP: create the pod with lifecycle hook @ 04/20/24 14:23:47.76
  STEP: check poststart hook @ 04/20/24 14:23:49.808
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:23:49.821
  Apr 20 14:23:53.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-607" for this suite. @ 04/20/24 14:23:53.865
â€¢ [8.241 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 04/20/24 14:23:53.886
  Apr 20 14:23:53.886: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:23:53.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:53.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:53.922
  STEP: Creating configMap with name configmap-test-volume-a7b992b6-6bd7-4472-9afb-8be893de39c4 @ 04/20/24 14:23:53.926
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:23:53.936
  STEP: Saw pod success @ 04/20/24 14:23:57.98
  Apr 20 14:23:57.988: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-3b273ead-d364-41a4-a080-14d4b1ac5503 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:23:58.005
  Apr 20 14:23:58.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9794" for this suite. @ 04/20/24 14:23:58.048
â€¢ [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 04/20/24 14:23:58.076
  Apr 20 14:23:58.076: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:23:58.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:58.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:58.122
  Apr 20 14:23:58.160: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 20 14:24:03.176: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:24:03.176
  STEP: Scaling up "test-rs" replicaset  @ 04/20/24 14:24:03.176
  Apr 20 14:24:03.206: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/20/24 14:24:03.206
  Apr 20 14:24:03.235: INFO: observed ReplicaSet test-rs in namespace replicaset-1653 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:24:03.300: INFO: observed ReplicaSet test-rs in namespace replicaset-1653 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:24:03.344: INFO: observed ReplicaSet test-rs in namespace replicaset-1653 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:24:03.402: INFO: observed ReplicaSet test-rs in namespace replicaset-1653 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:24:04.918: INFO: observed ReplicaSet test-rs in namespace replicaset-1653 with ReadyReplicas 2, AvailableReplicas 2
  Apr 20 14:24:05.008: INFO: observed Replicaset test-rs in namespace replicaset-1653 with ReadyReplicas 3 found true
  Apr 20 14:24:05.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1653" for this suite. @ 04/20/24 14:24:05.021
â€¢ [6.964 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 04/20/24 14:24:05.042
  Apr 20 14:24:05.042: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:24:05.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:05.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:05.083
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:24:05.088
  STEP: Saw pod success @ 04/20/24 14:24:09.132
  Apr 20 14:24:09.139: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-148c5c4a-cb21-4d73-b901-48cb6907b3cc container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:24:09.155
  Apr 20 14:24:09.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2135" for this suite. @ 04/20/24 14:24:09.199
â€¢ [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/20/24 14:24:09.22
  Apr 20 14:24:09.220: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:24:09.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:09.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:09.273
  STEP: Creating projection with secret that has name projected-secret-test-map-0ccf5dc9-2e30-44b7-a8b1-71178ba9b8fa @ 04/20/24 14:24:09.279
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:24:09.29
  STEP: Saw pod success @ 04/20/24 14:24:13.353
  Apr 20 14:24:13.360: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-secrets-4270e64c-b822-4e99-9624-b1e6612094f6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:24:13.374
  Apr 20 14:24:13.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9026" for this suite. @ 04/20/24 14:24:13.415
â€¢ [4.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/20/24 14:24:13.433
  Apr 20 14:24:13.433: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:24:13.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:13.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:13.479
  STEP: Creating pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497 @ 04/20/24 14:24:13.486
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:24:15.532
  Apr 20 14:24:15.539: INFO: Initial restart count of pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd is 0
  Apr 20 14:24:15.545: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:17.571: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:19.579: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:21.590: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:23.603: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:25.610: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:27.620: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:29.633: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:31.643: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:33.652: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:35.661: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:37.668: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:39.678: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:41.685: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:43.697: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:45.704: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:47.713: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:49.722: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:51.732: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:53.743: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:55.753: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:57.761: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:24:59.771: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:01.779: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:03.790: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:05.802: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:07.814: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:09.822: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:11.830: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:13.847: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:15.854: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:17.864: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:19.872: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:21.880: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:23.893: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:25.901: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:27.912: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:29.922: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:31.931: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:33.940: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:35.948: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:37.958: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:39.968: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:41.979: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:43.988: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:46.004: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:48.023: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:50.032: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:52.041: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:54.051: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:56.064: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:25:58.073: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:00.080: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:02.090: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:04.099: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:06.111: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:08.120: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:10.130: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:12.140: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:14.151: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:16.159: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:18.167: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:20.189: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:22.240: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:24.254: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:26.262: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:28.275: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:30.288: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:32.297: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:34.307: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:36.321: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:38.329: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:40.339: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:42.346: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:44.354: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:46.362: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:48.372: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:50.380: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:52.390: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:54.399: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:56.408: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:26:58.415: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:00.425: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:02.435: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:04.443: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:06.449: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:08.456: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:10.466: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:12.475: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:14.482: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:16.496: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:18.505: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:20.514: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:22.522: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:24.530: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:26.539: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:28.549: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:30.556: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:32.565: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:34.574: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:36.584: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:38.592: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:40.601: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:42.610: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:44.621: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:46.638: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:48.646: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:50.656: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:52.664: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:54.673: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:56.682: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:27:58.693: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:00.700: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:02.709: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:04.720: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:06.730: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:08.738: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:10.749: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:12.760: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:14.772: INFO: Get pod busybox-7f8c5b8f-9293-4b0a-b4b6-5c0f5af36efd in namespace container-probe-4497
  Apr 20 14:28:16.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 14:28:16.782
  STEP: Destroying namespace "container-probe-4497" for this suite. @ 04/20/24 14:28:16.816
â€¢ [243.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/20/24 14:28:16.84
  Apr 20 14:28:16.840: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:28:16.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:16.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:16.899
  STEP: Creating projection with secret that has name projected-secret-test-4e15941c-e165-41f8-8da2-2190dc0663ec @ 04/20/24 14:28:16.903
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:28:16.91
  STEP: Saw pod success @ 04/20/24 14:28:20.952
  Apr 20 14:28:20.960: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-secrets-4c0ec276-ae64-413f-b91f-0f331ec8038a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:28:21
  Apr 20 14:28:21.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6366" for this suite. @ 04/20/24 14:28:21.045
â€¢ [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/20/24 14:28:21.066
  Apr 20 14:28:21.067: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:28:21.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:21.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:21.121
  STEP: Setting up server cert @ 04/20/24 14:28:21.184
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:28:22.373
  STEP: Deploying the webhook pod @ 04/20/24 14:28:22.397
  STEP: Wait for the deployment to be ready @ 04/20/24 14:28:22.431
  Apr 20 14:28:22.474: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:28:24.493
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:28:24.512
  Apr 20 14:28:25.513: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/20/24 14:28:25.53
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:28:25.53
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/20/24 14:28:25.583
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/20/24 14:28:26.609
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:28:26.609
  STEP: Having no error when timeout is longer than webhook latency @ 04/20/24 14:28:27.682
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:28:27.682
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/20/24 14:28:32.747
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:28:32.747
  Apr 20 14:28:37.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2239" for this suite. @ 04/20/24 14:28:37.97
  STEP: Destroying namespace "webhook-markers-4632" for this suite. @ 04/20/24 14:28:37.986
â€¢ [16.933 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/20/24 14:28:38.003
  Apr 20 14:28:38.003: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:28:38.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:38.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:38.041
  Apr 20 14:28:38.073: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Apr 20 14:28:43.084: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:28:43.084
  Apr 20 14:28:43.084: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Apr 20 14:28:45.095: INFO: Creating deployment "test-rollover-deployment"
  Apr 20 14:28:45.116: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Apr 20 14:28:47.134: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 20 14:28:47.150: INFO: Ensure that both replica sets have 1 created replica
  Apr 20 14:28:47.170: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 20 14:28:47.197: INFO: Updating deployment test-rollover-deployment
  Apr 20 14:28:47.197: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Apr 20 14:28:49.213: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 20 14:28:49.228: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 20 14:28:49.240: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:28:49.241: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:28:51.258: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:28:51.259: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:28:53.260: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:28:53.260: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:28:55.258: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:28:55.258: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:28:57.256: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:28:57.256: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 28, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 28, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:28:59.269: INFO: 
  Apr 20 14:28:59.269: INFO: Ensure that both old replica sets have no replicas
  Apr 20 14:28:59.295: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7711",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5039bde-dc49-457f-8810-4fcad6d8b1da",
      ResourceVersion: (string) (len=5) "35366",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 14:28:59.309: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7711",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "007c08bd-a7ba-4e68-a4b0-0f5dbe81b05e",
      ResourceVersion: (string) (len=5) "35356",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "a5039bde-dc49-457f-8810-4fcad6d8b1da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 35 30 33 39 62  64 65 2d 64 63 34 39 2d  |\"a5039bde-dc49-|
              00000120  34 35 37 66 2d 38 38 31  30 2d 34 66 63 61 64 36  |457f-8810-4fcad6|
              00000130  64 38 62 31 64 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d8b1da\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:28:59.315: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 20 14:28:59.316: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7711",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a3d1e5b-a182-4e6b-9b55-726cf72516f8",
      ResourceVersion: (string) (len=5) "35365",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220118,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "a5039bde-dc49-457f-8810-4fcad6d8b1da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  61 35 30 33 39 62 64 65  2d 64 63 34 39 2d 34 35  |a5039bde-dc49-45|
              000000c0  37 66 2d 38 38 31 30 2d  34 66 63 61 64 36 64 38  |7f-8810-4fcad6d8|
              000000d0  62 31 64 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |b1da\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:28:59.320: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7711",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a275cba-a98b-4054-b88c-60a9025764d9",
      ResourceVersion: (string) (len=5) "35326",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "a5039bde-dc49-457f-8810-4fcad6d8b1da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 35 30 33 39 62  64 65 2d 64 63 34 39 2d  |\"a5039bde-dc49-|
              00000120  34 35 37 66 2d 38 38 31  30 2d 34 66 63 61 64 36  |457f-8810-4fcad6|
              00000130  64 38 62 31 64 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d8b1da\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:28:59.333: INFO: Pod "test-rollover-deployment-68774655d5-hxs4p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-hxs4p",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-7711",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69812c11-5599-4c46-a19e-ce8877b358a8",
      ResourceVersion: (string) (len=5) "35337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "007c08bd-a7ba-4e68-a4b0-0f5dbe81b05e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  37 63 30 38 62 64 2d 61  |d\":\"007c08bd-a|
              00000090  37 62 61 2d 34 65 36 38  2d 61 34 62 30 2d 30 66  |7ba-4e68-a4b0-0f|
              000000a0  35 64 62 65 38 31 62 30  35 65 5c 22 7d 22 3a 7b  |5dbe81b05e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 37 36 5c 22 7d 22  |10.233.66.76\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h67wx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h67wx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220127,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://5613c0650cec7ff056e4fded30872d676c470cb030b5e4904e8a6d1859a13cd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:28:59.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7711" for this suite. @ 04/20/24 14:28:59.35
â€¢ [21.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/20/24 14:28:59.367
  Apr 20 14:28:59.367: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:28:59.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:59.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:59.407
  STEP: creating a Deployment @ 04/20/24 14:28:59.423
  STEP: waiting for Deployment to be created @ 04/20/24 14:28:59.432
  STEP: waiting for all Replicas to be Ready @ 04/20/24 14:28:59.435
  Apr 20 14:28:59.440: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:28:59.440: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:28:59.466: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:28:59.467: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:28:59.527: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:28:59.527: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:28:59.608: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:28:59.608: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 14:29:00.815: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 20 14:29:00.815: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 20 14:29:01.249: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/20/24 14:29:01.249
  Apr 20 14:29:01.278: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/20/24 14:29:01.278
  Apr 20 14:29:01.281: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.281: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 0
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.282: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.315: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.315: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.371: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.372: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:01.406: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:01.406: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:01.437: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:01.437: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:02.901: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:02.901: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:02.955: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  STEP: listing Deployments @ 04/20/24 14:29:02.956
  Apr 20 14:29:02.967: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/20/24 14:29:02.967
  Apr 20 14:29:03.008: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/20/24 14:29:03.008
  Apr 20 14:29:03.030: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:03.053: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:03.172: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:03.230: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:03.265: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:03.914: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:04.088: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:04.134: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 14:29:05.664: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/20/24 14:29:05.78
  STEP: fetching the DeploymentStatus @ 04/20/24 14:29:05.818
  Apr 20 14:29:05.839: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:05.840: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:05.841: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:05.842: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:05.842: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 1
  Apr 20 14:29:05.842: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:05.842: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:05.842: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 2
  Apr 20 14:29:05.843: INFO: observed Deployment test-deployment in namespace deployment-7606 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/20/24 14:29:05.844
  Apr 20 14:29:05.874: INFO: observed event type MODIFIED
  Apr 20 14:29:05.874: INFO: observed event type MODIFIED
  Apr 20 14:29:05.874: INFO: observed event type MODIFIED
  Apr 20 14:29:05.875: INFO: observed event type MODIFIED
  Apr 20 14:29:05.875: INFO: observed event type MODIFIED
  Apr 20 14:29:05.876: INFO: observed event type MODIFIED
  Apr 20 14:29:05.876: INFO: observed event type MODIFIED
  Apr 20 14:29:05.876: INFO: observed event type MODIFIED
  Apr 20 14:29:05.876: INFO: observed event type MODIFIED
  Apr 20 14:29:05.878: INFO: observed event type MODIFIED
  Apr 20 14:29:05.879: INFO: observed event type MODIFIED
  Apr 20 14:29:05.879: INFO: observed event type MODIFIED
  Apr 20 14:29:05.889: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 20 14:29:05.902: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7606",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2caf364d-c80e-47a7-aa6a-9dc228a0a8b1",
      ResourceVersion: (string) (len=5) "35553",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "13c0ebb0-7b97-425c-8396-eda82ba9c2ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 33 63 30  65 62 62 30 2d 37 62 39  |":\"13c0ebb0-7b9|
              00000130  37 2d 34 32 35 63 2d 38  33 39 36 2d 65 64 61 38  |7-425c-8396-eda8|
              00000140  32 62 61 39 63 32 65 65  5c 22 7d 22 3a 7b 7d 7d  |2ba9c2ee\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 14:29:05.942: INFO: pod: "test-deployment-64fd565c98-5zccr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-5zccr",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-7606",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b81172d-7a33-4c79-83a2-282053e92482",
      ResourceVersion: (string) (len=5) "35549",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "2caf364d-c80e-47a7-aa6a-9dc228a0a8b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 63 61 66 33 36 34 64  |uid\":\"2caf364d|
              000000a0  2d 63 38 30 65 2d 34 37  61 37 2d 61 61 36 61 2d  |-c80e-47a7-aa6a-|
              000000b0  39 64 63 32 32 38 61 30  61 38 62 31 5c 22 7d 22  |9dc228a0a8b1\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 37 38 5c 22 7d 22  |10.233.66.78\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rspnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rspnw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220141,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://c51dd8465ee665c3527a05c00a5dd1d4cea4dd19e2d2fb60f36cf29fd8b24c82",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 14:29:05.955: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7606",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79d0267e-554c-44e1-b0e2-74c93c009f2f",
      ResourceVersion: (string) (len=5) "35544",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "13c0ebb0-7b97-425c-8396-eda82ba9c2ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 33 63 30  65 62 62 30 2d 37 62 39  |":\"13c0ebb0-7b9|
              00000130  37 2d 34 32 35 63 2d 38  33 39 36 2d 65 64 61 38  |7-425c-8396-eda8|
              00000140  32 62 61 39 63 32 65 65  5c 22 7d 22 3a 7b 7d 7d  |2ba9c2ee\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 14:29:05.987: INFO: pod: "test-deployment-79ff746c4-55pvd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-55pvd",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-7606",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de3e1d6b-864f-435d-b2b0-792309966ebf",
      ResourceVersion: (string) (len=5) "35480",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "79d0267e-554c-44e1-b0e2-74c93c009f2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 39 64 30 32 36 37 65  |uid\":\"79d0267e|
              000000a0  2d 35 35 34 63 2d 34 34  65 31 2d 62 30 65 32 2d  |-554c-44e1-b0e2-|
              000000b0  37 34 63 39 33 63 30 30  39 66 32 66 5c 22 7d 22  |74c93c009f2f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 37 39 5c 22 7d 22  |10.233.66.79\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkcwn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkcwn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220143,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f07139b0e00c8650a8e18456d55f8dca5ad82fcf6eea9d4c089e2569e749c1d8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 14:29:06.001: INFO: pod: "test-deployment-79ff746c4-8xd2m":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-8xd2m",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-7606",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63b377e1-6540-4ad9-9880-21406f201734",
      ResourceVersion: (string) (len=5) "35562",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "79d0267e-554c-44e1-b0e2-74c93c009f2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 39 64 30 32 36 37 65  |uid\":\"79d0267e|
              000000a0  2d 35 35 34 63 2d 34 34  65 31 2d 62 30 65 32 2d  |-554c-44e1-b0e2-|
              000000b0  37 34 63 39 33 63 30 30  39 66 32 66 5c 22 7d 22  |74c93c009f2f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 32 38 5c 22 7d 22  |10.233.64.28\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lwrdm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lwrdm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220144,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220144,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220145,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://816c2c3aeb935563774d3fcd52043892577e1d997a0841476832d003955cfe8d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 14:29:06.023: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7606",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "022439a3-4a33-4660-8e98-4df8787f2515",
      ResourceVersion: (string) (len=5) "35442",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "13c0ebb0-7b97-425c-8396-eda82ba9c2ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 33 63 30  65 62 62 30 2d 37 62 39  |":\"13c0ebb0-7b9|
              00000130  37 2d 34 32 35 63 2d 38  33 39 36 2d 65 64 61 38  |7-425c-8396-eda8|
              00000140  32 62 61 39 63 32 65 65  5c 22 7d 22 3a 7b 7d 7d  |2ba9c2ee\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 14:29:06.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7606" for this suite. @ 04/20/24 14:29:06.057
â€¢ [6.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 04/20/24 14:29:06.086
  Apr 20 14:29:06.087: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:29:06.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:06.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:06.134
  STEP: Counting existing ResourceQuota @ 04/20/24 14:29:06.14
  STEP: Creating a ResourceQuota @ 04/20/24 14:29:11.15
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:29:11.166
  Apr 20 14:29:13.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7583" for this suite. @ 04/20/24 14:29:13.185
â€¢ [7.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/20/24 14:29:13.205
  Apr 20 14:29:13.205: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename init-container @ 04/20/24 14:29:13.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:13.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:13.265
  STEP: creating the pod @ 04/20/24 14:29:13.271
  Apr 20 14:29:13.271: INFO: PodSpec: initContainers in spec.initContainers
  Apr 20 14:29:17.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8327" for this suite. @ 04/20/24 14:29:17.035
â€¢ [3.843 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 04/20/24 14:29:17.049
  Apr 20 14:29:17.049: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 14:29:17.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:17.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:17.08
  STEP: Create set of pod templates @ 04/20/24 14:29:17.084
  Apr 20 14:29:17.094: INFO: created test-podtemplate-1
  Apr 20 14:29:17.105: INFO: created test-podtemplate-2
  Apr 20 14:29:17.118: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/20/24 14:29:17.118
  STEP: delete collection of pod templates @ 04/20/24 14:29:17.124
  Apr 20 14:29:17.124: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/20/24 14:29:17.156
  Apr 20 14:29:17.156: INFO: requesting list of pod templates to confirm quantity
  Apr 20 14:29:17.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1848" for this suite. @ 04/20/24 14:29:17.169
â€¢ [0.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 04/20/24 14:29:17.189
  Apr 20 14:29:17.189: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:29:17.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:17.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:17.23
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:29:17.235
  STEP: Saw pod success @ 04/20/24 14:29:21.275
  Apr 20 14:29:21.295: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-44a1c11d-19ea-4e24-ae7d-95e33e7bfc24 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:29:21.312
  Apr 20 14:29:21.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1975" for this suite. @ 04/20/24 14:29:21.364
â€¢ [4.190 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/20/24 14:29:21.38
  Apr 20 14:29:21.380: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:29:21.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:21.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:21.429
  STEP: Creating secret with name secret-test-b3ebc2e9-b08e-4463-893e-762cf1694814 @ 04/20/24 14:29:21.435
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:29:21.442
  STEP: Saw pod success @ 04/20/24 14:29:25.496
  Apr 20 14:29:25.505: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-efb0e05b-e929-42cc-8d60-88213fd3ac21 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:29:25.521
  Apr 20 14:29:25.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3440" for this suite. @ 04/20/24 14:29:25.575
â€¢ [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 04/20/24 14:29:25.618
  Apr 20 14:29:25.618: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:29:25.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:25.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:25.675
  STEP: create the rc @ 04/20/24 14:29:25.684
  W0420 14:29:25.698880      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/20/24 14:29:30.708
  STEP: wait for all pods to be garbage collected @ 04/20/24 14:29:30.727
  STEP: Gathering metrics @ 04/20/24 14:29:35.74
  Apr 20 14:29:35.922: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 14:29:35.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9671" for this suite. @ 04/20/24 14:29:35.932
â€¢ [10.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 04/20/24 14:29:35.948
  Apr 20 14:29:35.948: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:29:35.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:35.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:35.982
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:29:35.987
  STEP: Saw pod success @ 04/20/24 14:29:40.033
  Apr 20 14:29:40.041: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-3525a520-6bc7-42f4-9292-ea5951812a70 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:29:40.059
  Apr 20 14:29:40.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2455" for this suite. @ 04/20/24 14:29:40.146
â€¢ [4.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 04/20/24 14:29:40.191
  Apr 20 14:29:40.191: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:29:40.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:40.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:40.258
  STEP: Creating configMap with name projected-configmap-test-volume-map-e183bc9b-dbf3-4878-b6d0-f16f8a6fcd20 @ 04/20/24 14:29:40.263
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:29:40.273
  STEP: Saw pod success @ 04/20/24 14:29:44.325
  Apr 20 14:29:44.333: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-configmaps-b650f224-a09c-441a-87fc-e5bfe301d013 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:29:44.351
  Apr 20 14:29:44.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9053" for this suite. @ 04/20/24 14:29:44.415
â€¢ [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 04/20/24 14:29:44.448
  Apr 20 14:29:44.448: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:29:44.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:44.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:44.499
  STEP: Performing setup for networking test in namespace pod-network-test-2884 @ 04/20/24 14:29:44.504
  STEP: creating a selector @ 04/20/24 14:29:44.504
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:29:44.505
  Apr 20 14:29:44.505: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/20/24 14:30:06.816
  Apr 20 14:30:08.859: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 14:30:08.859: INFO: Breadth first check of 10.233.64.29 on host 192.168.121.198...
  Apr 20 14:30:08.868: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.87:9080/dial?request=hostname&protocol=udp&host=10.233.64.29&port=8081&tries=1'] Namespace:pod-network-test-2884 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:30:08.868: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:30:08.871: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:30:08.872: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2884/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.87%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.29%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:30:09.059: INFO: Waiting for responses: map[]
  Apr 20 14:30:09.059: INFO: reached 10.233.64.29 after 0/1 tries
  Apr 20 14:30:09.059: INFO: Breadth first check of 10.233.65.29 on host 192.168.121.170...
  Apr 20 14:30:09.070: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.87:9080/dial?request=hostname&protocol=udp&host=10.233.65.29&port=8081&tries=1'] Namespace:pod-network-test-2884 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:30:09.070: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:30:09.072: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:30:09.072: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2884/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.87%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.29%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:30:09.196: INFO: Waiting for responses: map[]
  Apr 20 14:30:09.196: INFO: reached 10.233.65.29 after 0/1 tries
  Apr 20 14:30:09.196: INFO: Breadth first check of 10.233.66.86 on host 192.168.121.20...
  Apr 20 14:30:09.206: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.87:9080/dial?request=hostname&protocol=udp&host=10.233.66.86&port=8081&tries=1'] Namespace:pod-network-test-2884 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:30:09.206: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:30:09.208: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:30:09.209: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2884/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.87%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.86%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:30:09.313: INFO: Waiting for responses: map[]
  Apr 20 14:30:09.313: INFO: reached 10.233.66.86 after 0/1 tries
  Apr 20 14:30:09.313: INFO: Going to retry 0 out of 3 pods....
  Apr 20 14:30:09.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2884" for this suite. @ 04/20/24 14:30:09.325
â€¢ [24.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 04/20/24 14:30:09.342
  Apr 20 14:30:09.342: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename job @ 04/20/24 14:30:09.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:09.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:09.377
  STEP: Creating Indexed job @ 04/20/24 14:30:09.384
  STEP: Ensuring job reaches completions @ 04/20/24 14:30:09.397
  STEP: Ensuring pods with index for job exist @ 04/20/24 14:30:17.405
  Apr 20 14:30:17.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6854" for this suite. @ 04/20/24 14:30:17.426
â€¢ [8.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 04/20/24 14:30:17.444
  Apr 20 14:30:17.444: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:30:17.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:17.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:17.495
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:30:17.512
  STEP: create the pod with lifecycle hook @ 04/20/24 14:30:19.583
  STEP: check poststart hook @ 04/20/24 14:30:21.637
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:30:21.658
  Apr 20 14:30:23.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8849" for this suite. @ 04/20/24 14:30:23.714
â€¢ [6.284 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/20/24 14:30:23.73
  Apr 20 14:30:23.730: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:30:23.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:23.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:23.776
  STEP: Setting up server cert @ 04/20/24 14:30:23.821
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:30:24.581
  STEP: Deploying the webhook pod @ 04/20/24 14:30:24.601
  STEP: Wait for the deployment to be ready @ 04/20/24 14:30:24.627
  Apr 20 14:30:24.646: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:30:26.671
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:30:26.694
  Apr 20 14:30:27.695: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/20/24 14:30:27.709
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/20/24 14:30:27.741
  Apr 20 14:30:27.741: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:30:27.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4322" for this suite. @ 04/20/24 14:30:27.885
  STEP: Destroying namespace "webhook-markers-3662" for this suite. @ 04/20/24 14:30:27.907
â€¢ [4.191 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 04/20/24 14:30:27.921
  Apr 20 14:30:27.921: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:30:27.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:27.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:27.959
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:30:27.963
  STEP: Saw pod success @ 04/20/24 14:30:32.002
  Apr 20 14:30:32.007: INFO: Trying to get logs from node aat3reeth3ee-3 pod downward-api-c3118028-4566-470e-9f01-1537f438d0d9 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:30:32.022
  Apr 20 14:30:32.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2925" for this suite. @ 04/20/24 14:30:32.062
â€¢ [4.154 seconds]
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 04/20/24 14:30:32.075
  Apr 20 14:30:32.075: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/20/24 14:30:32.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:32.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:32.115
  STEP: getting /apis @ 04/20/24 14:30:32.119
  STEP: getting /apis/storage.k8s.io @ 04/20/24 14:30:32.126
  STEP: getting /apis/storage.k8s.io/v1 @ 04/20/24 14:30:32.128
  STEP: creating @ 04/20/24 14:30:32.13
  STEP: watching @ 04/20/24 14:30:32.184
  Apr 20 14:30:32.184: INFO: starting watch
  STEP: getting @ 04/20/24 14:30:32.196
  STEP: listing in namespace @ 04/20/24 14:30:32.203
  STEP: listing across namespaces @ 04/20/24 14:30:32.209
  STEP: patching @ 04/20/24 14:30:32.219
  STEP: updating @ 04/20/24 14:30:32.229
  Apr 20 14:30:32.239: INFO: waiting for watch events with expected annotations in namespace
  Apr 20 14:30:32.239: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/20/24 14:30:32.24
  STEP: deleting a collection @ 04/20/24 14:30:32.261
  Apr 20 14:30:32.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4199" for this suite. @ 04/20/24 14:30:32.297
â€¢ [0.234 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 04/20/24 14:30:32.311
  Apr 20 14:30:32.311: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:30:32.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:32.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:32.348
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 14:30:32.354
  STEP: Saw pod success @ 04/20/24 14:30:36.398
  Apr 20 14:30:36.406: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-341f4fe0-ae06-4700-b291-a05cffc90999 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:30:36.426
  Apr 20 14:30:36.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-453" for this suite. @ 04/20/24 14:30:36.475
â€¢ [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 04/20/24 14:30:36.502
  Apr 20 14:30:36.502: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 14:30:36.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:36.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:36.552
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/20/24 14:30:36.558
  STEP: Watching for error events or started pod @ 04/20/24 14:30:36.57
  STEP: Waiting for pod completion @ 04/20/24 14:30:38.58
  STEP: Checking that the pod succeeded @ 04/20/24 14:30:40.599
  STEP: Getting logs from the pod @ 04/20/24 14:30:40.599
  STEP: Checking that the sysctl is actually updated @ 04/20/24 14:30:40.611
  Apr 20 14:30:40.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5537" for this suite. @ 04/20/24 14:30:40.619
â€¢ [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 04/20/24 14:30:40.632
  Apr 20 14:30:40.632: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 14:30:40.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:40.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:40.67
  STEP: Setting up server cert @ 04/20/24 14:30:40.675
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 14:30:41.193
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 14:30:41.207
  STEP: Wait for the deployment to be ready @ 04/20/24 14:30:41.238
  Apr 20 14:30:41.260: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:30:43.282
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:30:43.303
  Apr 20 14:30:44.304: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 20 14:30:44.318: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Creating a v1 custom resource @ 04/20/24 14:30:47.069
  STEP: Create a v2 custom resource @ 04/20/24 14:30:47.108
  STEP: List CRs in v1 @ 04/20/24 14:30:47.122
  STEP: List CRs in v2 @ 04/20/24 14:30:47.369
  Apr 20 14:30:47.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6659" for this suite. @ 04/20/24 14:30:48.021
â€¢ [7.407 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:30:48.04
  Apr 20 14:30:48.040: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:30:48.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:48.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:48.09
  STEP: Creating secret with name secret-test-340bfd15-1432-47a9-aba7-bc9ce735e4df @ 04/20/24 14:30:48.1
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:30:48.13
  STEP: Saw pod success @ 04/20/24 14:30:52.197
  Apr 20 14:30:52.204: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-b1aa2cb5-d3b2-4464-8c1a-20f361b978e1 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:30:52.218
  Apr 20 14:30:52.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5628" for this suite. @ 04/20/24 14:30:52.267
â€¢ [4.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/20/24 14:30:52.289
  Apr 20 14:30:52.289: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 14:30:52.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:52.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:52.339
  Apr 20 14:30:54.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 04/20/24 14:30:54.482
  STEP: Cleaning up the configmap @ 04/20/24 14:30:54.496
  STEP: Cleaning up the pod @ 04/20/24 14:30:54.512
  STEP: Destroying namespace "emptydir-wrapper-4385" for this suite. @ 04/20/24 14:30:54.545
â€¢ [2.278 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/20/24 14:30:54.569
  Apr 20 14:30:54.569: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:30:54.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:54.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:54.62
  Apr 20 14:30:54.630: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  W0420 14:30:57.474464      15 warnings.go:70] unknown field "alpha"
  W0420 14:30:57.474559      15 warnings.go:70] unknown field "beta"
  W0420 14:30:57.474572      15 warnings.go:70] unknown field "delta"
  W0420 14:30:57.474582      15 warnings.go:70] unknown field "epsilon"
  W0420 14:30:57.474592      15 warnings.go:70] unknown field "gamma"
  Apr 20 14:30:58.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9602" for this suite. @ 04/20/24 14:30:58.101
â€¢ [3.548 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/20/24 14:30:58.119
  Apr 20 14:30:58.119: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 14:30:58.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:30:58.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:30:58.164
  Apr 20 14:30:58.240: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 14:31:58.301: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 14:31:58.31
  Apr 20 14:31:58.358: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 20 14:31:58.369: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 20 14:31:58.433: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 20 14:31:58.452: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 20 14:31:58.579: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 20 14:31:58.603: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 14:31:58.603
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/20/24 14:32:00.668
  Apr 20 14:32:04.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5784" for this suite. @ 04/20/24 14:32:05.035
â€¢ [66.947 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/20/24 14:32:05.076
  Apr 20 14:32:05.076: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:32:05.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:05.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:05.142
  Apr 20 14:32:05.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4579" for this suite. @ 04/20/24 14:32:05.239
â€¢ [0.178 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/20/24 14:32:05.255
  Apr 20 14:32:05.255: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:32:05.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:05.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:05.312
  STEP: Waiting for pod completion @ 04/20/24 14:32:05.34
  Apr 20 14:32:09.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-958" for this suite. @ 04/20/24 14:32:09.403
â€¢ [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/20/24 14:32:09.427
  Apr 20 14:32:09.427: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 14:32:09.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:09.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:09.486
  STEP: create the container @ 04/20/24 14:32:09.492
  W0420 14:32:09.510320      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 14:32:09.51
  STEP: get the container status @ 04/20/24 14:32:12.55
  STEP: the container should be terminated @ 04/20/24 14:32:12.56
  STEP: the termination message should be set @ 04/20/24 14:32:12.56
  Apr 20 14:32:12.560: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/20/24 14:32:12.56
  Apr 20 14:32:12.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1458" for this suite. @ 04/20/24 14:32:12.596
â€¢ [3.193 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/20/24 14:32:12.622
  Apr 20 14:32:12.622: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:32:12.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:12.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:12.672
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/20/24 14:32:12.678
  Apr 20 14:32:12.703: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9866  201c9b36-a370-4f61-8ec8-7d53afa06a19 36851 0 2024-04-20 14:32:12 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-20 14:32:12 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2zrjf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2zrjf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/20/24 14:32:14.722
  Apr 20 14:32:14.722: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9866 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:32:14.722: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:32:14.724: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:32:14.724: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9866/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/20/24 14:32:14.865
  Apr 20 14:32:14.865: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9866 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:32:14.866: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:32:14.867: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:32:14.867: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9866/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:32:14.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 14:32:15.007: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-9866" for this suite. @ 04/20/24 14:32:15.041
â€¢ [2.436 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 04/20/24 14:32:15.059
  Apr 20 14:32:15.059: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:32:15.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:15.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:15.103
  STEP: Deleting RuntimeClass runtimeclass-6180-delete-me @ 04/20/24 14:32:15.12
  STEP: Waiting for the RuntimeClass to disappear @ 04/20/24 14:32:15.131
  Apr 20 14:32:15.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6180" for this suite. @ 04/20/24 14:32:15.164
â€¢ [0.122 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 04/20/24 14:32:15.181
  Apr 20 14:32:15.181: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 14:32:15.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:15.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:15.236
  STEP: fetching the /apis discovery document @ 04/20/24 14:32:15.241
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/20/24 14:32:15.245
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 14:32:15.245
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/20/24 14:32:15.245
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/20/24 14:32:15.248
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 14:32:15.248
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 14:32:15.251
  Apr 20 14:32:15.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-67" for this suite. @ 04/20/24 14:32:15.258
â€¢ [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/20/24 14:32:15.279
  Apr 20 14:32:15.279: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:32:15.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:15.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:15.325
  Apr 20 14:32:15.331: INFO: Creating deployment "webserver-deployment"
  Apr 20 14:32:15.343: INFO: Waiting for observed generation 1
  Apr 20 14:32:17.360: INFO: Waiting for all required pods to come up
  Apr 20 14:32:17.380: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/20/24 14:32:17.38
  Apr 20 14:32:19.418: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 20 14:32:19.434: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 20 14:32:19.463: INFO: Updating deployment webserver-deployment
  Apr 20 14:32:19.463: INFO: Waiting for observed generation 2
  Apr 20 14:32:21.481: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 20 14:32:21.489: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 20 14:32:21.494: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 14:32:21.510: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 20 14:32:21.510: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 20 14:32:21.514: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 14:32:21.523: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 20 14:32:21.523: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 20 14:32:21.560: INFO: Updating deployment webserver-deployment
  Apr 20 14:32:21.560: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 14:32:21.581: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 20 14:32:21.589: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 20 14:32:21.655: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f665bf04-fd6e-4014-96ad-c9d525333caa",
      ResourceVersion: (string) (len=5) "37101",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 14:32:21.738: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
      ResourceVersion: (string) (len=5) "37104",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f665bf04-fd6e-4014-96ad-c9d525333caa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 36 36 35 62 66  30 34 2d 66 64 36 65 2d  |\"f665bf04-fd6e-|
              00000120  34 30 31 34 2d 39 36 61  64 2d 63 39 64 35 32 35  |4014-96ad-c9d525|
              00000130  33 33 33 63 61 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |333caa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:32:21.740: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 20 14:32:21.741: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
      ResourceVersion: (string) (len=5) "37102",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f665bf04-fd6e-4014-96ad-c9d525333caa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 36 36 35 62 66  30 34 2d 66 64 36 65 2d  |\"f665bf04-fd6e-|
              00000120  34 30 31 34 2d 39 36 61  64 2d 63 39 64 35 32 35  |4014-96ad-c9d525|
              00000130  33 33 33 63 61 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |333caa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:32:21.846: INFO: Pod "webserver-deployment-557759b7c7-2mnqg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2mnqg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e46107c-d760-44c1-b8d6-5ef44e409a1b",
      ResourceVersion: (string) (len=5) "37004",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 33 35 5c 22 7d 22  |10.233.65.35\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7rgmq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7rgmq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.170",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2562012e8cbddb520328b134593edcc3b86c74a9f899aebb695a616bdb36edd0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.851: INFO: Pod "webserver-deployment-557759b7c7-48jhp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-48jhp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57c212d1-347f-4ee9-8145-53971e3c20ec",
      ResourceVersion: (string) (len=5) "36982",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 33 33 5c 22 7d 22  |10.233.64.33\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sp4c2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sp4c2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://278f36aa4e646eb7982242591751c2b1fbee0172311fff6caab7b25d55cac96a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.861: INFO: Pod "webserver-deployment-557759b7c7-5rqsf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5rqsf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "402da067-c3c9-43cc-82e3-85df2e7b8a4f",
      ResourceVersion: (string) (len=5) "37131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-js72x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-js72x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.865: INFO: Pod "webserver-deployment-557759b7c7-8ll7v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8ll7v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9797bad-d880-4094-9046-99c694b4ad56",
      ResourceVersion: (string) (len=5) "37015",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 33 34 5c 22 7d 22  |10.233.64.34\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vjs98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vjs98",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://cca6dfbd67436dca469ef27f64d5a150c6adef8921f8f9b55d1757b6e30bf58d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.878: INFO: Pod "webserver-deployment-557759b7c7-969pj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-969pj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dd2dc0d-13d4-4b0e-ab8b-8306195e7b2b",
      ResourceVersion: (string) (len=5) "37006",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 33 36 5c 22 7d 22  |10.233.65.36\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n65jb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n65jb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.170",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e5fb030ac9fb48525a4b97a74e33427d162e2f0ef5c462296f1fd5edbdf49e11",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.894: INFO: Pod "webserver-deployment-557759b7c7-btrl7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-btrl7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6232a8b9-2d86-4082-99da-ff1ab98c13ed",
      ResourceVersion: (string) (len=5) "37121",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22qdw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22qdw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.900: INFO: Pod "webserver-deployment-557759b7c7-ktw8p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ktw8p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e82d6b40-1998-4474-9e23-1afd351e1a23",
      ResourceVersion: (string) (len=5) "37133",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vz77b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vz77b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.905: INFO: Pod "webserver-deployment-557759b7c7-lgssv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lgssv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4240bc36-efa8-4de1-94b7-4e790d07606e",
      ResourceVersion: (string) (len=5) "37120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k9g65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k9g65",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.909: INFO: Pod "webserver-deployment-557759b7c7-lkczz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lkczz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95d6af78-cd5e-4a72-a5bf-0acfe4279b44",
      ResourceVersion: (string) (len=5) "36992",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 30 34 5c 22 7d  |10.233.66.104\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v6km7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v6km7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://18de1c891f20245efbcff11df93f5e640ec1b6e41a8629fd53b128cb8cb437da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.915: INFO: Pod "webserver-deployment-557759b7c7-rw85w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rw85w",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4539685d-79bd-4ba3-b641-08d705c5baba",
      ResourceVersion: (string) (len=5) "37126",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5ns9h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5ns9h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.919: INFO: Pod "webserver-deployment-557759b7c7-stc4k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-stc4k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36def41e-95f7-4f46-919d-8e4dcc856f0a",
      ResourceVersion: (string) (len=5) "37116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-82mdv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-82mdv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.926: INFO: Pod "webserver-deployment-557759b7c7-v6298" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-v6298",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f128ab4-8ba4-414b-aaa3-f0f093023d30",
      ResourceVersion: (string) (len=5) "37130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nfwf2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nfwf2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.932: INFO: Pod "webserver-deployment-557759b7c7-vxsml" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vxsml",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02f34504-6d24-4ef3-88c7-89f857d8d4da",
      ResourceVersion: (string) (len=5) "36965",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 33 34 5c 22 7d 22  |10.233.65.34\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tcvvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tcvvs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.170",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://8f364dbdf40e13c17ea26cee8b28129865b655eb92c11bc0e0eb4d92f4dc5387",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.943: INFO: Pod "webserver-deployment-557759b7c7-w8f44" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-w8f44",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e815109e-a8a7-435a-8c56-d4a693d7ee66",
      ResourceVersion: (string) (len=5) "36996",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 30 37 5c 22 7d  |10.233.66.107\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l48vf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l48vf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d2b58e2007d56fe3c720fe94ffc97c80e3f63cc75d6e9f1a7b6eb6de93750e9d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.952: INFO: Pod "webserver-deployment-557759b7c7-wdbbk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wdbbk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f405bf50-0e1c-4c19-901b-4b3d1ff18b84",
      ResourceVersion: (string) (len=5) "37018",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4ec98ff9-e8a5-4d73-8aa6-72c6a9bd19b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  63 39 38 66 66 39 2d 65  |d\":\"4ec98ff9-e|
              00000090  38 61 35 2d 34 64 37 33  2d 38 61 61 36 2d 37 32  |8a5-4d73-8aa6-72|
              000000a0  63 36 61 39 62 64 31 39  62 39 5c 22 7d 22 3a 7b  |c6a9bd19b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 33 35 5c 22 7d 22  |10.233.64.35\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hx5qx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hx5qx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://abc0edd26b0ba01c79050edf2401843c9060b237469024905d1bd8680f3a9900",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.957: INFO: Pod "webserver-deployment-9b4f5bf69-8vsrw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8vsrw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9905b783-f208-47a2-94e0-1e82ce0fb76c",
      ResourceVersion: (string) (len=5) "37127",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mq9cw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mq9cw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.961: INFO: Pod "webserver-deployment-9b4f5bf69-97s8p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-97s8p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4848dbf9-10e4-4939-a389-5e44128ae60c",
      ResourceVersion: (string) (len=5) "37123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5wf8s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5wf8s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.967: INFO: Pod "webserver-deployment-9b4f5bf69-9vrjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9vrjb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "464d1dd4-078d-4284-9e43-dd6cc931ba80",
      ResourceVersion: (string) (len=5) "37072",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mkrck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mkrck",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.979: INFO: Pod "webserver-deployment-9b4f5bf69-dctfq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dctfq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e191411-27e7-4930-a05d-865644768ddc",
      ResourceVersion: (string) (len=5) "37049",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jz7fh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jz7fh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.170",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.989: INFO: Pod "webserver-deployment-9b4f5bf69-fvrpm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fvrpm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "582a5137-8063-4047-84ee-938da92c28d6",
      ResourceVersion: (string) (len=5) "37132",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4wr4s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4wr4s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:21.995: INFO: Pod "webserver-deployment-9b4f5bf69-fz7s7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fz7s7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a037ea4-0f3c-4ca1-80d1-5736fba08175",
      ResourceVersion: (string) (len=5) "37038",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xvs9n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xvs9n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:22.000: INFO: Pod "webserver-deployment-9b4f5bf69-gkxwb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gkxwb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1f77d7c-a8ef-4429-bd26-e4f8d324f256",
      ResourceVersion: (string) (len=5) "37125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nwmhn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nwmhn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:22.004: INFO: Pod "webserver-deployment-9b4f5bf69-h9w4x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-h9w4x",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0860bbd5-5977-4a20-989f-251f61501f0e",
      ResourceVersion: (string) (len=5) "37128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vktwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vktwr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:22.009: INFO: Pod "webserver-deployment-9b4f5bf69-hgz2s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hgz2s",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b55df5f-f4db-4b03-89dc-23d877d94bb1",
      ResourceVersion: (string) (len=5) "37129",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w7r9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w7r9b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:22.014: INFO: Pod "webserver-deployment-9b4f5bf69-xdnjk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xdnjk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d29b67fe-7f99-4caf-ba91-b40dbcc906bc",
      ResourceVersion: (string) (len=5) "37076",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-24g4v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-24g4v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:22.023: INFO: Pod "webserver-deployment-9b4f5bf69-zjqq9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zjqq9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0df8677c-2146-4ed7-933f-0edb422eff08",
      ResourceVersion: (string) (len=5) "37117",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8p4rl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8p4rl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.170",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:22.028: INFO: Pod "webserver-deployment-9b4f5bf69-zmwrm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zmwrm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61277227-e39b-4183-9106-14ebaad193bf",
      ResourceVersion: (string) (len=5) "37048",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8e833ef8-0845-4d60-8cb7-dd94dcb8aa4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 33 33 65 66 38 2d 30  |d\":\"8e833ef8-0|
              00000090  38 34 35 2d 34 64 36 30  2d 38 63 62 37 2d 64 64  |845-4d60-8cb7-dd|
              000000a0  39 34 64 63 62 38 61 61  34 61 5c 22 7d 22 3a 7b  |94dcb8aa4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5nr4r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5nr4r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:22.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3001" for this suite. @ 04/20/24 14:32:22.161
â€¢ [7.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 04/20/24 14:32:22.343
  Apr 20 14:32:22.344: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:32:22.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:22.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:22.658
  STEP: Creating secret with name secret-test-06682e96-3ee3-43d9-80eb-add4719b3a5f @ 04/20/24 14:32:22.669
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:32:22.685
  STEP: Saw pod success @ 04/20/24 14:32:26.756
  Apr 20 14:32:26.762: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-ffcec761-1080-4ea7-b387-fea5fba53767 container secret-env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:32:26.774
  Apr 20 14:32:26.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8796" for this suite. @ 04/20/24 14:32:26.813
â€¢ [4.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/20/24 14:32:26.829
  Apr 20 14:32:26.830: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename events @ 04/20/24 14:32:26.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:26.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:26.868
  STEP: Create set of events @ 04/20/24 14:32:26.873
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 14:32:26.909
  STEP: delete a list of events @ 04/20/24 14:32:26.915
  Apr 20 14:32:26.915: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 14:32:26.95
  Apr 20 14:32:26.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5679" for this suite. @ 04/20/24 14:32:26.968
â€¢ [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 04/20/24 14:32:26.982
  Apr 20 14:32:26.982: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:32:26.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:27.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:27.022
  Apr 20 14:32:27.057: INFO: created pod
  STEP: Saw pod success @ 04/20/24 14:32:31.103
  Apr 20 14:33:01.104: INFO: polling logs
  Apr 20 14:33:01.124: INFO: Pod logs: 
  I0420 14:32:27.859158       1 log.go:245] OK: Got token
  I0420 14:32:27.868239       1 log.go:245] validating with in-cluster discovery
  I0420 14:32:27.869987       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0420 14:32:27.870158       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5188:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00046c2d0), NotBefore:(*jwt.NumericDate)(0xc00046c3b8), IssuedAt:(*jwt.NumericDate)(0xc00046c2e0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5188", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"fbeb134f-fe75-4292-a4c8-11a84dfd1c3a"}}}
  I0420 14:32:27.947607       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0420 14:32:27.993810       1 log.go:245] OK: Validated signature on JWT
  I0420 14:32:27.994308       1 log.go:245] OK: Got valid claims from token!
  I0420 14:32:27.994641       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5188:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00046d588), NotBefore:(*jwt.NumericDate)(0xc00046d5b0), IssuedAt:(*jwt.NumericDate)(0xc00046d590), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5188", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"fbeb134f-fe75-4292-a4c8-11a84dfd1c3a"}}}

  Apr 20 14:33:01.124: INFO: completed pod
  Apr 20 14:33:01.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5188" for this suite. @ 04/20/24 14:33:01.155
â€¢ [34.186 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/20/24 14:33:01.169
  Apr 20 14:33:01.169: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:33:01.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:01.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:01.215
  Apr 20 14:33:01.220: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: creating the pod @ 04/20/24 14:33:01.223
  STEP: submitting the pod to kubernetes @ 04/20/24 14:33:01.223
  Apr 20 14:33:03.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8576" for this suite. @ 04/20/24 14:33:03.343
â€¢ [2.190 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/20/24 14:33:03.362
  Apr 20 14:33:03.362: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:33:03.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:03.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:03.407
  STEP: Setting up server cert @ 04/20/24 14:33:03.47
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:33:04.719
  STEP: Deploying the webhook pod @ 04/20/24 14:33:04.743
  STEP: Wait for the deployment to be ready @ 04/20/24 14:33:04.776
  Apr 20 14:33:04.797: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:33:06.842
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:33:06.871
  Apr 20 14:33:07.871: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/20/24 14:33:07.885
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/20/24 14:33:07.887
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 14:33:07.887
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 14:33:07.887
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 14:33:07.889
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 14:33:07.889
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 14:33:07.891
  Apr 20 14:33:07.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1807" for this suite. @ 04/20/24 14:33:08.017
  STEP: Destroying namespace "webhook-markers-8047" for this suite. @ 04/20/24 14:33:08.046
â€¢ [4.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 04/20/24 14:33:08.068
  Apr 20 14:33:08.068: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:33:08.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:08.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:08.111
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 14:33:08.116
  STEP: Saw pod success @ 04/20/24 14:33:12.19
  Apr 20 14:33:12.200: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-7618a504-42a7-4647-b160-c22d74215b0d container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:33:12.218
  Apr 20 14:33:12.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6282" for this suite. @ 04/20/24 14:33:12.272
â€¢ [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 04/20/24 14:33:12.291
  Apr 20 14:33:12.291: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:33:12.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:12.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:12.332
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:33:12.338
  STEP: Saw pod success @ 04/20/24 14:33:16.39
  Apr 20 14:33:16.397: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-458c56ed-c771-4b2f-adc0-29548c00e7a3 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:33:16.407
  Apr 20 14:33:16.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2116" for this suite. @ 04/20/24 14:33:16.443
â€¢ [4.162 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 04/20/24 14:33:16.453
  Apr 20 14:33:16.453: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:33:16.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:16.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:16.489
  STEP: Updating Namespace "namespaces-4816" @ 04/20/24 14:33:16.493
  Apr 20 14:33:16.506: INFO: Namespace "namespaces-4816" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"b8ba6184-7f72-49b5-bf7a-e8b69be702d5", "kubernetes.io/metadata.name":"namespaces-4816", "namespaces-4816":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 20 14:33:16.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4816" for this suite. @ 04/20/24 14:33:16.517
â€¢ [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 04/20/24 14:33:16.532
  Apr 20 14:33:16.532: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:33:16.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:16.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:16.575
  STEP: Creating configMap with name configmap-test-volume-ee1d294a-1526-45fb-94ae-da47c4977c60 @ 04/20/24 14:33:16.579
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:33:16.587
  STEP: Saw pod success @ 04/20/24 14:33:20.635
  Apr 20 14:33:20.639: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-b985b3fc-62cc-4a5d-a349-a15ab0d22fbd container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:33:20.651
  Apr 20 14:33:20.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2000" for this suite. @ 04/20/24 14:33:20.687
â€¢ [4.165 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/20/24 14:33:20.698
  Apr 20 14:33:20.698: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 14:33:20.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:20.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:20.736
  STEP: creating service endpoint-test2 in namespace services-5398 @ 04/20/24 14:33:20.741
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5398 to expose endpoints map[] @ 04/20/24 14:33:20.757
  Apr 20 14:33:20.765: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Apr 20 14:33:21.782: INFO: successfully validated that service endpoint-test2 in namespace services-5398 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5398 @ 04/20/24 14:33:21.782
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5398 to expose endpoints map[pod1:[80]] @ 04/20/24 14:33:23.837
  Apr 20 14:33:23.861: INFO: successfully validated that service endpoint-test2 in namespace services-5398 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/20/24 14:33:23.861
  Apr 20 14:33:23.861: INFO: Creating new exec pod
  Apr 20 14:33:26.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5398 exec execpodk64z5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 14:33:27.207: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 14:33:27.207: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:33:27.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5398 exec execpodk64z5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.12.1 80'
  Apr 20 14:33:27.456: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.12.1 80\nConnection to 10.233.12.1 80 port [tcp/http] succeeded!\n"
  Apr 20 14:33:27.456: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5398 @ 04/20/24 14:33:27.456
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5398 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/20/24 14:33:31.515
  Apr 20 14:33:31.540: INFO: successfully validated that service endpoint-test2 in namespace services-5398 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/20/24 14:33:31.54
  Apr 20 14:33:32.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5398 exec execpodk64z5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 14:33:32.811: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 14:33:32.811: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:33:32.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5398 exec execpodk64z5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.12.1 80'
  Apr 20 14:33:33.061: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.12.1 80\nConnection to 10.233.12.1 80 port [tcp/http] succeeded!\n"
  Apr 20 14:33:33.061: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5398 @ 04/20/24 14:33:33.062
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5398 to expose endpoints map[pod2:[80]] @ 04/20/24 14:33:33.087
  Apr 20 14:33:34.137: INFO: successfully validated that service endpoint-test2 in namespace services-5398 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/20/24 14:33:34.137
  Apr 20 14:33:35.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5398 exec execpodk64z5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 14:33:35.424: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 14:33:35.424: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:33:35.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5398 exec execpodk64z5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.12.1 80'
  Apr 20 14:33:35.680: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.12.1 80\nConnection to 10.233.12.1 80 port [tcp/http] succeeded!\n"
  Apr 20 14:33:35.680: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5398 @ 04/20/24 14:33:35.68
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5398 to expose endpoints map[] @ 04/20/24 14:33:35.712
  Apr 20 14:33:36.772: INFO: successfully validated that service endpoint-test2 in namespace services-5398 exposes endpoints map[]
  Apr 20 14:33:36.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5398" for this suite. @ 04/20/24 14:33:36.836
â€¢ [16.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 04/20/24 14:33:36.865
  Apr 20 14:33:36.865: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:33:36.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:36.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:36.924
  STEP: Creating namespace "e2e-ns-w4gns" @ 04/20/24 14:33:36.932
  Apr 20 14:33:36.964: INFO: Namespace "e2e-ns-w4gns-1699" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-w4gns-1699" @ 04/20/24 14:33:36.964
  Apr 20 14:33:36.993: INFO: Namespace "e2e-ns-w4gns-1699" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-w4gns-1699" @ 04/20/24 14:33:36.994
  Apr 20 14:33:37.013: INFO: Namespace "e2e-ns-w4gns-1699" has []v1.FinalizerName{"kubernetes"}
  Apr 20 14:33:37.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5479" for this suite. @ 04/20/24 14:33:37.027
  STEP: Destroying namespace "e2e-ns-w4gns-1699" for this suite. @ 04/20/24 14:33:37.043
â€¢ [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/20/24 14:33:37.08
  Apr 20 14:33:37.080: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:33:37.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:37.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:37.127
  STEP: Saw pod success @ 04/20/24 14:33:43.276
  Apr 20 14:33:43.285: INFO: Trying to get logs from node aat3reeth3ee-3 pod client-envvars-cb156914-237f-4292-bc44-6073de4b0a9f container env3cont: <nil>
  STEP: delete the pod @ 04/20/24 14:33:43.314
  Apr 20 14:33:43.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5829" for this suite. @ 04/20/24 14:33:43.369
â€¢ [6.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 04/20/24 14:33:43.399
  Apr 20 14:33:43.399: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:33:43.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:43.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:43.442
  STEP: Creating configMap with name projected-configmap-test-volume-map-4addfbe0-403e-4694-b453-23d1765a6dbf @ 04/20/24 14:33:43.446
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:33:43.461
  STEP: Saw pod success @ 04/20/24 14:33:47.496
  Apr 20 14:33:47.502: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-configmaps-d7b7ef05-00de-4852-bfb0-b93ca8023707 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:33:47.512
  Apr 20 14:33:47.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8988" for this suite. @ 04/20/24 14:33:47.548
â€¢ [4.160 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 04/20/24 14:33:47.559
  Apr 20 14:33:47.559: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:33:47.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:47.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:47.59
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/20/24 14:33:47.594
  STEP: When a replication controller with a matching selector is created @ 04/20/24 14:33:49.628
  STEP: Then the orphan pod is adopted @ 04/20/24 14:33:49.637
  Apr 20 14:33:50.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2973" for this suite. @ 04/20/24 14:33:50.66
â€¢ [3.118 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 04/20/24 14:33:50.678
  Apr 20 14:33:50.678: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename ingress @ 04/20/24 14:33:50.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:50.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:50.724
  STEP: getting /apis @ 04/20/24 14:33:50.73
  STEP: getting /apis/networking.k8s.io @ 04/20/24 14:33:50.738
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 14:33:50.739
  STEP: creating @ 04/20/24 14:33:50.742
  STEP: getting @ 04/20/24 14:33:50.78
  STEP: listing @ 04/20/24 14:33:50.787
  STEP: watching @ 04/20/24 14:33:50.794
  Apr 20 14:33:50.794: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 14:33:50.797
  STEP: cluster-wide watching @ 04/20/24 14:33:50.804
  Apr 20 14:33:50.804: INFO: starting watch
  STEP: patching @ 04/20/24 14:33:50.806
  STEP: updating @ 04/20/24 14:33:50.817
  Apr 20 14:33:50.831: INFO: waiting for watch events with expected annotations
  Apr 20 14:33:50.831: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/20/24 14:33:50.831
  STEP: updating /status @ 04/20/24 14:33:50.84
  STEP: get /status @ 04/20/24 14:33:50.856
  STEP: deleting @ 04/20/24 14:33:50.862
  STEP: deleting a collection @ 04/20/24 14:33:50.88
  Apr 20 14:33:50.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9875" for this suite. @ 04/20/24 14:33:50.908
â€¢ [0.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 04/20/24 14:33:50.922
  Apr 20 14:33:50.922: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:33:50.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:50.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:50.951
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 14:33:50.956
  STEP: Saw pod success @ 04/20/24 14:33:52.982
  Apr 20 14:33:52.987: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-6314b0d7-df21-4b09-8735-2e81e7a37e78 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:33:52.999
  Apr 20 14:33:53.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4043" for this suite. @ 04/20/24 14:33:53.03
â€¢ [2.118 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/20/24 14:33:53.042
  Apr 20 14:33:53.042: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename watch @ 04/20/24 14:33:53.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:53.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:53.074
  STEP: creating a watch on configmaps @ 04/20/24 14:33:53.078
  STEP: creating a new configmap @ 04/20/24 14:33:53.08
  STEP: modifying the configmap once @ 04/20/24 14:33:53.092
  STEP: closing the watch once it receives two notifications @ 04/20/24 14:33:53.112
  Apr 20 14:33:53.113: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4231  46dedee9-acb3-4a02-90fe-c6e79fbe237d 38041 0 2024-04-20 14:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 14:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:33:53.113: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4231  46dedee9-acb3-4a02-90fe-c6e79fbe237d 38043 0 2024-04-20 14:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 14:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/20/24 14:33:53.113
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/20/24 14:33:53.132
  STEP: deleting the configmap @ 04/20/24 14:33:53.134
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/20/24 14:33:53.144
  Apr 20 14:33:53.144: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4231  46dedee9-acb3-4a02-90fe-c6e79fbe237d 38044 0 2024-04-20 14:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 14:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:33:53.145: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4231  46dedee9-acb3-4a02-90fe-c6e79fbe237d 38045 0 2024-04-20 14:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 14:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:33:53.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4231" for this suite. @ 04/20/24 14:33:53.152
â€¢ [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/20/24 14:33:53.172
  Apr 20 14:33:53.172: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/20/24 14:33:53.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:53.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:53.231
  STEP: Setting up the test @ 04/20/24 14:33:53.238
  STEP: Creating hostNetwork=false pod @ 04/20/24 14:33:53.238
  STEP: Creating hostNetwork=true pod @ 04/20/24 14:33:55.289
  STEP: Running the test @ 04/20/24 14:33:57.32
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/20/24 14:33:57.32
  Apr 20 14:33:57.320: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:57.320: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:57.322: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:57.322: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 14:33:57.492: INFO: Exec stderr: ""
  Apr 20 14:33:57.492: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:57.492: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:57.495: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:57.495: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 14:33:57.600: INFO: Exec stderr: ""
  Apr 20 14:33:57.600: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:57.600: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:57.604: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:57.604: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 14:33:57.710: INFO: Exec stderr: ""
  Apr 20 14:33:57.711: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:57.711: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:57.712: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:57.713: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 14:33:57.802: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/20/24 14:33:57.802
  Apr 20 14:33:57.802: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:57.802: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:57.804: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:57.804: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 20 14:33:57.900: INFO: Exec stderr: ""
  Apr 20 14:33:57.900: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:57.901: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:57.902: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:57.902: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 20 14:33:57.995: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/20/24 14:33:57.995
  Apr 20 14:33:57.995: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:57.995: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:57.998: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:57.998: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 14:33:58.093: INFO: Exec stderr: ""
  Apr 20 14:33:58.093: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:58.093: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:58.096: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:58.097: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 14:33:58.198: INFO: Exec stderr: ""
  Apr 20 14:33:58.198: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:58.198: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:58.200: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:58.200: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 14:33:58.318: INFO: Exec stderr: ""
  Apr 20 14:33:58.319: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8566 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:58.319: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:33:58.321: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:58.322: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8566/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 14:33:58.431: INFO: Exec stderr: ""
  Apr 20 14:33:58.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8566" for this suite. @ 04/20/24 14:33:58.449
â€¢ [5.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/20/24 14:33:58.469
  Apr 20 14:33:58.469: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename events @ 04/20/24 14:33:58.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:58.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:58.526
  STEP: creating a test event @ 04/20/24 14:33:58.533
  STEP: listing events in all namespaces @ 04/20/24 14:33:58.555
  STEP: listing events in test namespace @ 04/20/24 14:33:58.83
  STEP: listing events with field selection filtering on source @ 04/20/24 14:33:58.862
  STEP: listing events with field selection filtering on reportingController @ 04/20/24 14:33:58.88
  STEP: getting the test event @ 04/20/24 14:33:58.894
  STEP: patching the test event @ 04/20/24 14:33:58.904
  STEP: getting the test event @ 04/20/24 14:33:58.936
  STEP: updating the test event @ 04/20/24 14:33:58.948
  STEP: getting the test event @ 04/20/24 14:33:58.977
  STEP: deleting the test event @ 04/20/24 14:33:58.998
  STEP: listing events in all namespaces @ 04/20/24 14:33:59.02
  STEP: listing events in test namespace @ 04/20/24 14:33:59.089
  Apr 20 14:33:59.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2365" for this suite. @ 04/20/24 14:33:59.107
â€¢ [0.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/20/24 14:33:59.129
  Apr 20 14:33:59.129: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:33:59.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:59.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:59.173
  Apr 20 14:33:59.179: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/20/24 14:34:01.374
  Apr 20 14:34:01.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 create -f -'
  Apr 20 14:34:02.404: INFO: stderr: ""
  Apr 20 14:34:02.404: INFO: stdout: "e2e-test-crd-publish-openapi-7532-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 20 14:34:02.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 delete e2e-test-crd-publish-openapi-7532-crds test-foo'
  Apr 20 14:34:02.589: INFO: stderr: ""
  Apr 20 14:34:02.589: INFO: stdout: "e2e-test-crd-publish-openapi-7532-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 20 14:34:02.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 apply -f -'
  Apr 20 14:34:03.762: INFO: stderr: ""
  Apr 20 14:34:03.762: INFO: stdout: "e2e-test-crd-publish-openapi-7532-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 20 14:34:03.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 delete e2e-test-crd-publish-openapi-7532-crds test-foo'
  Apr 20 14:34:04.197: INFO: stderr: ""
  Apr 20 14:34:04.197: INFO: stdout: "e2e-test-crd-publish-openapi-7532-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/20/24 14:34:04.197
  Apr 20 14:34:04.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 create -f -'
  Apr 20 14:34:04.681: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/20/24 14:34:04.681
  Apr 20 14:34:04.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 create -f -'
  Apr 20 14:34:05.108: INFO: rc: 1
  Apr 20 14:34:05.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 apply -f -'
  Apr 20 14:34:05.502: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/20/24 14:34:05.502
  Apr 20 14:34:05.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 create -f -'
  Apr 20 14:34:05.843: INFO: rc: 1
  Apr 20 14:34:05.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 --namespace=crd-publish-openapi-7489 apply -f -'
  Apr 20 14:34:06.194: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/20/24 14:34:06.195
  Apr 20 14:34:06.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 explain e2e-test-crd-publish-openapi-7532-crds'
  Apr 20 14:34:06.534: INFO: stderr: ""
  Apr 20 14:34:06.535: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7532-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/20/24 14:34:06.535
  Apr 20 14:34:06.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 explain e2e-test-crd-publish-openapi-7532-crds.metadata'
  Apr 20 14:34:06.878: INFO: stderr: ""
  Apr 20 14:34:06.879: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7532-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 20 14:34:06.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 explain e2e-test-crd-publish-openapi-7532-crds.spec'
  Apr 20 14:34:07.234: INFO: stderr: ""
  Apr 20 14:34:07.234: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7532-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 20 14:34:07.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 explain e2e-test-crd-publish-openapi-7532-crds.spec.bars'
  Apr 20 14:34:07.620: INFO: stderr: ""
  Apr 20 14:34:07.620: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7532-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/20/24 14:34:07.621
  Apr 20 14:34:07.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7489 explain e2e-test-crd-publish-openapi-7532-crds.spec.bars2'
  Apr 20 14:34:07.961: INFO: rc: 1
  Apr 20 14:34:09.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7489" for this suite. @ 04/20/24 14:34:09.862
â€¢ [10.745 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 04/20/24 14:34:09.881
  Apr 20 14:34:09.881: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:34:09.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:09.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:09.92
  STEP: Create a Replicaset @ 04/20/24 14:34:09.93
  STEP: Verify that the required pods have come up. @ 04/20/24 14:34:09.94
  Apr 20 14:34:09.947: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 20 14:34:14.956: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:34:14.956
  STEP: Getting /status @ 04/20/24 14:34:14.956
  Apr 20 14:34:14.967: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/20/24 14:34:14.967
  Apr 20 14:34:14.988: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/20/24 14:34:14.988
  Apr 20 14:34:14.994: INFO: Observed &ReplicaSet event: ADDED
  Apr 20 14:34:14.994: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:34:14.994: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:34:14.995: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:34:14.997: INFO: Found replicaset test-rs in namespace replicaset-2321 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 14:34:14.997: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/20/24 14:34:14.998
  Apr 20 14:34:14.998: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 14:34:15.013: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/20/24 14:34:15.013
  Apr 20 14:34:15.017: INFO: Observed &ReplicaSet event: ADDED
  Apr 20 14:34:15.018: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:34:15.018: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:34:15.018: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:34:15.018: INFO: Observed replicaset test-rs in namespace replicaset-2321 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:34:15.019: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:34:15.019: INFO: Found replicaset test-rs in namespace replicaset-2321 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 20 14:34:15.019: INFO: Replicaset test-rs has a patched status
  Apr 20 14:34:15.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2321" for this suite. @ 04/20/24 14:34:15.03
â€¢ [5.162 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/20/24 14:34:15.044
  Apr 20 14:34:15.044: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:34:15.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:15.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:15.085
  STEP: Creating a pod to test substitution in container's command @ 04/20/24 14:34:15.091
  STEP: Saw pod success @ 04/20/24 14:34:17.129
  Apr 20 14:34:17.137: INFO: Trying to get logs from node aat3reeth3ee-3 pod var-expansion-a03afb75-14f9-4f60-9b73-3d07cadeee57 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:17.154
  Apr 20 14:34:17.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2240" for this suite. @ 04/20/24 14:34:17.189
â€¢ [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/20/24 14:34:17.246
  Apr 20 14:34:17.246: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:34:17.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:17.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:17.294
  Apr 20 14:34:19.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-766" for this suite. @ 04/20/24 14:34:19.378
â€¢ [2.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/20/24 14:34:19.403
  Apr 20 14:34:19.403: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:34:19.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:19.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:19.454
  STEP: Create a pod @ 04/20/24 14:34:19.459
  STEP: patching /status @ 04/20/24 14:34:21.506
  Apr 20 14:34:21.529: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 20 14:34:21.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5836" for this suite. @ 04/20/24 14:34:21.542
â€¢ [2.165 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/20/24 14:34:21.569
  Apr 20 14:34:21.569: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:34:21.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:21.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:21.626
  STEP: Setting up data @ 04/20/24 14:34:21.631
  STEP: Creating pod pod-subpath-test-projected-2pd4 @ 04/20/24 14:34:21.653
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:34:21.653
  STEP: Saw pod success @ 04/20/24 14:34:45.793
  Apr 20 14:34:45.800: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-subpath-test-projected-2pd4 container test-container-subpath-projected-2pd4: <nil>
  STEP: delete the pod @ 04/20/24 14:34:45.813
  STEP: Deleting pod pod-subpath-test-projected-2pd4 @ 04/20/24 14:34:45.843
  Apr 20 14:34:45.844: INFO: Deleting pod "pod-subpath-test-projected-2pd4" in namespace "subpath-2383"
  Apr 20 14:34:45.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2383" for this suite. @ 04/20/24 14:34:45.858
â€¢ [24.303 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 04/20/24 14:34:45.873
  Apr 20 14:34:45.873: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:34:45.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:45.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:45.915
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:34:45.92
  STEP: Saw pod success @ 04/20/24 14:34:49.957
  Apr 20 14:34:49.964: INFO: Trying to get logs from node aat3reeth3ee-3 pod downward-api-0b001ea9-f108-4072-b638-de2a28789258 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:49.98
  Apr 20 14:34:50.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-334" for this suite. @ 04/20/24 14:34:50.025
â€¢ [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 04/20/24 14:34:50.046
  Apr 20 14:34:50.046: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:34:50.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:50.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:50.102
  STEP: Creating configMap with name projected-configmap-test-volume-map-f9e8286c-739f-4290-a791-8670db045cf2 @ 04/20/24 14:34:50.11
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:34:50.121
  STEP: Saw pod success @ 04/20/24 14:34:54.17
  Apr 20 14:34:54.180: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-configmaps-7ff63d93-2c0d-4140-9e53-e970edad45b2 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:54.197
  Apr 20 14:34:54.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3029" for this suite. @ 04/20/24 14:34:54.286
â€¢ [4.253 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/20/24 14:34:54.299
  Apr 20 14:34:54.299: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:34:54.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:54.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:54.34
  Apr 20 14:34:54.344: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 14:34:54.362: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 14:34:54.369: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-1 before test
  Apr 20 14:34:54.387: INFO: coredns-5dd5756b68-5kvvg from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:34:54.387: INFO: kube-addon-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 14:34:54.387: INFO: kube-apiserver-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container kube-apiserver ready: true, restart count 9
  Apr 20 14:34:54.387: INFO: kube-controller-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 14:34:54.387: INFO: kube-flannel-ds-v9v9p from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:34:54.387: INFO: kube-proxy-zz8qd from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:34:54.387: INFO: kube-scheduler-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container kube-scheduler ready: true, restart count 9
  Apr 20 14:34:54.387: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-pgdh2 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:54.387: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:54.387: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:34:54.387: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-2 before test
  Apr 20 14:34:54.405: INFO: kube-addon-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 14:34:54.405: INFO: kube-apiserver-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container kube-apiserver ready: true, restart count 7
  Apr 20 14:34:54.405: INFO: kube-controller-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 14:34:54.405: INFO: kube-flannel-ds-gwdf9 from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:34:54.405: INFO: kube-proxy-jzzrl from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:34:54.405: INFO: kube-scheduler-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container kube-scheduler ready: true, restart count 8
  Apr 20 14:34:54.405: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:51 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 14:34:54.405: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-hphn6 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:54.405: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:54.405: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:34:54.405: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-3 before test
  Apr 20 14:34:54.446: INFO: coredns-5dd5756b68-8fzt9 from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.446: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:34:54.446: INFO: kube-flannel-ds-t75bw from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.446: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:34:54.446: INFO: kube-proxy-b5t4l from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.446: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:34:54.446: INFO: busybox-readonly-fsa37e6425-d5bb-4338-b807-b9fdf5039e19 from kubelet-test-766 started at 2024-04-20 14:34:17 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:54.446: INFO: 	Container busybox-readonly-fsa37e6425-d5bb-4338-b807-b9fdf5039e19 ready: true, restart count 0
  Apr 20 14:34:54.446: INFO: sonobuoy-e2e-job-b7d62c1035884e0e from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:54.447: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 14:34:54.447: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:54.447: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-4ntmw from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:54.447: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:54.447: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 14:34:54.447
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 14:34:56.483
  STEP: Trying to apply a random label on the found node. @ 04/20/24 14:34:56.513
  STEP: verifying the node has the label kubernetes.io/e2e-057b5923-ef30-4f80-b4d5-294b27f0207a 95 @ 04/20/24 14:34:56.531
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/20/24 14:34:56.538
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.20 on the node which pod4 resides and expect not scheduled @ 04/20/24 14:34:58.566
  STEP: removing the label kubernetes.io/e2e-057b5923-ef30-4f80-b4d5-294b27f0207a off the node aat3reeth3ee-3 @ 04/20/24 14:39:58.584
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-057b5923-ef30-4f80-b4d5-294b27f0207a @ 04/20/24 14:39:58.612
  Apr 20 14:39:58.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7207" for this suite. @ 04/20/24 14:39:58.637
â€¢ [304.357 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/20/24 14:39:58.662
  Apr 20 14:39:58.662: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:39:58.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:58.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:58.718
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:39:58.738
  STEP: Waiting for all pods to be running @ 04/20/24 14:39:58.824
  Apr 20 14:39:58.868: INFO: running pods: 0 < 3
  Apr 20 14:40:00.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2161" for this suite. @ 04/20/24 14:40:00.898
â€¢ [2.247 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/20/24 14:40:00.91
  Apr 20 14:40:00.910: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:40:00.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:40:00.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:40:00.944
  STEP: Creating secret with name s-test-opt-del-eb87fda2-6162-4d07-9d47-554026d8328f @ 04/20/24 14:40:00.96
  STEP: Creating secret with name s-test-opt-upd-cd379eca-537e-4b36-8906-ffcc16a48539 @ 04/20/24 14:40:00.968
  STEP: Creating the pod @ 04/20/24 14:40:00.98
  STEP: Deleting secret s-test-opt-del-eb87fda2-6162-4d07-9d47-554026d8328f @ 04/20/24 14:40:03.082
  STEP: Updating secret s-test-opt-upd-cd379eca-537e-4b36-8906-ffcc16a48539 @ 04/20/24 14:40:03.094
  STEP: Creating secret with name s-test-opt-create-2b9052b7-cd00-41ab-ad3d-8e46b48c4860 @ 04/20/24 14:40:03.106
  STEP: waiting to observe update in volume @ 04/20/24 14:40:03.121
  Apr 20 14:41:11.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8071" for this suite. @ 04/20/24 14:41:11.817
â€¢ [70.921 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/20/24 14:41:11.831
  Apr 20 14:41:11.831: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 14:41:11.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:41:11.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:41:11.878
  STEP: Creating a suspended cronjob @ 04/20/24 14:41:11.882
  STEP: Ensuring no jobs are scheduled @ 04/20/24 14:41:11.9
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/20/24 14:46:11.921
  STEP: Removing cronjob @ 04/20/24 14:46:11.93
  Apr 20 14:46:11.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4381" for this suite. @ 04/20/24 14:46:11.96
â€¢ [300.142 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/20/24 14:46:11.975
  Apr 20 14:46:11.975: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:46:11.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:12.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:12.021
  STEP: Creating a pod to test override arguments @ 04/20/24 14:46:12.027
  STEP: Saw pod success @ 04/20/24 14:46:14.066
  Apr 20 14:46:14.074: INFO: Trying to get logs from node aat3reeth3ee-3 pod client-containers-940fbeda-cc1f-4cbb-80b5-7f6e39df11f4 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:46:14.113
  Apr 20 14:46:14.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8967" for this suite. @ 04/20/24 14:46:14.156
â€¢ [2.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 04/20/24 14:46:14.179
  Apr 20 14:46:14.179: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:46:14.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:14.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:14.26
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:46:14.266
  STEP: Saw pod success @ 04/20/24 14:46:18.317
  Apr 20 14:46:18.324: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-689ad5c4-e9e7-4910-afee-874d3c2bb809 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:46:18.337
  Apr 20 14:46:18.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4682" for this suite. @ 04/20/24 14:46:18.387
â€¢ [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/20/24 14:46:18.404
  Apr 20 14:46:18.404: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:46:18.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:18.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:18.448
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:46:18.454
  STEP: Saw pod success @ 04/20/24 14:46:22.497
  Apr 20 14:46:22.506: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-1f5a5026-8c99-486d-b8c1-3fc13cb276eb container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:46:22.524
  Apr 20 14:46:22.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4884" for this suite. @ 04/20/24 14:46:22.571
â€¢ [4.179 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 04/20/24 14:46:22.583
  Apr 20 14:46:22.583: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:46:22.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:22.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:22.628
  STEP: Creating configMap with name cm-test-opt-del-b6ee3481-5e45-4d40-937f-554a415ecf7b @ 04/20/24 14:46:22.642
  STEP: Creating configMap with name cm-test-opt-upd-7fd5de62-d7af-485a-a4e2-81a3abc503f2 @ 04/20/24 14:46:22.654
  STEP: Creating the pod @ 04/20/24 14:46:22.665
  STEP: Deleting configmap cm-test-opt-del-b6ee3481-5e45-4d40-937f-554a415ecf7b @ 04/20/24 14:46:24.747
  STEP: Updating configmap cm-test-opt-upd-7fd5de62-d7af-485a-a4e2-81a3abc503f2 @ 04/20/24 14:46:24.758
  STEP: Creating configMap with name cm-test-opt-create-6f3d69a9-e9e8-4caf-9ccb-82d17b11bc20 @ 04/20/24 14:46:24.768
  STEP: waiting to observe update in volume @ 04/20/24 14:46:24.776
  Apr 20 14:47:53.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2037" for this suite. @ 04/20/24 14:47:53.657
â€¢ [91.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/20/24 14:47:53.675
  Apr 20 14:47:53.675: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:47:53.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:53.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:53.717
  STEP: Setting up server cert @ 04/20/24 14:47:53.763
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:47:54.731
  STEP: Deploying the webhook pod @ 04/20/24 14:47:54.746
  STEP: Wait for the deployment to be ready @ 04/20/24 14:47:54.765
  Apr 20 14:47:54.783: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:47:56.801
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:47:56.819
  Apr 20 14:47:57.820: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 14:47:57.832
  STEP: create a pod @ 04/20/24 14:47:57.868
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/20/24 14:47:59.899
  Apr 20 14:47:59.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=webhook-5339 attach --namespace=webhook-5339 to-be-attached-pod -i -c=container1'
  Apr 20 14:48:00.112: INFO: rc: 1
  Apr 20 14:48:00.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5339" for this suite. @ 04/20/24 14:48:00.334
  STEP: Destroying namespace "webhook-markers-1593" for this suite. @ 04/20/24 14:48:00.349
â€¢ [6.703 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 04/20/24 14:48:00.379
  Apr 20 14:48:00.379: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 14:48:00.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:00.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:00.452
  STEP: creating an Endpoint @ 04/20/24 14:48:00.467
  STEP: waiting for available Endpoint @ 04/20/24 14:48:00.481
  STEP: listing all Endpoints @ 04/20/24 14:48:00.485
  STEP: updating the Endpoint @ 04/20/24 14:48:00.49
  STEP: fetching the Endpoint @ 04/20/24 14:48:00.502
  STEP: patching the Endpoint @ 04/20/24 14:48:00.51
  STEP: fetching the Endpoint @ 04/20/24 14:48:00.524
  STEP: deleting the Endpoint by Collection @ 04/20/24 14:48:00.531
  STEP: waiting for Endpoint deletion @ 04/20/24 14:48:00.546
  STEP: fetching the Endpoint @ 04/20/24 14:48:00.55
  Apr 20 14:48:00.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7870" for this suite. @ 04/20/24 14:48:00.563
â€¢ [0.194 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 04/20/24 14:48:00.574
  Apr 20 14:48:00.574: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:48:00.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:00.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:00.608
  STEP: Creating configMap configmap-9288/configmap-test-15c8eeea-c1ff-4538-be57-cd13c96bd492 @ 04/20/24 14:48:00.613
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:48:00.62
  STEP: Saw pod success @ 04/20/24 14:48:02.649
  Apr 20 14:48:02.656: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-b2375ce8-251b-4089-8421-c9f929585a60 container env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:48:02.68
  Apr 20 14:48:02.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9288" for this suite. @ 04/20/24 14:48:02.718
â€¢ [2.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 04/20/24 14:48:02.743
  Apr 20 14:48:02.743: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:48:02.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:02.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:02.779
  STEP: create the rc @ 04/20/24 14:48:02.791
  W0420 14:48:02.802526      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/20/24 14:48:08.891
  STEP: wait for the rc to be deleted @ 04/20/24 14:48:08.977
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/20/24 14:48:13.996
  STEP: Gathering metrics @ 04/20/24 14:48:44.032
  Apr 20 14:48:44.258: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 14:48:44.258: INFO: Deleting pod "simpletest.rc-26xqr" in namespace "gc-9313"
  Apr 20 14:48:44.284: INFO: Deleting pod "simpletest.rc-28wf4" in namespace "gc-9313"
  Apr 20 14:48:44.304: INFO: Deleting pod "simpletest.rc-2bfcx" in namespace "gc-9313"
  Apr 20 14:48:44.339: INFO: Deleting pod "simpletest.rc-2dd2h" in namespace "gc-9313"
  Apr 20 14:48:44.387: INFO: Deleting pod "simpletest.rc-2gmkx" in namespace "gc-9313"
  Apr 20 14:48:44.416: INFO: Deleting pod "simpletest.rc-2pbsh" in namespace "gc-9313"
  Apr 20 14:48:44.450: INFO: Deleting pod "simpletest.rc-2w5cl" in namespace "gc-9313"
  Apr 20 14:48:44.482: INFO: Deleting pod "simpletest.rc-2x72m" in namespace "gc-9313"
  Apr 20 14:48:44.537: INFO: Deleting pod "simpletest.rc-4jnhl" in namespace "gc-9313"
  Apr 20 14:48:44.614: INFO: Deleting pod "simpletest.rc-4mztv" in namespace "gc-9313"
  Apr 20 14:48:44.660: INFO: Deleting pod "simpletest.rc-4p7bp" in namespace "gc-9313"
  Apr 20 14:48:44.732: INFO: Deleting pod "simpletest.rc-4qk7v" in namespace "gc-9313"
  Apr 20 14:48:44.783: INFO: Deleting pod "simpletest.rc-4zws8" in namespace "gc-9313"
  Apr 20 14:48:44.844: INFO: Deleting pod "simpletest.rc-5csg7" in namespace "gc-9313"
  Apr 20 14:48:44.876: INFO: Deleting pod "simpletest.rc-5n9cr" in namespace "gc-9313"
  Apr 20 14:48:44.953: INFO: Deleting pod "simpletest.rc-5nhdb" in namespace "gc-9313"
  Apr 20 14:48:44.985: INFO: Deleting pod "simpletest.rc-67rql" in namespace "gc-9313"
  Apr 20 14:48:45.011: INFO: Deleting pod "simpletest.rc-6x275" in namespace "gc-9313"
  Apr 20 14:48:45.043: INFO: Deleting pod "simpletest.rc-75kw8" in namespace "gc-9313"
  Apr 20 14:48:45.067: INFO: Deleting pod "simpletest.rc-7mx56" in namespace "gc-9313"
  Apr 20 14:48:45.099: INFO: Deleting pod "simpletest.rc-7p4l6" in namespace "gc-9313"
  Apr 20 14:48:45.150: INFO: Deleting pod "simpletest.rc-9686j" in namespace "gc-9313"
  Apr 20 14:48:45.179: INFO: Deleting pod "simpletest.rc-9nsd7" in namespace "gc-9313"
  Apr 20 14:48:45.232: INFO: Deleting pod "simpletest.rc-9qfbf" in namespace "gc-9313"
  Apr 20 14:48:45.270: INFO: Deleting pod "simpletest.rc-b2mwv" in namespace "gc-9313"
  Apr 20 14:48:45.314: INFO: Deleting pod "simpletest.rc-bfrc5" in namespace "gc-9313"
  Apr 20 14:48:45.353: INFO: Deleting pod "simpletest.rc-bkkpx" in namespace "gc-9313"
  Apr 20 14:48:45.417: INFO: Deleting pod "simpletest.rc-bs9xl" in namespace "gc-9313"
  Apr 20 14:48:45.471: INFO: Deleting pod "simpletest.rc-cdp8n" in namespace "gc-9313"
  Apr 20 14:48:45.544: INFO: Deleting pod "simpletest.rc-clr5p" in namespace "gc-9313"
  Apr 20 14:48:45.630: INFO: Deleting pod "simpletest.rc-d2bbp" in namespace "gc-9313"
  Apr 20 14:48:45.745: INFO: Deleting pod "simpletest.rc-dczlg" in namespace "gc-9313"
  Apr 20 14:48:45.779: INFO: Deleting pod "simpletest.rc-dfk5l" in namespace "gc-9313"
  Apr 20 14:48:45.837: INFO: Deleting pod "simpletest.rc-dgssj" in namespace "gc-9313"
  Apr 20 14:48:45.866: INFO: Deleting pod "simpletest.rc-dp2w2" in namespace "gc-9313"
  Apr 20 14:48:45.913: INFO: Deleting pod "simpletest.rc-dw2kp" in namespace "gc-9313"
  Apr 20 14:48:45.956: INFO: Deleting pod "simpletest.rc-fbtpm" in namespace "gc-9313"
  Apr 20 14:48:45.985: INFO: Deleting pod "simpletest.rc-fc2vd" in namespace "gc-9313"
  Apr 20 14:48:46.035: INFO: Deleting pod "simpletest.rc-fwrhw" in namespace "gc-9313"
  Apr 20 14:48:46.070: INFO: Deleting pod "simpletest.rc-g7s4c" in namespace "gc-9313"
  Apr 20 14:48:46.105: INFO: Deleting pod "simpletest.rc-ghfp7" in namespace "gc-9313"
  Apr 20 14:48:46.156: INFO: Deleting pod "simpletest.rc-ghjtm" in namespace "gc-9313"
  Apr 20 14:48:46.187: INFO: Deleting pod "simpletest.rc-gmw2p" in namespace "gc-9313"
  Apr 20 14:48:46.224: INFO: Deleting pod "simpletest.rc-grc22" in namespace "gc-9313"
  Apr 20 14:48:46.262: INFO: Deleting pod "simpletest.rc-gww78" in namespace "gc-9313"
  Apr 20 14:48:46.329: INFO: Deleting pod "simpletest.rc-h8j2v" in namespace "gc-9313"
  Apr 20 14:48:46.384: INFO: Deleting pod "simpletest.rc-hchhv" in namespace "gc-9313"
  Apr 20 14:48:46.438: INFO: Deleting pod "simpletest.rc-hkfbv" in namespace "gc-9313"
  Apr 20 14:48:46.481: INFO: Deleting pod "simpletest.rc-hlk57" in namespace "gc-9313"
  Apr 20 14:48:46.512: INFO: Deleting pod "simpletest.rc-hqh5s" in namespace "gc-9313"
  Apr 20 14:48:46.614: INFO: Deleting pod "simpletest.rc-hxlx5" in namespace "gc-9313"
  Apr 20 14:48:46.665: INFO: Deleting pod "simpletest.rc-j2vtb" in namespace "gc-9313"
  Apr 20 14:48:46.697: INFO: Deleting pod "simpletest.rc-jmgqw" in namespace "gc-9313"
  Apr 20 14:48:46.748: INFO: Deleting pod "simpletest.rc-jz75s" in namespace "gc-9313"
  Apr 20 14:48:46.790: INFO: Deleting pod "simpletest.rc-k2ctn" in namespace "gc-9313"
  Apr 20 14:48:46.831: INFO: Deleting pod "simpletest.rc-kdgd7" in namespace "gc-9313"
  Apr 20 14:48:46.880: INFO: Deleting pod "simpletest.rc-kf86f" in namespace "gc-9313"
  Apr 20 14:48:46.928: INFO: Deleting pod "simpletest.rc-ksgz7" in namespace "gc-9313"
  Apr 20 14:48:46.962: INFO: Deleting pod "simpletest.rc-l2rwc" in namespace "gc-9313"
  Apr 20 14:48:47.007: INFO: Deleting pod "simpletest.rc-llkqv" in namespace "gc-9313"
  Apr 20 14:48:47.091: INFO: Deleting pod "simpletest.rc-lrg98" in namespace "gc-9313"
  Apr 20 14:48:47.138: INFO: Deleting pod "simpletest.rc-lwgxd" in namespace "gc-9313"
  Apr 20 14:48:47.199: INFO: Deleting pod "simpletest.rc-mx94b" in namespace "gc-9313"
  Apr 20 14:48:47.242: INFO: Deleting pod "simpletest.rc-mxglk" in namespace "gc-9313"
  Apr 20 14:48:47.279: INFO: Deleting pod "simpletest.rc-n22tb" in namespace "gc-9313"
  Apr 20 14:48:47.380: INFO: Deleting pod "simpletest.rc-n6vbd" in namespace "gc-9313"
  Apr 20 14:48:47.468: INFO: Deleting pod "simpletest.rc-n82s5" in namespace "gc-9313"
  Apr 20 14:48:47.543: INFO: Deleting pod "simpletest.rc-nlj4x" in namespace "gc-9313"
  Apr 20 14:48:47.622: INFO: Deleting pod "simpletest.rc-nxnwk" in namespace "gc-9313"
  Apr 20 14:48:47.696: INFO: Deleting pod "simpletest.rc-pb6gw" in namespace "gc-9313"
  Apr 20 14:48:47.736: INFO: Deleting pod "simpletest.rc-pl8nb" in namespace "gc-9313"
  Apr 20 14:48:47.780: INFO: Deleting pod "simpletest.rc-prgzb" in namespace "gc-9313"
  Apr 20 14:48:47.827: INFO: Deleting pod "simpletest.rc-q4jqj" in namespace "gc-9313"
  Apr 20 14:48:47.871: INFO: Deleting pod "simpletest.rc-r7fkv" in namespace "gc-9313"
  Apr 20 14:48:47.939: INFO: Deleting pod "simpletest.rc-rd4v2" in namespace "gc-9313"
  Apr 20 14:48:47.965: INFO: Deleting pod "simpletest.rc-rpg7w" in namespace "gc-9313"
  Apr 20 14:48:48.025: INFO: Deleting pod "simpletest.rc-rs9d2" in namespace "gc-9313"
  Apr 20 14:48:48.061: INFO: Deleting pod "simpletest.rc-shskp" in namespace "gc-9313"
  Apr 20 14:48:48.120: INFO: Deleting pod "simpletest.rc-slhpp" in namespace "gc-9313"
  Apr 20 14:48:48.185: INFO: Deleting pod "simpletest.rc-slq2b" in namespace "gc-9313"
  Apr 20 14:48:48.263: INFO: Deleting pod "simpletest.rc-stdp5" in namespace "gc-9313"
  Apr 20 14:48:48.329: INFO: Deleting pod "simpletest.rc-swhhl" in namespace "gc-9313"
  Apr 20 14:48:48.419: INFO: Deleting pod "simpletest.rc-swzcq" in namespace "gc-9313"
  Apr 20 14:48:48.501: INFO: Deleting pod "simpletest.rc-t58wg" in namespace "gc-9313"
  Apr 20 14:48:48.588: INFO: Deleting pod "simpletest.rc-v2c5z" in namespace "gc-9313"
  Apr 20 14:48:48.662: INFO: Deleting pod "simpletest.rc-v5qgp" in namespace "gc-9313"
  Apr 20 14:48:48.752: INFO: Deleting pod "simpletest.rc-vr8t7" in namespace "gc-9313"
  Apr 20 14:48:48.804: INFO: Deleting pod "simpletest.rc-vrwfh" in namespace "gc-9313"
  Apr 20 14:48:48.839: INFO: Deleting pod "simpletest.rc-vvvsf" in namespace "gc-9313"
  Apr 20 14:48:48.889: INFO: Deleting pod "simpletest.rc-wbtmj" in namespace "gc-9313"
  Apr 20 14:48:48.959: INFO: Deleting pod "simpletest.rc-wrt8b" in namespace "gc-9313"
  Apr 20 14:48:48.998: INFO: Deleting pod "simpletest.rc-wwhsw" in namespace "gc-9313"
  Apr 20 14:48:49.039: INFO: Deleting pod "simpletest.rc-x4mjq" in namespace "gc-9313"
  Apr 20 14:48:49.104: INFO: Deleting pod "simpletest.rc-z226h" in namespace "gc-9313"
  Apr 20 14:48:49.143: INFO: Deleting pod "simpletest.rc-z89q7" in namespace "gc-9313"
  Apr 20 14:48:49.220: INFO: Deleting pod "simpletest.rc-zgh45" in namespace "gc-9313"
  Apr 20 14:48:49.285: INFO: Deleting pod "simpletest.rc-zm97l" in namespace "gc-9313"
  Apr 20 14:48:49.350: INFO: Deleting pod "simpletest.rc-zp6hb" in namespace "gc-9313"
  Apr 20 14:48:49.428: INFO: Deleting pod "simpletest.rc-zr65v" in namespace "gc-9313"
  Apr 20 14:48:49.507: INFO: Deleting pod "simpletest.rc-zvzgk" in namespace "gc-9313"
  Apr 20 14:48:49.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9313" for this suite. @ 04/20/24 14:48:49.63
â€¢ [46.937 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/20/24 14:48:49.699
  Apr 20 14:48:49.699: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 14:48:49.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:49.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:49.964
  STEP: Creating 50 configmaps @ 04/20/24 14:48:49.979
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 14:48:51.14
  Apr 20 14:48:51.248: INFO: Pod name wrapped-volume-race-9d1fbd95-67de-4e13-9b22-f3a3cd87de57: Found 0 pods out of 5
  Apr 20 14:48:56.276: INFO: Pod name wrapped-volume-race-9d1fbd95-67de-4e13-9b22-f3a3cd87de57: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 14:48:56.276
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 14:48:56.351
  Apr 20 14:48:56.401: INFO: Pod name wrapped-volume-race-d94f01f5-db4b-4e2b-89fa-c270dc188cf6: Found 0 pods out of 5
  Apr 20 14:49:01.428: INFO: Pod name wrapped-volume-race-d94f01f5-db4b-4e2b-89fa-c270dc188cf6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 14:49:01.429
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 14:49:01.712
  Apr 20 14:49:01.828: INFO: Pod name wrapped-volume-race-142cfc9e-1bee-449f-9658-83ceeae606f9: Found 0 pods out of 5
  Apr 20 14:49:06.871: INFO: Pod name wrapped-volume-race-142cfc9e-1bee-449f-9658-83ceeae606f9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 14:49:06.871
  Apr 20 14:49:06.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-142cfc9e-1bee-449f-9658-83ceeae606f9 in namespace emptydir-wrapper-6252, will wait for the garbage collector to delete the pods @ 04/20/24 14:49:06.942
  Apr 20 14:49:07.026: INFO: Deleting ReplicationController wrapped-volume-race-142cfc9e-1bee-449f-9658-83ceeae606f9 took: 20.725435ms
  Apr 20 14:49:07.327: INFO: Terminating ReplicationController wrapped-volume-race-142cfc9e-1bee-449f-9658-83ceeae606f9 pods took: 301.352449ms
  STEP: deleting ReplicationController wrapped-volume-race-d94f01f5-db4b-4e2b-89fa-c270dc188cf6 in namespace emptydir-wrapper-6252, will wait for the garbage collector to delete the pods @ 04/20/24 14:49:09.329
  Apr 20 14:49:09.404: INFO: Deleting ReplicationController wrapped-volume-race-d94f01f5-db4b-4e2b-89fa-c270dc188cf6 took: 13.675091ms
  Apr 20 14:49:09.505: INFO: Terminating ReplicationController wrapped-volume-race-d94f01f5-db4b-4e2b-89fa-c270dc188cf6 pods took: 101.172749ms
  STEP: deleting ReplicationController wrapped-volume-race-9d1fbd95-67de-4e13-9b22-f3a3cd87de57 in namespace emptydir-wrapper-6252, will wait for the garbage collector to delete the pods @ 04/20/24 14:49:11.406
  Apr 20 14:49:11.484: INFO: Deleting ReplicationController wrapped-volume-race-9d1fbd95-67de-4e13-9b22-f3a3cd87de57 took: 19.018125ms
  Apr 20 14:49:11.584: INFO: Terminating ReplicationController wrapped-volume-race-9d1fbd95-67de-4e13-9b22-f3a3cd87de57 pods took: 100.684741ms
  STEP: Cleaning up the configMaps @ 04/20/24 14:49:13.586
  STEP: Destroying namespace "emptydir-wrapper-6252" for this suite. @ 04/20/24 14:49:14.123
â€¢ [24.436 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/20/24 14:49:14.136
  Apr 20 14:49:14.136: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:49:14.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:14.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:14.181
  Apr 20 14:49:14.185: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 14:49:14.202: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 14:49:14.208: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-1 before test
  Apr 20 14:49:14.254: INFO: coredns-5dd5756b68-5kvvg from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:49:14.254: INFO: kube-addon-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 14:49:14.254: INFO: kube-apiserver-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container kube-apiserver ready: true, restart count 9
  Apr 20 14:49:14.254: INFO: kube-controller-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 14:49:14.254: INFO: kube-flannel-ds-v9v9p from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:49:14.254: INFO: kube-proxy-zz8qd from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:49:14.254: INFO: kube-scheduler-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container kube-scheduler ready: true, restart count 9
  Apr 20 14:49:14.254: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-pgdh2 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:49:14.254: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:49:14.254: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:49:14.255: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-2 before test
  Apr 20 14:49:14.266: INFO: kube-addon-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 14:49:14.266: INFO: kube-apiserver-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container kube-apiserver ready: true, restart count 7
  Apr 20 14:49:14.266: INFO: kube-controller-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 14:49:14.266: INFO: kube-flannel-ds-gwdf9 from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:49:14.266: INFO: kube-proxy-jzzrl from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:49:14.266: INFO: kube-scheduler-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container kube-scheduler ready: true, restart count 8
  Apr 20 14:49:14.266: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:51 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 14:49:14.266: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-hphn6 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:49:14.266: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:49:14.266: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:49:14.266: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-3 before test
  Apr 20 14:49:14.280: INFO: coredns-5dd5756b68-8fzt9 from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.280: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:49:14.280: INFO: kube-flannel-ds-t75bw from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.280: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:49:14.280: INFO: kube-proxy-b5t4l from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 14:49:14.280: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:49:14.280: INFO: sonobuoy-e2e-job-b7d62c1035884e0e from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:49:14.280: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 14:49:14.280: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:49:14.280: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-4ntmw from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 14:49:14.280: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:49:14.280: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/20/24 14:49:14.281
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c80473f6be9eef], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 04/20/24 14:49:14.329
  Apr 20 14:49:15.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7416" for this suite. @ 04/20/24 14:49:15.338
â€¢ [1.213 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/20/24 14:49:15.352
  Apr 20 14:49:15.352: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename proxy @ 04/20/24 14:49:15.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:15.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:15.393
  STEP: starting an echo server on multiple ports @ 04/20/24 14:49:15.415
  STEP: creating replication controller proxy-service-dj6wl in namespace proxy-7898 @ 04/20/24 14:49:15.416
  I0420 14:49:15.434311      15 runners.go:197] Created replication controller with name: proxy-service-dj6wl, namespace: proxy-7898, replica count: 1
  I0420 14:49:16.488854      15 runners.go:197] proxy-service-dj6wl Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 14:49:17.489420      15 runners.go:197] proxy-service-dj6wl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0420 14:49:18.489635      15 runners.go:197] proxy-service-dj6wl Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:49:18.497: INFO: setup took 3.099680071s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/20/24 14:49:18.497
  Apr 20 14:49:18.514: INFO: (0) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 15.997035ms)
  Apr 20 14:49:18.515: INFO: (0) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 17.595644ms)
  Apr 20 14:49:18.516: INFO: (0) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 18.548463ms)
  Apr 20 14:49:18.516: INFO: (0) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 18.952008ms)
  Apr 20 14:49:18.517: INFO: (0) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 17.809401ms)
  Apr 20 14:49:18.517: INFO: (0) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 19.079073ms)
  Apr 20 14:49:18.517: INFO: (0) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 18.719046ms)
  Apr 20 14:49:18.530: INFO: (0) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 31.682521ms)
  Apr 20 14:49:18.536: INFO: (0) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 37.378058ms)
  Apr 20 14:49:18.536: INFO: (0) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 37.912645ms)
  Apr 20 14:49:18.539: INFO: (0) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 40.668441ms)
  Apr 20 14:49:18.539: INFO: (0) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 41.141569ms)
  Apr 20 14:49:18.540: INFO: (0) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 41.956574ms)
  Apr 20 14:49:18.541: INFO: (0) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 42.836157ms)
  Apr 20 14:49:18.541: INFO: (0) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 42.298491ms)
  Apr 20 14:49:18.548: INFO: (0) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 49.653427ms)
  Apr 20 14:49:18.559: INFO: (1) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 10.950928ms)
  Apr 20 14:49:18.561: INFO: (1) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 12.799474ms)
  Apr 20 14:49:18.561: INFO: (1) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 12.869134ms)
  Apr 20 14:49:18.561: INFO: (1) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 12.526508ms)
  Apr 20 14:49:18.563: INFO: (1) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 14.433931ms)
  Apr 20 14:49:18.565: INFO: (1) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 16.569741ms)
  Apr 20 14:49:18.565: INFO: (1) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 16.050238ms)
  Apr 20 14:49:18.567: INFO: (1) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 18.257739ms)
  Apr 20 14:49:18.567: INFO: (1) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 17.784035ms)
  Apr 20 14:49:18.568: INFO: (1) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 19.894484ms)
  Apr 20 14:49:18.568: INFO: (1) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 20.182434ms)
  Apr 20 14:49:18.570: INFO: (1) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 20.738169ms)
  Apr 20 14:49:18.572: INFO: (1) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 22.936917ms)
  Apr 20 14:49:18.572: INFO: (1) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 22.842422ms)
  Apr 20 14:49:18.572: INFO: (1) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 22.787ms)
  Apr 20 14:49:18.574: INFO: (1) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 24.744793ms)
  Apr 20 14:49:18.584: INFO: (2) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 9.858514ms)
  Apr 20 14:49:18.584: INFO: (2) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 10.093453ms)
  Apr 20 14:49:18.587: INFO: (2) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 12.885231ms)
  Apr 20 14:49:18.589: INFO: (2) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 14.341033ms)
  Apr 20 14:49:18.589: INFO: (2) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 14.447589ms)
  Apr 20 14:49:18.590: INFO: (2) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 16.278628ms)
  Apr 20 14:49:18.590: INFO: (2) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 15.707043ms)
  Apr 20 14:49:18.592: INFO: (2) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 16.991531ms)
  Apr 20 14:49:18.592: INFO: (2) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 17.536075ms)
  Apr 20 14:49:18.595: INFO: (2) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 20.485379ms)
  Apr 20 14:49:18.596: INFO: (2) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 20.733512ms)
  Apr 20 14:49:18.597: INFO: (2) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 22.357101ms)
  Apr 20 14:49:18.599: INFO: (2) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 24.357006ms)
  Apr 20 14:49:18.600: INFO: (2) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 24.770169ms)
  Apr 20 14:49:18.600: INFO: (2) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 24.895378ms)
  Apr 20 14:49:18.600: INFO: (2) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 25.628999ms)
  Apr 20 14:49:18.610: INFO: (3) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 9.868244ms)
  Apr 20 14:49:18.611: INFO: (3) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 10.861488ms)
  Apr 20 14:49:18.614: INFO: (3) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 13.563039ms)
  Apr 20 14:49:18.616: INFO: (3) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 15.722769ms)
  Apr 20 14:49:18.616: INFO: (3) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 15.234183ms)
  Apr 20 14:49:18.617: INFO: (3) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 15.676157ms)
  Apr 20 14:49:18.618: INFO: (3) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 16.907251ms)
  Apr 20 14:49:18.619: INFO: (3) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 18.744538ms)
  Apr 20 14:49:18.622: INFO: (3) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 20.922825ms)
  Apr 20 14:49:18.622: INFO: (3) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 20.987148ms)
  Apr 20 14:49:18.622: INFO: (3) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 22.02656ms)
  Apr 20 14:49:18.622: INFO: (3) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 20.851771ms)
  Apr 20 14:49:18.623: INFO: (3) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 21.898037ms)
  Apr 20 14:49:18.625: INFO: (3) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 23.629465ms)
  Apr 20 14:49:18.626: INFO: (3) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 25.109257ms)
  Apr 20 14:49:18.626: INFO: (3) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 24.490078ms)
  Apr 20 14:49:18.635: INFO: (4) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 9.296389ms)
  Apr 20 14:49:18.637: INFO: (4) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 10.652303ms)
  Apr 20 14:49:18.638: INFO: (4) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 11.207084ms)
  Apr 20 14:49:18.639: INFO: (4) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 12.467225ms)
  Apr 20 14:49:18.642: INFO: (4) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 15.937949ms)
  Apr 20 14:49:18.642: INFO: (4) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 15.424554ms)
  Apr 20 14:49:18.642: INFO: (4) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 16.172018ms)
  Apr 20 14:49:18.643: INFO: (4) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 16.833298ms)
  Apr 20 14:49:18.643: INFO: (4) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 16.319715ms)
  Apr 20 14:49:18.645: INFO: (4) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 18.976505ms)
  Apr 20 14:49:18.645: INFO: (4) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 18.62523ms)
  Apr 20 14:49:18.646: INFO: (4) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 19.348406ms)
  Apr 20 14:49:18.648: INFO: (4) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 21.892964ms)
  Apr 20 14:49:18.648: INFO: (4) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 21.47038ms)
  Apr 20 14:49:18.653: INFO: (4) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 26.257359ms)
  Apr 20 14:49:18.654: INFO: (4) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 27.649653ms)
  Apr 20 14:49:18.668: INFO: (5) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 13.156494ms)
  Apr 20 14:49:18.668: INFO: (5) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 13.056718ms)
  Apr 20 14:49:18.671: INFO: (5) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 16.005671ms)
  Apr 20 14:49:18.672: INFO: (5) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 16.553389ms)
  Apr 20 14:49:18.672: INFO: (5) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 17.941216ms)
  Apr 20 14:49:18.674: INFO: (5) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 18.82466ms)
  Apr 20 14:49:18.674: INFO: (5) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 19.104783ms)
  Apr 20 14:49:18.674: INFO: (5) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 19.526033ms)
  Apr 20 14:49:18.674: INFO: (5) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 18.734756ms)
  Apr 20 14:49:18.675: INFO: (5) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 19.401025ms)
  Apr 20 14:49:18.676: INFO: (5) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 21.4483ms)
  Apr 20 14:49:18.681: INFO: (5) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 26.506782ms)
  Apr 20 14:49:18.682: INFO: (5) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 26.945088ms)
  Apr 20 14:49:18.682: INFO: (5) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 27.308034ms)
  Apr 20 14:49:18.684: INFO: (5) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 28.338788ms)
  Apr 20 14:49:18.686: INFO: (5) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 30.715959ms)
  Apr 20 14:49:18.696: INFO: (6) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 10.061022ms)
  Apr 20 14:49:18.696: INFO: (6) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 9.7207ms)
  Apr 20 14:49:18.699: INFO: (6) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 12.115106ms)
  Apr 20 14:49:18.703: INFO: (6) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 16.256984ms)
  Apr 20 14:49:18.703: INFO: (6) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 15.750715ms)
  Apr 20 14:49:18.703: INFO: (6) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 16.221176ms)
  Apr 20 14:49:18.704: INFO: (6) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 17.696459ms)
  Apr 20 14:49:18.704: INFO: (6) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 17.570693ms)
  Apr 20 14:49:18.706: INFO: (6) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 20.207523ms)
  Apr 20 14:49:18.707: INFO: (6) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 20.266149ms)
  Apr 20 14:49:18.709: INFO: (6) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 22.648523ms)
  Apr 20 14:49:18.709: INFO: (6) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 22.913494ms)
  Apr 20 14:49:18.709: INFO: (6) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 22.101739ms)
  Apr 20 14:49:18.710: INFO: (6) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 23.339895ms)
  Apr 20 14:49:18.711: INFO: (6) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 24.416555ms)
  Apr 20 14:49:18.711: INFO: (6) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 24.402319ms)
  Apr 20 14:49:18.719: INFO: (7) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 7.490551ms)
  Apr 20 14:49:18.722: INFO: (7) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 10.603769ms)
  Apr 20 14:49:18.723: INFO: (7) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 11.539266ms)
  Apr 20 14:49:18.723: INFO: (7) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 11.40105ms)
  Apr 20 14:49:18.730: INFO: (7) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 17.886002ms)
  Apr 20 14:49:18.730: INFO: (7) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 19.054806ms)
  Apr 20 14:49:18.730: INFO: (7) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 19.051062ms)
  Apr 20 14:49:18.731: INFO: (7) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 19.529593ms)
  Apr 20 14:49:18.732: INFO: (7) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 19.694303ms)
  Apr 20 14:49:18.732: INFO: (7) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 19.600322ms)
  Apr 20 14:49:18.732: INFO: (7) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 20.156388ms)
  Apr 20 14:49:18.733: INFO: (7) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 20.164868ms)
  Apr 20 14:49:18.733: INFO: (7) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 20.896099ms)
  Apr 20 14:49:18.734: INFO: (7) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 21.927664ms)
  Apr 20 14:49:18.734: INFO: (7) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 22.428155ms)
  Apr 20 14:49:18.737: INFO: (7) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 25.013867ms)
  Apr 20 14:49:18.747: INFO: (8) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 9.78465ms)
  Apr 20 14:49:18.748: INFO: (8) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 10.3634ms)
  Apr 20 14:49:18.754: INFO: (8) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 16.734182ms)
  Apr 20 14:49:18.754: INFO: (8) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 16.522939ms)
  Apr 20 14:49:18.758: INFO: (8) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 20.109266ms)
  Apr 20 14:49:18.761: INFO: (8) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 23.972735ms)
  Apr 20 14:49:18.762: INFO: (8) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 25.425921ms)
  Apr 20 14:49:18.763: INFO: (8) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 26.574908ms)
  Apr 20 14:49:18.764: INFO: (8) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 26.027021ms)
  Apr 20 14:49:18.764: INFO: (8) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 26.523241ms)
  Apr 20 14:49:18.764: INFO: (8) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 27.642642ms)
  Apr 20 14:49:18.764: INFO: (8) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 27.370134ms)
  Apr 20 14:49:18.765: INFO: (8) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 27.115244ms)
  Apr 20 14:49:18.765: INFO: (8) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 27.297243ms)
  Apr 20 14:49:18.766: INFO: (8) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 28.353146ms)
  Apr 20 14:49:18.766: INFO: (8) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 28.901822ms)
  Apr 20 14:49:18.777: INFO: (9) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 10.689493ms)
  Apr 20 14:49:18.777: INFO: (9) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 10.624526ms)
  Apr 20 14:49:18.778: INFO: (9) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 12.117802ms)
  Apr 20 14:49:18.779: INFO: (9) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 12.319204ms)
  Apr 20 14:49:18.779: INFO: (9) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 12.211023ms)
  Apr 20 14:49:18.780: INFO: (9) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 13.556202ms)
  Apr 20 14:49:18.780: INFO: (9) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 13.888153ms)
  Apr 20 14:49:18.782: INFO: (9) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 15.372285ms)
  Apr 20 14:49:18.782: INFO: (9) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 15.250053ms)
  Apr 20 14:49:18.786: INFO: (9) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 19.215786ms)
  Apr 20 14:49:18.786: INFO: (9) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 19.317304ms)
  Apr 20 14:49:18.786: INFO: (9) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 19.386655ms)
  Apr 20 14:49:18.787: INFO: (9) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 20.102568ms)
  Apr 20 14:49:18.789: INFO: (9) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 22.372686ms)
  Apr 20 14:49:18.789: INFO: (9) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 22.59514ms)
  Apr 20 14:49:18.789: INFO: (9) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 22.414291ms)
  Apr 20 14:49:18.798: INFO: (10) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 8.388523ms)
  Apr 20 14:49:18.798: INFO: (10) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 8.635533ms)
  Apr 20 14:49:18.801: INFO: (10) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 10.086002ms)
  Apr 20 14:49:18.803: INFO: (10) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 12.739161ms)
  Apr 20 14:49:18.805: INFO: (10) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 14.676011ms)
  Apr 20 14:49:18.805: INFO: (10) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 15.135972ms)
  Apr 20 14:49:18.806: INFO: (10) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 15.131908ms)
  Apr 20 14:49:18.806: INFO: (10) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 14.805568ms)
  Apr 20 14:49:18.807: INFO: (10) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 16.367976ms)
  Apr 20 14:49:18.807: INFO: (10) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 17.630526ms)
  Apr 20 14:49:18.809: INFO: (10) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 19.167455ms)
  Apr 20 14:49:18.809: INFO: (10) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 18.564735ms)
  Apr 20 14:49:18.812: INFO: (10) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 21.73855ms)
  Apr 20 14:49:18.812: INFO: (10) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 21.692146ms)
  Apr 20 14:49:18.812: INFO: (10) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 22.256392ms)
  Apr 20 14:49:18.813: INFO: (10) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 22.631945ms)
  Apr 20 14:49:18.822: INFO: (11) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 9.105237ms)
  Apr 20 14:49:18.822: INFO: (11) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 9.400926ms)
  Apr 20 14:49:18.833: INFO: (11) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 19.572314ms)
  Apr 20 14:49:18.833: INFO: (11) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 19.278192ms)
  Apr 20 14:49:18.833: INFO: (11) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 19.6795ms)
  Apr 20 14:49:18.833: INFO: (11) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 19.483902ms)
  Apr 20 14:49:18.833: INFO: (11) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 20.368118ms)
  Apr 20 14:49:18.833: INFO: (11) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 19.483526ms)
  Apr 20 14:49:18.834: INFO: (11) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 21.612818ms)
  Apr 20 14:49:18.837: INFO: (11) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 23.42839ms)
  Apr 20 14:49:18.837: INFO: (11) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 23.830741ms)
  Apr 20 14:49:18.837: INFO: (11) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 23.533726ms)
  Apr 20 14:49:18.839: INFO: (11) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 25.693678ms)
  Apr 20 14:49:18.839: INFO: (11) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 26.763668ms)
  Apr 20 14:49:18.840: INFO: (11) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 26.343339ms)
  Apr 20 14:49:18.843: INFO: (11) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 29.308938ms)
  Apr 20 14:49:18.855: INFO: (12) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 12.170284ms)
  Apr 20 14:49:18.855: INFO: (12) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 10.880037ms)
  Apr 20 14:49:18.855: INFO: (12) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 12.643065ms)
  Apr 20 14:49:18.857: INFO: (12) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 13.08169ms)
  Apr 20 14:49:18.859: INFO: (12) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 15.563006ms)
  Apr 20 14:49:18.860: INFO: (12) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 16.376433ms)
  Apr 20 14:49:18.862: INFO: (12) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 18.033084ms)
  Apr 20 14:49:18.862: INFO: (12) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 18.574398ms)
  Apr 20 14:49:18.864: INFO: (12) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 20.640054ms)
  Apr 20 14:49:18.864: INFO: (12) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 20.611355ms)
  Apr 20 14:49:18.864: INFO: (12) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 21.26176ms)
  Apr 20 14:49:18.867: INFO: (12) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 24.320521ms)
  Apr 20 14:49:18.867: INFO: (12) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 23.617596ms)
  Apr 20 14:49:18.868: INFO: (12) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 24.136481ms)
  Apr 20 14:49:18.870: INFO: (12) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 26.850211ms)
  Apr 20 14:49:18.872: INFO: (12) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 28.009872ms)
  Apr 20 14:49:18.883: INFO: (13) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 11.033461ms)
  Apr 20 14:49:18.884: INFO: (13) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 10.390432ms)
  Apr 20 14:49:18.884: INFO: (13) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 9.965393ms)
  Apr 20 14:49:18.887: INFO: (13) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 13.611142ms)
  Apr 20 14:49:18.889: INFO: (13) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 14.882738ms)
  Apr 20 14:49:18.890: INFO: (13) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 16.524518ms)
  Apr 20 14:49:18.891: INFO: (13) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 18.257693ms)
  Apr 20 14:49:18.891: INFO: (13) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 18.672625ms)
  Apr 20 14:49:18.891: INFO: (13) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 17.718349ms)
  Apr 20 14:49:18.891: INFO: (13) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 17.461727ms)
  Apr 20 14:49:18.892: INFO: (13) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 17.544504ms)
  Apr 20 14:49:18.893: INFO: (13) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 18.565497ms)
  Apr 20 14:49:18.894: INFO: (13) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 21.134822ms)
  Apr 20 14:49:18.894: INFO: (13) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 20.931213ms)
  Apr 20 14:49:18.894: INFO: (13) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 21.877423ms)
  Apr 20 14:49:18.895: INFO: (13) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 20.316847ms)
  Apr 20 14:49:18.909: INFO: (14) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 13.909169ms)
  Apr 20 14:49:18.910: INFO: (14) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 13.613539ms)
  Apr 20 14:49:18.909: INFO: (14) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 13.535754ms)
  Apr 20 14:49:18.910: INFO: (14) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 14.738452ms)
  Apr 20 14:49:18.914: INFO: (14) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 18.185856ms)
  Apr 20 14:49:18.916: INFO: (14) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 20.523077ms)
  Apr 20 14:49:18.916: INFO: (14) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 19.787725ms)
  Apr 20 14:49:18.916: INFO: (14) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 19.286147ms)
  Apr 20 14:49:18.916: INFO: (14) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 19.164226ms)
  Apr 20 14:49:18.917: INFO: (14) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 21.33993ms)
  Apr 20 14:49:18.918: INFO: (14) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 22.483995ms)
  Apr 20 14:49:18.918: INFO: (14) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 21.897225ms)
  Apr 20 14:49:18.918: INFO: (14) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 23.149517ms)
  Apr 20 14:49:18.919: INFO: (14) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 23.048717ms)
  Apr 20 14:49:18.919: INFO: (14) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 24.318378ms)
  Apr 20 14:49:18.919: INFO: (14) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 23.160764ms)
  Apr 20 14:49:18.937: INFO: (15) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 17.092546ms)
  Apr 20 14:49:18.938: INFO: (15) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 17.602209ms)
  Apr 20 14:49:18.938: INFO: (15) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 17.862612ms)
  Apr 20 14:49:18.938: INFO: (15) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 18.075899ms)
  Apr 20 14:49:18.938: INFO: (15) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 17.551523ms)
  Apr 20 14:49:18.941: INFO: (15) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 20.17944ms)
  Apr 20 14:49:18.943: INFO: (15) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 21.354199ms)
  Apr 20 14:49:18.943: INFO: (15) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 22.808221ms)
  Apr 20 14:49:18.943: INFO: (15) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 21.625896ms)
  Apr 20 14:49:18.943: INFO: (15) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 22.432277ms)
  Apr 20 14:49:18.945: INFO: (15) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 24.845231ms)
  Apr 20 14:49:18.945: INFO: (15) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 23.639381ms)
  Apr 20 14:49:18.946: INFO: (15) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 25.802989ms)
  Apr 20 14:49:18.947: INFO: (15) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 26.038229ms)
  Apr 20 14:49:18.947: INFO: (15) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 25.891726ms)
  Apr 20 14:49:18.947: INFO: (15) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 26.248664ms)
  Apr 20 14:49:18.960: INFO: (16) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 12.092491ms)
  Apr 20 14:49:18.960: INFO: (16) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 12.266889ms)
  Apr 20 14:49:18.961: INFO: (16) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 13.935362ms)
  Apr 20 14:49:18.962: INFO: (16) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 14.303978ms)
  Apr 20 14:49:18.964: INFO: (16) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 16.703495ms)
  Apr 20 14:49:18.964: INFO: (16) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 15.727659ms)
  Apr 20 14:49:18.964: INFO: (16) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 15.626989ms)
  Apr 20 14:49:18.964: INFO: (16) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 16.162893ms)
  Apr 20 14:49:18.965: INFO: (16) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 17.054866ms)
  Apr 20 14:49:18.966: INFO: (16) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 17.810485ms)
  Apr 20 14:49:18.968: INFO: (16) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 19.026355ms)
  Apr 20 14:49:18.968: INFO: (16) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 20.693958ms)
  Apr 20 14:49:18.970: INFO: (16) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 21.612659ms)
  Apr 20 14:49:18.971: INFO: (16) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 22.570557ms)
  Apr 20 14:49:18.972: INFO: (16) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 22.899946ms)
  Apr 20 14:49:18.972: INFO: (16) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 24.596051ms)
  Apr 20 14:49:18.997: INFO: (17) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 24.023928ms)
  Apr 20 14:49:18.999: INFO: (17) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 26.806518ms)
  Apr 20 14:49:19.003: INFO: (17) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 30.059979ms)
  Apr 20 14:49:19.005: INFO: (17) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 30.792872ms)
  Apr 20 14:49:19.008: INFO: (17) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 35.278609ms)
  Apr 20 14:49:19.008: INFO: (17) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 35.148752ms)
  Apr 20 14:49:19.008: INFO: (17) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 35.110905ms)
  Apr 20 14:49:19.008: INFO: (17) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 34.995107ms)
  Apr 20 14:49:19.009: INFO: (17) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 35.143858ms)
  Apr 20 14:49:19.009: INFO: (17) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 35.836134ms)
  Apr 20 14:49:19.009: INFO: (17) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 35.772351ms)
  Apr 20 14:49:19.009: INFO: (17) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 36.724542ms)
  Apr 20 14:49:19.009: INFO: (17) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 36.251478ms)
  Apr 20 14:49:19.009: INFO: (17) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 35.469051ms)
  Apr 20 14:49:19.010: INFO: (17) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 36.531716ms)
  Apr 20 14:49:19.011: INFO: (17) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 37.062456ms)
  Apr 20 14:49:19.018: INFO: (18) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 6.977955ms)
  Apr 20 14:49:19.026: INFO: (18) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 14.694531ms)
  Apr 20 14:49:19.027: INFO: (18) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 16.244773ms)
  Apr 20 14:49:19.032: INFO: (18) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 20.204875ms)
  Apr 20 14:49:19.032: INFO: (18) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 20.310206ms)
  Apr 20 14:49:19.032: INFO: (18) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 21.092006ms)
  Apr 20 14:49:19.033: INFO: (18) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 20.967333ms)
  Apr 20 14:49:19.033: INFO: (18) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 21.382256ms)
  Apr 20 14:49:19.033: INFO: (18) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 20.703982ms)
  Apr 20 14:49:19.035: INFO: (18) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 22.122211ms)
  Apr 20 14:49:19.037: INFO: (18) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 25.425584ms)
  Apr 20 14:49:19.038: INFO: (18) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 24.392807ms)
  Apr 20 14:49:19.038: INFO: (18) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 25.756422ms)
  Apr 20 14:49:19.038: INFO: (18) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 26.678992ms)
  Apr 20 14:49:19.038: INFO: (18) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 25.774698ms)
  Apr 20 14:49:19.039: INFO: (18) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 25.983524ms)
  Apr 20 14:49:19.056: INFO: (19) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:460/proxy/: tls baz (200; 16.892691ms)
  Apr 20 14:49:19.060: INFO: (19) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 20.607557ms)
  Apr 20 14:49:19.060: INFO: (19) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">... (200; 20.325927ms)
  Apr 20 14:49:19.062: INFO: (19) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:1080/proxy/rewriteme">test<... (200; 21.096953ms)
  Apr 20 14:49:19.062: INFO: (19) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 21.634015ms)
  Apr 20 14:49:19.064: INFO: (19) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname1/proxy/: foo (200; 24.564444ms)
  Apr 20 14:49:19.064: INFO: (19) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname2/proxy/: bar (200; 24.216091ms)
  Apr 20 14:49:19.066: INFO: (19) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:160/proxy/: foo (200; 26.389417ms)
  Apr 20 14:49:19.067: INFO: (19) /api/v1/namespaces/proxy-7898/services/proxy-service-dj6wl:portname2/proxy/: bar (200; 27.991057ms)
  Apr 20 14:49:19.068: INFO: (19) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:462/proxy/: tls qux (200; 26.767614ms)
  Apr 20 14:49:19.070: INFO: (19) /api/v1/namespaces/proxy-7898/pods/http:proxy-service-dj6wl-vfljj:162/proxy/: bar (200; 29.428656ms)
  Apr 20 14:49:19.073: INFO: (19) /api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/https:proxy-service-dj6wl-vfljj:443/proxy/tlsrewritem... (200; 32.00825ms)
  Apr 20 14:49:19.075: INFO: (19) /api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/: <a href="/api/v1/namespaces/proxy-7898/pods/proxy-service-dj6wl-vfljj/proxy/rewriteme">test</a> (200; 34.280552ms)
  Apr 20 14:49:19.078: INFO: (19) /api/v1/namespaces/proxy-7898/services/http:proxy-service-dj6wl:portname1/proxy/: foo (200; 36.827914ms)
  Apr 20 14:49:19.078: INFO: (19) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname1/proxy/: tls baz (200; 37.3406ms)
  Apr 20 14:49:19.078: INFO: (19) /api/v1/namespaces/proxy-7898/services/https:proxy-service-dj6wl:tlsportname2/proxy/: tls qux (200; 37.839985ms)
  Apr 20 14:49:19.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-dj6wl in namespace proxy-7898, will wait for the garbage collector to delete the pods @ 04/20/24 14:49:19.085
  Apr 20 14:49:19.157: INFO: Deleting ReplicationController proxy-service-dj6wl took: 14.948346ms
  Apr 20 14:49:19.258: INFO: Terminating ReplicationController proxy-service-dj6wl pods took: 100.293775ms
  STEP: Destroying namespace "proxy-7898" for this suite. @ 04/20/24 14:49:20.96
â€¢ [5.622 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/20/24 14:49:20.979
  Apr 20 14:49:20.979: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:49:20.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:21.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:21.023
  Apr 20 14:49:21.029: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  W0420 14:49:21.032911      15 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000691af0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0420 14:49:23.826637      15 warnings.go:70] unknown field "alpha"
  W0420 14:49:23.826762      15 warnings.go:70] unknown field "beta"
  W0420 14:49:23.826809      15 warnings.go:70] unknown field "delta"
  W0420 14:49:23.826830      15 warnings.go:70] unknown field "epsilon"
  W0420 14:49:23.826848      15 warnings.go:70] unknown field "gamma"
  Apr 20 14:49:24.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1256" for this suite. @ 04/20/24 14:49:24.466
â€¢ [3.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 04/20/24 14:49:24.493
  Apr 20 14:49:24.493: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename security-context @ 04/20/24 14:49:24.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:24.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:24.541
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 14:49:24.549
  STEP: Saw pod success @ 04/20/24 14:49:28.59
  Apr 20 14:49:28.598: INFO: Trying to get logs from node aat3reeth3ee-3 pod security-context-f6fd509d-5e47-478e-829a-d1593ff0133f container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:49:28.614
  Apr 20 14:49:28.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8448" for this suite. @ 04/20/24 14:49:28.65
â€¢ [4.172 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 04/20/24 14:49:28.669
  Apr 20 14:49:28.669: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 14:49:28.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:28.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:28.713
  Apr 20 14:49:28.719: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:49:29.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2913" for this suite. @ 04/20/24 14:49:29.318
â€¢ [0.667 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/20/24 14:49:29.338
  Apr 20 14:49:29.339: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 14:49:29.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:29.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:29.382
  STEP: create the container @ 04/20/24 14:49:29.387
  W0420 14:49:29.404424      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 14:49:29.404
  STEP: get the container status @ 04/20/24 14:49:32.436
  STEP: the container should be terminated @ 04/20/24 14:49:32.443
  STEP: the termination message should be set @ 04/20/24 14:49:32.443
  Apr 20 14:49:32.443: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 14:49:32.443
  Apr 20 14:49:32.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6916" for this suite. @ 04/20/24 14:49:32.517
â€¢ [3.199 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 04/20/24 14:49:32.541
  Apr 20 14:49:32.541: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:49:32.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:32.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:32.593
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 14:49:32.598
  Apr 20 14:49:32.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-9823 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 20 14:49:32.813: INFO: stderr: ""
  Apr 20 14:49:32.813: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/20/24 14:49:32.814
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 14:49:37.865
  Apr 20 14:49:37.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-9823 get pod e2e-test-httpd-pod -o json'
  Apr 20 14:49:38.044: INFO: stderr: ""
  Apr 20 14:49:38.044: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-20T14:49:32Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9823\",\n        \"resourceVersion\": \"42505\",\n        \"uid\": \"79ed64b8-908d-4dc6-9f68-2caf76ada7d2\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-srfk7\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"aat3reeth3ee-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-srfk7\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:49:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:49:33Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:49:33Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:49:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://f357f0970faccb8752bf93aeb3beb01a8e79128975fc25c5de26b1f7dbedfa0d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-20T14:49:33Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.20\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.192\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.192\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-20T14:49:32Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/20/24 14:49:38.044
  Apr 20 14:49:38.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-9823 replace -f -'
  Apr 20 14:49:39.086: INFO: stderr: ""
  Apr 20 14:49:39.086: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 04/20/24 14:49:39.086
  Apr 20 14:49:39.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-9823 delete pods e2e-test-httpd-pod'
  Apr 20 14:49:41.039: INFO: stderr: ""
  Apr 20 14:49:41.039: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 14:49:41.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9823" for this suite. @ 04/20/24 14:49:41.048
â€¢ [8.520 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 04/20/24 14:49:41.061
  Apr 20 14:49:41.061: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:49:41.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:41.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:41.101
  STEP: Creating configMap with name configmap-test-volume-map-6a503adf-6846-4843-bac0-28a3747c48dc @ 04/20/24 14:49:41.107
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:49:41.116
  STEP: Saw pod success @ 04/20/24 14:49:43.144
  Apr 20 14:49:43.151: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-86dce4d8-6ccd-48b2-8cf5-00343f4936c5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:49:43.166
  Apr 20 14:49:43.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4661" for this suite. @ 04/20/24 14:49:43.206
â€¢ [2.156 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/20/24 14:49:43.22
  Apr 20 14:49:43.220: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:49:43.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:43.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:43.26
  STEP: Setting up server cert @ 04/20/24 14:49:43.303
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:49:44.063
  STEP: Deploying the webhook pod @ 04/20/24 14:49:44.078
  STEP: Wait for the deployment to be ready @ 04/20/24 14:49:44.099
  Apr 20 14:49:44.144: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:49:46.177
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:49:46.206
  Apr 20 14:49:47.206: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/20/24 14:49:47.226
  STEP: create a namespace for the webhook @ 04/20/24 14:49:47.287
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/20/24 14:49:47.344
  Apr 20 14:49:47.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9519" for this suite. @ 04/20/24 14:49:47.584
  STEP: Destroying namespace "webhook-markers-3151" for this suite. @ 04/20/24 14:49:47.613
  STEP: Destroying namespace "fail-closed-namespace-2916" for this suite. @ 04/20/24 14:49:47.639
â€¢ [4.437 seconds]
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 04/20/24 14:49:47.657
  Apr 20 14:49:47.657: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 14:49:47.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:47.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:47.746
  Apr 20 14:49:47.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3336" for this suite. @ 04/20/24 14:49:47.818
â€¢ [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 04/20/24 14:49:47.835
  Apr 20 14:49:47.835: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:49:47.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:47.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:47.871
  STEP: creating all guestbook components @ 04/20/24 14:49:47.876
  Apr 20 14:49:47.877: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 20 14:49:47.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 create -f -'
  Apr 20 14:49:48.483: INFO: stderr: ""
  Apr 20 14:49:48.484: INFO: stdout: "service/agnhost-replica created\n"
  Apr 20 14:49:48.484: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 20 14:49:48.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 create -f -'
  Apr 20 14:49:49.041: INFO: stderr: ""
  Apr 20 14:49:49.042: INFO: stdout: "service/agnhost-primary created\n"
  Apr 20 14:49:49.042: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 20 14:49:49.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 create -f -'
  Apr 20 14:49:49.629: INFO: stderr: ""
  Apr 20 14:49:49.629: INFO: stdout: "service/frontend created\n"
  Apr 20 14:49:49.629: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 20 14:49:49.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 create -f -'
  Apr 20 14:49:50.075: INFO: stderr: ""
  Apr 20 14:49:50.075: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 20 14:49:50.075: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 20 14:49:50.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 create -f -'
  Apr 20 14:49:50.647: INFO: stderr: ""
  Apr 20 14:49:50.647: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 20 14:49:50.647: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 20 14:49:50.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 create -f -'
  Apr 20 14:49:51.326: INFO: stderr: ""
  Apr 20 14:49:51.326: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/20/24 14:49:51.326
  Apr 20 14:49:51.326: INFO: Waiting for all frontend pods to be Running.
  Apr 20 14:49:56.379: INFO: Waiting for frontend to serve content.
  Apr 20 14:49:56.411: INFO: Trying to add a new entry to the guestbook.
  Apr 20 14:49:56.459: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/20/24 14:49:56.479
  Apr 20 14:49:56.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 delete --grace-period=0 --force -f -'
  Apr 20 14:49:56.699: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:49:56.699: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:49:56.7
  Apr 20 14:49:56.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 delete --grace-period=0 --force -f -'
  Apr 20 14:49:56.892: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:49:56.892: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:49:56.892
  Apr 20 14:49:56.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 delete --grace-period=0 --force -f -'
  Apr 20 14:49:57.105: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:49:57.105: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:49:57.105
  Apr 20 14:49:57.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 delete --grace-period=0 --force -f -'
  Apr 20 14:49:57.276: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:49:57.276: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:49:57.276
  Apr 20 14:49:57.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 delete --grace-period=0 --force -f -'
  Apr 20 14:49:57.578: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:49:57.578: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:49:57.578
  Apr 20 14:49:57.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7403 delete --grace-period=0 --force -f -'
  Apr 20 14:49:57.802: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:49:57.802: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 20 14:49:57.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7403" for this suite. @ 04/20/24 14:49:57.814
â€¢ [9.996 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/20/24 14:49:57.838
  Apr 20 14:49:57.838: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 14:49:57.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:57.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:57.93
  STEP: creating a target pod @ 04/20/24 14:49:57.938
  STEP: adding an ephemeral container @ 04/20/24 14:50:00.017
  STEP: checking pod container endpoints @ 04/20/24 14:50:02.068
  Apr 20 14:50:02.068: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2406 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:50:02.068: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:50:02.069: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:50:02.070: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-2406/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 20 14:50:02.212: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/20/24 14:50:02.251
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/20/24 14:50:02.261
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/20/24 14:50:02.294
  Apr 20 14:50:02.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2406" for this suite. @ 04/20/24 14:50:02.331
â€¢ [4.513 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 04/20/24 14:50:02.353
  Apr 20 14:50:02.353: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:50:02.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:02.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:02.402
  STEP: Starting the proxy @ 04/20/24 14:50:02.408
  Apr 20 14:50:02.411: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8997 proxy --unix-socket=/tmp/kubectl-proxy-unix1453646743/test'
  STEP: retrieving proxy /api/ output @ 04/20/24 14:50:02.559
  Apr 20 14:50:02.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8997" for this suite. @ 04/20/24 14:50:02.572
â€¢ [0.231 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/20/24 14:50:02.585
  Apr 20 14:50:02.585: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:50:02.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:02.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:02.666
  STEP: creating pod @ 04/20/24 14:50:02.674
  Apr 20 14:50:04.728: INFO: Pod pod-hostip-69967e2c-51fd-4d1a-89f7-e8719f5e7603 has hostIP: 192.168.121.20
  Apr 20 14:50:04.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5212" for this suite. @ 04/20/24 14:50:04.739
â€¢ [2.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 04/20/24 14:50:04.757
  Apr 20 14:50:04.757: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:50:04.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:04.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:04.796
  Apr 20 14:50:04.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6898 create -f -'
  Apr 20 14:50:05.315: INFO: stderr: ""
  Apr 20 14:50:05.315: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 20 14:50:05.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6898 create -f -'
  Apr 20 14:50:05.896: INFO: stderr: ""
  Apr 20 14:50:05.896: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 14:50:05.896
  Apr 20 14:50:06.907: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:50:06.907: INFO: Found 1 / 1
  Apr 20 14:50:06.908: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 20 14:50:06.918: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:50:06.918: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 14:50:06.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6898 describe pod agnhost-primary-z7sm4'
  Apr 20 14:50:07.160: INFO: stderr: ""
  Apr 20 14:50:07.160: INFO: stdout: "Name:             agnhost-primary-z7sm4\nNamespace:        kubectl-6898\nPriority:         0\nService Account:  default\nNode:             aat3reeth3ee-3/192.168.121.20\nStart Time:       Sat, 20 Apr 2024 14:50:05 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.200\nIPs:\n  IP:           10.233.66.200\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://f354d81c8b02a1009218f121e93049dbdd78b06af0cde0aea4c884d01d70eef6\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 20 Apr 2024 14:50:06 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xdh92 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-xdh92:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6898/agnhost-primary-z7sm4 to aat3reeth3ee-3\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Apr 20 14:50:07.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6898 describe rc agnhost-primary'
  Apr 20 14:50:07.379: INFO: stderr: ""
  Apr 20 14:50:07.379: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6898\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-z7sm4\n"
  Apr 20 14:50:07.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6898 describe service agnhost-primary'
  Apr 20 14:50:07.582: INFO: stderr: ""
  Apr 20 14:50:07.582: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-6898\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.24.99\nIPs:               10.233.24.99\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.200:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 20 14:50:07.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6898 describe node aat3reeth3ee-1'
  Apr 20 14:50:08.079: INFO: stderr: ""
  Apr 20 14:50:08.079: INFO: stdout: "Name:               aat3reeth3ee-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=aat3reeth3ee-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"6a:1d:a6:f0:86:d7\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.198\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 20 Apr 2024 10:27:30 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  aat3reeth3ee-1\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 20 Apr 2024 14:50:07 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 20 Apr 2024 14:11:39 +0000   Sat, 20 Apr 2024 14:11:39 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Sat, 20 Apr 2024 14:49:07 +0000   Sat, 20 Apr 2024 13:54:25 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 20 Apr 2024 14:49:07 +0000   Sat, 20 Apr 2024 13:54:25 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 20 Apr 2024 14:49:07 +0000   Sat, 20 Apr 2024 13:54:25 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 20 Apr 2024 14:49:07 +0000   Sat, 20 Apr 2024 14:05:30 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.198\n  Hostname:    aat3reeth3ee-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8132676Ki\n  pods:               110\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3283012Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 18aaa3f61f7241ada9149a1070ccd40d\n  System UUID:                18aaa3f6-1f72-41ad-a914-9a1070ccd40d\n  Boot ID:                    5d0c41a3-632c-4b60-91dc-1533bc94442d\n  Kernel Version:             6.8.0-28-generic\n  OS Image:                   Ubuntu Noble Numbat (development branch)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.28.5\n  Kubelet Version:            v1.28.9\n  Kube-Proxy Version:         v1.28.9\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-5dd5756b68-5kvvg                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     38m\n  kube-system                 kube-addon-manager-aat3reeth3ee-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         37m\n  kube-system                 kube-apiserver-aat3reeth3ee-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         37m\n  kube-system                 kube-controller-manager-aat3reeth3ee-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         37m\n  kube-system                 kube-flannel-ds-v9v9p                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         38m\n  kube-system                 kube-proxy-zz8qd                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\n  kube-system                 kube-scheduler-aat3reeth3ee-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         37m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-pgdh2    0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                755m (47%)  0 (0%)\n  memory             170Mi (5%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                From             Message\n  ----    ------                   ----               ----             -------\n  Normal  Starting                 104m               kube-proxy       \n  Normal  Starting                 82m                kube-proxy       \n  Normal  Starting                 87m                kube-proxy       \n  Normal  Starting                 96m                kube-proxy       \n  Normal  Starting                 74m                kube-proxy       \n  Normal  Starting                 38m                kube-proxy       \n  Normal  Starting                 55m                kube-proxy       \n  Normal  Starting                 105m               kube-proxy       \n  Normal  Starting                 104m               kube-proxy       \n  Normal  RegisteredNode           99m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  NodeAllocatableEnforced  98m                kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 98m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  98m (x8 over 98m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    98m (x8 over 98m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     98m (x7 over 98m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  RegisteredNode           96m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  RegisteredNode           86m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  NodeHasSufficientMemory  84m (x8 over 84m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  Starting                 84m                kubelet          Starting kubelet.\n  Normal  NodeHasNoDiskPressure    84m (x8 over 84m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     84m (x7 over 84m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  84m                kubelet          Updated Node Allocatable limit across pods\n  Normal  RegisteredNode           83m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  RegisteredNode           77m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  NodeNotReady             76m                node-controller  Node aat3reeth3ee-1 status is now: NodeNotReady\n  Normal  Starting                 74m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  74m (x8 over 74m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    74m (x8 over 74m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     74m (x7 over 74m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  74m                kubelet          Updated Node Allocatable limit across pods\n  Normal  RegisteredNode           73m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  Starting                 63m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  63m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    63m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     63m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             63m                kubelet          Node aat3reeth3ee-1 status is now: NodeNotReady\n  Normal  NodeReady                63m                kubelet          Node aat3reeth3ee-1 status is now: NodeReady\n  Normal  NodeAllocatableEnforced  63m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory  62m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  Starting                 62m                kubelet          Starting kubelet.\n  Normal  NodeHasNoDiskPressure    62m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     62m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             62m                kubelet          Node aat3reeth3ee-1 status is now: NodeNotReady\n  Normal  NodeAllocatableEnforced  62m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                62m                kubelet          Node aat3reeth3ee-1 status is now: NodeReady\n  Normal  RegisteredNode           60m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  NodeNotReady             59m                node-controller  Node aat3reeth3ee-1 status is now: NodeNotReady\n  Normal  Starting                 57m                kubelet          Starting kubelet.\n  Normal  NodeHasNoDiskPressure    57m (x8 over 57m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientMemory  57m (x8 over 57m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  NodeAllocatableEnforced  57m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientPID     57m (x7 over 57m)  kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  RegisteredNode           53m                node-controller  Node aat3reeth3ee-1 event: Registered Node aat3reeth3ee-1 in Controller\n  Normal  Starting                 44m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  44m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    44m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     44m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             44m                kubelet          Node aat3reeth3ee-1 status is now: NodeNotReady\n  Normal  NodeAllocatableEnforced  44m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                44m                kubelet          Node aat3reeth3ee-1 status is now: NodeReady\n  Normal  Starting                 44m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  44m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    44m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     44m                kubelet          Node aat3reeth3ee-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             44m                kubelet          Node aat3reeth3ee-1 status is now: NodeNotReady\n  Normal  NodeAllocatableEnforced  44m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                44m                kubelet          Node aat3reeth3ee-1 status is now: NodeReady\n"
  Apr 20 14:50:08.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6898 describe namespace kubectl-6898'
  Apr 20 14:50:08.271: INFO: stderr: ""
  Apr 20 14:50:08.271: INFO: stdout: "Name:         kubectl-6898\nLabels:       e2e-framework=kubectl\n              e2e-run=b8ba6184-7f72-49b5-bf7a-e8b69be702d5\n              kubernetes.io/metadata.name=kubectl-6898\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 20 14:50:08.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6898" for this suite. @ 04/20/24 14:50:08.282
â€¢ [3.542 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/20/24 14:50:08.301
  Apr 20 14:50:08.301: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:50:08.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:08.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:08.34
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:50:08.346
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:50:08.346
  STEP: creating a pod to probe DNS @ 04/20/24 14:50:08.346
  STEP: submitting the pod to kubernetes @ 04/20/24 14:50:08.347
  STEP: retrieving the pod @ 04/20/24 14:51:14.785
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:51:14.794
  Apr 20 14:51:14.844: INFO: DNS probes using dns-303/dns-test-9bbd7d3e-e06f-4e2f-adec-749b500b679b succeeded

  Apr 20 14:51:14.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 14:51:14.857
  STEP: Destroying namespace "dns-303" for this suite. @ 04/20/24 14:51:14.888
â€¢ [66.601 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/20/24 14:51:14.914
  Apr 20 14:51:14.914: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl-logs @ 04/20/24 14:51:14.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:14.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:14.973
  STEP: creating an pod @ 04/20/24 14:51:14.979
  Apr 20 14:51:14.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 20 14:51:15.200: INFO: stderr: ""
  Apr 20 14:51:15.200: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/20/24 14:51:15.2
  Apr 20 14:51:15.200: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Apr 20 14:51:17.232: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/20/24 14:51:17.232
  Apr 20 14:51:17.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 logs logs-generator logs-generator'
  Apr 20 14:51:17.453: INFO: stderr: ""
  Apr 20 14:51:17.453: INFO: stdout: "I0420 14:51:15.995241       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/kl2 463\nI0420 14:51:16.193855       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/dgr 436\nI0420 14:51:16.393408       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/sql 493\nI0420 14:51:16.594246       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/6rh 526\nI0420 14:51:16.793344       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/j4n6 282\nI0420 14:51:16.993194       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/mdj 480\nI0420 14:51:17.194357       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/tzf 449\nI0420 14:51:17.393947       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/647 339\n"
  STEP: limiting log lines @ 04/20/24 14:51:17.453
  Apr 20 14:51:17.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 logs logs-generator logs-generator --tail=1'
  Apr 20 14:51:17.686: INFO: stderr: ""
  Apr 20 14:51:17.686: INFO: stdout: "I0420 14:51:17.595561       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/hgtg 419\n"
  Apr 20 14:51:17.686: INFO: got output "I0420 14:51:17.595561       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/hgtg 419\n"
  STEP: limiting log bytes @ 04/20/24 14:51:17.686
  Apr 20 14:51:17.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 logs logs-generator logs-generator --limit-bytes=1'
  Apr 20 14:51:17.915: INFO: stderr: ""
  Apr 20 14:51:17.915: INFO: stdout: "I"
  Apr 20 14:51:17.915: INFO: got output "I"
  STEP: exposing timestamps @ 04/20/24 14:51:17.915
  Apr 20 14:51:17.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 logs logs-generator logs-generator --tail=1 --timestamps'
  Apr 20 14:51:18.106: INFO: stderr: ""
  Apr 20 14:51:18.106: INFO: stdout: "2024-04-20T14:51:17.993350601Z I0420 14:51:17.993230       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/68cn 350\n"
  Apr 20 14:51:18.107: INFO: got output "2024-04-20T14:51:17.993350601Z I0420 14:51:17.993230       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/68cn 350\n"
  STEP: restricting to a time range @ 04/20/24 14:51:18.107
  Apr 20 14:51:20.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 logs logs-generator logs-generator --since=1s'
  Apr 20 14:51:20.802: INFO: stderr: ""
  Apr 20 14:51:20.802: INFO: stdout: "I0420 14:51:19.994269       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/lns 361\nI0420 14:51:20.193879       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/j6hl 599\nI0420 14:51:20.393239       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/ns/pods/q89 493\nI0420 14:51:20.593606       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/ns/pods/swv 518\nI0420 14:51:20.794046       1 logs_generator.go:76] 24 POST /api/v1/namespaces/ns/pods/62t 341\n"
  Apr 20 14:51:20.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 logs logs-generator logs-generator --since=24h'
  Apr 20 14:51:20.979: INFO: stderr: ""
  Apr 20 14:51:20.979: INFO: stdout: "I0420 14:51:15.995241       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/kl2 463\nI0420 14:51:16.193855       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/dgr 436\nI0420 14:51:16.393408       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/sql 493\nI0420 14:51:16.594246       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/6rh 526\nI0420 14:51:16.793344       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/j4n6 282\nI0420 14:51:16.993194       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/mdj 480\nI0420 14:51:17.194357       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/tzf 449\nI0420 14:51:17.393947       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/647 339\nI0420 14:51:17.595561       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/hgtg 419\nI0420 14:51:17.793953       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/vpp 519\nI0420 14:51:17.993230       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/68cn 350\nI0420 14:51:18.193906       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/mgz 371\nI0420 14:51:18.393266       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/gmsz 231\nI0420 14:51:18.596432       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/499 531\nI0420 14:51:18.794214       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/nct6 297\nI0420 14:51:18.994029       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/lqv 477\nI0420 14:51:19.193713       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/zm5k 355\nI0420 14:51:19.393364       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/4df 206\nI0420 14:51:19.593805       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/gkw 576\nI0420 14:51:19.794328       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/qq6 401\nI0420 14:51:19.994269       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/lns 361\nI0420 14:51:20.193879       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/j6hl 599\nI0420 14:51:20.393239       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/ns/pods/q89 493\nI0420 14:51:20.593606       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/ns/pods/swv 518\nI0420 14:51:20.794046       1 logs_generator.go:76] 24 POST /api/v1/namespaces/ns/pods/62t 341\n"
  Apr 20 14:51:20.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-logs-6340 delete pod logs-generator'
  Apr 20 14:51:21.868: INFO: stderr: ""
  Apr 20 14:51:21.868: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 20 14:51:21.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6340" for this suite. @ 04/20/24 14:51:21.881
â€¢ [6.982 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/20/24 14:51:21.897
  Apr 20 14:51:21.897: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:51:21.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:21.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:21.943
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4957.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4957.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 14:51:21.949
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4957.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4957.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 14:51:21.949
  STEP: creating a pod to probe /etc/hosts @ 04/20/24 14:51:21.949
  STEP: submitting the pod to kubernetes @ 04/20/24 14:51:21.949
  STEP: retrieving the pod @ 04/20/24 14:51:23.991
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:51:23.998
  Apr 20 14:51:24.046: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-4957/dns-test-dd5280ca-118c-46a2-8eec-0faf3216a904: the server could not find the requested resource (get pods dns-test-dd5280ca-118c-46a2-8eec-0faf3216a904)
  Apr 20 14:51:24.046: INFO: Lookups using dns-4957/dns-test-dd5280ca-118c-46a2-8eec-0faf3216a904 failed for: [jessie_hosts@dns-querier-1]

  Apr 20 14:51:24.060: INFO: Pod client logs for webserver: 
  Apr 20 14:51:24.076: INFO: Pod client logs for querier: 
  Apr 20 14:51:24.088: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:51:29.118: INFO: DNS probes using dns-4957/dns-test-dd5280ca-118c-46a2-8eec-0faf3216a904 succeeded

  Apr 20 14:51:29.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 14:51:29.127
  STEP: Destroying namespace "dns-4957" for this suite. @ 04/20/24 14:51:29.155
â€¢ [7.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 04/20/24 14:51:29.181
  Apr 20 14:51:29.181: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:51:29.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:29.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:29.216
  STEP: Creating service test in namespace statefulset-2623 @ 04/20/24 14:51:29.222
  STEP: Looking for a node to schedule stateful set and pod @ 04/20/24 14:51:29.236
  STEP: Creating pod with conflicting port in namespace statefulset-2623 @ 04/20/24 14:51:29.253
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2623 @ 04/20/24 14:51:29.271
  STEP: Creating statefulset with conflicting port in namespace statefulset-2623 @ 04/20/24 14:51:31.285
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2623 @ 04/20/24 14:51:31.298
  Apr 20 14:51:31.336: INFO: Observed stateful pod in namespace: statefulset-2623, name: ss-0, uid: ac62bae7-d91d-4603-ae26-bb1613ed1bef, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 20 14:51:31.357: INFO: Observed stateful pod in namespace: statefulset-2623, name: ss-0, uid: ac62bae7-d91d-4603-ae26-bb1613ed1bef, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 20 14:51:31.405: INFO: Observed stateful pod in namespace: statefulset-2623, name: ss-0, uid: ac62bae7-d91d-4603-ae26-bb1613ed1bef, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 20 14:51:31.420: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2623
  STEP: Removing pod with conflicting port in namespace statefulset-2623 @ 04/20/24 14:51:31.42
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2623 and will be in running state @ 04/20/24 14:51:31.446
  Apr 20 14:51:33.473: INFO: Deleting all statefulset in ns statefulset-2623
  Apr 20 14:51:33.483: INFO: Scaling statefulset ss to 0
  Apr 20 14:51:43.539: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 14:51:43.549: INFO: Deleting statefulset ss
  Apr 20 14:51:43.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2623" for this suite. @ 04/20/24 14:51:43.607
â€¢ [14.444 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:51:43.627
  Apr 20 14:51:43.627: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename discovery @ 04/20/24 14:51:43.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:43.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:43.677
  STEP: Setting up server cert @ 04/20/24 14:51:43.684
  Apr 20 14:51:44.394: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 20 14:51:44.396: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 20 14:51:44.396: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 20 14:51:44.396: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 20 14:51:44.396: INFO: Checking APIGroup: apps
  Apr 20 14:51:44.399: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 20 14:51:44.399: INFO: Versions found [{apps/v1 v1}]
  Apr 20 14:51:44.399: INFO: apps/v1 matches apps/v1
  Apr 20 14:51:44.399: INFO: Checking APIGroup: events.k8s.io
  Apr 20 14:51:44.401: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 20 14:51:44.401: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 20 14:51:44.401: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 20 14:51:44.401: INFO: Checking APIGroup: authentication.k8s.io
  Apr 20 14:51:44.404: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 20 14:51:44.404: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 20 14:51:44.404: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 20 14:51:44.404: INFO: Checking APIGroup: authorization.k8s.io
  Apr 20 14:51:44.407: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 20 14:51:44.407: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 20 14:51:44.407: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 20 14:51:44.407: INFO: Checking APIGroup: autoscaling
  Apr 20 14:51:44.410: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 20 14:51:44.410: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 20 14:51:44.410: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 20 14:51:44.410: INFO: Checking APIGroup: batch
  Apr 20 14:51:44.413: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 20 14:51:44.413: INFO: Versions found [{batch/v1 v1}]
  Apr 20 14:51:44.413: INFO: batch/v1 matches batch/v1
  Apr 20 14:51:44.413: INFO: Checking APIGroup: certificates.k8s.io
  Apr 20 14:51:44.417: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 20 14:51:44.417: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 20 14:51:44.417: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 20 14:51:44.417: INFO: Checking APIGroup: networking.k8s.io
  Apr 20 14:51:44.420: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 20 14:51:44.420: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 20 14:51:44.420: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 20 14:51:44.420: INFO: Checking APIGroup: policy
  Apr 20 14:51:44.423: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 20 14:51:44.423: INFO: Versions found [{policy/v1 v1}]
  Apr 20 14:51:44.423: INFO: policy/v1 matches policy/v1
  Apr 20 14:51:44.423: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 20 14:51:44.426: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 20 14:51:44.426: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 20 14:51:44.426: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 20 14:51:44.426: INFO: Checking APIGroup: storage.k8s.io
  Apr 20 14:51:44.429: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 20 14:51:44.429: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 20 14:51:44.429: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 20 14:51:44.429: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 20 14:51:44.432: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 20 14:51:44.432: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 20 14:51:44.432: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 20 14:51:44.432: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 20 14:51:44.435: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 20 14:51:44.435: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 20 14:51:44.435: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 20 14:51:44.435: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 20 14:51:44.438: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 20 14:51:44.438: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 20 14:51:44.438: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 20 14:51:44.438: INFO: Checking APIGroup: coordination.k8s.io
  Apr 20 14:51:44.442: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 20 14:51:44.442: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 20 14:51:44.442: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 20 14:51:44.442: INFO: Checking APIGroup: node.k8s.io
  Apr 20 14:51:44.446: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 20 14:51:44.446: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 20 14:51:44.447: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 20 14:51:44.447: INFO: Checking APIGroup: discovery.k8s.io
  Apr 20 14:51:44.450: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 20 14:51:44.450: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 20 14:51:44.450: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 20 14:51:44.450: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 20 14:51:44.453: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Apr 20 14:51:44.453: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Apr 20 14:51:44.453: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Apr 20 14:51:44.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5563" for this suite. @ 04/20/24 14:51:44.47
â€¢ [0.865 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 04/20/24 14:51:44.508
  Apr 20 14:51:44.508: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:51:44.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:44.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:44.556
  STEP: starting the proxy server @ 04/20/24 14:51:44.562
  Apr 20 14:51:44.563: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-9044 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/20/24 14:51:44.68
  Apr 20 14:51:44.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9044" for this suite. @ 04/20/24 14:51:44.714
â€¢ [0.219 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/20/24 14:51:44.727
  Apr 20 14:51:44.727: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:51:44.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:44.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:44.782
  Apr 20 14:51:44.789: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 14:51:46.725
  Apr 20 14:51:46.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-8867 --namespace=crd-publish-openapi-8867 create -f -'
  Apr 20 14:51:47.899: INFO: stderr: ""
  Apr 20 14:51:47.899: INFO: stdout: "e2e-test-crd-publish-openapi-6432-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 20 14:51:47.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-8867 --namespace=crd-publish-openapi-8867 delete e2e-test-crd-publish-openapi-6432-crds test-cr'
  Apr 20 14:51:48.063: INFO: stderr: ""
  Apr 20 14:51:48.063: INFO: stdout: "e2e-test-crd-publish-openapi-6432-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 20 14:51:48.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-8867 --namespace=crd-publish-openapi-8867 apply -f -'
  Apr 20 14:51:48.451: INFO: stderr: ""
  Apr 20 14:51:48.451: INFO: stdout: "e2e-test-crd-publish-openapi-6432-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 20 14:51:48.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-8867 --namespace=crd-publish-openapi-8867 delete e2e-test-crd-publish-openapi-6432-crds test-cr'
  Apr 20 14:51:48.625: INFO: stderr: ""
  Apr 20 14:51:48.625: INFO: stdout: "e2e-test-crd-publish-openapi-6432-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 14:51:48.625
  Apr 20 14:51:48.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-8867 explain e2e-test-crd-publish-openapi-6432-crds'
  Apr 20 14:51:49.020: INFO: stderr: ""
  Apr 20 14:51:49.020: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6432-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 20 14:51:50.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8867" for this suite. @ 04/20/24 14:51:50.78
â€¢ [6.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/20/24 14:51:50.794
  Apr 20 14:51:50.794: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename tables @ 04/20/24 14:51:50.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:50.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:50.829
  Apr 20 14:51:50.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8871" for this suite. @ 04/20/24 14:51:50.847
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 04/20/24 14:51:50.86
  Apr 20 14:51:50.860: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:51:50.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:50.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:50.895
  STEP: Creating the pod @ 04/20/24 14:51:50.899
  Apr 20 14:51:53.489: INFO: Successfully updated pod "annotationupdateeb22772b-03b9-4691-a6b9-56fa7a50bb9d"
  Apr 20 14:51:57.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7917" for this suite. @ 04/20/24 14:51:57.562
â€¢ [6.718 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 04/20/24 14:51:57.583
  Apr 20 14:51:57.584: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:51:57.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:57.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:57.663
  STEP: Creating configMap with name projected-configmap-test-volume-1be5d13c-a655-47da-9a8d-3911a44990a2 @ 04/20/24 14:51:57.668
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:51:57.677
  STEP: Saw pod success @ 04/20/24 14:52:01.736
  Apr 20 14:52:01.746: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-configmaps-407b2565-6b25-437b-a4d3-2d58aa32f818 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:52:01.766
  Apr 20 14:52:01.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1725" for this suite. @ 04/20/24 14:52:01.83
â€¢ [4.263 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/20/24 14:52:01.843
  Apr 20 14:52:01.843: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename watch @ 04/20/24 14:52:01.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:01.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:01.882
  STEP: creating a new configmap @ 04/20/24 14:52:01.887
  STEP: modifying the configmap once @ 04/20/24 14:52:01.895
  STEP: modifying the configmap a second time @ 04/20/24 14:52:01.907
  STEP: deleting the configmap @ 04/20/24 14:52:01.921
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/20/24 14:52:01.93
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/20/24 14:52:01.932
  Apr 20 14:52:01.932: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9798  ffb6a690-ca09-40a7-881a-c59eb23b5a40 43483 0 2024-04-20 14:52:01 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 14:52:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:52:01.932: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9798  ffb6a690-ca09-40a7-881a-c59eb23b5a40 43484 0 2024-04-20 14:52:01 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 14:52:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:52:01.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9798" for this suite. @ 04/20/24 14:52:01.941
â€¢ [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 04/20/24 14:52:01.956
  Apr 20 14:52:01.956: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:52:01.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:01.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:01.989
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:52:02.001
  STEP: create the pod with lifecycle hook @ 04/20/24 14:52:04.037
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:52:06.08
  STEP: check prestop hook @ 04/20/24 14:52:08.117
  Apr 20 14:52:08.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4016" for this suite. @ 04/20/24 14:52:08.148
â€¢ [6.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 04/20/24 14:52:08.19
  Apr 20 14:52:08.190: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 14:52:08.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:08.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:08.227
  Apr 20 14:52:08.232: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 14:52:09.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9915" for this suite. @ 04/20/24 14:52:09.294
â€¢ [1.123 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 04/20/24 14:52:09.313
  Apr 20 14:52:09.313: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:52:09.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:09.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:09.356
  STEP: create deployment with httpd image @ 04/20/24 14:52:09.361
  Apr 20 14:52:09.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8220 create -f -'
  Apr 20 14:52:09.867: INFO: stderr: ""
  Apr 20 14:52:09.868: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/20/24 14:52:09.868
  Apr 20 14:52:09.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8220 diff -f -'
  Apr 20 14:52:10.880: INFO: rc: 1
  Apr 20 14:52:10.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8220 delete -f -'
  Apr 20 14:52:11.027: INFO: stderr: ""
  Apr 20 14:52:11.027: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 20 14:52:11.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8220" for this suite. @ 04/20/24 14:52:11.041
â€¢ [1.743 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 04/20/24 14:52:11.056
  Apr 20 14:52:11.056: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:52:11.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:11.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:11.093
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/20/24 14:52:11.098
  STEP: When a replicaset with a matching selector is created @ 04/20/24 14:52:13.153
  STEP: Then the orphan pod is adopted @ 04/20/24 14:52:13.169
  STEP: When the matched label of one of its pods change @ 04/20/24 14:52:14.192
  Apr 20 14:52:14.201: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/20/24 14:52:14.243
  Apr 20 14:52:15.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8561" for this suite. @ 04/20/24 14:52:15.299
â€¢ [4.261 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 04/20/24 14:52:15.318
  Apr 20 14:52:15.318: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:52:15.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:15.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:15.363
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:52:15.368
  STEP: Saw pod success @ 04/20/24 14:52:17.412
  Apr 20 14:52:17.419: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-17b51bc0-b8dd-4b3a-b7ae-3683525db615 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:52:17.434
  Apr 20 14:52:17.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6274" for this suite. @ 04/20/24 14:52:17.5
â€¢ [2.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/20/24 14:52:17.521
  Apr 20 14:52:17.521: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:52:17.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:17.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:17.576
  STEP: Setting up data @ 04/20/24 14:52:17.581
  STEP: Creating pod pod-subpath-test-secret-t2nh @ 04/20/24 14:52:17.608
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:52:17.609
  STEP: Saw pod success @ 04/20/24 14:52:41.789
  Apr 20 14:52:41.795: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-subpath-test-secret-t2nh container test-container-subpath-secret-t2nh: <nil>
  STEP: delete the pod @ 04/20/24 14:52:41.807
  STEP: Deleting pod pod-subpath-test-secret-t2nh @ 04/20/24 14:52:41.835
  Apr 20 14:52:41.836: INFO: Deleting pod "pod-subpath-test-secret-t2nh" in namespace "subpath-2209"
  Apr 20 14:52:41.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2209" for this suite. @ 04/20/24 14:52:41.849
â€¢ [24.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/20/24 14:52:41.865
  Apr 20 14:52:41.865: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:52:41.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:41.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:41.912
  STEP: Creating a test headless service @ 04/20/24 14:52:41.921
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 83.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.83_udp@PTR;check="$$(dig +tcp +noall +answer +search 83.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.83_tcp@PTR;sleep 1; done
   @ 04/20/24 14:52:41.969
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 83.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.83_udp@PTR;check="$$(dig +tcp +noall +answer +search 83.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.83_tcp@PTR;sleep 1; done
   @ 04/20/24 14:52:41.97
  STEP: creating a pod to probe DNS @ 04/20/24 14:52:41.97
  STEP: submitting the pod to kubernetes @ 04/20/24 14:52:41.97
  STEP: retrieving the pod @ 04/20/24 14:52:44.022
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:52:44.031
  Apr 20 14:52:44.050: INFO: Unable to read wheezy_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.061: INFO: Unable to read wheezy_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.072: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.083: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.147: INFO: Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.154: INFO: Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.160: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.166: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:44.218: INFO: Lookups using dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580 failed for: [wheezy_udp@dns-test-service.dns-510.svc.cluster.local wheezy_tcp@dns-test-service.dns-510.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local]

  Apr 20 14:52:44.228: INFO: Pod client logs for webserver: 
  Apr 20 14:52:44.240: INFO: Pod client logs for querier: 
  Apr 20 14:52:44.253: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:52:49.276: INFO: Unable to read wheezy_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:49.286: INFO: Unable to read wheezy_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:49.368: INFO: Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:49.378: INFO: Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:49.435: INFO: Lookups using dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580 failed for: [wheezy_udp@dns-test-service.dns-510.svc.cluster.local wheezy_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local]

  Apr 20 14:52:49.449: INFO: Pod client logs for webserver: 
  Apr 20 14:52:49.465: INFO: Pod client logs for querier: 
  Apr 20 14:52:49.482: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:52:54.282: INFO: Unable to read wheezy_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:54.290: INFO: Unable to read wheezy_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:54.336: INFO: Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:54.341: INFO: Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:54.382: INFO: Lookups using dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580 failed for: [wheezy_udp@dns-test-service.dns-510.svc.cluster.local wheezy_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local]

  Apr 20 14:52:54.394: INFO: Pod client logs for webserver: 
  Apr 20 14:52:54.410: INFO: Pod client logs for querier: 
  Apr 20 14:52:54.427: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:52:59.262: INFO: Unable to read wheezy_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:59.271: INFO: Unable to read wheezy_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:59.338: INFO: Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:59.346: INFO: Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:52:59.398: INFO: Lookups using dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580 failed for: [wheezy_udp@dns-test-service.dns-510.svc.cluster.local wheezy_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local]

  Apr 20 14:52:59.409: INFO: Pod client logs for webserver: 
  Apr 20 14:52:59.425: INFO: Pod client logs for querier: 
  Apr 20 14:52:59.441: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:53:04.267: INFO: Unable to read wheezy_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:04.273: INFO: Unable to read wheezy_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:04.324: INFO: Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:04.330: INFO: Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:04.378: INFO: Lookups using dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580 failed for: [wheezy_udp@dns-test-service.dns-510.svc.cluster.local wheezy_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local]

  Apr 20 14:53:04.390: INFO: Pod client logs for webserver: 
  Apr 20 14:53:04.406: INFO: Pod client logs for querier: 
  Apr 20 14:53:04.419: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:53:09.271: INFO: Unable to read wheezy_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:09.285: INFO: Unable to read wheezy_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:09.353: INFO: Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:09.363: INFO: Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580: the server could not find the requested resource (get pods dns-test-d74063c2-995f-465a-bd75-2d881bec9580)
  Apr 20 14:53:09.421: INFO: Lookups using dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580 failed for: [wheezy_udp@dns-test-service.dns-510.svc.cluster.local wheezy_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local]

  Apr 20 14:53:09.441: INFO: Pod client logs for webserver: 
  Apr 20 14:53:09.454: INFO: Pod client logs for querier: 
  Apr 20 14:53:09.471: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:53:14.374: INFO: DNS probes using dns-510/dns-test-d74063c2-995f-465a-bd75-2d881bec9580 succeeded

  Apr 20 14:53:14.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 14:53:14.384
  STEP: deleting the test service @ 04/20/24 14:53:14.427
  STEP: deleting the test headless service @ 04/20/24 14:53:14.496
  STEP: Destroying namespace "dns-510" for this suite. @ 04/20/24 14:53:14.523
â€¢ [32.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/20/24 14:53:14.561
  Apr 20 14:53:14.561: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename init-container @ 04/20/24 14:53:14.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:14.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:14.602
  STEP: creating the pod @ 04/20/24 14:53:14.611
  Apr 20 14:53:14.611: INFO: PodSpec: initContainers in spec.initContainers
  Apr 20 14:53:53.754: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bf79bc39-a80d-4c02-95e7-73c6446ed966", GenerateName:"", Namespace:"init-container-136", SelfLink:"", UID:"85b2c9ac-dd03-4c12-83b9-f4d8b9e80a1c", ResourceVersion:"43995", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 53, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"611539866"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 53, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052e7038), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 53, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052e7068), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-jnql9", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000491340), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jnql9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jnql9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jnql9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00454d320), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"aat3reeth3ee-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0002f3c00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00454d3b0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00454d3d0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00454d3d8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00454d3dc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00528b7e0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 53, 14, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 53, 14, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 53, 14, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 53, 14, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.20", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.66.214", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.214"}}, StartTime:time.Date(2024, time.April, 20, 14, 53, 14, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002f3ce0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002f3d50)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"cri-o://6691fcd49e6fb397a543b47567014001a6a6bf45092efab52fd17d84518c5def", Started:(*bool)(0xc00454d47f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0004913c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc00454d485), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0004913a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00454d454), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 20 14:53:53.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-136" for this suite. @ 04/20/24 14:53:53.775
â€¢ [39.228 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/20/24 14:53:53.789
  Apr 20 14:53:53.789: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:53:53.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:53.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:53.827
  STEP: apply creating a deployment @ 04/20/24 14:53:53.831
  Apr 20 14:53:53.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4984" for this suite. @ 04/20/24 14:53:53.861
â€¢ [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/20/24 14:53:53.875
  Apr 20 14:53:53.876: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:53:53.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:53.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:53.907
  Apr 20 14:53:53.912: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  W0420 14:53:56.665465      15 warnings.go:70] unknown field "alpha"
  W0420 14:53:56.665596      15 warnings.go:70] unknown field "beta"
  W0420 14:53:56.665639      15 warnings.go:70] unknown field "delta"
  W0420 14:53:56.665679      15 warnings.go:70] unknown field "epsilon"
  W0420 14:53:56.665717      15 warnings.go:70] unknown field "gamma"
  Apr 20 14:53:57.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6898" for this suite. @ 04/20/24 14:53:57.282
â€¢ [3.421 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 04/20/24 14:53:57.3
  Apr 20 14:53:57.300: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:53:57.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:57.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:57.362
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 14:53:57.366
  STEP: Saw pod success @ 04/20/24 14:54:01.413
  Apr 20 14:54:01.422: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-a55b5bfc-73c9-4272-af73-05fbf0d579ae container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:54:01.444
  Apr 20 14:54:01.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5003" for this suite. @ 04/20/24 14:54:01.509
â€¢ [4.228 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 04/20/24 14:54:01.529
  Apr 20 14:54:01.529: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:54:01.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:01.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:01.581
  STEP: Creating service test in namespace statefulset-6245 @ 04/20/24 14:54:01.587
  STEP: Creating statefulset ss in namespace statefulset-6245 @ 04/20/24 14:54:01.605
  Apr 20 14:54:01.639: INFO: Found 0 stateful pods, waiting for 1
  Apr 20 14:54:11.654: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/20/24 14:54:11.674
  STEP: updating a scale subresource @ 04/20/24 14:54:11.684
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 14:54:11.701
  STEP: Patch a scale subresource @ 04/20/24 14:54:11.711
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 14:54:11.736
  Apr 20 14:54:11.753: INFO: Deleting all statefulset in ns statefulset-6245
  Apr 20 14:54:11.762: INFO: Scaling statefulset ss to 0
  Apr 20 14:54:21.834: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 14:54:21.842: INFO: Deleting statefulset ss
  Apr 20 14:54:21.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6245" for this suite. @ 04/20/24 14:54:21.88
â€¢ [20.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/20/24 14:54:21.901
  Apr 20 14:54:21.902: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:54:21.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:21.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:21.94
  STEP: creating the pod with failed condition @ 04/20/24 14:54:21.945
  STEP: updating the pod @ 04/20/24 14:56:21.962
  Apr 20 14:56:22.490: INFO: Successfully updated pod "var-expansion-d89d6fe3-6c9c-42d7-85a0-29594113ec0b"
  STEP: waiting for pod running @ 04/20/24 14:56:22.49
  STEP: deleting the pod gracefully @ 04/20/24 14:56:24.517
  Apr 20 14:56:24.517: INFO: Deleting pod "var-expansion-d89d6fe3-6c9c-42d7-85a0-29594113ec0b" in namespace "var-expansion-9769"
  Apr 20 14:56:24.535: INFO: Wait up to 5m0s for pod "var-expansion-d89d6fe3-6c9c-42d7-85a0-29594113ec0b" to be fully deleted
  Apr 20 14:56:56.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9769" for this suite. @ 04/20/24 14:56:56.724
â€¢ [154.837 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 04/20/24 14:56:56.74
  Apr 20 14:56:56.740: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 14:56:56.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:56:56.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:56:56.788
  STEP: creating service in namespace services-6796 @ 04/20/24 14:56:56.794
  STEP: creating service affinity-nodeport in namespace services-6796 @ 04/20/24 14:56:56.794
  STEP: creating replication controller affinity-nodeport in namespace services-6796 @ 04/20/24 14:56:56.825
  I0420 14:56:56.851281      15 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-6796, replica count: 3
  I0420 14:56:59.903694      15 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:56:59.924: INFO: Creating new exec pod
  Apr 20 14:57:02.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-6796 exec execpod-affinitybzwxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Apr 20 14:57:03.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:03.326: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:57:03.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-6796 exec execpod-affinitybzwxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.33.113 80'
  Apr 20 14:57:03.606: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.33.113 80\nConnection to 10.233.33.113 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:03.606: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:57:03.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-6796 exec execpod-affinitybzwxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.198 31910'
  Apr 20 14:57:03.867: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.198 31910\nConnection to 192.168.121.198 31910 port [tcp/*] succeeded!\n"
  Apr 20 14:57:03.867: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:57:03.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-6796 exec execpod-affinitybzwxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.170 31910'
  Apr 20 14:57:04.109: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.170 31910\nConnection to 192.168.121.170 31910 port [tcp/*] succeeded!\n"
  Apr 20 14:57:04.110: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:57:04.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-6796 exec execpod-affinitybzwxf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.198:31910/ ; done'
  Apr 20 14:57:04.556: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:31910/\n"
  Apr 20 14:57:04.556: INFO: stdout: "\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65\naffinity-nodeport-hvw65"
  Apr 20 14:57:04.556: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.556: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.556: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Received response from host: affinity-nodeport-hvw65
  Apr 20 14:57:04.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 14:57:04.569: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6796, will wait for the garbage collector to delete the pods @ 04/20/24 14:57:04.601
  Apr 20 14:57:04.684: INFO: Deleting ReplicationController affinity-nodeport took: 23.80622ms
  Apr 20 14:57:04.785: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.250728ms
  STEP: Destroying namespace "services-6796" for this suite. @ 04/20/24 14:57:07.832
â€¢ [11.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/20/24 14:57:07.847
  Apr 20 14:57:07.847: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename watch @ 04/20/24 14:57:07.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:07.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:07.883
  STEP: creating a watch on configmaps with label A @ 04/20/24 14:57:07.887
  STEP: creating a watch on configmaps with label B @ 04/20/24 14:57:07.89
  STEP: creating a watch on configmaps with label A or B @ 04/20/24 14:57:07.891
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/20/24 14:57:07.893
  Apr 20 14:57:07.901: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44617 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:57:07.902: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44617 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/20/24 14:57:07.902
  Apr 20 14:57:07.913: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44618 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:57:07.913: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44618 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/20/24 14:57:07.914
  Apr 20 14:57:07.925: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44619 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:57:07.925: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44619 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/20/24 14:57:07.925
  Apr 20 14:57:07.938: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44620 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:57:07.938: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6018  f154a049-2094-4a39-80b0-569d1969231e 44620 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/20/24 14:57:07.938
  Apr 20 14:57:07.943: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6018  169893da-c064-4729-acef-a141fadf9ef6 44621 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:57:07.943: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6018  169893da-c064-4729-acef-a141fadf9ef6 44621 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/20/24 14:57:17.944
  Apr 20 14:57:17.969: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6018  169893da-c064-4729-acef-a141fadf9ef6 44666 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:57:17.969: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6018  169893da-c064-4729-acef-a141fadf9ef6 44666 0 2024-04-20 14:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:57:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:57:27.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6018" for this suite. @ 04/20/24 14:57:27.994
â€¢ [20.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/20/24 14:57:28.016
  Apr 20 14:57:28.016: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/20/24 14:57:28.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:28.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:28.062
  STEP: mirroring a new custom Endpoint @ 04/20/24 14:57:28.095
  Apr 20 14:57:28.136: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 04/20/24 14:57:30.145
  Apr 20 14:57:30.168: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 04/20/24 14:57:32.198
  Apr 20 14:57:32.232: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Apr 20 14:57:34.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5865" for this suite. @ 04/20/24 14:57:34.269
â€¢ [6.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/20/24 14:57:34.291
  Apr 20 14:57:34.291: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename proxy @ 04/20/24 14:57:34.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:34.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:34.329
  Apr 20 14:57:34.335: INFO: Creating pod...
  Apr 20 14:57:36.371: INFO: Creating service...
  Apr 20 14:57:36.410: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/pods/agnhost/proxy/some/path/with/DELETE
  Apr 20 14:57:36.453: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 14:57:36.453: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/pods/agnhost/proxy/some/path/with/GET
  Apr 20 14:57:36.466: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 20 14:57:36.468: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/pods/agnhost/proxy/some/path/with/HEAD
  Apr 20 14:57:36.476: INFO: http.Client request:HEAD | StatusCode:200
  Apr 20 14:57:36.476: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 20 14:57:36.484: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 14:57:36.485: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/pods/agnhost/proxy/some/path/with/PATCH
  Apr 20 14:57:36.492: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 14:57:36.492: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/pods/agnhost/proxy/some/path/with/POST
  Apr 20 14:57:36.499: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 14:57:36.499: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/pods/agnhost/proxy/some/path/with/PUT
  Apr 20 14:57:36.506: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 14:57:36.506: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/services/test-service/proxy/some/path/with/DELETE
  Apr 20 14:57:36.515: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 14:57:36.515: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/services/test-service/proxy/some/path/with/GET
  Apr 20 14:57:36.525: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 20 14:57:36.526: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/services/test-service/proxy/some/path/with/HEAD
  Apr 20 14:57:36.535: INFO: http.Client request:HEAD | StatusCode:200
  Apr 20 14:57:36.535: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/services/test-service/proxy/some/path/with/OPTIONS
  Apr 20 14:57:36.542: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 14:57:36.543: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/services/test-service/proxy/some/path/with/PATCH
  Apr 20 14:57:36.553: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 14:57:36.554: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/services/test-service/proxy/some/path/with/POST
  Apr 20 14:57:36.563: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 14:57:36.564: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5166/services/test-service/proxy/some/path/with/PUT
  Apr 20 14:57:36.571: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 14:57:36.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5166" for this suite. @ 04/20/24 14:57:36.581
â€¢ [2.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/20/24 14:57:36.596
  Apr 20 14:57:36.596: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:57:36.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:36.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:36.627
  STEP: Creating pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079 @ 04/20/24 14:57:36.632
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:57:38.665
  Apr 20 14:57:38.671: INFO: Initial restart count of pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd is 0
  Apr 20 14:57:38.678: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:40.690: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:42.698: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:44.709: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:46.719: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:48.728: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:50.737: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:52.748: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:54.756: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:56.770: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:57:58.781: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:00.791: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:02.802: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:04.817: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:06.828: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:08.843: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:10.854: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:12.868: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:14.879: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:16.893: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:18.904: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:20.917: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:22.928: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:24.939: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:26.950: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:28.960: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:30.970: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:32.981: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:34.994: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:37.008: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:39.022: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:41.035: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:43.051: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:45.062: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:47.077: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:49.091: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:51.102: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:53.119: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:55.131: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:57.143: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:58:59.154: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:01.165: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:03.176: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:05.187: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:07.196: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:09.210: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:11.221: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:13.232: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:15.244: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:17.257: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:19.266: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:21.279: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:23.291: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:25.305: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:27.316: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:29.327: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:31.338: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:33.346: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:35.358: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:37.371: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:39.383: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:41.394: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:43.409: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:45.419: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:47.431: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:49.444: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:51.455: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:53.465: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:55.478: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:57.485: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 14:59:59.497: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:01.510: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:03.518: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:05.526: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:07.533: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:09.556: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:11.564: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:13.573: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:15.581: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:17.617: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:19.636: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:21.645: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:23.656: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:25.666: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:27.676: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:29.685: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:31.693: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:33.699: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:35.708: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:37.718: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:39.729: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:41.737: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:43.755: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:45.764: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:47.773: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:49.783: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:51.792: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:53.798: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:55.806: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:57.814: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:00:59.825: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:01.834: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:03.841: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:05.848: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:07.857: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:09.864: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:11.884: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:13.893: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:15.910: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:17.919: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:19.929: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:21.938: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:23.947: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:25.958: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:27.967: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:29.976: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:31.986: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:33.998: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:36.010: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:38.018: INFO: Get pod liveness-97093caa-5643-42ec-abd4-9e05a6d898cd in namespace container-probe-8079
  Apr 20 15:01:40.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 15:01:40.031
  STEP: Destroying namespace "container-probe-8079" for this suite. @ 04/20/24 15:01:40.052
â€¢ [243.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 04/20/24 15:01:40.088
  Apr 20 15:01:40.088: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 15:01:40.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:01:40.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:01:40.177
  Apr 20 15:01:44.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-647" for this suite. @ 04/20/24 15:01:44.346
â€¢ [4.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 04/20/24 15:01:44.362
  Apr 20 15:01:44.362: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:01:44.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:01:44.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:01:44.397
  STEP: create the deployment @ 04/20/24 15:01:44.4
  W0420 15:01:44.410403      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 15:01:44.41
  STEP: delete the deployment @ 04/20/24 15:01:44.929
  STEP: wait for all rs to be garbage collected @ 04/20/24 15:01:44.942
  STEP: expected 0 rs, got 1 rs @ 04/20/24 15:01:44.96
  STEP: expected 0 pods, got 2 pods @ 04/20/24 15:01:44.989
  STEP: Gathering metrics @ 04/20/24 15:01:45.513
  Apr 20 15:01:45.833: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 15:01:45.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3416" for this suite. @ 04/20/24 15:01:45.842
â€¢ [1.497 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 04/20/24 15:01:45.86
  Apr 20 15:01:45.860: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:01:45.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:01:45.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:01:45.898
  STEP: Creating resourceQuota "e2e-rq-status-ddv48" @ 04/20/24 15:01:45.911
  Apr 20 15:01:45.928: INFO: Resource quota "e2e-rq-status-ddv48" reports spec: hard cpu limit of 500m
  Apr 20 15:01:45.928: INFO: Resource quota "e2e-rq-status-ddv48" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-ddv48" /status @ 04/20/24 15:01:45.928
  STEP: Confirm /status for "e2e-rq-status-ddv48" resourceQuota via watch @ 04/20/24 15:01:45.943
  Apr 20 15:01:45.948: INFO: observed resourceQuota "e2e-rq-status-ddv48" in namespace "resourcequota-3324" with hard status: v1.ResourceList(nil)
  Apr 20 15:01:45.949: INFO: Found resourceQuota "e2e-rq-status-ddv48" in namespace "resourcequota-3324" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 20 15:01:45.949: INFO: ResourceQuota "e2e-rq-status-ddv48" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/20/24 15:01:45.954
  Apr 20 15:01:45.974: INFO: Resource quota "e2e-rq-status-ddv48" reports spec: hard cpu limit of 1
  Apr 20 15:01:45.975: INFO: Resource quota "e2e-rq-status-ddv48" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-ddv48" /status @ 04/20/24 15:01:45.975
  STEP: Confirm /status for "e2e-rq-status-ddv48" resourceQuota via watch @ 04/20/24 15:01:45.983
  Apr 20 15:01:45.985: INFO: observed resourceQuota "e2e-rq-status-ddv48" in namespace "resourcequota-3324" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 20 15:01:45.985: INFO: observed resourceQuota "e2e-rq-status-ddv48" in namespace "resourcequota-3324" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 20 15:01:45.985: INFO: Found resourceQuota "e2e-rq-status-ddv48" in namespace "resourcequota-3324" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 20 15:01:45.985: INFO: ResourceQuota "e2e-rq-status-ddv48" /status was patched
  STEP: Get "e2e-rq-status-ddv48" /status @ 04/20/24 15:01:45.985
  Apr 20 15:01:45.996: INFO: Resourcequota "e2e-rq-status-ddv48" reports status: hard cpu of 1
  Apr 20 15:01:45.996: INFO: Resourcequota "e2e-rq-status-ddv48" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-ddv48" /status before checking Spec is unchanged @ 04/20/24 15:01:46.001
  Apr 20 15:01:46.010: INFO: Resourcequota "e2e-rq-status-ddv48" reports status: hard cpu of 2
  Apr 20 15:01:46.010: INFO: Resourcequota "e2e-rq-status-ddv48" reports status: hard memory of 2Gi
  Apr 20 15:01:46.013: INFO: Found resourceQuota "e2e-rq-status-ddv48" in namespace "resourcequota-3324" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 20 15:06:16.025: INFO: ResourceQuota "e2e-rq-status-ddv48" Spec was unchanged and /status reset
  Apr 20 15:06:16.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3324" for this suite. @ 04/20/24 15:06:16.036
â€¢ [270.189 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/20/24 15:06:16.05
  Apr 20 15:06:16.050: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:06:16.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:06:16.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:06:16.102
  STEP: Creating a test headless service @ 04/20/24 15:06:16.109
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4539.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-4539.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 15:06:16.123
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4539.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4539.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 15:06:16.124
  STEP: creating a pod to probe DNS @ 04/20/24 15:06:16.124
  STEP: submitting the pod to kubernetes @ 04/20/24 15:06:16.124
  STEP: retrieving the pod @ 04/20/24 15:06:18.238
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:06:18.248
  Apr 20 15:06:18.296: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-4539/dns-test-7285cd4b-6992-4bbb-8338-a50a8f10c81d: the server could not find the requested resource (get pods dns-test-7285cd4b-6992-4bbb-8338-a50a8f10c81d)
  Apr 20 15:06:18.297: INFO: Lookups using dns-4539/dns-test-7285cd4b-6992-4bbb-8338-a50a8f10c81d failed for: [jessie_hosts@dns-querier-2]

  Apr 20 15:06:18.346: INFO: Pod client logs for webserver: 
  Apr 20 15:06:18.362: INFO: Pod client logs for querier: 
  Apr 20 15:06:18.377: INFO: Pod client logs for jessie-querier: 
  Apr 20 15:06:23.406: INFO: DNS probes using dns-4539/dns-test-7285cd4b-6992-4bbb-8338-a50a8f10c81d succeeded

  Apr 20 15:06:23.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 15:06:23.415
  STEP: deleting the test headless service @ 04/20/24 15:06:23.445
  STEP: Destroying namespace "dns-4539" for this suite. @ 04/20/24 15:06:23.51
â€¢ [7.482 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/20/24 15:06:23.542
  Apr 20 15:06:23.542: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:06:23.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:06:23.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:06:23.599
  Apr 20 15:06:23.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1795" for this suite. @ 04/20/24 15:06:23.734
â€¢ [0.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/20/24 15:06:23.759
  Apr 20 15:06:23.759: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:06:23.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:06:23.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:06:23.812
  STEP: Setting up server cert @ 04/20/24 15:06:23.917
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:06:24.609
  STEP: Deploying the webhook pod @ 04/20/24 15:06:24.625
  STEP: Wait for the deployment to be ready @ 04/20/24 15:06:24.651
  Apr 20 15:06:24.668: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 15:06:26.687
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:06:26.71
  Apr 20 15:06:27.711: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/20/24 15:06:27.726
  STEP: create a pod that should be updated by the webhook @ 04/20/24 15:06:27.764
  Apr 20 15:06:27.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3175" for this suite. @ 04/20/24 15:06:27.962
  STEP: Destroying namespace "webhook-markers-2991" for this suite. @ 04/20/24 15:06:27.976
â€¢ [4.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 04/20/24 15:06:27.996
  Apr 20 15:06:27.996: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:06:27.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:06:28.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:06:28.041
  STEP: Creating a ResourceQuota @ 04/20/24 15:06:28.046
  STEP: Getting a ResourceQuota @ 04/20/24 15:06:28.056
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/20/24 15:06:28.061
  STEP: Patching the ResourceQuota @ 04/20/24 15:06:28.072
  STEP: Deleting a Collection of ResourceQuotas @ 04/20/24 15:06:28.083
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 15:06:28.116
  Apr 20 15:06:28.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2029" for this suite. @ 04/20/24 15:06:28.143
â€¢ [0.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 04/20/24 15:06:28.171
  Apr 20 15:06:28.171: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:06:28.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:06:28.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:06:28.22
  STEP: Creating service test in namespace statefulset-3437 @ 04/20/24 15:06:28.225
  STEP: Creating statefulset ss in namespace statefulset-3437 @ 04/20/24 15:06:28.279
  Apr 20 15:06:28.312: INFO: Found 0 stateful pods, waiting for 1
  Apr 20 15:06:38.324: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/20/24 15:06:38.338
  STEP: Getting /status @ 04/20/24 15:06:38.359
  Apr 20 15:06:38.371: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/20/24 15:06:38.371
  Apr 20 15:06:38.398: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/20/24 15:06:38.401
  Apr 20 15:06:38.411: INFO: Observed &StatefulSet event: ADDED
  Apr 20 15:06:38.411: INFO: Found Statefulset ss in namespace statefulset-3437 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 15:06:38.411: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 15:06:38.411
  Apr 20 15:06:38.411: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 15:06:38.452: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/20/24 15:06:38.452
  Apr 20 15:06:38.460: INFO: Observed &StatefulSet event: ADDED
  Apr 20 15:06:38.462: INFO: Deleting all statefulset in ns statefulset-3437
  Apr 20 15:06:38.478: INFO: Scaling statefulset ss to 0
  Apr 20 15:06:48.523: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:06:48.532: INFO: Deleting statefulset ss
  Apr 20 15:06:48.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3437" for this suite. @ 04/20/24 15:06:48.621
â€¢ [20.508 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 04/20/24 15:06:48.685
  Apr 20 15:06:48.686: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:06:48.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:06:48.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:06:48.738
  STEP: creating a ConfigMap @ 04/20/24 15:06:48.745
  STEP: fetching the ConfigMap @ 04/20/24 15:06:48.755
  STEP: patching the ConfigMap @ 04/20/24 15:06:48.761
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/20/24 15:06:48.771
  STEP: deleting the ConfigMap by collection with a label selector @ 04/20/24 15:06:48.779
  STEP: listing all ConfigMaps in test namespace @ 04/20/24 15:06:48.794
  Apr 20 15:06:48.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6253" for this suite. @ 04/20/24 15:06:48.811
â€¢ [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 04/20/24 15:06:48.838
  Apr 20 15:06:48.838: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:06:48.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:06:48.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:06:48.875
  STEP: Discovering how many secrets are in namespace by default @ 04/20/24 15:06:48.881
  STEP: Counting existing ResourceQuota @ 04/20/24 15:06:53.893
  STEP: Creating a ResourceQuota @ 04/20/24 15:06:58.904
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:06:58.916
  STEP: Creating a Secret @ 04/20/24 15:07:00.924
  STEP: Ensuring resource quota status captures secret creation @ 04/20/24 15:07:00.946
  STEP: Deleting a secret @ 04/20/24 15:07:02.957
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:07:02.97
  Apr 20 15:07:04.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8057" for this suite. @ 04/20/24 15:07:04.994
â€¢ [16.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/20/24 15:07:05.02
  Apr 20 15:07:05.021: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:07:05.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:07:05.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:07:05.101
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-493 @ 04/20/24 15:07:05.106
  STEP: changing the ExternalName service to type=ClusterIP @ 04/20/24 15:07:05.121
  STEP: creating replication controller externalname-service in namespace services-493 @ 04/20/24 15:07:05.153
  I0420 15:07:05.176939      15 runners.go:197] Created replication controller with name: externalname-service, namespace: services-493, replica count: 2
  I0420 15:07:08.228552      15 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 15:07:08.228: INFO: Creating new exec pod
  Apr 20 15:07:11.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-493 exec execpod78ttx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 15:07:11.666: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 15:07:11.666: INFO: stdout: ""
  Apr 20 15:07:12.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-493 exec execpod78ttx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 15:07:12.991: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 15:07:12.991: INFO: stdout: "externalname-service-rzrkr"
  Apr 20 15:07:12.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-493 exec execpod78ttx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.182 80'
  Apr 20 15:07:13.280: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.182 80\nConnection to 10.233.14.182 80 port [tcp/http] succeeded!\n"
  Apr 20 15:07:13.280: INFO: stdout: ""
  Apr 20 15:07:14.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-493 exec execpod78ttx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.182 80'
  Apr 20 15:07:14.519: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.182 80\nConnection to 10.233.14.182 80 port [tcp/http] succeeded!\n"
  Apr 20 15:07:14.519: INFO: stdout: "externalname-service-rzrkr"
  Apr 20 15:07:14.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:07:14.530: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-493" for this suite. @ 04/20/24 15:07:14.57
â€¢ [9.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/20/24 15:07:14.588
  Apr 20 15:07:14.588: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/20/24 15:07:14.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:07:14.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:07:14.634
  Apr 20 15:07:14.638: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 15:08:14.729: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 15:08:14.738: INFO: Starting informer...
  STEP: Starting pods... @ 04/20/24 15:08:14.738
  Apr 20 15:08:14.979: INFO: Pod1 is running on aat3reeth3ee-3. Tainting Node
  Apr 20 15:08:17.230: INFO: Pod2 is running on aat3reeth3ee-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 15:08:17.232
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 15:08:17.252
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/20/24 15:08:17.269
  Apr 20 15:08:23.605: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Apr 20 15:08:42.705: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Apr 20 15:08:42.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 15:08:42.741
  STEP: Destroying namespace "taint-multiple-pods-2379" for this suite. @ 04/20/24 15:08:42.751
â€¢ [88.175 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/20/24 15:08:42.766
  Apr 20 15:08:42.766: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:08:42.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:08:42.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:08:42.832
  STEP: Creating a test headless service @ 04/20/24 15:08:42.838
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1406 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1406;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1406 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1406;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1406.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1406.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1406.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1406.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1406.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1406.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1406.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1406.svc;check="$$(dig +notcp +noall +answer +search 145.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.145_udp@PTR;check="$$(dig +tcp +noall +answer +search 145.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.145_tcp@PTR;sleep 1; done
   @ 04/20/24 15:08:42.879
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1406 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1406;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1406 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1406;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1406.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1406.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1406.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1406.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1406.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1406.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1406.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1406.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1406.svc;check="$$(dig +notcp +noall +answer +search 145.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.145_udp@PTR;check="$$(dig +tcp +noall +answer +search 145.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.145_tcp@PTR;sleep 1; done
   @ 04/20/24 15:08:42.88
  STEP: creating a pod to probe DNS @ 04/20/24 15:08:42.88
  STEP: submitting the pod to kubernetes @ 04/20/24 15:08:42.881
  STEP: retrieving the pod @ 04/20/24 15:08:44.935
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:08:44.943
  Apr 20 15:08:44.956: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:44.962: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:44.972: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:44.979: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:44.987: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:44.996: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.002: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.009: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.051: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.060: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.067: INFO: Unable to read jessie_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.073: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.081: INFO: Unable to read jessie_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.088: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.094: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.101: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:45.131: INFO: Lookups using dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1406 wheezy_tcp@dns-test-service.dns-1406 wheezy_udp@dns-test-service.dns-1406.svc wheezy_tcp@dns-test-service.dns-1406.svc wheezy_udp@_http._tcp.dns-test-service.dns-1406.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1406.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1406 jessie_tcp@dns-test-service.dns-1406 jessie_udp@dns-test-service.dns-1406.svc jessie_tcp@dns-test-service.dns-1406.svc jessie_udp@_http._tcp.dns-test-service.dns-1406.svc jessie_tcp@_http._tcp.dns-test-service.dns-1406.svc]

  Apr 20 15:08:45.162: INFO: Pod client logs for webserver: 
  Apr 20 15:08:45.181: INFO: Pod client logs for querier: 
  Apr 20 15:08:45.198: INFO: Pod client logs for jessie-querier: 
  Apr 20 15:08:50.207: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.216: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.265: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.272: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.279: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.291: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.347: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.354: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.362: INFO: Unable to read jessie_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.370: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.375: INFO: Unable to read jessie_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.384: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:50.433: INFO: Lookups using dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1406 wheezy_tcp@dns-test-service.dns-1406 wheezy_udp@dns-test-service.dns-1406.svc wheezy_tcp@dns-test-service.dns-1406.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1406 jessie_tcp@dns-test-service.dns-1406 jessie_udp@dns-test-service.dns-1406.svc jessie_tcp@dns-test-service.dns-1406.svc]

  Apr 20 15:08:50.448: INFO: Pod client logs for webserver: 
  Apr 20 15:08:50.461: INFO: Pod client logs for querier: 
  Apr 20 15:08:50.475: INFO: Pod client logs for jessie-querier: 
  Apr 20 15:08:55.209: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.217: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.223: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.230: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.238: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.244: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.295: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.302: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.307: INFO: Unable to read jessie_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.313: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.318: INFO: Unable to read jessie_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.325: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:08:55.372: INFO: Lookups using dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1406 wheezy_tcp@dns-test-service.dns-1406 wheezy_udp@dns-test-service.dns-1406.svc wheezy_tcp@dns-test-service.dns-1406.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1406 jessie_tcp@dns-test-service.dns-1406 jessie_udp@dns-test-service.dns-1406.svc jessie_tcp@dns-test-service.dns-1406.svc]

  Apr 20 15:08:55.386: INFO: Pod client logs for webserver: 
  Apr 20 15:08:55.398: INFO: Pod client logs for querier: 
  Apr 20 15:08:55.410: INFO: Pod client logs for jessie-querier: 
  Apr 20 15:09:00.207: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.213: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.220: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.227: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.235: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.241: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.296: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.302: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.308: INFO: Unable to read jessie_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.316: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.323: INFO: Unable to read jessie_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.329: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:00.374: INFO: Lookups using dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1406 wheezy_tcp@dns-test-service.dns-1406 wheezy_udp@dns-test-service.dns-1406.svc wheezy_tcp@dns-test-service.dns-1406.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1406 jessie_tcp@dns-test-service.dns-1406 jessie_udp@dns-test-service.dns-1406.svc jessie_tcp@dns-test-service.dns-1406.svc]

  Apr 20 15:09:00.387: INFO: Pod client logs for webserver: 
  Apr 20 15:09:00.396: INFO: Pod client logs for querier: 
  Apr 20 15:09:00.408: INFO: Pod client logs for jessie-querier: 
  Apr 20 15:09:05.211: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.219: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.226: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.232: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.241: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.249: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.297: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.306: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.312: INFO: Unable to read jessie_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.321: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.329: INFO: Unable to read jessie_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.336: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:05.371: INFO: Lookups using dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1406 wheezy_tcp@dns-test-service.dns-1406 wheezy_udp@dns-test-service.dns-1406.svc wheezy_tcp@dns-test-service.dns-1406.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1406 jessie_tcp@dns-test-service.dns-1406 jessie_udp@dns-test-service.dns-1406.svc jessie_tcp@dns-test-service.dns-1406.svc]

  Apr 20 15:09:05.382: INFO: Pod client logs for webserver: 
  Apr 20 15:09:05.394: INFO: Pod client logs for querier: 
  Apr 20 15:09:05.406: INFO: Pod client logs for jessie-querier: 
  Apr 20 15:09:10.209: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.250: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.257: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.277: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.293: INFO: Unable to read wheezy_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.308: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.389: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.399: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.410: INFO: Unable to read jessie_udp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.420: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406 from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.434: INFO: Unable to read jessie_udp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.454: INFO: Unable to read jessie_tcp@dns-test-service.dns-1406.svc from pod dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678: the server could not find the requested resource (get pods dns-test-4ce9724a-c479-4150-a195-d9626c95d678)
  Apr 20 15:09:10.546: INFO: Lookups using dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1406 wheezy_tcp@dns-test-service.dns-1406 wheezy_udp@dns-test-service.dns-1406.svc wheezy_tcp@dns-test-service.dns-1406.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1406 jessie_tcp@dns-test-service.dns-1406 jessie_udp@dns-test-service.dns-1406.svc jessie_tcp@dns-test-service.dns-1406.svc]

  Apr 20 15:09:10.563: INFO: Pod client logs for webserver: 
  Apr 20 15:09:10.575: INFO: Pod client logs for querier: 
  Apr 20 15:09:10.588: INFO: Pod client logs for jessie-querier: 
  Apr 20 15:09:15.349: INFO: DNS probes using dns-1406/dns-test-4ce9724a-c479-4150-a195-d9626c95d678 succeeded

  Apr 20 15:09:15.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 15:09:15.357
  STEP: deleting the test service @ 04/20/24 15:09:15.392
  STEP: deleting the test headless service @ 04/20/24 15:09:15.483
  STEP: Destroying namespace "dns-1406" for this suite. @ 04/20/24 15:09:15.525
â€¢ [32.783 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 04/20/24 15:09:15.553
  Apr 20 15:09:15.553: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 15:09:15.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:15.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:15.593
  STEP: reading a file in the container @ 04/20/24 15:09:17.643
  Apr 20 15:09:17.643: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4525 pod-service-account-f331daf6-996d-42f2-a986-00ca84c78a3e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/20/24 15:09:17.973
  Apr 20 15:09:17.974: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4525 pod-service-account-f331daf6-996d-42f2-a986-00ca84c78a3e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/20/24 15:09:18.252
  Apr 20 15:09:18.253: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4525 pod-service-account-f331daf6-996d-42f2-a986-00ca84c78a3e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 20 15:09:18.506: INFO: Got root ca configmap in namespace "svcaccounts-4525"
  Apr 20 15:09:18.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4525" for this suite. @ 04/20/24 15:09:18.521
â€¢ [2.976 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/20/24 15:09:18.532
  Apr 20 15:09:18.532: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename containers @ 04/20/24 15:09:18.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:18.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:18.569
  STEP: Creating a pod to test override all @ 04/20/24 15:09:18.574
  STEP: Saw pod success @ 04/20/24 15:09:22.618
  Apr 20 15:09:22.624: INFO: Trying to get logs from node aat3reeth3ee-3 pod client-containers-40e3bf41-ada2-4bf1-97e2-eff81212ff22 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:09:22.648
  Apr 20 15:09:22.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2023" for this suite. @ 04/20/24 15:09:22.694
â€¢ [4.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/20/24 15:09:22.728
  Apr 20 15:09:22.728: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:09:22.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:22.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:22.763
  Apr 20 15:09:24.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:09:24.825: INFO: Deleting pod "var-expansion-53e6ea4e-d417-48f9-a418-5f2f78bd49c6" in namespace "var-expansion-1721"
  Apr 20 15:09:24.849: INFO: Wait up to 5m0s for pod "var-expansion-53e6ea4e-d417-48f9-a418-5f2f78bd49c6" to be fully deleted
  STEP: Destroying namespace "var-expansion-1721" for this suite. @ 04/20/24 15:09:26.874
â€¢ [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/20/24 15:09:26.896
  Apr 20 15:09:26.896: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:09:26.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:26.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:26.933
  STEP: Setting up server cert @ 04/20/24 15:09:26.993
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:09:28.551
  STEP: Deploying the webhook pod @ 04/20/24 15:09:28.572
  STEP: Wait for the deployment to be ready @ 04/20/24 15:09:28.598
  Apr 20 15:09:28.628: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 15:09:30.649
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:09:30.669
  Apr 20 15:09:31.669: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/20/24 15:09:31.685
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 15:09:31.724
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/20/24 15:09:31.739
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 15:09:31.761
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/20/24 15:09:31.782
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 15:09:31.797
  Apr 20 15:09:31.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9053" for this suite. @ 04/20/24 15:09:31.921
  STEP: Destroying namespace "webhook-markers-7178" for this suite. @ 04/20/24 15:09:31.939
â€¢ [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/20/24 15:09:31.969
  Apr 20 15:09:31.970: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:09:31.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:32.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:32.021
  STEP: Creating projection with secret that has name projected-secret-test-4fc8fafe-6ad2-44a8-9983-f2fdaa0e0722 @ 04/20/24 15:09:32.032
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:09:32.043
  STEP: Saw pod success @ 04/20/24 15:09:36.086
  Apr 20 15:09:36.093: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-secrets-63adb878-3fdd-45eb-a9de-8293a6fe31a7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:09:36.109
  Apr 20 15:09:36.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9901" for this suite. @ 04/20/24 15:09:36.186
â€¢ [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 04/20/24 15:09:36.203
  Apr 20 15:09:36.204: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:09:36.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:36.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:36.241
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 15:09:36.247
  STEP: Saw pod success @ 04/20/24 15:09:40.299
  Apr 20 15:09:40.306: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-7fc3f64c-1ca5-4c7a-9a68-e2a8e0a1aea1 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:09:40.32
  Apr 20 15:09:40.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8755" for this suite. @ 04/20/24 15:09:40.367
â€¢ [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/20/24 15:09:40.394
  Apr 20 15:09:40.394: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:09:40.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:40.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:40.445
  Apr 20 15:09:40.452: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:09:43.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7407" for this suite. @ 04/20/24 15:09:43.864
â€¢ [3.480 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/20/24 15:09:43.875
  Apr 20 15:09:43.875: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:09:43.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:09:43.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:09:43.911
  Apr 20 15:10:06.078: INFO: Container started at 2024-04-20 15:09:44 +0000 UTC, pod became ready at 2024-04-20 15:10:04 +0000 UTC
  Apr 20 15:10:06.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2243" for this suite. @ 04/20/24 15:10:06.094
â€¢ [22.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/20/24 15:10:06.12
  Apr 20 15:10:06.120: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:10:06.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:06.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:06.164
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 15:10:06.264
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:10:06.275
  Apr 20 15:10:06.293: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:10:06.293: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  Apr 20 15:10:07.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 15:10:07.338: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  Apr 20 15:10:08.310: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:10:08.310: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/20/24 15:10:08.315
  Apr 20 15:10:08.327: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/20/24 15:10:08.327
  Apr 20 15:10:08.341: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/20/24 15:10:08.342
  Apr 20 15:10:08.348: INFO: Observed &DaemonSet event: ADDED
  Apr 20 15:10:08.349: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.350: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.351: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.352: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.352: INFO: Found daemon set daemon-set in namespace daemonsets-4921 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 15:10:08.352: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/20/24 15:10:08.353
  STEP: watching for the daemon set status to be patched @ 04/20/24 15:10:08.365
  Apr 20 15:10:08.371: INFO: Observed &DaemonSet event: ADDED
  Apr 20 15:10:08.372: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.372: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.374: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.374: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.374: INFO: Observed daemon set daemon-set in namespace daemonsets-4921 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 15:10:08.375: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:10:08.375: INFO: Found daemon set daemon-set in namespace daemonsets-4921 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 20 15:10:08.376: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:10:08.384
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4921, will wait for the garbage collector to delete the pods @ 04/20/24 15:10:08.384
  Apr 20 15:10:08.457: INFO: Deleting DaemonSet.extensions daemon-set took: 15.520003ms
  Apr 20 15:10:08.557: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.705631ms
  Apr 20 15:10:10.070: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:10:10.070: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:10:10.079: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46981"},"items":null}

  Apr 20 15:10:10.083: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46981"},"items":null}

  Apr 20 15:10:10.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4921" for this suite. @ 04/20/24 15:10:10.122
â€¢ [4.014 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 04/20/24 15:10:10.135
  Apr 20 15:10:10.135: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 15:10:10.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:10.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:10.175
  STEP: Performing setup for networking test in namespace pod-network-test-3969 @ 04/20/24 15:10:10.18
  STEP: creating a selector @ 04/20/24 15:10:10.18
  STEP: Creating the service pods in kubernetes @ 04/20/24 15:10:10.18
  Apr 20 15:10:10.180: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/20/24 15:10:22.386
  Apr 20 15:10:24.448: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 15:10:24.448: INFO: Going to poll 10.233.64.82 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 15:10:24.454: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.82 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:10:24.454: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:10:24.457: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:10:24.457: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.82+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 15:10:25.606: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 20 15:10:25.608: INFO: Going to poll 10.233.65.96 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 15:10:25.616: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.96 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:10:25.616: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:10:25.618: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:10:25.619: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.96+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 15:10:26.728: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 20 15:10:26.728: INFO: Going to poll 10.233.66.239 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 15:10:26.734: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.239 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:10:26.734: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:10:26.736: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:10:26.736: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.239+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 15:10:27.832: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 20 15:10:27.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3969" for this suite. @ 04/20/24 15:10:27.846
â€¢ [17.730 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 04/20/24 15:10:27.867
  Apr 20 15:10:27.867: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 15:10:27.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:27.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:27.911
  STEP: Creating ServiceAccount "e2e-sa-7tqpn"  @ 04/20/24 15:10:27.915
  Apr 20 15:10:27.924: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7tqpn"  @ 04/20/24 15:10:27.924
  Apr 20 15:10:27.937: INFO: AutomountServiceAccountToken: true
  Apr 20 15:10:27.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-801" for this suite. @ 04/20/24 15:10:27.946
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/20/24 15:10:27.967
  Apr 20 15:10:27.967: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:10:27.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:28.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:28.008
  STEP: Creating secret with name secret-test-eac8c7a9-227e-4f22-8513-427ee80c0315 @ 04/20/24 15:10:28.012
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:10:28.02
  STEP: Saw pod success @ 04/20/24 15:10:32.068
  Apr 20 15:10:32.074: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-9a942143-e273-4906-8d7d-175fb8d4b7fb container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:10:32.084
  Apr 20 15:10:32.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2854" for this suite. @ 04/20/24 15:10:32.13
â€¢ [4.178 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 04/20/24 15:10:32.146
  Apr 20 15:10:32.147: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:10:32.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:32.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:32.189
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/20/24 15:10:32.194
  STEP: Saw pod success @ 04/20/24 15:10:36.255
  Apr 20 15:10:36.262: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-2ff5309d-ca5d-4f21-91d7-076470a77b1c container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:10:36.278
  Apr 20 15:10:36.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-660" for this suite. @ 04/20/24 15:10:36.313
â€¢ [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 04/20/24 15:10:36.34
  Apr 20 15:10:36.340: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename controllerrevisions @ 04/20/24 15:10:36.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:36.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:36.372
  STEP: Creating DaemonSet "e2e-bnsvg-daemon-set" @ 04/20/24 15:10:36.415
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:10:36.428
  Apr 20 15:10:36.450: INFO: Number of nodes with available pods controlled by daemonset e2e-bnsvg-daemon-set: 0
  Apr 20 15:10:36.450: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  Apr 20 15:10:37.478: INFO: Number of nodes with available pods controlled by daemonset e2e-bnsvg-daemon-set: 1
  Apr 20 15:10:37.478: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  Apr 20 15:10:38.470: INFO: Number of nodes with available pods controlled by daemonset e2e-bnsvg-daemon-set: 3
  Apr 20 15:10:38.470: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-bnsvg-daemon-set
  STEP: Confirm DaemonSet "e2e-bnsvg-daemon-set" successfully created with "daemonset-name=e2e-bnsvg-daemon-set" label @ 04/20/24 15:10:38.478
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-bnsvg-daemon-set" @ 04/20/24 15:10:38.489
  Apr 20 15:10:38.495: INFO: Located ControllerRevision: "e2e-bnsvg-daemon-set-7b6d74f497"
  STEP: Patching ControllerRevision "e2e-bnsvg-daemon-set-7b6d74f497" @ 04/20/24 15:10:38.5
  Apr 20 15:10:38.510: INFO: e2e-bnsvg-daemon-set-7b6d74f497 has been patched
  STEP: Create a new ControllerRevision @ 04/20/24 15:10:38.51
  Apr 20 15:10:38.520: INFO: Created ControllerRevision: e2e-bnsvg-daemon-set-f6d9ddf45
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 15:10:38.52
  Apr 20 15:10:38.520: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 15:10:38.525: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-bnsvg-daemon-set-7b6d74f497" @ 04/20/24 15:10:38.525
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 15:10:38.534
  Apr 20 15:10:38.535: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 15:10:38.541: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-bnsvg-daemon-set-f6d9ddf45" @ 04/20/24 15:10:38.547
  Apr 20 15:10:38.564: INFO: e2e-bnsvg-daemon-set-f6d9ddf45 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/20/24 15:10:38.564
  W0420 15:10:38.584319      15 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 15:10:38.584
  Apr 20 15:10:38.584: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 15:10:39.596: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 15:10:39.601: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-bnsvg-daemon-set-f6d9ddf45=updated" @ 04/20/24 15:10:39.602
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 15:10:39.625
  Apr 20 15:10:39.625: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 15:10:39.631: INFO: Found 1 ControllerRevisions
  Apr 20 15:10:39.638: INFO: ControllerRevision "e2e-bnsvg-daemon-set-586858fc76" has revision 3
  STEP: Deleting DaemonSet "e2e-bnsvg-daemon-set" @ 04/20/24 15:10:39.645
  STEP: deleting DaemonSet.extensions e2e-bnsvg-daemon-set in namespace controllerrevisions-1582, will wait for the garbage collector to delete the pods @ 04/20/24 15:10:39.645
  Apr 20 15:10:39.713: INFO: Deleting DaemonSet.extensions e2e-bnsvg-daemon-set took: 11.551094ms
  Apr 20 15:10:39.814: INFO: Terminating DaemonSet.extensions e2e-bnsvg-daemon-set pods took: 101.139963ms
  Apr 20 15:10:42.226: INFO: Number of nodes with available pods controlled by daemonset e2e-bnsvg-daemon-set: 0
  Apr 20 15:10:42.226: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-bnsvg-daemon-set
  Apr 20 15:10:42.266: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47312"},"items":null}

  Apr 20 15:10:42.273: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47312"},"items":null}

  Apr 20 15:10:42.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1582" for this suite. @ 04/20/24 15:10:42.315
â€¢ [5.991 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 04/20/24 15:10:42.332
  Apr 20 15:10:42.332: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename job @ 04/20/24 15:10:42.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:42.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:42.372
  STEP: Creating a job @ 04/20/24 15:10:42.377
  STEP: Ensuring job reaches completions @ 04/20/24 15:10:42.387
  Apr 20 15:10:52.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9157" for this suite. @ 04/20/24 15:10:52.404
â€¢ [10.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 04/20/24 15:10:52.424
  Apr 20 15:10:52.424: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename discovery @ 04/20/24 15:10:52.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:52.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:52.458
  STEP: Setting up server cert @ 04/20/24 15:10:52.471
  STEP: Requesting APIResourceList from "/api/v1" @ 04/20/24 15:10:53.5
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/20/24 15:10:53.503
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/20/24 15:10:53.505
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/20/24 15:10:53.507
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/20/24 15:10:53.509
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/20/24 15:10:53.511
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/20/24 15:10:53.513
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/20/24 15:10:53.515
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/20/24 15:10:53.519
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/20/24 15:10:53.521
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/20/24 15:10:53.524
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/20/24 15:10:53.526
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/20/24 15:10:53.53
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/20/24 15:10:53.532
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/20/24 15:10:53.534
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/20/24 15:10:53.536
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/20/24 15:10:53.541
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/20/24 15:10:53.543
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/20/24 15:10:53.544
  Apr 20 15:10:53.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4094" for this suite. @ 04/20/24 15:10:53.562
â€¢ [1.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 04/20/24 15:10:53.592
  Apr 20 15:10:53.592: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:10:53.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:53.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:53.65
  STEP: create the rc @ 04/20/24 15:10:53.682
  W0420 15:10:53.697767      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/20/24 15:10:59.713
  STEP: wait for the rc to be deleted @ 04/20/24 15:10:59.773
  Apr 20 15:11:00.859: INFO: 80 pods remaining
  Apr 20 15:11:00.859: INFO: 80 pods has nil DeletionTimestamp
  Apr 20 15:11:00.859: INFO: 
  Apr 20 15:11:01.916: INFO: 72 pods remaining
  Apr 20 15:11:01.916: INFO: 70 pods has nil DeletionTimestamp
  Apr 20 15:11:01.916: INFO: 
  Apr 20 15:11:02.875: INFO: 59 pods remaining
  Apr 20 15:11:02.875: INFO: 59 pods has nil DeletionTimestamp
  Apr 20 15:11:02.875: INFO: 
  Apr 20 15:11:03.976: INFO: 40 pods remaining
  Apr 20 15:11:03.976: INFO: 40 pods has nil DeletionTimestamp
  Apr 20 15:11:03.976: INFO: 
  Apr 20 15:11:04.946: INFO: 31 pods remaining
  Apr 20 15:11:04.947: INFO: 30 pods has nil DeletionTimestamp
  Apr 20 15:11:04.947: INFO: 
  Apr 20 15:11:05.980: INFO: 18 pods remaining
  Apr 20 15:11:05.980: INFO: 17 pods has nil DeletionTimestamp
  Apr 20 15:11:05.980: INFO: 
  Apr 20 15:11:06.840: INFO: 0 pods remaining
  Apr 20 15:11:06.840: INFO: 0 pods has nil DeletionTimestamp
  Apr 20 15:11:06.840: INFO: 
  STEP: Gathering metrics @ 04/20/24 15:11:07.801
  Apr 20 15:11:08.788: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 15:11:08.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4544" for this suite. @ 04/20/24 15:11:08.824
â€¢ [15.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/20/24 15:11:08.891
  Apr 20 15:11:08.891: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:11:08.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:08.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:09.007
  STEP: Creating projection with secret that has name projected-secret-test-2f6f9379-f4af-481d-9f92-dfde9f633d06 @ 04/20/24 15:11:09.025
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:11:09.048
  STEP: Saw pod success @ 04/20/24 15:11:15.156
  Apr 20 15:11:15.166: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-secrets-ac596255-270e-4548-b10c-225feeb48908 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:11:15.188
  Apr 20 15:11:15.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2074" for this suite. @ 04/20/24 15:11:15.276
â€¢ [6.414 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 04/20/24 15:11:15.306
  Apr 20 15:11:15.306: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:11:15.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:15.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:15.423
  STEP: Creating configMap with name projected-configmap-test-volume-9902ed6c-7658-467e-bb7f-ce2bde5c8ce4 @ 04/20/24 15:11:15.428
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:11:15.452
  STEP: Saw pod success @ 04/20/24 15:11:19.546
  Apr 20 15:11:19.555: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-configmaps-e3f7b08c-39da-46b0-b7e4-6c9762fe4435 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:11:19.575
  Apr 20 15:11:19.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2895" for this suite. @ 04/20/24 15:11:19.626
â€¢ [4.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 04/20/24 15:11:19.656
  Apr 20 15:11:19.656: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:11:19.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:19.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:19.706
  STEP: Counting existing ResourceQuota @ 04/20/24 15:11:36.727
  STEP: Creating a ResourceQuota @ 04/20/24 15:11:41.74
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:11:41.758
  STEP: Creating a ConfigMap @ 04/20/24 15:11:43.766
  STEP: Ensuring resource quota status captures configMap creation @ 04/20/24 15:11:43.789
  STEP: Deleting a ConfigMap @ 04/20/24 15:11:45.804
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:11:45.821
  Apr 20 15:11:47.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5842" for this suite. @ 04/20/24 15:11:47.841
â€¢ [28.201 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/20/24 15:11:47.857
  Apr 20 15:11:47.857: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename init-container @ 04/20/24 15:11:47.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:47.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:47.891
  STEP: creating the pod @ 04/20/24 15:11:47.897
  Apr 20 15:11:47.897: INFO: PodSpec: initContainers in spec.initContainers
  Apr 20 15:11:51.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6383" for this suite. @ 04/20/24 15:11:51.418
â€¢ [3.572 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 04/20/24 15:11:51.436
  Apr 20 15:11:51.436: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename events @ 04/20/24 15:11:51.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:51.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:51.48
  STEP: Create set of events @ 04/20/24 15:11:51.487
  Apr 20 15:11:51.497: INFO: created test-event-1
  Apr 20 15:11:51.505: INFO: created test-event-2
  Apr 20 15:11:51.513: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 15:11:51.513
  STEP: delete collection of events @ 04/20/24 15:11:51.519
  Apr 20 15:11:51.519: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 15:11:51.555
  Apr 20 15:11:51.555: INFO: requesting list of events to confirm quantity
  Apr 20 15:11:51.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9771" for this suite. @ 04/20/24 15:11:51.569
â€¢ [0.148 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 04/20/24 15:11:51.583
  Apr 20 15:11:51.583: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 15:11:51.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:51.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:51.617
  Apr 20 15:11:51.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9606" for this suite. @ 04/20/24 15:11:51.643
â€¢ [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 04/20/24 15:11:51.66
  Apr 20 15:11:51.660: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 15:11:51.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:51.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:51.707
  STEP: creating a ReplicationController @ 04/20/24 15:11:51.719
  STEP: waiting for RC to be added @ 04/20/24 15:11:51.731
  STEP: waiting for available Replicas @ 04/20/24 15:11:51.731
  STEP: patching ReplicationController @ 04/20/24 15:11:52.447
  STEP: waiting for RC to be modified @ 04/20/24 15:11:52.461
  STEP: patching ReplicationController status @ 04/20/24 15:11:52.463
  STEP: waiting for RC to be modified @ 04/20/24 15:11:52.476
  STEP: waiting for available Replicas @ 04/20/24 15:11:52.476
  STEP: fetching ReplicationController status @ 04/20/24 15:11:52.486
  STEP: patching ReplicationController scale @ 04/20/24 15:11:52.493
  STEP: waiting for RC to be modified @ 04/20/24 15:11:52.505
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/20/24 15:11:52.505
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/20/24 15:11:53.692
  STEP: updating ReplicationController status @ 04/20/24 15:11:53.698
  STEP: waiting for RC to be modified @ 04/20/24 15:11:53.708
  STEP: listing all ReplicationControllers @ 04/20/24 15:11:53.708
  STEP: checking that ReplicationController has expected values @ 04/20/24 15:11:53.714
  STEP: deleting ReplicationControllers by collection @ 04/20/24 15:11:53.714
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/20/24 15:11:53.731
  Apr 20 15:11:53.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:11:53.837125      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5939" for this suite. @ 04/20/24 15:11:53.845
â€¢ [2.195 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 04/20/24 15:11:53.857
  Apr 20 15:11:53.857: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:11:53.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:53.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:53.888
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:11:53.893
  E0420 15:11:54.838214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:55.838501      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:56.838611      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:57.839031      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:11:57.93
  Apr 20 15:11:57.936: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-d0446879-9b23-4d38-b906-98fc21b9abd1 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:11:57.949
  Apr 20 15:11:57.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-631" for this suite. @ 04/20/24 15:11:57.98
â€¢ [4.133 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 04/20/24 15:11:57.991
  Apr 20 15:11:57.991: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:11:57.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:58.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:58.026
  STEP: Creating service test in namespace statefulset-6988 @ 04/20/24 15:11:58.03
  STEP: Creating a new StatefulSet @ 04/20/24 15:11:58.039
  Apr 20 15:11:58.069: INFO: Found 0 stateful pods, waiting for 3
  E0420 15:11:58.839949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:59.840186      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:00.840798      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:01.841071      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:02.841295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:03.842453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:04.843538      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:05.844077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:06.844563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:07.844817      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:12:08.080: INFO: Found 1 stateful pods, waiting for 3
  E0420 15:12:08.845578      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:09.845659      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:10.846194      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:11.846833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:12.846713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:13.846989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:14.846986      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:15.847219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:16.851386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:17.847691      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:12:18.082: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:12:18.082: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:12:18.082: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:12:18.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-6988 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:12:18.444: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:12:18.444: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:12:18.444: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0420 15:12:18.847748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:19.850783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:20.850929      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:21.851360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:22.852025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:23.852390      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:24.852333      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:25.853019      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:26.853001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:27.853933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 15:12:28.48
  Apr 20 15:12:28.519: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 15:12:28.519
  E0420 15:12:28.853397      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:29.854553      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:30.855519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:31.855745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:32.856477      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:33.884212      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:34.864552      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:35.864669      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:36.865566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:37.866245      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/20/24 15:12:38.559
  Apr 20 15:12:38.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-6988 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0420 15:12:38.866445      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:12:38.881: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:12:38.881: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:12:38.881: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0420 15:12:39.869940      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:40.867015      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:41.867688      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:42.867474      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:43.868454      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:44.869409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:45.869918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:46.870713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:47.870885      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:48.871086      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:12:48.933: INFO: Waiting for StatefulSet statefulset-6988/ss2 to complete update
  Apr 20 15:12:48.933: INFO: Waiting for Pod statefulset-6988/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 15:12:48.933: INFO: Waiting for Pod statefulset-6988/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 15:12:49.871072      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:50.872025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:51.873024      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:52.873551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:53.874071      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:54.874217      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:55.874526      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:56.874968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:57.875502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:58.876342      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:12:58.964: INFO: Waiting for StatefulSet statefulset-6988/ss2 to complete update
  Apr 20 15:12:58.964: INFO: Waiting for Pod statefulset-6988/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 15:12:59.877510      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:00.877430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:01.877970      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:02.880426      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:03.879404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:04.880430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:05.881045      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:06.881266      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:07.881909      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:08.882409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:13:08.955: INFO: Waiting for StatefulSet statefulset-6988/ss2 to complete update
  Apr 20 15:13:08.955: INFO: Waiting for Pod statefulset-6988/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 15:13:09.883457      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:10.884041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:11.884406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:12.884579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:13.885208      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:14.885878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:15.886776      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:16.886998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:17.887213      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:18.887773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:13:18.948: INFO: Waiting for StatefulSet statefulset-6988/ss2 to complete update
  E0420 15:13:19.888992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:20.889477      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:21.892175      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:22.891356      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:23.891610      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:24.891805      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:25.891988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:26.892181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:27.892655      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:28.893293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/20/24 15:13:28.95
  Apr 20 15:13:28.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-6988 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:13:29.253: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:13:29.253: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:13:29.253: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0420 15:13:29.893674      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:30.894301      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:31.895174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:32.895206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:33.895386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:34.895772      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:35.896880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:36.898295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:37.898327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:38.899604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:13:39.317: INFO: Updating stateful set ss2
  E0420 15:13:39.900766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:40.900868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:41.901408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:42.901278      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:43.901815      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:44.902875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:45.902695      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:46.902998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:47.903320      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:48.903391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/20/24 15:13:49.36
  Apr 20 15:13:49.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-6988 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:13:49.679: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:13:49.679: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:13:49.679: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0420 15:13:49.904071      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:50.904717      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:51.905011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:52.905627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:53.905583      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:54.906637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:55.907343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:56.907493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:57.907964      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:58.908650      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:13:59.736: INFO: Deleting all statefulset in ns statefulset-6988
  Apr 20 15:13:59.745: INFO: Scaling statefulset ss2 to 0
  E0420 15:13:59.909360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:00.909565      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:01.910011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:02.910570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:03.911561      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:04.912737      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:05.912848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:06.913538      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:07.913545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:08.913960      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:14:09.796: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:14:09.808: INFO: Deleting statefulset ss2
  Apr 20 15:14:09.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6988" for this suite. @ 04/20/24 15:14:09.851
â€¢ [131.881 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/20/24 15:14:09.876
  Apr 20 15:14:09.876: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:14:09.881
  E0420 15:14:09.914530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:09.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:09.92
  STEP: Creating a cronjob @ 04/20/24 15:14:09.924
  STEP: creating @ 04/20/24 15:14:09.924
  STEP: getting @ 04/20/24 15:14:09.937
  STEP: listing @ 04/20/24 15:14:09.943
  STEP: watching @ 04/20/24 15:14:09.949
  Apr 20 15:14:09.949: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 15:14:09.953
  STEP: cluster-wide watching @ 04/20/24 15:14:09.96
  Apr 20 15:14:09.960: INFO: starting watch
  STEP: patching @ 04/20/24 15:14:09.962
  STEP: updating @ 04/20/24 15:14:09.984
  Apr 20 15:14:10.007: INFO: waiting for watch events with expected annotations
  Apr 20 15:14:10.007: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/20/24 15:14:10.007
  STEP: updating /status @ 04/20/24 15:14:10.022
  STEP: get /status @ 04/20/24 15:14:10.037
  STEP: deleting @ 04/20/24 15:14:10.046
  STEP: deleting a collection @ 04/20/24 15:14:10.078
  Apr 20 15:14:10.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3239" for this suite. @ 04/20/24 15:14:10.111
â€¢ [0.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 04/20/24 15:14:10.128
  Apr 20 15:14:10.128: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:14:10.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:10.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:10.163
  STEP: Creating configMap with name configmap-test-volume-053aa974-52ed-481c-a099-509f0a6a569c @ 04/20/24 15:14:10.169
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:14:10.177
  E0420 15:14:10.914971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:11.916357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:12.917032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:13.916812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:14:14.253
  Apr 20 15:14:14.262: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-5618c169-4923-4da1-9730-4e9e973ad23d container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:14:14.292
  Apr 20 15:14:14.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9430" for this suite. @ 04/20/24 15:14:14.326
â€¢ [4.208 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 04/20/24 15:14:14.338
  Apr 20 15:14:14.339: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 15:14:14.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:14.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:14.374
  E0420 15:14:14.917379      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:15.917439      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:14:16.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1717" for this suite. @ 04/20/24 15:14:16.468
â€¢ [2.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/20/24 15:14:16.51
  Apr 20 15:14:16.510: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 15:14:16.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:16.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:16.553
  Apr 20 15:14:16.559: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 15:14:16.581: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 15:14:16.591: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-1 before test
  Apr 20 15:14:16.611: INFO: coredns-5dd5756b68-5kvvg from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 15:14:16.611: INFO: kube-addon-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 15:14:16.611: INFO: kube-apiserver-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container kube-apiserver ready: true, restart count 9
  Apr 20 15:14:16.611: INFO: kube-controller-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 15:14:16.611: INFO: kube-flannel-ds-v9v9p from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:14:16.611: INFO: kube-proxy-zz8qd from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:14:16.611: INFO: kube-scheduler-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container kube-scheduler ready: true, restart count 9
  Apr 20 15:14:16.611: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-pgdh2 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:14:16.611: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:14:16.611: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 15:14:16.611: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-2 before test
  Apr 20 15:14:16.634: INFO: coredns-5dd5756b68-8582h from kube-system started at 2024-04-20 15:08:17 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.634: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 15:14:16.634: INFO: kube-addon-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 15:14:16.635: INFO: kube-apiserver-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container kube-apiserver ready: true, restart count 7
  Apr 20 15:14:16.635: INFO: kube-controller-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 15:14:16.635: INFO: kube-flannel-ds-gwdf9 from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:14:16.635: INFO: kube-proxy-jzzrl from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:14:16.635: INFO: kube-scheduler-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container kube-scheduler ready: true, restart count 8
  Apr 20 15:14:16.635: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:51 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 15:14:16.635: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-hphn6 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:14:16.635: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:14:16.635: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 15:14:16.635: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-3 before test
  Apr 20 15:14:16.650: INFO: kube-flannel-ds-q7t9z from kube-system started at 2024-04-20 15:08:42 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.650: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:14:16.650: INFO: kube-proxy-b5t4l from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.650: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:14:16.650: INFO: test-runtimeclass-runtimeclass-1717-preconfigured-handler-r99mr from runtimeclass-1717 started at 2024-04-20 15:14:14 +0000 UTC (1 container statuses recorded)
  Apr 20 15:14:16.650: INFO: 	Container test ready: false, restart count 0
  Apr 20 15:14:16.650: INFO: sonobuoy-e2e-job-b7d62c1035884e0e from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:14:16.650: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 15:14:16.650: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:14:16.650: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-4ntmw from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:14:16.650: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:14:16.650: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node aat3reeth3ee-1 @ 04/20/24 15:14:16.702
  STEP: verifying the node has the label node aat3reeth3ee-2 @ 04/20/24 15:14:16.74
  STEP: verifying the node has the label node aat3reeth3ee-3 @ 04/20/24 15:14:16.786
  Apr 20 15:14:16.837: INFO: Pod coredns-5dd5756b68-5kvvg requesting resource cpu=100m on Node aat3reeth3ee-1
  Apr 20 15:14:16.837: INFO: Pod coredns-5dd5756b68-8582h requesting resource cpu=100m on Node aat3reeth3ee-2
  Apr 20 15:14:16.838: INFO: Pod kube-addon-manager-aat3reeth3ee-1 requesting resource cpu=5m on Node aat3reeth3ee-1
  Apr 20 15:14:16.838: INFO: Pod kube-addon-manager-aat3reeth3ee-2 requesting resource cpu=5m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod kube-apiserver-aat3reeth3ee-1 requesting resource cpu=250m on Node aat3reeth3ee-1
  Apr 20 15:14:16.839: INFO: Pod kube-apiserver-aat3reeth3ee-2 requesting resource cpu=250m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod kube-controller-manager-aat3reeth3ee-1 requesting resource cpu=200m on Node aat3reeth3ee-1
  Apr 20 15:14:16.839: INFO: Pod kube-controller-manager-aat3reeth3ee-2 requesting resource cpu=200m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod kube-flannel-ds-gwdf9 requesting resource cpu=100m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod kube-flannel-ds-q7t9z requesting resource cpu=100m on Node aat3reeth3ee-3
  Apr 20 15:14:16.839: INFO: Pod kube-flannel-ds-v9v9p requesting resource cpu=100m on Node aat3reeth3ee-1
  Apr 20 15:14:16.839: INFO: Pod kube-proxy-b5t4l requesting resource cpu=0m on Node aat3reeth3ee-3
  Apr 20 15:14:16.839: INFO: Pod kube-proxy-jzzrl requesting resource cpu=0m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod kube-proxy-zz8qd requesting resource cpu=0m on Node aat3reeth3ee-1
  Apr 20 15:14:16.839: INFO: Pod kube-scheduler-aat3reeth3ee-1 requesting resource cpu=100m on Node aat3reeth3ee-1
  Apr 20 15:14:16.839: INFO: Pod kube-scheduler-aat3reeth3ee-2 requesting resource cpu=100m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod test-runtimeclass-runtimeclass-1717-preconfigured-handler-r99mr requesting resource cpu=0m on Node aat3reeth3ee-3
  Apr 20 15:14:16.839: INFO: Pod sonobuoy requesting resource cpu=0m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod sonobuoy-e2e-job-b7d62c1035884e0e requesting resource cpu=0m on Node aat3reeth3ee-3
  Apr 20 15:14:16.839: INFO: Pod sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-4ntmw requesting resource cpu=0m on Node aat3reeth3ee-3
  Apr 20 15:14:16.839: INFO: Pod sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-hphn6 requesting resource cpu=0m on Node aat3reeth3ee-2
  Apr 20 15:14:16.839: INFO: Pod sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-pgdh2 requesting resource cpu=0m on Node aat3reeth3ee-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/20/24 15:14:16.839
  Apr 20 15:14:16.839: INFO: Creating a pod which consumes cpu=1050m on Node aat3reeth3ee-3
  Apr 20 15:14:16.861: INFO: Creating a pod which consumes cpu=591m on Node aat3reeth3ee-1
  Apr 20 15:14:16.880: INFO: Creating a pod which consumes cpu=591m on Node aat3reeth3ee-2
  E0420 15:14:16.917404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:17.918033      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:18.918080      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/20/24 15:14:19.011
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-139ecc54-9e56-485d-93c1-bcdd626a702a.17c805d1d210c5f5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1774/filler-pod-139ecc54-9e56-485d-93c1-bcdd626a702a to aat3reeth3ee-2] @ 04/20/24 15:14:19.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-139ecc54-9e56-485d-93c1-bcdd626a702a.17c805d1f1b09fbd], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 15:14:19.028
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-139ecc54-9e56-485d-93c1-bcdd626a702a.17c805d1fb57c6be], Reason = [Created], Message = [Created container filler-pod-139ecc54-9e56-485d-93c1-bcdd626a702a] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-139ecc54-9e56-485d-93c1-bcdd626a702a.17c805d1fd5d45bd], Reason = [Started], Message = [Started container filler-pod-139ecc54-9e56-485d-93c1-bcdd626a702a] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-90c76a56-6955-4233-9b5e-197ffe938c5d.17c805d1cfdfdd8a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1774/filler-pod-90c76a56-6955-4233-9b5e-197ffe938c5d to aat3reeth3ee-1] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-90c76a56-6955-4233-9b5e-197ffe938c5d.17c805d1f0c19c48], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-90c76a56-6955-4233-9b5e-197ffe938c5d.17c805d1faee5745], Reason = [Created], Message = [Created container filler-pod-90c76a56-6955-4233-9b5e-197ffe938c5d] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-90c76a56-6955-4233-9b5e-197ffe938c5d.17c805d1fd5c860f], Reason = [Started], Message = [Started container filler-pod-90c76a56-6955-4233-9b5e-197ffe938c5d] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b932d570-b83f-4315-b0a8-498559d405b3.17c805d1ce3f1b74], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1774/filler-pod-b932d570-b83f-4315-b0a8-498559d405b3 to aat3reeth3ee-3] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b932d570-b83f-4315-b0a8-498559d405b3.17c805d1ec5bef2f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 15:14:19.029
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b932d570-b83f-4315-b0a8-498559d405b3.17c805d1f41292e2], Reason = [Created], Message = [Created container filler-pod-b932d570-b83f-4315-b0a8-498559d405b3] @ 04/20/24 15:14:19.03
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b932d570-b83f-4315-b0a8-498559d405b3.17c805d1f587314d], Reason = [Started], Message = [Started container filler-pod-b932d570-b83f-4315-b0a8-498559d405b3] @ 04/20/24 15:14:19.03
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c805d24f7eff1b], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] @ 04/20/24 15:14:19.082
  E0420 15:14:19.918753      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node aat3reeth3ee-1 @ 04/20/24 15:14:20.081
  STEP: verifying the node doesn't have the label node @ 04/20/24 15:14:20.156
  STEP: removing the label node off the node aat3reeth3ee-2 @ 04/20/24 15:14:20.166
  STEP: verifying the node doesn't have the label node @ 04/20/24 15:14:20.216
  STEP: removing the label node off the node aat3reeth3ee-3 @ 04/20/24 15:14:20.224
  STEP: verifying the node doesn't have the label node @ 04/20/24 15:14:20.285
  Apr 20 15:14:20.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1774" for this suite. @ 04/20/24 15:14:20.323
â€¢ [3.829 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/20/24 15:14:20.343
  Apr 20 15:14:20.343: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 15:14:20.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:20.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:20.392
  STEP: create the container @ 04/20/24 15:14:20.404
  W0420 15:14:20.424461      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/20/24 15:14:20.426
  E0420 15:14:20.919959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:21.920028      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 15:14:22.46
  STEP: the container should be terminated @ 04/20/24 15:14:22.466
  STEP: the termination message should be set @ 04/20/24 15:14:22.466
  Apr 20 15:14:22.467: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 15:14:22.467
  Apr 20 15:14:22.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3817" for this suite. @ 04/20/24 15:14:22.508
â€¢ [2.177 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/20/24 15:14:22.52
  Apr 20 15:14:22.520: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 15:14:22.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:22.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:22.551
  STEP: creating @ 04/20/24 15:14:22.555
  STEP: getting @ 04/20/24 15:14:22.592
  STEP: listing in namespace @ 04/20/24 15:14:22.601
  STEP: patching @ 04/20/24 15:14:22.606
  STEP: deleting @ 04/20/24 15:14:22.633
  Apr 20 15:14:22.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2749" for this suite. @ 04/20/24 15:14:22.662
â€¢ [0.156 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 04/20/24 15:14:22.676
  Apr 20 15:14:22.676: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:14:22.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:22.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:22.718
  E0420 15:14:22.920487      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:23.920894      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:24.921537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:25.921700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:14:26.783: INFO: Got logs for pod "busybox-privileged-false-5b20bf2c-f21b-4dd6-8ef2-29ec396242a1": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 20 15:14:26.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1204" for this suite. @ 04/20/24 15:14:26.791
â€¢ [4.132 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 04/20/24 15:14:26.81
  Apr 20 15:14:26.810: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:14:26.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:26.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:26.846
  STEP: creating a collection of services @ 04/20/24 15:14:26.851
  Apr 20 15:14:26.851: INFO: Creating e2e-svc-a-chtrq
  Apr 20 15:14:26.873: INFO: Creating e2e-svc-b-qczfz
  Apr 20 15:14:26.901: INFO: Creating e2e-svc-c-khqsp
  E0420 15:14:26.922199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting service collection @ 04/20/24 15:14:26.934
  Apr 20 15:14:26.998: INFO: Collection of services has been deleted
  Apr 20 15:14:26.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2871" for this suite. @ 04/20/24 15:14:27.007
â€¢ [0.213 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 04/20/24 15:14:27.023
  Apr 20 15:14:27.023: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:14:27.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:27.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:27.065
  STEP: Create a ReplicaSet @ 04/20/24 15:14:27.074
  STEP: Verify that the required pods have come up @ 04/20/24 15:14:27.09
  Apr 20 15:14:27.095: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0420 15:14:27.922755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:28.923745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:29.924378      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:30.924496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:31.924786      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:14:32.106: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/20/24 15:14:32.106
  Apr 20 15:14:32.118: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/20/24 15:14:32.118
  STEP: DeleteCollection of the ReplicaSets @ 04/20/24 15:14:32.129
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/20/24 15:14:32.153
  Apr 20 15:14:32.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8463" for this suite. @ 04/20/24 15:14:32.182
â€¢ [5.175 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 04/20/24 15:14:32.199
  Apr 20 15:14:32.199: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:14:32.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:32.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:32.286
  STEP: Counting existing ResourceQuota @ 04/20/24 15:14:32.29
  E0420 15:14:32.924984      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:33.927586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:34.926598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:35.926795      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:36.927064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:14:37.297
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:14:37.306
  E0420 15:14:37.935408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:38.930418      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 04/20/24 15:14:39.316
  STEP: Creating a NodePort Service @ 04/20/24 15:14:39.356
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/20/24 15:14:39.409
  STEP: Ensuring resource quota status captures service creation @ 04/20/24 15:14:39.456
  E0420 15:14:39.931150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:40.931260      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 04/20/24 15:14:41.469
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:14:41.591
  E0420 15:14:41.931659      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:42.931881      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:14:43.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8061" for this suite. @ 04/20/24 15:14:43.618
â€¢ [11.435 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 04/20/24 15:14:43.636
  Apr 20 15:14:43.636: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:14:43.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:43.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:43.683
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:14:43.691
  E0420 15:14:43.932803      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:44.934016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:45.934305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:46.935332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:14:47.735
  Apr 20 15:14:47.742: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-1b68ac9a-a965-4e11-991b-c194f951c942 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:14:47.753
  Apr 20 15:14:47.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3605" for this suite. @ 04/20/24 15:14:47.792
â€¢ [4.170 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 04/20/24 15:14:47.806
  Apr 20 15:14:47.806: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:14:47.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:14:47.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:14:47.84
  STEP: Creating service test in namespace statefulset-3812 @ 04/20/24 15:14:47.846
  Apr 20 15:14:47.879: INFO: Found 0 stateful pods, waiting for 1
  E0420 15:14:47.935813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:48.936011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:49.937547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:50.936873      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:51.937628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:52.937637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:53.939228      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:54.938891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:55.939219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:56.940055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:14:57.895: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/20/24 15:14:57.91
  W0420 15:14:57.932315      15 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  E0420 15:14:57.940631      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:14:57.949: INFO: Found 1 stateful pods, waiting for 2
  E0420 15:14:58.941551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:59.941786      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:00.942824      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:01.942806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:02.943985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:03.943564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:04.944518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:05.945403      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:06.946054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:07.946360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:15:07.969: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:15:07.969: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/20/24 15:15:07.991
  STEP: Delete all of the StatefulSets @ 04/20/24 15:15:08.001
  STEP: Verify that StatefulSets have been deleted @ 04/20/24 15:15:08.023
  Apr 20 15:15:08.034: INFO: Deleting all statefulset in ns statefulset-3812
  Apr 20 15:15:08.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3812" for this suite. @ 04/20/24 15:15:08.084
â€¢ [20.313 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/20/24 15:15:08.129
  Apr 20 15:15:08.129: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:15:08.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:08.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:08.212
  STEP: creating the pod @ 04/20/24 15:15:08.228
  STEP: waiting for pod running @ 04/20/24 15:15:08.254
  E0420 15:15:08.946540      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:09.946952      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/20/24 15:15:10.298
  Apr 20 15:15:10.305: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3522 PodName:var-expansion-d994ef3d-e36c-4161-bb5b-edf9dc032ad6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:15:10.305: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:15:10.308: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:15:10.308: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-3522/pods/var-expansion-d994ef3d-e36c-4161-bb5b-edf9dc032ad6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/20/24 15:15:10.426
  Apr 20 15:15:10.433: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3522 PodName:var-expansion-d994ef3d-e36c-4161-bb5b-edf9dc032ad6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:15:10.433: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:15:10.435: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:15:10.435: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-3522/pods/var-expansion-d994ef3d-e36c-4161-bb5b-edf9dc032ad6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/20/24 15:15:10.547
  E0420 15:15:10.947410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:15:11.081: INFO: Successfully updated pod "var-expansion-d994ef3d-e36c-4161-bb5b-edf9dc032ad6"
  STEP: waiting for annotated pod running @ 04/20/24 15:15:11.081
  STEP: deleting the pod gracefully @ 04/20/24 15:15:11.098
  Apr 20 15:15:11.098: INFO: Deleting pod "var-expansion-d994ef3d-e36c-4161-bb5b-edf9dc032ad6" in namespace "var-expansion-3522"
  Apr 20 15:15:11.117: INFO: Wait up to 5m0s for pod "var-expansion-d994ef3d-e36c-4161-bb5b-edf9dc032ad6" to be fully deleted
  E0420 15:15:11.948057      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:12.948748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:13.949846      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:14.950968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:15.952086      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:16.951913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:17.952811      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:18.953886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:19.954405      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:20.954478      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:21.954786      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:22.955661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:23.955911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:24.956617      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:25.957311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:26.957391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:27.957797      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:28.958773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:29.959979      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:30.960973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:31.961851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:32.961688      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:33.962255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:34.962322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:35.962532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:36.962699      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:37.963173      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:38.964032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:39.964973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:40.965917      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:41.966171      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:42.966443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:15:43.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3522" for this suite. @ 04/20/24 15:15:43.338
â€¢ [35.227 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 04/20/24 15:15:43.358
  Apr 20 15:15:43.358: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:15:43.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:43.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:43.414
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/20/24 15:15:43.422
  Apr 20 15:15:43.444: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0420 15:15:43.966705      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:44.967811      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:45.968201      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:46.969040      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:47.969795      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:15:48.453: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 15:15:48.453
  STEP: getting scale subresource @ 04/20/24 15:15:48.453
  STEP: updating a scale subresource @ 04/20/24 15:15:48.458
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/20/24 15:15:48.48
  STEP: Patch a scale subresource @ 04/20/24 15:15:48.491
  Apr 20 15:15:48.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3587" for this suite. @ 04/20/24 15:15:48.544
â€¢ [5.210 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/20/24 15:15:48.571
  Apr 20 15:15:48.571: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:15:48.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:48.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:48.615
  STEP: Creating a pod to test substitution in volume subpath @ 04/20/24 15:15:48.62
  E0420 15:15:48.969953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:49.970182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:50.970156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:51.970542      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:15:52.669
  Apr 20 15:15:52.681: INFO: Trying to get logs from node aat3reeth3ee-3 pod var-expansion-73f4e045-9181-4af8-9131-b9218e2109a8 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:15:52.701
  Apr 20 15:15:52.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4971" for this suite. @ 04/20/24 15:15:52.763
â€¢ [4.205 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/20/24 15:15:52.779
  Apr 20 15:15:52.779: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename prestop @ 04/20/24 15:15:52.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:52.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:52.818
  STEP: Creating server pod server in namespace prestop-9356 @ 04/20/24 15:15:52.822
  STEP: Waiting for pods to come up. @ 04/20/24 15:15:52.837
  E0420 15:15:52.971651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:53.972463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9356 @ 04/20/24 15:15:54.863
  E0420 15:15:54.972611      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:55.973675      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 04/20/24 15:15:56.913
  E0420 15:15:56.973513      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:57.973735      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:58.974164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:59.974551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:00.975899      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:16:01.950: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Apr 20 15:16:01.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 04/20/24 15:16:01.967
  E0420 15:16:01.977707      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "prestop-9356" for this suite. @ 04/20/24 15:16:01.995
â€¢ [9.234 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 04/20/24 15:16:02.015
  Apr 20 15:16:02.015: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:16:02.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:02.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:02.066
  STEP: Creating configMap with name projected-configmap-test-volume-f46fc4d7-88fa-4717-a4ce-b7f4e5bc3422 @ 04/20/24 15:16:02.07
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:16:02.078
  E0420 15:16:02.977900      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:03.979653      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:04.980457      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:05.980755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:16:06.122
  Apr 20 15:16:06.129: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-configmaps-80453214-46f1-46b0-b5e6-8f185ebc6fd6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:16:06.149
  Apr 20 15:16:06.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9871" for this suite. @ 04/20/24 15:16:06.23
â€¢ [4.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 04/20/24 15:16:06.29
  Apr 20 15:16:06.290: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 15:16:06.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:06.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:06.329
  Apr 20 15:16:06.339: INFO: Got root ca configmap in namespace "svcaccounts-9423"
  Apr 20 15:16:06.355: INFO: Deleted root ca configmap in namespace "svcaccounts-9423"
  STEP: waiting for a new root ca configmap created @ 04/20/24 15:16:06.856
  Apr 20 15:16:06.866: INFO: Recreated root ca configmap in namespace "svcaccounts-9423"
  Apr 20 15:16:06.880: INFO: Updated root ca configmap in namespace "svcaccounts-9423"
  E0420 15:16:06.982366      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/20/24 15:16:07.381
  Apr 20 15:16:07.388: INFO: Reconciled root ca configmap in namespace "svcaccounts-9423"
  Apr 20 15:16:07.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9423" for this suite. @ 04/20/24 15:16:07.397
â€¢ [1.133 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 04/20/24 15:16:07.429
  Apr 20 15:16:07.429: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:16:07.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:07.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:07.471
  STEP: creating a Deployment @ 04/20/24 15:16:07.484
  Apr 20 15:16:07.484: INFO: Creating simple deployment test-deployment-pbcfb
  Apr 20 15:16:07.514: INFO: deployment "test-deployment-pbcfb" doesn't have the required revision set
  E0420 15:16:07.982497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:08.983527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/20/24 15:16:09.586
  Apr 20 15:16:09.604: INFO: Deployment test-deployment-pbcfb has Conditions: [{Available True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-pbcfb-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/20/24 15:16:09.604
  Apr 20 15:16:09.646: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 16, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 16, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 16, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 16, 7, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-pbcfb-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/20/24 15:16:09.646
  Apr 20 15:16:09.650: INFO: Observed &Deployment event: ADDED
  Apr 20 15:16:09.650: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-pbcfb-5d576bd769"}
  Apr 20 15:16:09.652: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.652: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-pbcfb-5d576bd769"}
  Apr 20 15:16:09.652: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 15:16:09.653: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.653: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 15:16:09.653: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-pbcfb-5d576bd769" is progressing.}
  Apr 20 15:16:09.654: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.654: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 15:16:09.654: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-pbcfb-5d576bd769" has successfully progressed.}
  Apr 20 15:16:09.655: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.655: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 15:16:09.655: INFO: Observed Deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-pbcfb-5d576bd769" has successfully progressed.}
  Apr 20 15:16:09.655: INFO: Found Deployment test-deployment-pbcfb in namespace deployment-6847 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 15:16:09.655: INFO: Deployment test-deployment-pbcfb has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 15:16:09.656
  Apr 20 15:16:09.656: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 15:16:09.670: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/20/24 15:16:09.67
  Apr 20 15:16:09.675: INFO: Observed &Deployment event: ADDED
  Apr 20 15:16:09.675: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-pbcfb-5d576bd769"}
  Apr 20 15:16:09.676: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.676: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-pbcfb-5d576bd769"}
  Apr 20 15:16:09.676: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 15:16:09.676: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.676: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 15:16:09.676: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:07 +0000 UTC 2024-04-20 15:16:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-pbcfb-5d576bd769" is progressing.}
  Apr 20 15:16:09.677: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.677: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 15:16:09.677: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-pbcfb-5d576bd769" has successfully progressed.}
  Apr 20 15:16:09.678: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.678: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 15:16:09.679: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 15:16:09 +0000 UTC 2024-04-20 15:16:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-pbcfb-5d576bd769" has successfully progressed.}
  Apr 20 15:16:09.679: INFO: Observed deployment test-deployment-pbcfb in namespace deployment-6847 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 15:16:09.680: INFO: Observed &Deployment event: MODIFIED
  Apr 20 15:16:09.680: INFO: Found deployment test-deployment-pbcfb in namespace deployment-6847 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 20 15:16:09.680: INFO: Deployment test-deployment-pbcfb has a patched status
  Apr 20 15:16:09.690: INFO: Deployment "test-deployment-pbcfb":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-pbcfb",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6847",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf9a799c-c374-4df3-a486-28f566cca26e",
      ResourceVersion: (string) (len=5) "50768",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849222967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-pbcfb-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 15:16:09.705: INFO: New ReplicaSet "test-deployment-pbcfb-5d576bd769" of Deployment "test-deployment-pbcfb":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-pbcfb-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6847",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd3cda4c-fe2a-4134-a1fe-b08c7f9711a0",
      ResourceVersion: (string) (len=5) "50763",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849222967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-pbcfb",
          UID: (types.UID) (len=36) "cf9a799c-c374-4df3-a486-28f566cca26e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 63 66 39  |k:{\"uid\":\"cf9|
              00000120  61 37 39 39 63 2d 63 33  37 34 2d 34 64 66 33 2d  |a799c-c374-4df3-|
              00000130  61 34 38 36 2d 32 38 66  35 36 36 63 63 61 32 36  |a486-28f566cca26|
              00000140  65 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |e\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:16:09.720: INFO: Pod "test-deployment-pbcfb-5d576bd769-z5vpg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-pbcfb-5d576bd769-z5vpg",
      GenerateName: (string) (len=33) "test-deployment-pbcfb-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6847",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56be5a68-a975-4aa7-96e3-6f6757f8e31f",
      ResourceVersion: (string) (len=5) "50762",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849222967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-pbcfb-5d576bd769",
          UID: (types.UID) (len=36) "dd3cda4c-fe2a-4134-a1fe-b08c7f9711a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 64 64 33 63 64 61 34  63 2d 66 65 32 61 2d 34  |"dd3cda4c-fe2a-4|
              000000a0  31 33 34 2d 61 31 66 65  2d 62 30 38 63 37 66 39  |134-a1fe-b08c7f9|
              000000b0  37 31 31 61 30 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |711a0\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 35 38 5c 22 7d 22  |10.233.66.58\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fhwjp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fhwjp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849222967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849222967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849222968,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://8c41d95220833a864c9f337502e4bf2a20ed1789bb5ee69c819682f17c9d6bbd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:16:09.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6847" for this suite. @ 04/20/24 15:16:09.736
â€¢ [2.318 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 04/20/24 15:16:09.752
  Apr 20 15:16:09.752: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:16:09.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:09.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:09.782
  STEP: Creating the pod @ 04/20/24 15:16:09.788
  E0420 15:16:09.984734      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:10.985642      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:11.986085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:16:12.393: INFO: Successfully updated pod "labelsupdate37dcbe15-178c-432b-939e-62467f5bf42b"
  E0420 15:16:12.986620      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:13.987062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:16:14.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6113" for this suite. @ 04/20/24 15:16:14.433
â€¢ [4.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/20/24 15:16:14.462
  Apr 20 15:16:14.462: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename subpath @ 04/20/24 15:16:14.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:14.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:14.514
  STEP: Setting up data @ 04/20/24 15:16:14.522
  STEP: Creating pod pod-subpath-test-downwardapi-zslv @ 04/20/24 15:16:14.542
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 15:16:14.542
  E0420 15:16:14.987085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:15.988453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:16.989716      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:17.992652      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:18.990332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:19.991318      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:20.991404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:21.991670      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:22.992917      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:23.992606      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:24.993681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:25.994447      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:26.995358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:27.995707      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:28.996190      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:29.996341      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:30.996993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:31.997294      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:32.998028      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:33.999087      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:34.999334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:35.999822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:37.001758      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:38.001735      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:16:38.691
  Apr 20 15:16:38.698: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-subpath-test-downwardapi-zslv container test-container-subpath-downwardapi-zslv: <nil>
  STEP: delete the pod @ 04/20/24 15:16:38.723
  STEP: Deleting pod pod-subpath-test-downwardapi-zslv @ 04/20/24 15:16:38.757
  Apr 20 15:16:38.757: INFO: Deleting pod "pod-subpath-test-downwardapi-zslv" in namespace "subpath-2180"
  Apr 20 15:16:38.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2180" for this suite. @ 04/20/24 15:16:38.779
â€¢ [24.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/20/24 15:16:38.805
  Apr 20 15:16:38.805: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:16:38.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:38.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:38.852
  STEP: creating a Pod with a static label @ 04/20/24 15:16:38.87
  STEP: watching for Pod to be ready @ 04/20/24 15:16:38.883
  Apr 20 15:16:38.889: INFO: observed Pod pod-test in namespace pods-8956 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 20 15:16:38.891: INFO: observed Pod pod-test in namespace pods-8956 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:38 +0000 UTC  }]
  Apr 20 15:16:38.941: INFO: observed Pod pod-test in namespace pods-8956 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:38 +0000 UTC  }]
  E0420 15:16:39.002594      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:40.003645      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:16:40.257: INFO: Found Pod pod-test in namespace pods-8956 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:38 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:40 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:40 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:16:38 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/20/24 15:16:40.265
  STEP: getting the Pod and ensuring that it's patched @ 04/20/24 15:16:40.284
  STEP: replacing the Pod's status Ready condition to False @ 04/20/24 15:16:40.29
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/20/24 15:16:40.315
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/20/24 15:16:40.315
  STEP: watching for the Pod to be deleted @ 04/20/24 15:16:40.332
  Apr 20 15:16:40.335: INFO: observed event type MODIFIED
  E0420 15:16:41.003691      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:42.004500      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:16:42.298: INFO: observed event type MODIFIED
  Apr 20 15:16:42.400: INFO: observed event type MODIFIED
  E0420 15:16:43.004657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:16:43.303: INFO: observed event type MODIFIED
  Apr 20 15:16:43.339: INFO: observed event type MODIFIED
  Apr 20 15:16:43.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8956" for this suite. @ 04/20/24 15:16:43.373
â€¢ [4.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/20/24 15:16:43.405
  Apr 20 15:16:43.405: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:16:43.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:43.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:43.46
  STEP: Setting up server cert @ 04/20/24 15:16:43.507
  E0420 15:16:44.005574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:16:44.358
  STEP: Deploying the webhook pod @ 04/20/24 15:16:44.371
  STEP: Wait for the deployment to be ready @ 04/20/24 15:16:44.39
  Apr 20 15:16:44.401: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:16:45.006229      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:46.006668      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:16:46.429
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:16:46.449
  E0420 15:16:47.007824      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:16:47.450: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/20/24 15:16:47.563
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 15:16:47.637
  STEP: Deleting the collection of validation webhooks @ 04/20/24 15:16:47.692
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 15:16:47.82
  Apr 20 15:16:47.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4126" for this suite. @ 04/20/24 15:16:47.983
  STEP: Destroying namespace "webhook-markers-2910" for this suite. @ 04/20/24 15:16:48.005
  E0420 15:16:48.008554      15 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [4.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 04/20/24 15:16:48.042
  Apr 20 15:16:48.043: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:16:48.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:48.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:48.086
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:16:48.098
  E0420 15:16:49.008762      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:50.008963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:51.009842      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:52.009745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:16:52.157
  Apr 20 15:16:52.180: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-35d9bd01-f56c-49db-82a4-a4ad07bc7e01 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:16:52.196
  Apr 20 15:16:52.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9457" for this suite. @ 04/20/24 15:16:52.236
â€¢ [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 04/20/24 15:16:52.254
  Apr 20 15:16:52.254: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:16:52.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:52.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:52.293
  STEP: Creating configMap with name configmap-test-volume-map-94380f27-9669-4e2a-937b-cbc6ec4f13b2 @ 04/20/24 15:16:52.297
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:16:52.308
  E0420 15:16:53.011631      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:54.012298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:55.012251      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:56.012814      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:16:56.349
  Apr 20 15:16:56.356: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-941fb485-e7c2-4b27-a6c7-6530a6ebcf72 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:16:56.367
  Apr 20 15:16:56.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6744" for this suite. @ 04/20/24 15:16:56.402
â€¢ [4.160 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 04/20/24 15:16:56.418
  Apr 20 15:16:56.418: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:16:56.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:56.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:56.45
  STEP: Creating a pod to test downward api env vars @ 04/20/24 15:16:56.456
  E0420 15:16:57.014059      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:58.014677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:59.015009      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:00.015960      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:17:00.504
  Apr 20 15:17:00.512: INFO: Trying to get logs from node aat3reeth3ee-3 pod downward-api-c2f32be3-3bee-4f66-a99d-644f1666be51 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:17:00.534
  Apr 20 15:17:00.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5870" for this suite. @ 04/20/24 15:17:00.573
â€¢ [4.169 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 04/20/24 15:17:00.589
  Apr 20 15:17:00.589: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 15:17:00.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:17:00.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:17:00.626
  Apr 20 15:17:00.632: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0420 15:17:01.016684      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/20/24 15:17:01.656
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/20/24 15:17:01.672
  E0420 15:17:02.017737      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/20/24 15:17:02.695
  Apr 20 15:17:02.709: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/20/24 15:17:02.709
  E0420 15:17:03.017738      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:03.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5400" for this suite. @ 04/20/24 15:17:03.741
â€¢ [3.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/20/24 15:17:03.764
  Apr 20 15:17:03.764: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:17:03.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:17:03.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:17:03.811
  STEP: Creating pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939 @ 04/20/24 15:17:03.817
  E0420 15:17:04.018718      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:05.019700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:17:05.85
  Apr 20 15:17:05.858: INFO: Initial restart count of pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc is 0
  Apr 20 15:17:05.865: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:06.020717      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:07.021316      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:07.875: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:08.021764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:09.022475      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:09.883: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:10.022533      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:11.023005      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:11.893: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:12.023977      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:13.024763      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:13.900: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:14.025493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:15.026783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:15.912: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:16.027271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:17.027805      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:17.920: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:18.029076      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:19.029621      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:19.933: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:20.030905      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:21.031557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:21.942: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:22.032478      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:23.032632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:23.950: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:24.033441      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:25.034323      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:25.965: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:26.034919      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:27.035414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:27.974: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:28.035976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:29.036502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:29.982: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:30.037358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:31.037771      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:31.994: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:32.039056      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:33.038692      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:34.005: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:34.038985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:35.039790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:36.018: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:36.041533      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:37.041320      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:38.028: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:38.042275      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:39.043197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:40.040: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:40.043430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:41.044340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:42.045609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:42.051: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:43.045974      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:44.046754      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:44.063: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:45.046807      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:46.047410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:46.076: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:47.047693      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:48.048808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:48.089: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:49.050170      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:50.049653      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:50.099: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:51.049834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:52.050715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:52.116: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:53.051620      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:54.052426      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:54.129: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  E0420 15:17:55.052513      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:56.052740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:17:56.142: INFO: Get pod busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc in namespace container-probe-2939
  Apr 20 15:17:56.142: INFO: Restart count of pod container-probe-2939/busybox-9b7f519f-0430-4af7-aa69-6bb7877d88cc is now 1 (50.283849317s elapsed)
  Apr 20 15:17:56.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 15:17:56.153
  STEP: Destroying namespace "container-probe-2939" for this suite. @ 04/20/24 15:17:56.198
â€¢ [52.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 04/20/24 15:17:56.224
  Apr 20 15:17:56.224: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 15:17:56.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:17:56.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:17:56.267
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/20/24 15:17:56.271
  Apr 20 15:17:56.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3367" for this suite. @ 04/20/24 15:17:56.288
â€¢ [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 04/20/24 15:17:56.334
  Apr 20 15:17:56.334: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:17:56.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:17:56.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:17:56.374
  STEP: Creating a ResourceQuota with best effort scope @ 04/20/24 15:17:56.377
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 15:17:56.391
  E0420 15:17:57.053994      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:58.054777      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 04/20/24 15:17:58.402
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 15:17:58.413
  E0420 15:17:59.054675      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:00.055920      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 04/20/24 15:18:00.421
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/20/24 15:18:00.448
  E0420 15:18:01.057025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:02.057035      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/20/24 15:18:02.46
  E0420 15:18:03.057286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:04.057737      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:18:04.468
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:18:04.505
  E0420 15:18:05.058430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:06.058083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 04/20/24 15:18:06.519
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/20/24 15:18:06.553
  E0420 15:18:07.058850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:08.060410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/20/24 15:18:08.561
  E0420 15:18:09.060629      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:10.064466      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:18:10.575
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:18:10.608
  E0420 15:18:11.064638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:12.065418      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:12.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8078" for this suite. @ 04/20/24 15:18:12.631
â€¢ [16.313 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/20/24 15:18:12.648
  Apr 20 15:18:12.648: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:18:12.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:12.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:12.698
  STEP: Creating a pod to test env composition @ 04/20/24 15:18:12.704
  E0420 15:18:13.066525      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:14.067271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:15.067416      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:16.068043      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:18:16.754
  Apr 20 15:18:16.764: INFO: Trying to get logs from node aat3reeth3ee-3 pod var-expansion-2b1de4fb-a02b-471d-9dd2-053b42c98c22 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:18:16.786
  Apr 20 15:18:16.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3148" for this suite. @ 04/20/24 15:18:16.834
â€¢ [4.200 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 04/20/24 15:18:16.849
  Apr 20 15:18:16.849: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:18:16.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:16.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:16.884
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:18:16.889
  E0420 15:18:17.068493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:18.076513      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:18:18.926
  Apr 20 15:18:18.938: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-ac72b284-799d-4404-b045-4c7f35e7854f container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:18:18.956
  Apr 20 15:18:19.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9020" for this suite. @ 04/20/24 15:18:19.012
â€¢ [2.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/20/24 15:18:19.031
  Apr 20 15:18:19.031: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:18:19.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:19.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:19.067
  E0420 15:18:19.070564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name secret-test-f55bbdb3-81a9-4186-93db-3cbfcdc3881b @ 04/20/24 15:18:19.11
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:18:19.117
  E0420 15:18:20.071661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:21.072381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:22.072936      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:23.073150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:18:23.168
  Apr 20 15:18:23.175: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-ff092cf2-e21a-4ddc-ba20-65558a61ea9f container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:18:23.193
  Apr 20 15:18:23.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5106" for this suite. @ 04/20/24 15:18:23.247
  STEP: Destroying namespace "secret-namespace-8354" for this suite. @ 04/20/24 15:18:23.26
â€¢ [4.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 04/20/24 15:18:23.278
  Apr 20 15:18:23.278: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename ingressclass @ 04/20/24 15:18:23.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:23.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:23.32
  STEP: getting /apis @ 04/20/24 15:18:23.327
  STEP: getting /apis/networking.k8s.io @ 04/20/24 15:18:23.338
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 15:18:23.341
  STEP: creating @ 04/20/24 15:18:23.343
  STEP: getting @ 04/20/24 15:18:23.369
  STEP: listing @ 04/20/24 15:18:23.376
  STEP: watching @ 04/20/24 15:18:23.38
  Apr 20 15:18:23.380: INFO: starting watch
  STEP: patching @ 04/20/24 15:18:23.382
  STEP: updating @ 04/20/24 15:18:23.393
  Apr 20 15:18:23.402: INFO: waiting for watch events with expected annotations
  Apr 20 15:18:23.402: INFO: saw patched and updated annotations
  STEP: deleting @ 04/20/24 15:18:23.403
  STEP: deleting a collection @ 04/20/24 15:18:23.423
  Apr 20 15:18:23.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8171" for this suite. @ 04/20/24 15:18:23.46
â€¢ [0.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 04/20/24 15:18:23.475
  Apr 20 15:18:23.475: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:18:23.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:23.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:23.508
  STEP: creating a replication controller @ 04/20/24 15:18:23.513
  Apr 20 15:18:23.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 create -f -'
  E0420 15:18:24.074460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:24.140: INFO: stderr: ""
  Apr 20 15:18:24.140: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 15:18:24.14
  Apr 20 15:18:24.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:18:24.354: INFO: stderr: ""
  Apr 20 15:18:24.354: INFO: stdout: "update-demo-nautilus-kjpjw update-demo-nautilus-qthwc "
  Apr 20 15:18:24.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:18:24.522: INFO: stderr: ""
  Apr 20 15:18:24.522: INFO: stdout: ""
  Apr 20 15:18:24.522: INFO: update-demo-nautilus-kjpjw is created but not running
  E0420 15:18:25.074773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:26.075472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:27.075909      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:28.077440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:29.081221      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:29.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:18:29.753: INFO: stderr: ""
  Apr 20 15:18:29.753: INFO: stdout: "update-demo-nautilus-kjpjw update-demo-nautilus-qthwc "
  Apr 20 15:18:29.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:18:29.924: INFO: stderr: ""
  Apr 20 15:18:29.924: INFO: stdout: ""
  Apr 20 15:18:29.924: INFO: update-demo-nautilus-kjpjw is created but not running
  E0420 15:18:30.078007      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:31.078447      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:32.079628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:33.080582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:34.081325      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:34.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0420 15:18:35.082493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:35.177: INFO: stderr: ""
  Apr 20 15:18:35.178: INFO: stdout: "update-demo-nautilus-kjpjw update-demo-nautilus-qthwc "
  Apr 20 15:18:35.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:18:35.466: INFO: stderr: ""
  Apr 20 15:18:35.466: INFO: stdout: ""
  Apr 20 15:18:35.466: INFO: update-demo-nautilus-kjpjw is created but not running
  E0420 15:18:36.083045      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:37.083627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:38.083597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:39.085057      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:40.084344      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:40.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:18:40.675: INFO: stderr: ""
  Apr 20 15:18:40.675: INFO: stdout: "update-demo-nautilus-kjpjw update-demo-nautilus-qthwc "
  Apr 20 15:18:40.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:18:40.838: INFO: stderr: ""
  Apr 20 15:18:40.838: INFO: stdout: "true"
  Apr 20 15:18:40.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 15:18:41.008: INFO: stderr: ""
  Apr 20 15:18:41.008: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:18:41.008: INFO: validating pod update-demo-nautilus-kjpjw
  Apr 20 15:18:41.027: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:18:41.027: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:18:41.028: INFO: update-demo-nautilus-kjpjw is verified up and running
  Apr 20 15:18:41.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-qthwc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 15:18:41.084388      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:41.189: INFO: stderr: ""
  Apr 20 15:18:41.190: INFO: stdout: ""
  Apr 20 15:18:41.190: INFO: update-demo-nautilus-qthwc is created but not running
  E0420 15:18:42.084719      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:43.087289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:44.085398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:45.086293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:46.087337      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:46.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:18:46.402: INFO: stderr: ""
  Apr 20 15:18:46.402: INFO: stdout: "update-demo-nautilus-kjpjw update-demo-nautilus-qthwc "
  Apr 20 15:18:46.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:18:46.551: INFO: stderr: ""
  Apr 20 15:18:46.551: INFO: stdout: "true"
  Apr 20 15:18:46.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 15:18:46.704: INFO: stderr: ""
  Apr 20 15:18:46.704: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:18:46.704: INFO: validating pod update-demo-nautilus-kjpjw
  Apr 20 15:18:46.714: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:18:46.714: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:18:46.715: INFO: update-demo-nautilus-kjpjw is verified up and running
  Apr 20 15:18:46.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-qthwc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:18:46.875: INFO: stderr: ""
  Apr 20 15:18:46.875: INFO: stdout: ""
  Apr 20 15:18:46.875: INFO: update-demo-nautilus-qthwc is created but not running
  E0420 15:18:47.087746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:48.088512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:49.089428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:50.090206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:51.090646      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:51.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:18:52.044: INFO: stderr: ""
  Apr 20 15:18:52.044: INFO: stdout: "update-demo-nautilus-kjpjw update-demo-nautilus-qthwc "
  Apr 20 15:18:52.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 15:18:52.091014      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:52.207: INFO: stderr: ""
  Apr 20 15:18:52.207: INFO: stdout: "true"
  Apr 20 15:18:52.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-kjpjw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 15:18:52.363: INFO: stderr: ""
  Apr 20 15:18:52.363: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:18:52.363: INFO: validating pod update-demo-nautilus-kjpjw
  Apr 20 15:18:52.374: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:18:52.374: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:18:52.374: INFO: update-demo-nautilus-kjpjw is verified up and running
  Apr 20 15:18:52.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-qthwc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:18:52.560: INFO: stderr: ""
  Apr 20 15:18:52.561: INFO: stdout: "true"
  Apr 20 15:18:52.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods update-demo-nautilus-qthwc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 15:18:52.715: INFO: stderr: ""
  Apr 20 15:18:52.715: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:18:52.715: INFO: validating pod update-demo-nautilus-qthwc
  Apr 20 15:18:52.731: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:18:52.731: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:18:52.731: INFO: update-demo-nautilus-qthwc is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 15:18:52.731
  Apr 20 15:18:52.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 delete --grace-period=0 --force -f -'
  Apr 20 15:18:52.907: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 15:18:52.907: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 20 15:18:52.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get rc,svc -l name=update-demo --no-headers'
  E0420 15:18:53.091524      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:53.195: INFO: stderr: "No resources found in kubectl-7696 namespace.\n"
  Apr 20 15:18:53.195: INFO: stdout: ""
  Apr 20 15:18:53.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7696 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 15:18:53.355: INFO: stderr: ""
  Apr 20 15:18:53.355: INFO: stdout: ""
  Apr 20 15:18:53.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7696" for this suite. @ 04/20/24 15:18:53.367
â€¢ [29.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 04/20/24 15:18:53.389
  Apr 20 15:18:53.389: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 15:18:53.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:53.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:53.439
  STEP: getting /apis @ 04/20/24 15:18:53.447
  STEP: getting /apis/node.k8s.io @ 04/20/24 15:18:53.456
  STEP: getting /apis/node.k8s.io/v1 @ 04/20/24 15:18:53.458
  STEP: creating @ 04/20/24 15:18:53.462
  STEP: watching @ 04/20/24 15:18:53.489
  Apr 20 15:18:53.489: INFO: starting watch
  STEP: getting @ 04/20/24 15:18:53.499
  STEP: listing @ 04/20/24 15:18:53.507
  STEP: patching @ 04/20/24 15:18:53.512
  STEP: updating @ 04/20/24 15:18:53.521
  Apr 20 15:18:53.527: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/20/24 15:18:53.527
  STEP: deleting a collection @ 04/20/24 15:18:53.563
  Apr 20 15:18:53.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9585" for this suite. @ 04/20/24 15:18:53.632
â€¢ [0.254 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/20/24 15:18:53.643
  Apr 20 15:18:53.643: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:18:53.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:53.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:53.677
  E0420 15:18:54.092474      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:55.092493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:18:55.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:18:55.728: INFO: Deleting pod "var-expansion-b21107fa-f546-4f7e-aae2-9bf068eba0d8" in namespace "var-expansion-8311"
  Apr 20 15:18:55.749: INFO: Wait up to 5m0s for pod "var-expansion-b21107fa-f546-4f7e-aae2-9bf068eba0d8" to be fully deleted
  E0420 15:18:56.092597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:57.092887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-8311" for this suite. @ 04/20/24 15:18:57.768
â€¢ [4.138 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 04/20/24 15:18:57.783
  Apr 20 15:18:57.783: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:18:57.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:57.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:57.822
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 15:18:57.826
  Apr 20 15:18:57.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8004 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 20 15:18:58.002: INFO: stderr: ""
  Apr 20 15:18:58.002: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 15:18:58.002
  Apr 20 15:18:58.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8004 delete pods e2e-test-httpd-pod'
  E0420 15:18:58.093880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:59.094167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:00.094611      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:19:00.159: INFO: stderr: ""
  Apr 20 15:19:00.159: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 15:19:00.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8004" for this suite. @ 04/20/24 15:19:00.169
â€¢ [2.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 04/20/24 15:19:00.192
  Apr 20 15:19:00.192: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:19:00.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:19:00.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:19:00.241
  STEP: Creating a ResourceQuota @ 04/20/24 15:19:00.247
  STEP: Getting a ResourceQuota @ 04/20/24 15:19:00.255
  STEP: Updating a ResourceQuota @ 04/20/24 15:19:00.262
  STEP: Verifying a ResourceQuota was modified @ 04/20/24 15:19:00.272
  STEP: Deleting a ResourceQuota @ 04/20/24 15:19:00.278
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 15:19:00.294
  Apr 20 15:19:00.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2033" for this suite. @ 04/20/24 15:19:00.313
â€¢ [0.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/20/24 15:19:00.325
  Apr 20 15:19:00.325: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:19:00.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:19:00.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:19:00.362
  STEP: apply creating a deployment @ 04/20/24 15:19:00.366
  Apr 20 15:19:00.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-87" for this suite. @ 04/20/24 15:19:00.398
â€¢ [0.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 04/20/24 15:19:00.411
  Apr 20 15:19:00.411: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:19:00.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:19:00.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:19:00.472
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 15:19:00.486
  E0420 15:19:01.095640      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:02.096033      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:03.097085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:04.099574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:19:04.538
  Apr 20 15:19:04.547: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-1f886f04-0ddf-4ea5-9326-0788c2bc5996 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:19:04.567
  Apr 20 15:19:04.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-883" for this suite. @ 04/20/24 15:19:04.613
â€¢ [4.212 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 04/20/24 15:19:04.624
  Apr 20 15:19:04.624: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 15:19:04.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:19:04.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:19:04.668
  Apr 20 15:19:04.718: INFO: created pod pod-service-account-defaultsa
  Apr 20 15:19:04.718: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 20 15:19:04.734: INFO: created pod pod-service-account-mountsa
  Apr 20 15:19:04.734: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 20 15:19:04.752: INFO: created pod pod-service-account-nomountsa
  Apr 20 15:19:04.752: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 20 15:19:04.778: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 20 15:19:04.778: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 20 15:19:04.815: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 20 15:19:04.815: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 20 15:19:04.848: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 20 15:19:04.848: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 20 15:19:04.870: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 20 15:19:04.870: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 20 15:19:04.897: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 20 15:19:04.897: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 20 15:19:04.925: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 20 15:19:04.925: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 20 15:19:04.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9304" for this suite. @ 04/20/24 15:19:04.959
â€¢ [0.397 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/20/24 15:19:05.028
  Apr 20 15:19:05.029: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 15:19:05.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:19:05.095
  E0420 15:19:05.099714      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:19:05.103
  Apr 20 15:19:05.165: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 15:19:06.108657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:07.109636      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:08.109966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:09.110681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:10.110997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:11.112028      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:12.112141      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:13.112587      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:14.113754      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:15.114732      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:16.115428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:17.116918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:18.116273      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:19.117558      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:20.117919      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:21.119054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:22.120295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:23.120239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:24.121031      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:25.121603      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:26.122514      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:27.122910      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:28.123214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:29.123652      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:30.124066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:31.124568      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:32.124934      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:33.125512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:34.126459      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:35.127465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:36.127823      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:37.128064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:38.128316      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:39.129330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:40.130160      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:41.130887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:42.131466      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:43.131609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:44.132834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:45.133877      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:46.134529      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:47.135870      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:48.137309      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:49.137509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:50.138600      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:51.139357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:52.140750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:53.140851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:54.141296      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:55.141406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:56.142230      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:57.143497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:58.143621      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:59.144171      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:00.145280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:01.145295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:02.145537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:03.146369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:04.146609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:05.147631      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:05.231: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 15:20:05.238
  Apr 20 15:20:05.238: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 15:20:05.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:05.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:05.287
  STEP: Finding an available node @ 04/20/24 15:20:05.291
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 15:20:05.292
  E0420 15:20:06.148204      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:07.148443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 15:20:07.335
  Apr 20 15:20:07.362: INFO: found a healthy node: aat3reeth3ee-3
  E0420 15:20:08.149618      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:09.150580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:10.150871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:11.151937      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:12.152664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:13.152952      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:13.528: INFO: pods created so far: [1 1 1]
  Apr 20 15:20:13.528: INFO: length of pods created so far: 3
  E0420 15:20:14.153778      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:15.154726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:15.569: INFO: pods created so far: [2 2 1]
  E0420 15:20:16.155129      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:17.155563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:18.155812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:19.155874      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:20.156066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:21.156626      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:22.157479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:22.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:20:22.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8196" for this suite. @ 04/20/24 15:20:22.769
  STEP: Destroying namespace "sched-preemption-6670" for this suite. @ 04/20/24 15:20:22.783
â€¢ [77.769 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 04/20/24 15:20:22.797
  Apr 20 15:20:22.797: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:20:22.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:22.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:22.84
  STEP: validating api versions @ 04/20/24 15:20:22.845
  Apr 20 15:20:22.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-7169 api-versions'
  Apr 20 15:20:23.075: INFO: stderr: ""
  Apr 20 15:20:23.076: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 20 15:20:23.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7169" for this suite. @ 04/20/24 15:20:23.087
â€¢ [0.301 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 04/20/24 15:20:23.099
  Apr 20 15:20:23.099: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 15:20:23.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:23.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:23.141
  STEP: Create a pod template @ 04/20/24 15:20:23.145
  STEP: Replace a pod template @ 04/20/24 15:20:23.153
  E0420 15:20:23.158039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:23.169: INFO: Found updated podtemplate annotation: "true"

  Apr 20 15:20:23.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6082" for this suite. @ 04/20/24 15:20:23.178
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 04/20/24 15:20:23.194
  Apr 20 15:20:23.194: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:20:23.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:23.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:23.228
  Apr 20 15:20:23.233: INFO: Creating ReplicaSet my-hostname-basic-4c07e911-5a1a-4a99-85e0-147dee760170
  Apr 20 15:20:23.253: INFO: Pod name my-hostname-basic-4c07e911-5a1a-4a99-85e0-147dee760170: Found 0 pods out of 1
  E0420 15:20:24.158314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:25.159299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:26.159899      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:27.160879      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:28.162434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:28.275: INFO: Pod name my-hostname-basic-4c07e911-5a1a-4a99-85e0-147dee760170: Found 1 pods out of 1
  Apr 20 15:20:28.275: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-4c07e911-5a1a-4a99-85e0-147dee760170" is running
  Apr 20 15:20:28.285: INFO: Pod "my-hostname-basic-4c07e911-5a1a-4a99-85e0-147dee760170-tbs26" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:20:23 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:20:24 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:20:24 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:20:23 +0000 UTC Reason: Message:}])
  Apr 20 15:20:28.285: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 15:20:28.285
  Apr 20 15:20:28.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5264" for this suite. @ 04/20/24 15:20:28.355
â€¢ [5.182 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/20/24 15:20:28.376
  Apr 20 15:20:28.376: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:20:28.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:28.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:28.464
  STEP: Creating a test headless service @ 04/20/24 15:20:28.468
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6842.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6842.svc.cluster.local;sleep 1; done
   @ 04/20/24 15:20:28.493
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6842.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6842.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6842.svc.cluster.local;sleep 1; done
   @ 04/20/24 15:20:28.493
  STEP: creating a pod to probe DNS @ 04/20/24 15:20:28.493
  STEP: submitting the pod to kubernetes @ 04/20/24 15:20:28.493
  E0420 15:20:29.162654      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:30.163355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:20:30.599
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:20:30.606
  Apr 20 15:20:30.616: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:30.625: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:30.632: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:30.641: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:30.650: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:30.658: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:30.675: INFO: Lookups using dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6842.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6842.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local]

  Apr 20 15:20:30.692: INFO: Pod client logs for webserver: 
  Apr 20 15:20:30.710: INFO: Pod client logs for querier: 
  Apr 20 15:20:30.723: INFO: Pod client logs for jessie-querier: 
  E0420 15:20:31.164435      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:32.166072      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:33.165491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:34.165612      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:35.165997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:35.735: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:35.743: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:35.771: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:35.777: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:35.791: INFO: Lookups using dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local]

  Apr 20 15:20:35.803: INFO: Pod client logs for webserver: 
  Apr 20 15:20:35.826: INFO: Pod client logs for querier: 
  Apr 20 15:20:35.840: INFO: Pod client logs for jessie-querier: 
  E0420 15:20:36.166263      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:37.166928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:38.167406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:39.167928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:40.168278      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:40.733: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:40.740: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:40.758: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:40.766: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:40.780: INFO: Lookups using dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local]

  Apr 20 15:20:40.796: INFO: Pod client logs for webserver: 
  Apr 20 15:20:40.809: INFO: Pod client logs for querier: 
  Apr 20 15:20:40.823: INFO: Pod client logs for jessie-querier: 
  E0420 15:20:41.169286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:42.169842      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:43.170683      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:44.170833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:45.171750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:45.732: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:45.738: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:45.758: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:45.764: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:45.776: INFO: Lookups using dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local]

  Apr 20 15:20:45.793: INFO: Pod client logs for webserver: 
  Apr 20 15:20:45.812: INFO: Pod client logs for querier: 
  Apr 20 15:20:45.830: INFO: Pod client logs for jessie-querier: 
  E0420 15:20:46.171966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:47.172307      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:48.172879      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:49.173473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:50.174453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:50.732: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:50.740: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:50.761: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:50.768: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:50.784: INFO: Lookups using dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local]

  Apr 20 15:20:50.798: INFO: Pod client logs for webserver: 
  Apr 20 15:20:50.810: INFO: Pod client logs for querier: 
  Apr 20 15:20:50.827: INFO: Pod client logs for jessie-querier: 
  E0420 15:20:51.174625      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:52.175253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:53.176365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:54.177355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:55.177665      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:20:55.731: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:55.740: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:55.760: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:55.766: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local from pod dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb: the server could not find the requested resource (get pods dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb)
  Apr 20 15:20:55.779: INFO: Lookups using dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6842.svc.cluster.local]

  Apr 20 15:20:55.793: INFO: Pod client logs for webserver: 
  Apr 20 15:20:55.805: INFO: Pod client logs for querier: 
  Apr 20 15:20:55.819: INFO: Pod client logs for jessie-querier: 
  E0420 15:20:56.177681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:57.177738      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:58.178417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:59.178563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:00.178672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:00.797: INFO: DNS probes using dns-6842/dns-test-d37523ae-f1ac-4e2a-9162-b303c91803fb succeeded

  Apr 20 15:21:00.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 15:21:00.808
  STEP: deleting the test headless service @ 04/20/24 15:21:00.844
  STEP: Destroying namespace "dns-6842" for this suite. @ 04/20/24 15:21:00.884
â€¢ [32.530 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 04/20/24 15:21:00.907
  Apr 20 15:21:00.907: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:21:00.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:00.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:21:00.946
  STEP: Creating a test namespace @ 04/20/24 15:21:00.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:00.976
  STEP: Creating a pod in the namespace @ 04/20/24 15:21:01.003
  STEP: Waiting for the pod to have running status @ 04/20/24 15:21:01.04
  E0420 15:21:01.179877      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:02.179940      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 04/20/24 15:21:03.057
  STEP: Waiting for the namespace to be removed. @ 04/20/24 15:21:03.07
  E0420 15:21:03.180721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:04.181535      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:05.182030      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:06.182943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:07.183238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:08.184038      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:09.185072      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:10.185592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:11.186716      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:12.186980      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:13.187362      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/20/24 15:21:14.079
  STEP: Verifying there are no pods in the namespace @ 04/20/24 15:21:14.114
  Apr 20 15:21:14.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9207" for this suite. @ 04/20/24 15:21:14.148
  STEP: Destroying namespace "nsdeletetest-9614" for this suite. @ 04/20/24 15:21:14.162
  Apr 20 15:21:14.168: INFO: Namespace nsdeletetest-9614 was already deleted
  STEP: Destroying namespace "nsdeletetest-4937" for this suite. @ 04/20/24 15:21:14.168
â€¢ [13.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/20/24 15:21:14.184
  Apr 20 15:21:14.184: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:21:14.187774      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:21:14.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:14.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:21:14.245
  STEP: creating the pod @ 04/20/24 15:21:14.251
  STEP: submitting the pod to kubernetes @ 04/20/24 15:21:14.251
  STEP: verifying QOS class is set on the pod @ 04/20/24 15:21:14.277
  Apr 20 15:21:14.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7868" for this suite. @ 04/20/24 15:21:14.304
â€¢ [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 04/20/24 15:21:14.334
  Apr 20 15:21:14.334: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:21:14.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:14.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:21:14.367
  STEP: creating a Service @ 04/20/24 15:21:14.379
  STEP: watching for the Service to be added @ 04/20/24 15:21:14.395
  Apr 20 15:21:14.402: INFO: Found Service test-service-28hg4 in namespace services-5664 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Apr 20 15:21:14.404: INFO: Service test-service-28hg4 created
  STEP: Getting /status @ 04/20/24 15:21:14.405
  Apr 20 15:21:14.417: INFO: Service test-service-28hg4 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/20/24 15:21:14.417
  STEP: watching for the Service to be patched @ 04/20/24 15:21:14.43
  Apr 20 15:21:14.433: INFO: observed Service test-service-28hg4 in namespace services-5664 with annotations: map[] & LoadBalancer: {[]}
  Apr 20 15:21:14.433: INFO: Found Service test-service-28hg4 in namespace services-5664 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Apr 20 15:21:14.433: INFO: Service test-service-28hg4 has service status patched
  STEP: updating the ServiceStatus @ 04/20/24 15:21:14.433
  Apr 20 15:21:14.452: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/20/24 15:21:14.452
  Apr 20 15:21:14.456: INFO: Observed Service test-service-28hg4 in namespace services-5664 with annotations: map[] & Conditions: {[]}
  Apr 20 15:21:14.456: INFO: Observed event: &Service{ObjectMeta:{test-service-28hg4  services-5664  4e059a01-cc40-42b0-88e7-f1e7cd5d453f 52406 0 2024-04-20 15:21:14 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-20 15:21:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-20 15:21:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.37.50,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.37.50],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 20 15:21:14.457: INFO: Found Service test-service-28hg4 in namespace services-5664 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 15:21:14.457: INFO: Service test-service-28hg4 has service status updated
  STEP: patching the service @ 04/20/24 15:21:14.457
  STEP: watching for the Service to be patched @ 04/20/24 15:21:14.482
  Apr 20 15:21:14.485: INFO: observed Service test-service-28hg4 in namespace services-5664 with labels: map[test-service-static:true]
  Apr 20 15:21:14.485: INFO: observed Service test-service-28hg4 in namespace services-5664 with labels: map[test-service-static:true]
  Apr 20 15:21:14.485: INFO: observed Service test-service-28hg4 in namespace services-5664 with labels: map[test-service-static:true]
  Apr 20 15:21:14.485: INFO: Found Service test-service-28hg4 in namespace services-5664 with labels: map[test-service:patched test-service-static:true]
  Apr 20 15:21:14.485: INFO: Service test-service-28hg4 patched
  STEP: deleting the service @ 04/20/24 15:21:14.485
  STEP: watching for the Service to be deleted @ 04/20/24 15:21:14.522
  Apr 20 15:21:14.526: INFO: Observed event: ADDED
  Apr 20 15:21:14.526: INFO: Observed event: MODIFIED
  Apr 20 15:21:14.527: INFO: Observed event: MODIFIED
  Apr 20 15:21:14.527: INFO: Observed event: MODIFIED
  Apr 20 15:21:14.527: INFO: Found Service test-service-28hg4 in namespace services-5664 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 20 15:21:14.527: INFO: Service test-service-28hg4 deleted
  Apr 20 15:21:14.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5664" for this suite. @ 04/20/24 15:21:14.535
â€¢ [0.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 04/20/24 15:21:14.552
  Apr 20 15:21:14.552: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 15:21:14.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:14.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:21:14.586
  STEP: Performing setup for networking test in namespace pod-network-test-7828 @ 04/20/24 15:21:14.591
  STEP: creating a selector @ 04/20/24 15:21:14.591
  STEP: Creating the service pods in kubernetes @ 04/20/24 15:21:14.591
  Apr 20 15:21:14.591: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 15:21:15.188208      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:16.189075      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:17.189784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:18.189962      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:19.190377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:20.190814      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:21.190941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:22.191372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:23.192199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:24.192462      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:25.193298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:26.194407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:27.195369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:28.195472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:29.195637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:30.196454      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:31.197394      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:32.197912      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:33.198281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:34.198332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:35.199078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:36.199728      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 15:21:36.852
  E0420 15:21:37.200558      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:38.204436      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:38.940: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 15:21:38.940: INFO: Going to poll 10.233.64.127 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 15:21:38.945: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.127:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7828 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:21:38.945: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:21:38.948: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:21:38.948: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7828/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.127%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 15:21:39.136: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 20 15:21:39.136: INFO: Going to poll 10.233.65.135 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 15:21:39.143: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.135:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7828 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:21:39.144: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:21:39.146: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:21:39.147: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7828/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.135%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 15:21:39.203912      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:39.261: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 20 15:21:39.261: INFO: Going to poll 10.233.66.87 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 15:21:39.269: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.87:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7828 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:21:39.269: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:21:39.271: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:21:39.272: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7828/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.87%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 15:21:39.369: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 20 15:21:39.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7828" for this suite. @ 04/20/24 15:21:39.38
â€¢ [24.840 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/20/24 15:21:39.396
  Apr 20 15:21:39.396: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:21:39.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:39.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:21:39.43
  STEP: Creating pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842 @ 04/20/24 15:21:39.434
  E0420 15:21:40.203425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:41.203905      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:21:41.465
  Apr 20 15:21:41.472: INFO: Initial restart count of pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c is 0
  Apr 20 15:21:41.479: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:42.204666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:43.204945      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:43.495: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:44.205627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:45.206907      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:45.503: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:46.207235      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:47.207471      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:47.510: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:48.208447      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:49.209277      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:49.518: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:50.209591      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:51.210356      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:51.529: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:52.210643      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:53.211551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:53.539: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:54.211622      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:55.212500      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:55.548: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:56.213145      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:57.213995      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:57.555: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:21:58.214948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:59.215530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:21:59.567: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:00.216928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:01.217024      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:01.575: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:02.217615      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:03.217841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:03.588: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:04.218049      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:05.218592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:05.596: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:06.219802      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:07.220491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:07.610: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:08.220640      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:09.221522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:09.616: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:10.223001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:11.223921      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:11.627: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:12.224679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:13.225550      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:13.635: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:14.226704      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:15.227887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:15.648: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:16.228983      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:17.229479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:17.658: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:18.229588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:19.230227      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:19.667: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:20.230534      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:21.230665      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:21.678: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:22.230927      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:23.231485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:23.692: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:24.231573      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:25.232690      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:25.700: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:26.233485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:27.234006      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:27.708: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:28.234906      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:29.234737      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:29.718: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:30.234883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:31.235159      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:31.726: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:32.235541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:33.235722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:33.734: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:34.236014      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:35.236893      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:35.742: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:36.237236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:37.237881      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:37.751: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:38.238633      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:39.239269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:39.760: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:40.239901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:41.240686      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:41.768: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:42.241064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:43.241022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:43.775: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:44.241359      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:45.241961      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:45.785: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:46.242181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:47.242783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:47.796: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:48.243605      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:49.244522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:49.810: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:50.244839      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:51.245666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:51.818: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:52.246440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:53.246875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:53.827: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:54.247231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:55.248047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:55.835: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:56.248891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:57.249779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:57.844: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:22:58.250530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:59.250271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:22:59.852: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:00.250640      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:01.253576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:01.863: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:02.252385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:03.252677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:03.873: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:04.253074      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:05.253576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:05.882: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:06.255381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:07.255683      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:07.890: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:08.256012      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:09.256193      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:09.899: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:10.256648      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:11.257169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:11.906: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:12.258800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:13.258642      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:13.919: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:14.259527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:15.259657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:15.927: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:16.260652      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:17.260825      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:17.935: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:18.261069      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:19.261244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:19.944: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:20.262302      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:21.262324      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:21.955: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:22.263199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:23.263943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:23.963: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:24.263978      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:25.275269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:25.977: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:26.269963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:27.270223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:27.984: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:28.271213      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:29.271369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:29.992: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:30.272006      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:31.272632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:32.005: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:32.272945      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:33.279652      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:34.014: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:34.274935      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:35.275667      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:36.021: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:36.275718      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:37.275999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:38.029: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:38.276146      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:39.279656      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:40.037: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:40.279387      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:41.280288      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:42.046: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:42.280280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:43.281355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:44.053: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:44.282213      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:45.282495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:46.062: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:46.282988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:47.284636      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:48.070: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:48.284219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:49.284710      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:50.078: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:50.285174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:51.285433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:52.087: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:52.285622      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:53.286163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:54.105: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:54.287025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:55.288265      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:56.115: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:56.289344      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:57.292560      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:58.123: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:23:58.290878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:59.291903      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:00.133: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:00.292517      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:01.292380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:02.140: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:02.292767      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:03.292998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:04.149: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:04.294248      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:05.295308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:06.155: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:06.295978      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:07.296203      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:08.163: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:08.297596      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:09.298254      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:10.176: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:10.299219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:11.299764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:12.186: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:12.300333      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:13.300881      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:14.201: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:14.300990      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:15.301288      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:16.208: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:16.302004      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:17.302361      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:18.215: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:18.303166      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:19.303617      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:20.223: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:20.303865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:21.304614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:22.262: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:22.305342      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:23.306047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:24.271: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:24.306594      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:25.307236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:26.277: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:26.307311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:27.307565      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:28.284: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:28.307894      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:29.307878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:30.299: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:30.308063      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:31.308827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:32.307: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:32.309162      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:33.310271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:34.310737      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:34.314: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:35.311831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:36.312189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:36.324: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:37.313018      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:38.312666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:38.331: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:39.312773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:40.314029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:40.340: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:41.314065      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:42.314425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:42.347: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:43.314624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:44.315303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:44.359: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:45.315385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:46.315710      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:46.366: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:47.315812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:48.316080      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:48.375: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:49.316406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:50.316511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:50.383: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:51.316808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:52.317181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:52.394: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:53.317478      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:54.317985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:54.402: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:55.318379      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:56.318579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:56.410: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:57.318817      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:58.319586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:58.417: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:24:59.319834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:00.320642      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:00.428: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:01.321319      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:02.322270      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:02.438: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:03.322439      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:04.322986      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:04.447: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:05.324206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:06.324360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:06.455: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:07.324700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:08.325704      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:08.462: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:09.325664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:10.325943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:10.471: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:11.326214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:12.326959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:12.482: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:13.327506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:14.328410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:14.492: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:15.329382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:16.329887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:16.498: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:17.330242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:18.330906      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:18.507: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:19.331259      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:20.331641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:20.515: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:21.332044      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:22.332946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:22.522: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:23.333433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:24.333763      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:24.530: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:25.334687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:26.335026      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:26.537: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:27.335197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:28.336244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:28.546: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:29.336468      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:30.336827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:30.556: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:31.336933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:32.337192      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:32.562: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:33.338351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:34.338772      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:34.571: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:35.339154      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:36.339696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:36.579: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:37.339876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:38.340287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:38.591: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:39.340473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:40.341368      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:40.599: INFO: Get pod test-grpc-8a61146b-07a8-4ddf-a0a8-a636d2e7222c in namespace container-probe-1842
  E0420 15:25:41.341367      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:42.341828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:42.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 15:25:42.617
  STEP: Destroying namespace "container-probe-1842" for this suite. @ 04/20/24 15:25:42.656
â€¢ [243.284 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 04/20/24 15:25:42.686
  Apr 20 15:25:42.687: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:25:42.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:42.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:42.749
  Apr 20 15:25:42.844: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"aa9109d0-cfc9-4e7a-ad16-0316d3895b51", Controller:(*bool)(0xc003125b16), BlockOwnerDeletion:(*bool)(0xc003125b17)}}
  Apr 20 15:25:42.870: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"81ef2e5e-49fa-4c55-817f-d196041ad6ee", Controller:(*bool)(0xc0036f7d06), BlockOwnerDeletion:(*bool)(0xc0036f7d07)}}
  Apr 20 15:25:42.896: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"690057b3-e779-4b3e-903b-238590cac670", Controller:(*bool)(0xc0036f7fb6), BlockOwnerDeletion:(*bool)(0xc0036f7fb7)}}
  E0420 15:25:43.342290      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:44.342442      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:45.342641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:46.342808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:47.343034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:47.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1551" for this suite. @ 04/20/24 15:25:47.926
â€¢ [5.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 04/20/24 15:25:47.95
  Apr 20 15:25:47.950: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 15:25:47.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:47.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:47.985
  STEP: Creating a LimitRange @ 04/20/24 15:25:47.992
  STEP: Setting up watch @ 04/20/24 15:25:47.992
  STEP: Submitting a LimitRange @ 04/20/24 15:25:48.1
  STEP: Verifying LimitRange creation was observed @ 04/20/24 15:25:48.109
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/20/24 15:25:48.11
  Apr 20 15:25:48.120: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 20 15:25:48.120: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/20/24 15:25:48.12
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/20/24 15:25:48.13
  Apr 20 15:25:48.143: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 20 15:25:48.143: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/20/24 15:25:48.143
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/20/24 15:25:48.156
  Apr 20 15:25:48.184: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 20 15:25:48.184: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/20/24 15:25:48.184
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 15:25:48.188
  STEP: Updating a LimitRange @ 04/20/24 15:25:48.191
  STEP: Verifying LimitRange updating is effective @ 04/20/24 15:25:48.205
  E0420 15:25:48.344036      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:49.344888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/20/24 15:25:50.211
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 15:25:50.229
  STEP: Deleting a LimitRange @ 04/20/24 15:25:50.233
  STEP: Verifying the LimitRange was deleted @ 04/20/24 15:25:50.263
  E0420 15:25:50.345245      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:51.345505      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:52.345840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:53.346159      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:54.346269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:55.270: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/20/24 15:25:55.27
  Apr 20 15:25:55.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3707" for this suite. @ 04/20/24 15:25:55.298
â€¢ [7.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/20/24 15:25:55.318
  Apr 20 15:25:55.318: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 15:25:55.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:55.344
  E0420 15:25:55.346672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:55.35
  STEP: create the container @ 04/20/24 15:25:55.354
  W0420 15:25:55.370770      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 15:25:55.371
  E0420 15:25:56.347195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:57.347924      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:58.348310      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 15:25:58.403
  STEP: the container should be terminated @ 04/20/24 15:25:58.416
  STEP: the termination message should be set @ 04/20/24 15:25:58.416
  Apr 20 15:25:58.416: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/20/24 15:25:58.416
  Apr 20 15:25:58.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3938" for this suite. @ 04/20/24 15:25:58.467
â€¢ [3.171 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 04/20/24 15:25:58.49
  Apr 20 15:25:58.490: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:25:58.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:58.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:58.522
  STEP: Counting existing ResourceQuota @ 04/20/24 15:25:58.526
  E0420 15:25:59.348463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:00.350212      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:01.350595      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:02.350645      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:03.350954      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:26:03.535
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:26:03.545
  E0420 15:26:04.351269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:05.351916      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/20/24 15:26:05.556
  STEP: Ensuring resource quota status captures replication controller creation @ 04/20/24 15:26:05.595
  E0420 15:26:06.352669      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:07.353122      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/20/24 15:26:07.603
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:26:07.615
  E0420 15:26:08.353447      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:09.353620      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:26:09.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7847" for this suite. @ 04/20/24 15:26:09.634
â€¢ [11.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 04/20/24 15:26:09.661
  Apr 20 15:26:09.661: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 15:26:09.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:09.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:09.698
  STEP: Creating LimitRange "e2e-limitrange-qqgpr" in namespace "limitrange-4230" @ 04/20/24 15:26:09.704
  STEP: Creating another limitRange in another namespace @ 04/20/24 15:26:09.713
  Apr 20 15:26:09.743: INFO: Namespace "e2e-limitrange-qqgpr-9869" created
  Apr 20 15:26:09.744: INFO: Creating LimitRange "e2e-limitrange-qqgpr" in namespace "e2e-limitrange-qqgpr-9869"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-qqgpr" @ 04/20/24 15:26:09.754
  Apr 20 15:26:09.763: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-qqgpr" in "limitrange-4230" namespace @ 04/20/24 15:26:09.763
  Apr 20 15:26:09.779: INFO: LimitRange "e2e-limitrange-qqgpr" has been patched
  STEP: Delete LimitRange "e2e-limitrange-qqgpr" by Collection with labelSelector: "e2e-limitrange-qqgpr=patched" @ 04/20/24 15:26:09.779
  STEP: Confirm that the limitRange "e2e-limitrange-qqgpr" has been deleted @ 04/20/24 15:26:09.793
  Apr 20 15:26:09.793: INFO: Requesting list of LimitRange to confirm quantity
  Apr 20 15:26:09.797: INFO: Found 0 LimitRange with label "e2e-limitrange-qqgpr=patched"
  Apr 20 15:26:09.797: INFO: LimitRange "e2e-limitrange-qqgpr" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-qqgpr" @ 04/20/24 15:26:09.798
  Apr 20 15:26:09.803: INFO: Found 1 limitRange
  Apr 20 15:26:09.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4230" for this suite. @ 04/20/24 15:26:09.812
  STEP: Destroying namespace "e2e-limitrange-qqgpr-9869" for this suite. @ 04/20/24 15:26:09.824
â€¢ [0.175 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/20/24 15:26:09.837
  Apr 20 15:26:09.838: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:26:09.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:09.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:09.888
  STEP: creating the pod @ 04/20/24 15:26:09.893
  STEP: submitting the pod to kubernetes @ 04/20/24 15:26:09.893
  W0420 15:26:09.907185      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0420 15:26:10.354557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:11.354901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/20/24 15:26:11.933
  STEP: updating the pod @ 04/20/24 15:26:11.943
  E0420 15:26:12.355271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:26:12.473: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a594c44b-82a9-4e79-a193-7395cc35b16f"
  E0420 15:26:13.355926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:14.356359      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:15.356449      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:16.357486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:26:16.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-343" for this suite. @ 04/20/24 15:26:16.526
â€¢ [6.704 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/20/24 15:26:16.541
  Apr 20 15:26:16.541: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:26:16.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:16.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:16.572
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/20/24 15:26:16.576
  Apr 20 15:26:16.577: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:26:17.357796      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:18.358889      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:26:18.395: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:26:19.359221      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:20.359957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:21.361016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:22.361014      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:23.361747      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:24.361869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:25.362857      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:26:25.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8851" for this suite. @ 04/20/24 15:26:25.859
â€¢ [9.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/20/24 15:26:25.88
  Apr 20 15:26:25.880: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:26:25.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:25.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:25.924
  STEP: Creating a ForbidConcurrent cronjob @ 04/20/24 15:26:25.929
  STEP: Ensuring a job is scheduled @ 04/20/24 15:26:25.939
  E0420 15:26:26.363678      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:27.364851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:28.365953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:29.366718      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:30.367532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:31.368172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:32.369276      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:33.369395      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:34.370349      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:35.370408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:36.371209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:37.373473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:38.372557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:39.373488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:40.374588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:41.374826      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:42.375749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:43.376458      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:44.376783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:45.376806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:46.377522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:47.377855      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:48.378915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:49.379209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:50.380179      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:51.380491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:52.381546      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:53.381793      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:54.382393      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:55.383506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:56.384408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:57.384971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:58.385346      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:59.385543      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:00.385645      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:01.385974      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/20/24 15:27:01.947
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 15:27:01.954
  STEP: Ensuring no more jobs are scheduled @ 04/20/24 15:27:01.959
  E0420 15:27:02.386821      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:03.387484      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:04.388314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:05.389387      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:06.390343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:07.390974      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:08.391656      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:09.392410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:10.393541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:11.393575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:12.394836      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:13.394624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:14.394904      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:15.395346      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:16.395547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:17.395953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:18.396250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:19.396748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:20.396975      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:21.397453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:22.398078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:23.398927      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:24.399239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:25.399500      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:26.400374      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:27.400583      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:28.400917      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:29.401821      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:30.405518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:31.404327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:32.403299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:33.404022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:34.404427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:35.404531      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:36.405509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:37.406071      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:38.406489      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:39.407244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:40.407496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:41.407804      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:42.407988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:43.408659      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:44.409824      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:45.409836      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:46.410223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:47.410438      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:48.411029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:49.411793      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:50.412331      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:51.412155      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:52.413139      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:53.413703      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:54.413945      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:55.414676      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:56.415925      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:57.416631      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:58.419043      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:59.418443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:00.419245      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:01.419519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:02.419689      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:03.420475      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:04.421369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:05.421647      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:06.422646      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:07.422717      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:08.423627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:09.424719      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:10.425415      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:11.426774      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:12.426303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:13.426417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:14.426972      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:15.427003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:16.427864      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:17.428526      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:18.429510      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:19.429893      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:20.430339      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:21.430291      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:22.430563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:23.431213      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:24.431690      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:25.431505      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:26.432558      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:27.433873      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:28.433005      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:29.433380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:30.434597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:31.434784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:32.435143      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:33.435360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:34.436049      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:35.436252      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:36.436521      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:37.436673      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:38.437280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:39.437218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:40.438236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:41.438943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:42.440580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:43.440698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:44.440825      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:45.441853      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:46.442750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:47.443383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:48.443794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:49.444029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:50.444078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:51.444628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:52.445219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:53.445897      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:54.446274      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:55.446581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:56.446652      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:57.446730      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:58.446867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:59.447015      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:00.447371      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:01.447822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:02.447994      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:03.448335      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:04.448791      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:05.449214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:06.449376      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:07.450233      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:08.450498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:09.451515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:10.452163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:11.452386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:12.453391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:13.455280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:14.454966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:15.455933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:16.456303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:17.456832      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:18.457057      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:19.458409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:20.458999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:21.459577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:22.460661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:23.461421      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:24.462255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:25.463156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:26.463381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:27.463584      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:28.463779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:29.464381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:30.465231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:31.465410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:32.465745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:33.466428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:34.467273      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:35.467956      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:36.468196      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:37.468355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:38.469362      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:39.470372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:40.470889      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:41.471070      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:42.471354      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:43.471984      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:44.473608      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:45.473075      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:46.473747      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:47.473847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:48.474751      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:49.475664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:50.475638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:51.475883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:52.476932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:53.477218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:54.477330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:55.477489      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:56.478045      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:57.479023      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:58.480037      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:59.480966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:00.481500      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:01.482659      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:02.482989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:03.483566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:04.483871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:05.485724      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:06.486380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:07.487014      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:08.487353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:09.487573      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:10.488392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:11.488177      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:12.488292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:13.488539      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:14.488902      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:15.489200      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:16.489551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:17.490365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:18.490582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:19.491566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:20.492004      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:21.492452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:22.492829      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:23.493327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:24.495700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:25.494834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:26.494669      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:27.495530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:28.495981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:29.496700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:30.497367      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:31.499216      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:32.498289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:33.498967      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:34.499265      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:35.499380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:36.499744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:37.501395      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:38.500865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:39.501010      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:40.501955      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:41.502320      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:42.502407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:43.503005      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:44.503870      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:45.503948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:46.504261      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:47.504438      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:48.504641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:49.505757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:50.506339      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:51.506596      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:52.507340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:53.507647      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:54.508327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:55.508740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:56.508936      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:57.509563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:58.509643      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:59.510275      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:00.511284      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:01.511641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:02.511849      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:03.512354      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:04.512691      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:05.513411      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:06.514313      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:07.514253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:08.514307      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:09.515329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:10.515946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:11.516564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:12.517268      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:13.517485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:14.517971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:15.518396      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:16.519364      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:17.520161      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:18.520315      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:19.521492      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:20.522593      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:21.523137      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:22.523604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:23.523848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:24.524927      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:25.524937      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:26.525518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:27.525377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:28.525979      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:29.526465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:30.526898      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:31.527570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:32.528512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:33.529178      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:34.529566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:35.530582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:36.530710      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:37.530859      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:38.531821      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:39.532749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:40.533769      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:41.534357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:42.534437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:43.534721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:44.535388      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:45.535563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:46.535653      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:47.535952      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:48.536161      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:49.537483      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:50.537485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:51.537969      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:52.538271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:53.538890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:54.538994      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:55.539358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:56.539372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:57.539917      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:58.539796      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:59.540664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:00.541007      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:01.541807      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/20/24 15:32:01.973
  Apr 20 15:32:01.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3930" for this suite. @ 04/20/24 15:32:02.001
â€¢ [336.141 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 04/20/24 15:32:02.025
  Apr 20 15:32:02.025: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:32:02.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:02.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:02.104
  Apr 20 15:32:02.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-6082 version'
  Apr 20 15:32:02.291: INFO: stderr: ""
  Apr 20 15:32:02.291: INFO: stdout: "Client Version: v1.28.9\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.9\n"
  Apr 20 15:32:02.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6082" for this suite. @ 04/20/24 15:32:02.303
â€¢ [0.291 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 04/20/24 15:32:02.316
  Apr 20 15:32:02.316: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 15:32:02.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:02.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:02.363
  STEP: getting /apis @ 04/20/24 15:32:02.373
  STEP: getting /apis/discovery.k8s.io @ 04/20/24 15:32:02.382
  STEP: getting /apis/discovery.k8s.iov1 @ 04/20/24 15:32:02.384
  STEP: creating @ 04/20/24 15:32:02.387
  STEP: getting @ 04/20/24 15:32:02.416
  STEP: listing @ 04/20/24 15:32:02.423
  STEP: watching @ 04/20/24 15:32:02.43
  Apr 20 15:32:02.430: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 15:32:02.432
  STEP: cluster-wide watching @ 04/20/24 15:32:02.439
  Apr 20 15:32:02.439: INFO: starting watch
  STEP: patching @ 04/20/24 15:32:02.441
  STEP: updating @ 04/20/24 15:32:02.456
  Apr 20 15:32:02.479: INFO: waiting for watch events with expected annotations
  Apr 20 15:32:02.479: INFO: saw patched and updated annotations
  STEP: deleting @ 04/20/24 15:32:02.479
  STEP: deleting a collection @ 04/20/24 15:32:02.513
  E0420 15:32:02.542509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:02.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9077" for this suite. @ 04/20/24 15:32:02.566
â€¢ [0.266 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/20/24 15:32:02.581
  Apr 20 15:32:02.581: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:32:02.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:02.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:02.625
  STEP: creating the pod @ 04/20/24 15:32:02.629
  STEP: setting up watch @ 04/20/24 15:32:02.63
  STEP: submitting the pod to kubernetes @ 04/20/24 15:32:02.739
  STEP: verifying the pod is in kubernetes @ 04/20/24 15:32:02.757
  STEP: verifying pod creation was observed @ 04/20/24 15:32:02.768
  E0420 15:32:03.548838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:04.546021      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/20/24 15:32:04.796
  STEP: verifying pod deletion was observed @ 04/20/24 15:32:04.811
  E0420 15:32:05.546918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:05.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7906" for this suite. @ 04/20/24 15:32:05.86
â€¢ [3.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/20/24 15:32:05.884
  Apr 20 15:32:05.884: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:32:05.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:05.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:05.927
  STEP: Setting up server cert @ 04/20/24 15:32:05.99
  E0420 15:32:06.547380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:32:07.317
  STEP: Deploying the webhook pod @ 04/20/24 15:32:07.341
  STEP: Wait for the deployment to be ready @ 04/20/24 15:32:07.377
  Apr 20 15:32:07.397: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:32:07.549161      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:08.548450      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:32:09.432
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:32:09.463
  E0420 15:32:09.549399      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:10.464: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 15:32:10.48
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 15:32:10.52
  E0420 15:32:10.550216      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a dummy validating-webhook-configuration object @ 04/20/24 15:32:10.554
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/20/24 15:32:10.574
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/20/24 15:32:10.596
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/20/24 15:32:10.631
  Apr 20 15:32:10.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3321" for this suite. @ 04/20/24 15:32:10.794
  STEP: Destroying namespace "webhook-markers-940" for this suite. @ 04/20/24 15:32:10.827
â€¢ [4.965 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 04/20/24 15:32:10.856
  Apr 20 15:32:10.856: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:32:10.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:10.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:10.913
  E0420 15:32:11.552268      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:12.551941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:13.552935      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:14.553741      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:14.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3123" for this suite. @ 04/20/24 15:32:14.976
â€¢ [4.136 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/20/24 15:32:14.992
  Apr 20 15:32:14.992: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:32:14.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:15.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:15.043
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 15:32:15.093
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:32:15.106
  Apr 20 15:32:15.124: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:32:15.124: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:32:15.554034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:16.164: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:32:16.164: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:32:16.555708      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:17.143: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:32:17.143: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:32:17.556294      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:18.147: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:32:18.147: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/20/24 15:32:18.158
  STEP: DeleteCollection of the DaemonSets @ 04/20/24 15:32:18.168
  STEP: Verify that ReplicaSets have been deleted @ 04/20/24 15:32:18.185
  Apr 20 15:32:18.243: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"54098"},"items":null}

  Apr 20 15:32:18.321: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"54102"},"items":[{"metadata":{"name":"daemon-set-5lrjh","generateName":"daemon-set-","namespace":"daemonsets-8283","uid":"0f35259f-369d-4fb9-b57a-eef530150274","resourceVersion":"54098","creationTimestamp":"2024-04-20T15:32:15Z","deletionTimestamp":"2024-04-20T15:32:48Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"765179b7-975c-483c-a680-c82e510be6f8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:32:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"765179b7-975c-483c-a680-c82e510be6f8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:32:17Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.128\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-h5n8q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-h5n8q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aat3reeth3ee-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aat3reeth3ee-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:15Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:17Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:17Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:15Z"}],"hostIP":"192.168.121.198","podIP":"10.233.64.128","podIPs":[{"ip":"10.233.64.128"}],"startTime":"2024-04-20T15:32:15Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T15:32:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://83cd3d5d771a6a7bc80f7e806e31d8c1a5f9fc816b5cc2425c7c81c7d2f51eff","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fvfxh","generateName":"daemon-set-","namespace":"daemonsets-8283","uid":"f70c6454-0b66-4c81-92e1-d8244718592f","resourceVersion":"54100","creationTimestamp":"2024-04-20T15:32:15Z","deletionTimestamp":"2024-04-20T15:32:48Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"765179b7-975c-483c-a680-c82e510be6f8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:32:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"765179b7-975c-483c-a680-c82e510be6f8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:32:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.97\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-x84dq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-x84dq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aat3reeth3ee-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aat3reeth3ee-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:15Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:15Z"}],"hostIP":"192.168.121.20","podIP":"10.233.66.97","podIPs":[{"ip":"10.233.66.97"}],"startTime":"2024-04-20T15:32:15Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T15:32:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://f386dce314a120ee23b737b55c55123904c5e779426ae40ef1552b28e0b79762","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-v4pjm","generateName":"daemon-set-","namespace":"daemonsets-8283","uid":"48415fdb-2f52-407d-be18-380c397479cd","resourceVersion":"54099","creationTimestamp":"2024-04-20T15:32:15Z","deletionTimestamp":"2024-04-20T15:32:48Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"765179b7-975c-483c-a680-c82e510be6f8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:32:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"765179b7-975c-483c-a680-c82e510be6f8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:32:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.136\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wfmzb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wfmzb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aat3reeth3ee-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aat3reeth3ee-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:15Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:32:15Z"}],"hostIP":"192.168.121.170","podIP":"10.233.65.136","podIPs":[{"ip":"10.233.65.136"}],"startTime":"2024-04-20T15:32:15Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T15:32:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://3cc519fb5dcc49e5cb28c165202ff4ecd031415044c98a6c7dd127fa8eefbc0e","started":true}],"qosClass":"BestEffort"}}]}

  Apr 20 15:32:18.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8283" for this suite. @ 04/20/24 15:32:18.387
â€¢ [3.414 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 04/20/24 15:32:18.407
  Apr 20 15:32:18.407: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:32:18.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:18.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:18.468
  STEP: Creating configMap with name configmap-test-volume-map-dd16e52c-5db2-453b-bf23-c0553fe07817 @ 04/20/24 15:32:18.478
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:32:18.489
  E0420 15:32:18.556728      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:19.557747      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:20.558158      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:21.560713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:32:22.548
  Apr 20 15:32:22.556: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-c8bcd46e-9f8a-452f-8931-b91bb14cd2f4 container agnhost-container: <nil>
  E0420 15:32:22.560945      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 04/20/24 15:32:22.597
  Apr 20 15:32:22.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2682" for this suite. @ 04/20/24 15:32:22.647
â€¢ [4.264 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/20/24 15:32:22.677
  Apr 20 15:32:22.677: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:32:22.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:22.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:22.722
  STEP: Creating secret with name secret-test-c6fc7833-f8b4-4d05-9e30-94bca730cb73 @ 04/20/24 15:32:22.728
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:32:22.742
  E0420 15:32:23.561324      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:24.562676      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:25.563039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:26.563207      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:32:26.791
  Apr 20 15:32:26.798: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-8e948290-bd2e-4fd8-afe0-f5b88100591b container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:32:26.81
  Apr 20 15:32:26.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8969" for this suite. @ 04/20/24 15:32:26.854
â€¢ [4.192 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 04/20/24 15:32:26.87
  Apr 20 15:32:26.870: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 15:32:26.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:26.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:26.912
  STEP: Setting up server cert @ 04/20/24 15:32:26.917
  E0420 15:32:27.563431      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 15:32:27.868
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 15:32:27.88
  STEP: Wait for the deployment to be ready @ 04/20/24 15:32:27.908
  Apr 20 15:32:27.923: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0420 15:32:28.564713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:29.565315      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:32:29.945
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:32:29.967
  E0420 15:32:30.565533      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:30.968: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 20 15:32:30.988: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:32:31.565845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:32.566892      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:33.567528      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/20/24 15:32:33.828
  STEP: v2 custom resource should be converted @ 04/20/24 15:32:33.839
  Apr 20 15:32:33.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9711" for this suite. @ 04/20/24 15:32:34.483
â€¢ [7.630 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 04/20/24 15:32:34.501
  Apr 20 15:32:34.501: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename job @ 04/20/24 15:32:34.505
  E0420 15:32:34.567702      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:34.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:34.584
  STEP: Creating a job @ 04/20/24 15:32:34.589
  STEP: Ensuring active pods == parallelism @ 04/20/24 15:32:34.6
  E0420 15:32:35.567867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:36.568465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 04/20/24 15:32:36.609
  STEP: deleting Job.batch foo in namespace job-8352, will wait for the garbage collector to delete the pods @ 04/20/24 15:32:36.609
  Apr 20 15:32:36.683: INFO: Deleting Job.batch foo took: 15.687138ms
  Apr 20 15:32:36.783: INFO: Terminating Job.batch foo pods took: 100.56418ms
  E0420 15:32:37.569142      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:38.569793      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:39.570242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:40.570372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:41.571445      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:42.571549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:43.572456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:44.572884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:45.573150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:46.574255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:47.574653      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:48.574969      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:49.576515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:50.576716      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:51.577188      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:52.577613      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:53.577709      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:54.578308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:55.578409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:56.579594      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:57.579700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:58.579848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:59.580834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:00.581757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:01.583238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:02.582962      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:03.583594      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:04.583739      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:05.586396      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:06.587327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:07.588080      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 04/20/24 15:33:08.384
  Apr 20 15:33:08.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8352" for this suite. @ 04/20/24 15:33:08.402
â€¢ [33.917 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/20/24 15:33:08.426
  Apr 20 15:33:08.426: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 15:33:08.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:08.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:08.484
  Apr 20 15:33:08.488: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 15:33:08.509: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 15:33:08.516: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-1 before test
  Apr 20 15:33:08.533: INFO: coredns-5dd5756b68-5kvvg from kube-system started at 2024-04-20 14:11:33 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 15:33:08.533: INFO: kube-addon-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 15:33:08.533: INFO: kube-apiserver-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container kube-apiserver ready: true, restart count 9
  Apr 20 15:33:08.533: INFO: kube-controller-manager-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 15:33:08.533: INFO: kube-flannel-ds-v9v9p from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:33:08.533: INFO: kube-proxy-zz8qd from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:33:08.533: INFO: kube-scheduler-aat3reeth3ee-1 from kube-system started at 2024-04-20 14:05:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container kube-scheduler ready: true, restart count 9
  Apr 20 15:33:08.533: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-pgdh2 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:33:08.533: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:33:08.533: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 15:33:08.533: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-2 before test
  Apr 20 15:33:08.550: INFO: coredns-5dd5756b68-8582h from kube-system started at 2024-04-20 15:08:17 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 15:33:08.550: INFO: kube-addon-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 20 15:33:08.550: INFO: kube-apiserver-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container kube-apiserver ready: true, restart count 7
  Apr 20 15:33:08.550: INFO: kube-controller-manager-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container kube-controller-manager ready: true, restart count 7
  Apr 20 15:33:08.550: INFO: kube-flannel-ds-gwdf9 from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:33:08.550: INFO: kube-proxy-jzzrl from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:33:08.550: INFO: kube-scheduler-aat3reeth3ee-2 from kube-system started at 2024-04-20 14:05:53 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container kube-scheduler ready: true, restart count 8
  Apr 20 15:33:08.550: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:51 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 15:33:08.550: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-hphn6 from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:33:08.550: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:33:08.550: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 15:33:08.550: INFO: 
  Logging pods the apiserver thinks is on node aat3reeth3ee-3 before test
  Apr 20 15:33:08.566: INFO: kube-flannel-ds-q7t9z from kube-system started at 2024-04-20 15:08:42 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.566: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:33:08.566: INFO: kube-proxy-b5t4l from kube-system started at 2024-04-20 14:11:34 +0000 UTC (1 container statuses recorded)
  Apr 20 15:33:08.566: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:33:08.566: INFO: sonobuoy-e2e-job-b7d62c1035884e0e from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:33:08.566: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 15:33:08.566: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:33:08.566: INFO: sonobuoy-systemd-logs-daemon-set-bd99c13ffa4b4cca-4ntmw from sonobuoy started at 2024-04-20 14:11:59 +0000 UTC (2 container statuses recorded)
  Apr 20 15:33:08.566: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:33:08.566: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 15:33:08.566
  E0420 15:33:08.588985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:09.591460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:10.591832      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 15:33:10.605
  STEP: Trying to apply a random label on the found node. @ 04/20/24 15:33:10.636
  STEP: verifying the node has the label kubernetes.io/e2e-fe8b4249-57a7-413c-8fe5-99c37c775146 42 @ 04/20/24 15:33:10.661
  STEP: Trying to relaunch the pod, now with labels. @ 04/20/24 15:33:10.674
  E0420 15:33:11.592889      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:12.593391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-fe8b4249-57a7-413c-8fe5-99c37c775146 off the node aat3reeth3ee-3 @ 04/20/24 15:33:12.715
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-fe8b4249-57a7-413c-8fe5-99c37c775146 @ 04/20/24 15:33:12.751
  Apr 20 15:33:12.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1234" for this suite. @ 04/20/24 15:33:12.794
â€¢ [4.389 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/20/24 15:33:12.819
  Apr 20 15:33:12.819: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:33:12.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:12.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:12.879
  STEP: Creating configMap with name configmap-projected-all-test-volume-52fc9a1c-e7c1-4174-b325-f76e2ec02c25 @ 04/20/24 15:33:12.89
  STEP: Creating secret with name secret-projected-all-test-volume-dda05a06-a451-476d-9708-8657b777343f @ 04/20/24 15:33:12.901
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/20/24 15:33:12.914
  E0420 15:33:13.594442      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:14.594685      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:15.595787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:16.596538      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:33:16.978
  Apr 20 15:33:16.985: INFO: Trying to get logs from node aat3reeth3ee-3 pod projected-volume-a553ee8c-c3f5-42a1-8f15-f9616ec8c813 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:33:16.999
  Apr 20 15:33:17.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7714" for this suite. @ 04/20/24 15:33:17.049
â€¢ [4.247 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 04/20/24 15:33:17.066
  Apr 20 15:33:17.066: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 15:33:17.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:17.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:17.113
  STEP: Performing setup for networking test in namespace pod-network-test-9032 @ 04/20/24 15:33:17.118
  STEP: creating a selector @ 04/20/24 15:33:17.118
  STEP: Creating the service pods in kubernetes @ 04/20/24 15:33:17.118
  Apr 20 15:33:17.118: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 15:33:17.596612      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:18.597392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:19.597982      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:20.598259      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:21.598459      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:22.599535      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:23.600016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:24.600299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:25.601371      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:26.601992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:27.602603      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:28.603642      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:29.604503      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:30.604973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:31.605788      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:32.606171      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:33.606358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:34.607002      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:35.607243      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:36.607465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:37.608452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:38.608823      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 15:33:39.335
  E0420 15:33:39.609185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:40.610456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:41.377: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 15:33:41.377: INFO: Breadth first check of 10.233.64.129 on host 192.168.121.198...
  Apr 20 15:33:41.385: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.107:9080/dial?request=hostname&protocol=http&host=10.233.64.129&port=8083&tries=1'] Namespace:pod-network-test-9032 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:33:41.385: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:33:41.388: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:33:41.388: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9032/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.129%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 15:33:41.605: INFO: Waiting for responses: map[]
  Apr 20 15:33:41.607: INFO: reached 10.233.64.129 after 0/1 tries
  Apr 20 15:33:41.607: INFO: Breadth first check of 10.233.65.137 on host 192.168.121.170...
  E0420 15:33:41.610945      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:41.619: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.107:9080/dial?request=hostname&protocol=http&host=10.233.65.137&port=8083&tries=1'] Namespace:pod-network-test-9032 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:33:41.619: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:33:41.621: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:33:41.621: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9032/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.137%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 15:33:41.775: INFO: Waiting for responses: map[]
  Apr 20 15:33:41.775: INFO: reached 10.233.65.137 after 0/1 tries
  Apr 20 15:33:41.775: INFO: Breadth first check of 10.233.66.106 on host 192.168.121.20...
  Apr 20 15:33:41.783: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.107:9080/dial?request=hostname&protocol=http&host=10.233.66.106&port=8083&tries=1'] Namespace:pod-network-test-9032 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:33:41.783: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:33:41.785: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:33:41.786: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9032/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.106%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 15:33:41.917: INFO: Waiting for responses: map[]
  Apr 20 15:33:41.917: INFO: reached 10.233.66.106 after 0/1 tries
  Apr 20 15:33:41.917: INFO: Going to retry 0 out of 3 pods....
  Apr 20 15:33:41.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9032" for this suite. @ 04/20/24 15:33:41.932
â€¢ [24.894 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/20/24 15:33:41.965
  Apr 20 15:33:41.965: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:33:41.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:42.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:42.057
  E0420 15:33:42.612755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:43.613353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:44.613976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:45.614227      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:46.614690      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:47.615597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:48.615744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:49.615913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:50.617033      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:51.620073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:52.620509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:53.620613      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:54.620890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:55.620900      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:56.621242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:57.622214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:58.622412      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:59.622711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:00.623352      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:01.623543      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:02.624353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:03.625155      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:04.625437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:05.626566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:06.627189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:07.627560      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:08.628590      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:09.628640      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:10.629583      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:11.629745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:12.630343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:13.631156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:14.631911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:15.632995      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:16.633308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:17.634271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:18.634476      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:19.635377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:20.636303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:21.637164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:22.638389      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:23.639324      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:24.639735      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:25.653821      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:26.652597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:27.653033      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:28.653402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:29.653867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:30.653901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:31.657224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:32.655334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:33.656308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:34.657063      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:35.658509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:36.658695      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:37.658961      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:38.659258      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:39.660431      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:40.661407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:41.661587      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:42.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3990" for this suite. @ 04/20/24 15:34:42.129
â€¢ [60.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/20/24 15:34:42.154
  Apr 20 15:34:42.154: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:34:42.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:34:42.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:34:42.224
  STEP: Setting up server cert @ 04/20/24 15:34:42.33
  E0420 15:34:42.662587      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:34:43.384
  STEP: Deploying the webhook pod @ 04/20/24 15:34:43.4
  STEP: Wait for the deployment to be ready @ 04/20/24 15:34:43.427
  Apr 20 15:34:43.440: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:34:43.663258      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:44.663409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:34:45.472
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:34:45.499
  E0420 15:34:45.663465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:46.500: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 15:34:46.516: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:34:46.663724      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/20/24 15:34:47.047
  STEP: Creating a custom resource that should be denied by the webhook @ 04/20/24 15:34:47.086
  E0420 15:34:47.664032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:48.664689      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/20/24 15:34:49.224
  STEP: Updating the custom resource with disallowed data should be denied @ 04/20/24 15:34:49.238
  STEP: Deleting the custom resource should be denied @ 04/20/24 15:34:49.26
  STEP: Remove the offending key and value from the custom resource data @ 04/20/24 15:34:49.274
  STEP: Deleting the updated custom resource should be successful @ 04/20/24 15:34:49.3
  Apr 20 15:34:49.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:34:49.664986      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-977" for this suite. @ 04/20/24 15:34:50.029
  STEP: Destroying namespace "webhook-markers-6328" for this suite. @ 04/20/24 15:34:50.045
â€¢ [7.912 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/20/24 15:34:50.068
  Apr 20 15:34:50.068: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:34:50.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:34:50.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:34:50.112
  STEP: Setting up server cert @ 04/20/24 15:34:50.171
  E0420 15:34:50.665404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:34:51.191
  STEP: Deploying the webhook pod @ 04/20/24 15:34:51.203
  STEP: Wait for the deployment to be ready @ 04/20/24 15:34:51.23
  Apr 20 15:34:51.246: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:34:51.666422      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:52.666960      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:34:53.271
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:34:53.296
  E0420 15:34:53.666910      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:54.296: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 15:34:54.311: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:34:54.667671      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5376-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 15:34:54.835
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 15:34:54.873
  E0420 15:34:55.668886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:56.668699      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:57.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:34:57.669048      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1002" for this suite. @ 04/20/24 15:34:57.715
  STEP: Destroying namespace "webhook-markers-5269" for this suite. @ 04/20/24 15:34:57.731
â€¢ [7.678 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/20/24 15:34:57.748
  Apr 20 15:34:57.749: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 15:34:57.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:34:57.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:34:57.817
  Apr 20 15:34:57.879: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 15:34:58.669336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:59.669959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:00.670437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:01.670650      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:02.671637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:03.671742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:04.672543      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:05.673479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:06.675627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:07.675827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:08.676868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:09.677278      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:10.677562      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:11.678223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:12.678367      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:13.679080      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:14.679818      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:15.683816      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:16.681518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:17.681787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:18.682051      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:19.682355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:20.682749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:21.683288      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:22.683671      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:23.684570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:24.685362      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:25.685948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:26.686248      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:27.686476      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:28.690074      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:29.689389      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:30.689605      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:31.690088      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:32.691164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:33.694430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:34.692506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:35.692664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:36.692810      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:37.693566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:38.693932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:39.694930      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:40.696172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:41.697743      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:42.697718      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:43.698753      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:44.699392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:45.699638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:46.699750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:47.702748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:48.701541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:49.701869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:50.702874      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:51.703508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:52.703626      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:53.703826      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:54.704995      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:55.705784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:56.705871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:57.706491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:57.952: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 15:35:57.962
  Apr 20 15:35:57.962: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 15:35:57.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:35:58.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:35:58.007
  Apr 20 15:35:58.048: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 20 15:35:58.054: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 20 15:35:58.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:35:58.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3755" for this suite. @ 04/20/24 15:35:58.341
  STEP: Destroying namespace "sched-preemption-1000" for this suite. @ 04/20/24 15:35:58.359
â€¢ [60.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/20/24 15:35:58.382
  Apr 20 15:35:58.383: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 15:35:58.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:35:58.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:35:58.443
  STEP: creating a target pod @ 04/20/24 15:35:58.45
  E0420 15:35:58.707609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:59.707722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/20/24 15:36:00.503
  E0420 15:36:00.708438      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:01.709634      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:02.709735      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:03.709876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/20/24 15:36:04.547
  Apr 20 15:36:04.547: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6128 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:36:04.547: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:36:04.549: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:36:04.549: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-6128/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 20 15:36:04.677: INFO: Exec stderr: ""
  Apr 20 15:36:04.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:36:04.710861      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ephemeral-containers-test-6128" for this suite. @ 04/20/24 15:36:04.716
â€¢ [6.346 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 04/20/24 15:36:04.729
  Apr 20 15:36:04.729: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename job @ 04/20/24 15:36:04.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:04.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:04.773
  STEP: Creating a job @ 04/20/24 15:36:04.778
  STEP: Ensuring active pods == parallelism @ 04/20/24 15:36:04.79
  E0420 15:36:05.712311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:06.712081      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 04/20/24 15:36:06.802
  Apr 20 15:36:07.343: INFO: Successfully updated pod "adopt-release-9w29m"
  STEP: Checking that the Job readopts the Pod @ 04/20/24 15:36:07.344
  E0420 15:36:07.712383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:08.712568      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 04/20/24 15:36:09.36
  E0420 15:36:09.712851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:09.882: INFO: Successfully updated pod "adopt-release-9w29m"
  STEP: Checking that the Job releases the Pod @ 04/20/24 15:36:09.882
  E0420 15:36:10.713251      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:11.713490      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:11.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3913" for this suite. @ 04/20/24 15:36:11.909
â€¢ [7.192 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 04/20/24 15:36:11.926
  Apr 20 15:36:11.926: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:36:11.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:11.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:11.965
  STEP: creating the pod @ 04/20/24 15:36:11.97
  Apr 20 15:36:11.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 create -f -'
  Apr 20 15:36:12.638: INFO: stderr: ""
  Apr 20 15:36:12.638: INFO: stdout: "pod/pause created\n"
  E0420 15:36:12.714341      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:13.714535      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/20/24 15:36:14.66
  Apr 20 15:36:14.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 label pods pause testing-label=testing-label-value'
  E0420 15:36:14.715231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:14.848: INFO: stderr: ""
  Apr 20 15:36:14.848: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/20/24 15:36:14.848
  Apr 20 15:36:14.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 get pod pause -L testing-label'
  Apr 20 15:36:15.018: INFO: stderr: ""
  Apr 20 15:36:15.018: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/20/24 15:36:15.018
  Apr 20 15:36:15.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 label pods pause testing-label-'
  Apr 20 15:36:15.197: INFO: stderr: ""
  Apr 20 15:36:15.197: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/20/24 15:36:15.197
  Apr 20 15:36:15.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 get pod pause -L testing-label'
  Apr 20 15:36:15.366: INFO: stderr: ""
  Apr 20 15:36:15.366: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 04/20/24 15:36:15.368
  Apr 20 15:36:15.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 delete --grace-period=0 --force -f -'
  Apr 20 15:36:15.543: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 15:36:15.543: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 20 15:36:15.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 get rc,svc -l name=pause --no-headers'
  E0420 15:36:15.715462      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:15.733: INFO: stderr: "No resources found in kubectl-5928 namespace.\n"
  Apr 20 15:36:15.733: INFO: stdout: ""
  Apr 20 15:36:15.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-5928 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 15:36:15.883: INFO: stderr: ""
  Apr 20 15:36:15.884: INFO: stdout: ""
  Apr 20 15:36:15.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5928" for this suite. @ 04/20/24 15:36:15.893
â€¢ [3.980 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/20/24 15:36:15.906
  Apr 20 15:36:15.906: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:36:15.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:15.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:15.947
  Apr 20 15:36:15.953: INFO: Creating simple deployment test-new-deployment
  Apr 20 15:36:15.983: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E0420 15:36:16.715423      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:17.715555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 04/20/24 15:36:18.017
  STEP: updating a scale subresource @ 04/20/24 15:36:18.025
  STEP: verifying the deployment Spec.Replicas was modified @ 04/20/24 15:36:18.035
  STEP: Patch a scale subresource @ 04/20/24 15:36:18.045
  Apr 20 15:36:18.098: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-165",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88d9d02b-1fd1-46b7-b10d-a0cb071ccbe6",
      ResourceVersion: (string) (len=5) "55223",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 15:36:18.129: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-165",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7724e31e-529d-4133-8a38-cdb4dd0be44d",
      ResourceVersion: (string) (len=5) "55226",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "88d9d02b-1fd1-46b7-b10d-a0cb071ccbe6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224178,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 64 39 64 30  32 62 2d 31 66 64 31 2d  |\"88d9d02b-1fd1-|
              00000120  34 36 62 37 2d 62 31 30  64 2d 61 30 63 62 30 37  |46b7-b10d-a0cb07|
              00000130  31 63 63 62 65 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1ccbe6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224178,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:36:18.149: INFO: Pod "test-new-deployment-557759b7c7-5wzqf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-5wzqf",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-165",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67b85161-6982-4270-9dac-cfbb457a9d52",
      ResourceVersion: (string) (len=5) "55225",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224178,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7724e31e-529d-4133-8a38-cdb4dd0be44d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224178,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  32 34 65 33 31 65 2d 35  |d\":\"7724e31e-5|
              00000090  32 39 64 2d 34 31 33 33  2d 38 61 33 38 2d 63 64  |29d-4133-8a38-cd|
              000000a0  62 34 64 64 30 62 65 34  34 64 5c 22 7d 22 3a 7b  |b4dd0be44d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-654kg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-654kg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224178,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:36:18.152: INFO: Pod "test-new-deployment-557759b7c7-66tjj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-66tjj",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-165",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "896d2050-a688-4a5e-a739-7821667e688c",
      ResourceVersion: (string) (len=5) "55207",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224176,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7724e31e-529d-4133-8a38-cdb4dd0be44d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  32 34 65 33 31 65 2d 35  |d\":\"7724e31e-5|
              00000090  32 39 64 2d 34 31 33 33  2d 38 61 33 38 2d 63 64  |29d-4133-8a38-cd|
              000000a0  62 34 64 64 30 62 65 34  34 64 5c 22 7d 22 3a 7b  |b4dd0be44d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 31 36 5c 22 7d  |10.233.66.116\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mxjmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mxjmr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224176,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224176,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b32d2292523b09411bb64068f7b2d4a94fe02877687fbf7dd05bdb6e632afc44",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:36:18.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-165" for this suite. @ 04/20/24 15:36:18.171
â€¢ [2.332 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 04/20/24 15:36:18.241
  Apr 20 15:36:18.241: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:36:18.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:18.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:18.378
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:36:18.383
  E0420 15:36:18.716321      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:19.716776      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:36:20.42
  Apr 20 15:36:20.428: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-cbad3dd0-c6ff-4aca-a6ac-7c8b8f2e1d56 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:36:20.446
  Apr 20 15:36:20.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3600" for this suite. @ 04/20/24 15:36:20.484
â€¢ [2.257 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/20/24 15:36:20.501
  Apr 20 15:36:20.501: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:36:20.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:20.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:20.54
  STEP: Creating a pod to test substitution in container's args @ 04/20/24 15:36:20.546
  E0420 15:36:20.717865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:21.718473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:22.718529      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:23.719624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:36:24.592
  Apr 20 15:36:24.598: INFO: Trying to get logs from node aat3reeth3ee-3 pod var-expansion-d37abc2d-1144-426f-9f52-0409b92df04d container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:36:24.611
  Apr 20 15:36:24.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7894" for this suite. @ 04/20/24 15:36:24.653
â€¢ [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 04/20/24 15:36:24.679
  Apr 20 15:36:24.679: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:36:24.682
  E0420 15:36:24.719691      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:24.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:24.727
  STEP: fetching services @ 04/20/24 15:36:24.733
  Apr 20 15:36:24.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5647" for this suite. @ 04/20/24 15:36:24.754
â€¢ [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 04/20/24 15:36:24.78
  Apr 20 15:36:24.780: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:36:24.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:24.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:24.846
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 15:36:24.851
  Apr 20 15:36:24.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-641 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 20 15:36:25.012: INFO: stderr: ""
  Apr 20 15:36:25.012: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/20/24 15:36:25.012
  Apr 20 15:36:25.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-641 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Apr 20 15:36:25.243: INFO: stderr: ""
  Apr 20 15:36:25.243: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 15:36:25.243
  Apr 20 15:36:25.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-641 delete pods e2e-test-httpd-pod'
  E0420 15:36:25.720581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:26.721470      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:27.382: INFO: stderr: ""
  Apr 20 15:36:27.382: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 15:36:27.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-641" for this suite. @ 04/20/24 15:36:27.396
â€¢ [2.634 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 04/20/24 15:36:27.417
  Apr 20 15:36:27.417: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 15:36:27.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:27.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:27.469
  E0420 15:36:27.721968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:28.722376      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:29.723609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:30.723782      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:31.724357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/20/24 15:36:32.675
  E0420 15:36:32.724964      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:33.725335      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:34.726165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:35.726638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:36.726854      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 04/20/24 15:36:37.69
  E0420 15:36:37.727714      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:38.728513      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:39.730705      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:40.729681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:41.730036      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/20/24 15:36:42.707
  E0420 15:36:42.730239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:43.730715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:44.730808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:45.731011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:46.731623      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 04/20/24 15:36:47.722
  E0420 15:36:47.731687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:47.767: INFO: EndpointSlice for Service endpointslice-427/example-named-port not found
  E0420 15:36:48.732047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:49.732817      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:50.733468      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:51.733671      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:52.734496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:53.735066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:54.735360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:55.736402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:56.736025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:57.737051      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:57.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-427" for this suite. @ 04/20/24 15:36:57.804
â€¢ [30.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/20/24 15:36:57.833
  Apr 20 15:36:57.833: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:36:57.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:57.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:57.893
  STEP: Creating secret with name secret-test-map-fc330d3b-ebab-4bf7-b085-ded4b78c7a2a @ 04/20/24 15:36:57.908
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:36:57.926
  E0420 15:36:58.738161      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:59.738586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:00.738910      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:01.739167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:37:01.976
  Apr 20 15:37:01.982: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-secrets-ae922e41-5368-4a2a-937c-8d511d9eb991 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:37:01.999
  Apr 20 15:37:02.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7909" for this suite. @ 04/20/24 15:37:02.045
â€¢ [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 04/20/24 15:37:02.062
  Apr 20 15:37:02.062: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:37:02.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:02.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:02.127
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:37:02.133
  E0420 15:37:02.739544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:03.739931      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:04.740882      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:05.741792      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:37:06.183
  Apr 20 15:37:06.190: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-7e30bf0e-b6c9-409b-89ee-22ceda22b825 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:37:06.209
  Apr 20 15:37:06.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2055" for this suite. @ 04/20/24 15:37:06.278
â€¢ [4.227 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 04/20/24 15:37:06.29
  Apr 20 15:37:06.291: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:37:06.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:06.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:06.332
  STEP: Read namespace status @ 04/20/24 15:37:06.337
  Apr 20 15:37:06.345: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/20/24 15:37:06.346
  Apr 20 15:37:06.361: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/20/24 15:37:06.361
  Apr 20 15:37:06.378: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 20 15:37:06.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-907" for this suite. @ 04/20/24 15:37:06.387
â€¢ [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/20/24 15:37:06.411
  Apr 20 15:37:06.411: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename proxy @ 04/20/24 15:37:06.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:06.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:06.455
  Apr 20 15:37:06.459: INFO: Creating pod...
  E0420 15:37:06.742287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:07.742890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:08.488: INFO: Creating service...
  Apr 20 15:37:08.514: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/pods/agnhost/proxy?method=DELETE
  Apr 20 15:37:08.533: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 15:37:08.533: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/pods/agnhost/proxy?method=OPTIONS
  Apr 20 15:37:08.543: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 15:37:08.543: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/pods/agnhost/proxy?method=PATCH
  Apr 20 15:37:08.550: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 15:37:08.550: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/pods/agnhost/proxy?method=POST
  Apr 20 15:37:08.559: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 15:37:08.559: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/pods/agnhost/proxy?method=PUT
  Apr 20 15:37:08.570: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 15:37:08.570: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 20 15:37:08.587: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 15:37:08.587: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 20 15:37:08.600: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 15:37:08.600: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 20 15:37:08.613: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 15:37:08.613: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/services/e2e-proxy-test-service/proxy?method=POST
  Apr 20 15:37:08.627: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 15:37:08.627: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 20 15:37:08.639: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 15:37:08.639: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/pods/agnhost/proxy?method=GET
  Apr 20 15:37:08.648: INFO: http.Client request:GET StatusCode:301
  Apr 20 15:37:08.648: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/services/e2e-proxy-test-service/proxy?method=GET
  Apr 20 15:37:08.659: INFO: http.Client request:GET StatusCode:301
  Apr 20 15:37:08.659: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/pods/agnhost/proxy?method=HEAD
  Apr 20 15:37:08.666: INFO: http.Client request:HEAD StatusCode:301
  Apr 20 15:37:08.666: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6075/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 20 15:37:08.689: INFO: http.Client request:HEAD StatusCode:301
  Apr 20 15:37:08.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6075" for this suite. @ 04/20/24 15:37:08.71
â€¢ [2.326 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/20/24 15:37:08.742
  Apr 20 15:37:08.742: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:37:08.743081      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename services @ 04/20/24 15:37:08.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:08.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:08.798
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5590 @ 04/20/24 15:37:08.805
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 15:37:08.832
  STEP: creating service externalsvc in namespace services-5590 @ 04/20/24 15:37:08.832
  STEP: creating replication controller externalsvc in namespace services-5590 @ 04/20/24 15:37:08.857
  I0420 15:37:08.869404      15 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5590, replica count: 2
  E0420 15:37:09.743789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:10.744550      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:11.746278      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:11.920916      15 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/20/24 15:37:11.93
  Apr 20 15:37:11.971: INFO: Creating new exec pod
  E0420 15:37:12.745599      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:13.745801      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:14.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5590 exec execpodxb8lk -- /bin/sh -x -c nslookup clusterip-service.services-5590.svc.cluster.local'
  Apr 20 15:37:14.599: INFO: stderr: "+ nslookup clusterip-service.services-5590.svc.cluster.local\n"
  Apr 20 15:37:14.599: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-5590.svc.cluster.local\tcanonical name = externalsvc.services-5590.svc.cluster.local.\nName:\texternalsvc.services-5590.svc.cluster.local\nAddress: 10.233.14.248\n\n"
  Apr 20 15:37:14.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5590, will wait for the garbage collector to delete the pods @ 04/20/24 15:37:14.611
  Apr 20 15:37:14.686: INFO: Deleting ReplicationController externalsvc took: 15.825735ms
  E0420 15:37:14.746281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:14.887: INFO: Terminating ReplicationController externalsvc pods took: 200.845549ms
  E0420 15:37:15.746496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:16.747301      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:17.747360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:18.046: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-5590" for this suite. @ 04/20/24 15:37:18.079
â€¢ [9.356 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 04/20/24 15:37:18.1
  Apr 20 15:37:18.100: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:37:18.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:18.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:18.154
  STEP: Creating a ResourceQuota with terminating scope @ 04/20/24 15:37:18.159
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 15:37:18.168
  E0420 15:37:18.747938      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:19.749566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/20/24 15:37:20.178
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 15:37:20.193
  E0420 15:37:20.748959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:21.749581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/20/24 15:37:22.206
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/20/24 15:37:22.269
  E0420 15:37:22.750371      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:23.751481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/20/24 15:37:24.278
  E0420 15:37:24.751763      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:25.752316      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:37:26.288
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:37:26.306
  E0420 15:37:26.752427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:27.753537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/20/24 15:37:28.316
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/20/24 15:37:28.347
  E0420 15:37:28.753409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:29.753655      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/20/24 15:37:30.356
  E0420 15:37:30.753878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:31.754185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:37:32.364
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:37:32.386
  E0420 15:37:32.754936      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:33.755248      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:34.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7001" for this suite. @ 04/20/24 15:37:34.406
â€¢ [16.322 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/20/24 15:37:34.421
  Apr 20 15:37:34.421: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:37:34.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:34.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:34.466
  Apr 20 15:37:34.513: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/20/24 15:37:34.525
  Apr 20 15:37:34.533: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:34.533: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/20/24 15:37:34.533
  Apr 20 15:37:34.593: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:34.594: INFO: Node aat3reeth3ee-3 is running 0 daemon pod, expected 1
  E0420 15:37:34.755992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:35.602: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:35.602: INFO: Node aat3reeth3ee-3 is running 0 daemon pod, expected 1
  E0420 15:37:35.756392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:36.603: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 15:37:36.603: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/20/24 15:37:36.609
  Apr 20 15:37:36.646: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 15:37:36.646: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0420 15:37:36.758576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:37.657: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:37.657: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/20/24 15:37:37.657
  Apr 20 15:37:37.709: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:37.709: INFO: Node aat3reeth3ee-3 is running 0 daemon pod, expected 1
  E0420 15:37:37.757833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:38.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:38.730: INFO: Node aat3reeth3ee-3 is running 0 daemon pod, expected 1
  E0420 15:37:38.758461      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:39.718: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 15:37:39.718: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:37:39.731
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7358, will wait for the garbage collector to delete the pods @ 04/20/24 15:37:39.731
  E0420 15:37:39.758837      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:39.808: INFO: Deleting DaemonSet.extensions daemon-set took: 16.934533ms
  Apr 20 15:37:39.909: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.873674ms
  E0420 15:37:40.759625      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:41.017: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:41.017: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:37:41.023: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"55875"},"items":null}

  Apr 20 15:37:41.031: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"55875"},"items":null}

  Apr 20 15:37:41.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7358" for this suite. @ 04/20/24 15:37:41.12
â€¢ [6.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/20/24 15:37:41.144
  Apr 20 15:37:41.147: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename subjectreview @ 04/20/24 15:37:41.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:41.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:41.192
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4441" @ 04/20/24 15:37:41.197
  Apr 20 15:37:41.207: INFO: saUsername: "system:serviceaccount:subjectreview-4441:e2e"
  Apr 20 15:37:41.207: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4441"}
  Apr 20 15:37:41.207: INFO: saUID: "62f3f920-5833-42db-9f04-99906b965734"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4441:e2e" @ 04/20/24 15:37:41.207
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4441:e2e" @ 04/20/24 15:37:41.209
  Apr 20 15:37:41.214: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4441:e2e" api 'list' configmaps in "subjectreview-4441" namespace @ 04/20/24 15:37:41.214
  Apr 20 15:37:41.218: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4441:e2e" @ 04/20/24 15:37:41.218
  Apr 20 15:37:41.226: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 20 15:37:41.226: INFO: LocalSubjectAccessReview has been verified
  Apr 20 15:37:41.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4441" for this suite. @ 04/20/24 15:37:41.239
â€¢ [0.113 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/20/24 15:37:41.258
  Apr 20 15:37:41.258: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:37:41.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:41.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:41.307
  STEP: Creating projection with secret that has name projected-secret-test-map-eb1605d2-114f-4d0a-aaba-c3a44eeeff53 @ 04/20/24 15:37:41.313
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:37:41.328
  E0420 15:37:41.759623      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:42.759831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:43.759999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:44.760375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:37:45.395
  Apr 20 15:37:45.402: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-secrets-57a855e6-ea21-4d9b-b6f5-079951a5b4de container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:37:45.425
  Apr 20 15:37:45.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4266" for this suite. @ 04/20/24 15:37:45.521
â€¢ [4.302 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 04/20/24 15:37:45.561
  Apr 20 15:37:45.561: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 15:37:45.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:45.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:45.679
  STEP: Given a ReplicationController is created @ 04/20/24 15:37:45.698
  STEP: When the matched label of one of its pods change @ 04/20/24 15:37:45.725
  Apr 20 15:37:45.747: INFO: Pod name pod-release: Found 0 pods out of 1
  E0420 15:37:45.761528      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:46.761574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:47.761639      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:48.761844      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:49.762901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:50.757: INFO: Pod name pod-release: Found 1 pods out of 1
  E0420 15:37:50.763251      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Then the pod is released @ 04/20/24 15:37:50.781
  E0420 15:37:51.764270      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:51.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2119" for this suite. @ 04/20/24 15:37:51.806
â€¢ [6.257 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 04/20/24 15:37:51.818
  Apr 20 15:37:51.818: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:37:51.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:51.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:51.862
  STEP: create the deployment @ 04/20/24 15:37:51.867
  W0420 15:37:51.878710      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 15:37:51.879
  STEP: delete the deployment @ 04/20/24 15:37:52.429
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/20/24 15:37:52.454
  E0420 15:37:52.764402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 15:37:52.999
  Apr 20 15:37:53.216: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 15:37:53.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-517" for this suite. @ 04/20/24 15:37:53.227
â€¢ [1.427 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/20/24 15:37:53.248
  Apr 20 15:37:53.248: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-watch @ 04/20/24 15:37:53.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:53.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:53.29
  Apr 20 15:37:53.295: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:37:53.764416      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:54.765460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:55.765793      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/20/24 15:37:55.94
  Apr 20 15:37:55.953: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:37:55Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:37:55Z]] name:name1 resourceVersion:56030 uid:0ba8ba2b-5015-4546-9445-ce9497732d80] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:37:56.766928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:57.767459      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:58.770224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:59.769739      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:00.770181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:01.770266      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:02.770461      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:03.770790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:04.771429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:05.771548      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/20/24 15:38:05.955
  Apr 20 15:38:05.969: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:38:05Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:38:05Z]] name:name2 resourceVersion:56085 uid:02ea0a98-8a7a-4257-a8d5-55edefcdde5a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:38:06.771787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:07.772412      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:08.773322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:09.773783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:10.774564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:11.774830      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:12.775660      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:13.777741      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:14.777711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:15.778239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/20/24 15:38:15.969
  Apr 20 15:38:15.984: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:37:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:38:15Z]] name:name1 resourceVersion:56103 uid:0ba8ba2b-5015-4546-9445-ce9497732d80] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:38:16.778445      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:17.779470      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:18.780506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:19.781280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:20.781355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:21.781831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:22.781913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:23.782244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:24.783704      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:25.783444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/20/24 15:38:25.985
  Apr 20 15:38:26.006: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:38:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:38:25Z]] name:name2 resourceVersion:56121 uid:02ea0a98-8a7a-4257-a8d5-55edefcdde5a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:38:26.783750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:27.784781      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:28.784839      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:29.785992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:30.786360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:31.786408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:32.786867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:33.787528      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:34.787641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:35.788236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/20/24 15:38:36.008
  Apr 20 15:38:36.022: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:37:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:38:15Z]] name:name1 resourceVersion:56139 uid:0ba8ba2b-5015-4546-9445-ce9497732d80] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:38:36.788527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:37.788604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:38.792090      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:39.791603      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:40.792557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:41.793166      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:42.793291      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:43.793440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:44.794174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:45.794776      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/20/24 15:38:46.023
  Apr 20 15:38:46.049: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:38:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:38:25Z]] name:name2 resourceVersion:56157 uid:02ea0a98-8a7a-4257-a8d5-55edefcdde5a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:38:46.794934      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:47.795535      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:48.796001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:49.796869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:50.797486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:51.797570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:52.798644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:53.798341      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:54.799577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:55.799653      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:56.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6065" for this suite. @ 04/20/24 15:38:56.59
â€¢ [63.357 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/20/24 15:38:56.605
  Apr 20 15:38:56.605: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename taint-single-pod @ 04/20/24 15:38:56.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:56.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:56.653
  Apr 20 15:38:56.659: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 15:38:56.800671      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:57.801036      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:58.801391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:59.801632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:00.801740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:01.802477      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:02.802878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:03.803195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:04.803491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:05.804544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:06.804679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:07.804883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:08.805672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:09.805746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:10.805949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:11.806681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:12.806788      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:13.807801      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:14.808445      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:15.809040      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:16.809999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:17.811514      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:18.812483      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:19.812555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:20.812927      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:21.813523      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:22.814035      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:23.814418      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:24.814549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:25.814687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:26.815479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:27.816067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:28.816989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:29.817360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:30.817742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:31.818178      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:32.818452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:33.818937      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:34.819812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:35.820712      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:36.821846      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:37.822014      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:38.822849      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:39.823026      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:40.823926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:41.824582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:42.824699      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:43.825242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:44.826046      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:45.826789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:46.828083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:47.829154      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:48.829819      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:49.830460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:50.830848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:51.848767      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:52.839634      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:53.839985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:54.840365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:55.840485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:56.723: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 15:39:56.732: INFO: Starting informer...
  STEP: Starting pod... @ 04/20/24 15:39:56.732
  E0420 15:39:56.840720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:56.973: INFO: Pod is running on aat3reeth3ee-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 15:39:56.973
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 15:39:57
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/20/24 15:39:57.011
  Apr 20 15:39:57.011: INFO: Pod wasn't evicted. Proceeding
  Apr 20 15:39:57.011: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 15:39:57.056
  STEP: Waiting some time to make sure that toleration time passed. @ 04/20/24 15:39:57.079
  E0420 15:39:57.841902      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:58.842553      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:59.842801      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:00.843628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:01.843649      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:02.843589      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:03.844197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:04.845429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:05.846073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:06.847292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:07.847532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:08.847584      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:09.847738      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:10.848359      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:11.848827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:12.849904      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:13.849803      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:14.850000      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:15.850266      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:16.850755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:17.851681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:18.851856      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:19.851998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:20.853257      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:21.853949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:22.854673      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:23.855153      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:24.856008      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:25.856574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:26.857538      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:27.857653      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:28.857742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:29.858787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:30.859185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:31.859684      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:32.859968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:33.860256      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:34.860955      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:35.861516      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:36.861943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:37.862328      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:38.862920      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:39.864048      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:40.864677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:41.864889      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:42.866744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:43.866319      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:44.867330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:45.868342      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:46.868462      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:47.868697      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:48.869011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:49.869162      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:50.869466      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:51.870219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:52.870949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:53.871167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:54.872280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:55.872541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:56.872608      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:57.873300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:58.873579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:59.873925      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:00.874302      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:01.874908      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:02.875334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:03.875469      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:04.876302      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:05.877201      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:06.877330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:07.877588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:08.877765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:09.878963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:10.879312      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:11.881420      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:12.080: INFO: Pod wasn't evicted. Test successful
  Apr 20 15:41:12.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3267" for this suite. @ 04/20/24 15:41:12.098
â€¢ [135.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 04/20/24 15:41:12.138
  Apr 20 15:41:12.138: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:41:12.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:41:12.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:41:12.231
  STEP: Creating configMap with name cm-test-opt-del-8ec8cf21-6bb6-4790-8d31-43752c97bc33 @ 04/20/24 15:41:12.245
  STEP: Creating configMap with name cm-test-opt-upd-d0b95463-fd35-4017-b254-dde1056d1f40 @ 04/20/24 15:41:12.256
  STEP: Creating the pod @ 04/20/24 15:41:12.265
  E0420 15:41:12.881966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:13.882185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-8ec8cf21-6bb6-4790-8d31-43752c97bc33 @ 04/20/24 15:41:14.363
  STEP: Updating configmap cm-test-opt-upd-d0b95463-fd35-4017-b254-dde1056d1f40 @ 04/20/24 15:41:14.374
  STEP: Creating configMap with name cm-test-opt-create-43ad3c75-d65e-409c-aeae-d3a3c066054b @ 04/20/24 15:41:14.384
  STEP: waiting to observe update in volume @ 04/20/24 15:41:14.392
  E0420 15:41:14.882496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:15.882675      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:16.882959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:17.883527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:18.883765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:19.884666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:20.885336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:21.885841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:22.886455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:23.887011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:24.887311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:25.887473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:26.887792      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:27.887905      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:28.888199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:29.889027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:30.889887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:31.890372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:32.890814      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:33.891454      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:34.891607      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:35.892195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:36.892907      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:37.893447      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:38.898669      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:39.895910      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:40.895890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:41.896401      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:42.897354      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:43.897884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:44.898246      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:45.898892      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:46.899191      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:47.899542      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:48.899899      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:49.900961      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:50.902077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:51.902604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:52.902753      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:53.902890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:54.904224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:55.904479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:56.904859      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:57.905292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:58.905200      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:59.905471      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:00.905972      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:01.906416      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:02.906941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:03.907509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:04.908385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:05.908678      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:06.909698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:07.910458      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:08.911517      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:09.912046      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:10.912501      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:11.913181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:12.913696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:13.913969      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:14.914485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:15.914735      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:16.915368      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:17.916368      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:18.916619      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:19.916958      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:20.916987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:21.917976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:22.918627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:23.919041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:24.919305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:25.919581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:26.920209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:27.920623      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:28.920806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:29.921485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:30.921928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:31.922740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:32.922936      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:33.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3455" for this suite. @ 04/20/24 15:42:33.156
â€¢ [81.033 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/20/24 15:42:33.173
  Apr 20 15:42:33.173: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:42:33.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:33.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:33.244
  Apr 20 15:42:33.249: INFO: Creating deployment "test-recreate-deployment"
  Apr 20 15:42:33.260: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 20 15:42:33.273: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0420 15:42:33.923641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:34.925155      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:35.289: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 20 15:42:35.295: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 20 15:42:35.315: INFO: Updating deployment test-recreate-deployment
  Apr 20 15:42:35.316: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Apr 20 15:42:35.511: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3240",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a4b38d3-3659-4172-b3a8-638f08798461",
      ResourceVersion: (string) (len=5) "56683",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 15:42:35.524: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3240",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fa27484-834d-4ed4-8fcb-289259770c86",
      ResourceVersion: (string) (len=5) "56681",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0a4b38d3-3659-4172-b3a8-638f08798461",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 34 62 33 38  64 33 2d 33 36 35 39 2d  |\"0a4b38d3-3659-|
              00000120  34 31 37 32 2d 62 33 61  38 2d 36 33 38 66 30 38  |4172-b3a8-638f08|
              00000130  37 39 38 34 36 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |798461\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:42:35.527: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 20 15:42:35.528: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3240",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27ae8f25-80d3-451e-a3c4-5296859ee761",
      ResourceVersion: (string) (len=5) "56671",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0a4b38d3-3659-4172-b3a8-638f08798461",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 34 62 33 38  64 33 2d 33 36 35 39 2d  |\"0a4b38d3-3659-|
              00000120  34 31 37 32 2d 62 33 61  38 2d 36 33 38 66 30 38  |4172-b3a8-638f08|
              00000130  37 39 38 34 36 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |798461\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:42:35.542: INFO: Pod "test-recreate-deployment-76fb77d45-vnv46" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-vnv46",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-3240",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab5740f9-a836-4100-b653-f217a202fe2a",
      ResourceVersion: (string) (len=5) "56682",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "6fa27484-834d-4ed4-8fcb-289259770c86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 32 37 34 38 34 2d 38  |d\":\"6fa27484-8|
              00000090  33 34 64 2d 34 65 64 34  2d 38 66 63 62 2d 32 38  |34d-4ed4-8fcb-28|
              000000a0  39 32 35 39 37 37 30 63  38 36 5c 22 7d 22 3a 7b  |9259770c86\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gt2jb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gt2jb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:42:35.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3240" for this suite. @ 04/20/24 15:42:35.561
â€¢ [2.399 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/20/24 15:42:35.575
  Apr 20 15:42:35.575: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:42:35.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:35.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:35.614
  STEP: Setting up server cert @ 04/20/24 15:42:35.66
  E0420 15:42:35.924395      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:42:36.208
  STEP: Deploying the webhook pod @ 04/20/24 15:42:36.224
  STEP: Wait for the deployment to be ready @ 04/20/24 15:42:36.25
  Apr 20 15:42:36.265: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:42:36.925480      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:37.925701      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:42:38.292
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:42:38.324
  E0420 15:42:38.926023      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:39.326: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 15:42:39.339: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6759-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 15:42:39.862
  STEP: Creating a custom resource while v1 is storage version @ 04/20/24 15:42:39.897
  E0420 15:42:39.927299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:40.928861      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:41.929519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/20/24 15:42:42.179
  STEP: Patching the custom resource while v2 is storage version @ 04/20/24 15:42:42.27
  Apr 20 15:42:42.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:42:42.929913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-8189" for this suite. @ 04/20/24 15:42:43.174
  STEP: Destroying namespace "webhook-markers-3710" for this suite. @ 04/20/24 15:42:43.187
â€¢ [7.624 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 04/20/24 15:42:43.2
  Apr 20 15:42:43.200: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 15:42:43.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:43.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:43.244
  Apr 20 15:42:43.249: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:42:43.931206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:44.931385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:45.931543      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:46.933048      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:47.933023      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:48.934376      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:49.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3641" for this suite. @ 04/20/24 15:42:49.71
â€¢ [6.530 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/20/24 15:42:49.74
  Apr 20 15:42:49.740: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename conformance-tests @ 04/20/24 15:42:49.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:49.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:49.79
  STEP: Getting node addresses @ 04/20/24 15:42:49.799
  Apr 20 15:42:49.799: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 20 15:42:49.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1049" for this suite. @ 04/20/24 15:42:49.828
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/20/24 15:42:49.847
  Apr 20 15:42:49.847: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:42:49.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:49.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:49.893
  E0420 15:42:49.934425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 04/20/24 15:42:49.935
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:42:50.767
  STEP: Deploying the webhook pod @ 04/20/24 15:42:50.779
  STEP: Wait for the deployment to be ready @ 04/20/24 15:42:50.806
  Apr 20 15:42:50.825: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:42:50.935427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:51.935637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:42:52.849
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:42:52.871
  E0420 15:42:52.936183      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:53.871: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 15:42:53.886: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:42:53.936908      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-525-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 15:42:54.418
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 15:42:54.454
  E0420 15:42:54.937142      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:55.938375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:56.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:42:56.938077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1619" for this suite. @ 04/20/24 15:42:57.363
  STEP: Destroying namespace "webhook-markers-7963" for this suite. @ 04/20/24 15:42:57.375
â€¢ [7.540 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 04/20/24 15:42:57.389
  Apr 20 15:42:57.389: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:42:57.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:57.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:57.429
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 15:42:57.435
  E0420 15:42:57.938508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:58.940990      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:59.940311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:00.947586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:43:01.481
  Apr 20 15:43:01.488: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-f997e45c-aeae-49e0-be76-d1dae7082b9b container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:43:01.509
  Apr 20 15:43:01.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6134" for this suite. @ 04/20/24 15:43:01.551
â€¢ [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 04/20/24 15:43:01.609
  Apr 20 15:43:01.609: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename security-context @ 04/20/24 15:43:01.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:01.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:01.653
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 15:43:01.657
  E0420 15:43:01.941840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:02.948417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:03.944151      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:04.945238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:43:05.704
  Apr 20 15:43:05.711: INFO: Trying to get logs from node aat3reeth3ee-3 pod security-context-32a8279b-2ee8-44a3-90ad-bfcff9efff14 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:43:05.723
  Apr 20 15:43:05.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4584" for this suite. @ 04/20/24 15:43:05.761
â€¢ [4.167 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/20/24 15:43:05.778
  Apr 20 15:43:05.778: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:43:05.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:05.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:05.835
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/20/24 15:43:05.885
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:43:05.897
  Apr 20 15:43:05.918: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:05.918: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:43:05.945641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:06.946430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:06.950: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:06.950: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  Apr 20 15:43:07.941: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:43:07.941: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  E0420 15:43:07.946940      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/20/24 15:43:07.949
  Apr 20 15:43:08.003: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:43:08.003: INFO: Node aat3reeth3ee-2 is running 0 daemon pod, expected 1
  E0420 15:43:08.947033      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:09.031: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:43:09.031: INFO: Node aat3reeth3ee-2 is running 0 daemon pod, expected 1
  E0420 15:43:09.947347      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:10.025: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:43:10.025: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/20/24 15:43:10.025
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:43:10.05
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5957, will wait for the garbage collector to delete the pods @ 04/20/24 15:43:10.05
  Apr 20 15:43:10.126: INFO: Deleting DaemonSet.extensions daemon-set took: 13.722525ms
  E0420 15:43:10.948159      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:11.948656      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:12.949240      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:13.950033      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:14.950743      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:15.951314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:16.951646      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:17.951866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:18.527: INFO: Terminating DaemonSet.extensions daemon-set pods took: 8.400823942s
  E0420 15:43:18.953075      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:19.836: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:19.836: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:43:19.843: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"57143"},"items":null}

  Apr 20 15:43:19.849: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"57143"},"items":null}

  Apr 20 15:43:19.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5957" for this suite. @ 04/20/24 15:43:19.886
â€¢ [14.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/20/24 15:43:19.903
  Apr 20 15:43:19.903: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:43:19.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:19.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:19.938
  E0420 15:43:19.954217      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 15:43:19.979
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:43:19.991
  Apr 20 15:43:20.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:20.007: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:43:20.954286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:21.025: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:21.025: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:43:21.954660      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:22.025: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:43:22.025: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/20/24 15:43:22.031
  Apr 20 15:43:22.069: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:43:22.069: INFO: Node aat3reeth3ee-3 is running 0 daemon pod, expected 1
  E0420 15:43:22.957252      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:23.094: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:43:23.094: INFO: Node aat3reeth3ee-3 is running 0 daemon pod, expected 1
  E0420 15:43:23.957276      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:24.085: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:43:24.085: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:43:24.091
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1529, will wait for the garbage collector to delete the pods @ 04/20/24 15:43:24.091
  Apr 20 15:43:24.185: INFO: Deleting DaemonSet.extensions daemon-set took: 36.495195ms
  Apr 20 15:43:24.286: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.334025ms
  E0420 15:43:24.957463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:25.593: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:25.593: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:43:25.612: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"57258"},"items":null}

  Apr 20 15:43:25.620: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"57259"},"items":null}

  Apr 20 15:43:25.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1529" for this suite. @ 04/20/24 15:43:25.674
â€¢ [5.781 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/20/24 15:43:25.684
  Apr 20 15:43:25.684: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:43:25.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:25.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:25.728
  STEP: Creating secret with name projected-secret-test-70fcd994-6a8b-45c3-9277-e22cf41bce6c @ 04/20/24 15:43:25.733
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:43:25.741
  E0420 15:43:25.960918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:26.958561      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:27.959330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:28.959419      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:43:29.79
  Apr 20 15:43:29.796: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-secrets-b736b22d-4590-4c10-9e3d-4388c8234e5f container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:43:29.812
  Apr 20 15:43:29.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1662" for this suite. @ 04/20/24 15:43:29.851
â€¢ [4.183 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 04/20/24 15:43:29.868
  Apr 20 15:43:29.868: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename events @ 04/20/24 15:43:29.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:29.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:29.91
  STEP: creating a test event @ 04/20/24 15:43:29.914
  STEP: listing all events in all namespaces @ 04/20/24 15:43:29.923
  STEP: patching the test event @ 04/20/24 15:43:29.933
  STEP: fetching the test event @ 04/20/24 15:43:29.948
  STEP: updating the test event @ 04/20/24 15:43:29.954
  E0420 15:43:29.959494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting the test event @ 04/20/24 15:43:29.975
  STEP: deleting the test event @ 04/20/24 15:43:29.982
  STEP: listing all events in all namespaces @ 04/20/24 15:43:29.998
  Apr 20 15:43:30.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3535" for this suite. @ 04/20/24 15:43:30.026
â€¢ [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 04/20/24 15:43:30.044
  Apr 20 15:43:30.044: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:43:30.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:30.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:30.087
  STEP: Creating a test namespace @ 04/20/24 15:43:30.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:30.153
  STEP: Creating a service in the namespace @ 04/20/24 15:43:30.158
  STEP: Deleting the namespace @ 04/20/24 15:43:30.215
  STEP: Waiting for the namespace to be removed. @ 04/20/24 15:43:30.291
  E0420 15:43:30.960822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:31.960505      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:32.960373      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:33.960512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:34.960634      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:35.961215      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/20/24 15:43:36.299
  STEP: Verifying there is no service in the namespace @ 04/20/24 15:43:36.327
  Apr 20 15:43:36.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6272" for this suite. @ 04/20/24 15:43:36.346
  STEP: Destroying namespace "nsdeletetest-3548" for this suite. @ 04/20/24 15:43:36.358
  Apr 20 15:43:36.364: INFO: Namespace nsdeletetest-3548 was already deleted
  STEP: Destroying namespace "nsdeletetest-9177" for this suite. @ 04/20/24 15:43:36.364
â€¢ [6.330 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 04/20/24 15:43:36.374
  Apr 20 15:43:36.374: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:43:36.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:36.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:36.413
  STEP: create the rc1 @ 04/20/24 15:43:36.427
  STEP: create the rc2 @ 04/20/24 15:43:36.44
  E0420 15:43:36.961298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:37.963370      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:38.962367      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:39.969073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:40.970217      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:41.971196      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/20/24 15:43:42.544
  E0420 15:43:42.971926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:43.973147      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:44.973083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:45.974218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/20/24 15:43:46.282
  STEP: wait for the rc to be deleted @ 04/20/24 15:43:46.327
  E0420 15:43:46.974684      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:47.974888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:48.976211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:49.976680      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:50.977473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:51.524: INFO: 72 pods remaining
  Apr 20 15:43:51.524: INFO: 71 pods has nil DeletionTimestamp
  Apr 20 15:43:51.524: INFO: 
  E0420 15:43:51.977851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:52.977996      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:53.979022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:54.979517      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:55.979787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 15:43:56.374
  Apr 20 15:43:56.808: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 15:43:56.809: INFO: Deleting pod "simpletest-rc-to-be-deleted-2dx4l" in namespace "gc-5531"
  Apr 20 15:43:56.923: INFO: Deleting pod "simpletest-rc-to-be-deleted-2pl4k" in namespace "gc-5531"
  E0420 15:43:56.979942      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:57.024: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xpwz" in namespace "gc-5531"
  Apr 20 15:43:57.092: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xxns" in namespace "gc-5531"
  Apr 20 15:43:57.224: INFO: Deleting pod "simpletest-rc-to-be-deleted-4242s" in namespace "gc-5531"
  Apr 20 15:43:57.283: INFO: Deleting pod "simpletest-rc-to-be-deleted-474w8" in namespace "gc-5531"
  Apr 20 15:43:57.356: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hnm7" in namespace "gc-5531"
  Apr 20 15:43:57.450: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qgnd" in namespace "gc-5531"
  Apr 20 15:43:57.590: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wl6n" in namespace "gc-5531"
  Apr 20 15:43:57.745: INFO: Deleting pod "simpletest-rc-to-be-deleted-4x7d4" in namespace "gc-5531"
  Apr 20 15:43:57.801: INFO: Deleting pod "simpletest-rc-to-be-deleted-56mx6" in namespace "gc-5531"
  Apr 20 15:43:57.903: INFO: Deleting pod "simpletest-rc-to-be-deleted-58ml5" in namespace "gc-5531"
  Apr 20 15:43:57.951: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bnzh" in namespace "gc-5531"
  E0420 15:43:57.981169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:58.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-5dgzp" in namespace "gc-5531"
  Apr 20 15:43:58.133: INFO: Deleting pod "simpletest-rc-to-be-deleted-5nvv4" in namespace "gc-5531"
  Apr 20 15:43:58.192: INFO: Deleting pod "simpletest-rc-to-be-deleted-6sjdq" in namespace "gc-5531"
  Apr 20 15:43:58.232: INFO: Deleting pod "simpletest-rc-to-be-deleted-76cfh" in namespace "gc-5531"
  Apr 20 15:43:58.364: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ljct" in namespace "gc-5531"
  Apr 20 15:43:58.520: INFO: Deleting pod "simpletest-rc-to-be-deleted-84cld" in namespace "gc-5531"
  Apr 20 15:43:58.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-8df9d" in namespace "gc-5531"
  Apr 20 15:43:58.670: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jm2t" in namespace "gc-5531"
  Apr 20 15:43:58.754: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jmjr" in namespace "gc-5531"
  Apr 20 15:43:58.895: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mg2w" in namespace "gc-5531"
  E0420 15:43:58.981990      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:59.004: INFO: Deleting pod "simpletest-rc-to-be-deleted-8q65s" in namespace "gc-5531"
  Apr 20 15:43:59.098: INFO: Deleting pod "simpletest-rc-to-be-deleted-8sxxg" in namespace "gc-5531"
  Apr 20 15:43:59.199: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rskx" in namespace "gc-5531"
  Apr 20 15:43:59.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-b6mjk" in namespace "gc-5531"
  Apr 20 15:43:59.383: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8pkt" in namespace "gc-5531"
  Apr 20 15:43:59.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9fkm" in namespace "gc-5531"
  Apr 20 15:43:59.597: INFO: Deleting pod "simpletest-rc-to-be-deleted-bcpw6" in namespace "gc-5531"
  Apr 20 15:43:59.703: INFO: Deleting pod "simpletest-rc-to-be-deleted-bq562" in namespace "gc-5531"
  Apr 20 15:43:59.799: INFO: Deleting pod "simpletest-rc-to-be-deleted-c89c8" in namespace "gc-5531"
  Apr 20 15:43:59.959: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgtnp" in namespace "gc-5531"
  E0420 15:43:59.983166      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:00.011: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpx7v" in namespace "gc-5531"
  Apr 20 15:44:00.047: INFO: Deleting pod "simpletest-rc-to-be-deleted-cw6lp" in namespace "gc-5531"
  Apr 20 15:44:00.153: INFO: Deleting pod "simpletest-rc-to-be-deleted-cx77s" in namespace "gc-5531"
  Apr 20 15:44:00.255: INFO: Deleting pod "simpletest-rc-to-be-deleted-dd9xq" in namespace "gc-5531"
  Apr 20 15:44:00.354: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqdj8" in namespace "gc-5531"
  Apr 20 15:44:00.462: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzdc7" in namespace "gc-5531"
  Apr 20 15:44:00.539: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2k5w" in namespace "gc-5531"
  Apr 20 15:44:00.589: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4bwm" in namespace "gc-5531"
  Apr 20 15:44:00.685: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4pmn" in namespace "gc-5531"
  Apr 20 15:44:00.771: INFO: Deleting pod "simpletest-rc-to-be-deleted-f8bnn" in namespace "gc-5531"
  Apr 20 15:44:00.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffsz7" in namespace "gc-5531"
  Apr 20 15:44:00.975: INFO: Deleting pod "simpletest-rc-to-be-deleted-fv5tw" in namespace "gc-5531"
  E0420 15:44:00.982976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:01.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-fvl6m" in namespace "gc-5531"
  Apr 20 15:44:01.175: INFO: Deleting pod "simpletest-rc-to-be-deleted-g7lmd" in namespace "gc-5531"
  Apr 20 15:44:01.229: INFO: Deleting pod "simpletest-rc-to-be-deleted-gjhfm" in namespace "gc-5531"
  Apr 20 15:44:01.289: INFO: Deleting pod "simpletest-rc-to-be-deleted-gszmw" in namespace "gc-5531"
  Apr 20 15:44:01.372: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvdbl" in namespace "gc-5531"
  Apr 20 15:44:01.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5531" for this suite. @ 04/20/24 15:44:01.512
â€¢ [25.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 04/20/24 15:44:01.562
  Apr 20 15:44:01.562: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename server-version @ 04/20/24 15:44:01.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:01.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:01.664
  STEP: Request ServerVersion @ 04/20/24 15:44:01.672
  STEP: Confirm major version @ 04/20/24 15:44:01.676
  Apr 20 15:44:01.676: INFO: Major version: 1
  STEP: Confirm minor version @ 04/20/24 15:44:01.676
  Apr 20 15:44:01.676: INFO: cleanMinorVersion: 28
  Apr 20 15:44:01.676: INFO: Minor version: 28
  Apr 20 15:44:01.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7995" for this suite. @ 04/20/24 15:44:01.694
â€¢ [0.167 seconds]
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/20/24 15:44:01.729
  Apr 20 15:44:01.729: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:44:01.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:01.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:01.78
  STEP: Creating pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544 @ 04/20/24 15:44:01.785
  E0420 15:44:01.983312      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:02.983911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:44:03.832
  Apr 20 15:44:03.842: INFO: Initial restart count of pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 is 0
  Apr 20 15:44:03.852: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:03.984947      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:04.985890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:05.862: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:05.986481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:06.986672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:07.890: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:07.987557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:08.988269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:09.900: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:09.988723      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:10.989077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:11.912: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:11.989609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:12.990060      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:13.922: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:13.991012      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:14.993297      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:15.933: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:15.992495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:16.992668      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:17.945: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:17.993233      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:18.993617      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:19.953: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:19.994297      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:20.994680      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:21.964: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  E0420 15:44:21.995304      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:22.996202      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:23.971: INFO: Get pod liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 in namespace container-probe-8544
  Apr 20 15:44:23.971: INFO: Restart count of pod container-probe-8544/liveness-4741becf-f7d5-4382-bf71-4d9d13dd0fa5 is now 1 (20.129198568s elapsed)
  Apr 20 15:44:23.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 15:44:23.987
  E0420 15:44:23.996854      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-8544" for this suite. @ 04/20/24 15:44:24.013
â€¢ [22.299 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/20/24 15:44:24.031
  Apr 20 15:44:24.031: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:44:24.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:24.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:24.078
  STEP: getting a starting resourceVersion @ 04/20/24 15:44:24.084
  STEP: starting a background goroutine to produce watch events @ 04/20/24 15:44:24.092
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/20/24 15:44:24.093
  E0420 15:44:24.997515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:25.999064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:26.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7192" for this suite. @ 04/20/24 15:44:26.902
â€¢ [2.926 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 04/20/24 15:44:26.958
  Apr 20 15:44:26.958: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:44:26.963
  E0420 15:44:26.999811      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:27.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:27.02
  STEP: creating a Namespace @ 04/20/24 15:44:27.03
  STEP: patching the Namespace @ 04/20/24 15:44:27.077
  STEP: get the Namespace and ensuring it has the label @ 04/20/24 15:44:27.091
  Apr 20 15:44:27.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4020" for this suite. @ 04/20/24 15:44:27.113
  STEP: Destroying namespace "nspatchtest-28103271-fb17-4948-9338-cd5ad6c7597b-7226" for this suite. @ 04/20/24 15:44:27.127
â€¢ [0.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 04/20/24 15:44:27.143
  Apr 20 15:44:27.143: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:44:27.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:27.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:27.182
  STEP: Counting existing ResourceQuota @ 04/20/24 15:44:27.187
  E0420 15:44:27.999997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:29.000286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:30.001168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:31.001597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:32.002564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:44:32.216
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:44:32.234
  E0420 15:44:33.002906      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:34.003789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 04/20/24 15:44:34.286
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/20/24 15:44:34.322
  E0420 15:44:35.004556      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:36.005003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/20/24 15:44:36.332
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/20/24 15:44:36.337
  STEP: Ensuring a pod cannot update its resource requirements @ 04/20/24 15:44:36.342
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/20/24 15:44:36.352
  E0420 15:44:37.006079      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:38.006471      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:44:38.36
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:44:38.386
  E0420 15:44:39.006761      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:40.007150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:40.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3336" for this suite. @ 04/20/24 15:44:40.41
â€¢ [13.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/20/24 15:44:40.434
  Apr 20 15:44:40.434: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:44:40.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:40.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:40.487
  STEP: creating service multi-endpoint-test in namespace services-5204 @ 04/20/24 15:44:40.493
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5204 to expose endpoints map[] @ 04/20/24 15:44:40.518
  Apr 20 15:44:40.548: INFO: successfully validated that service multi-endpoint-test in namespace services-5204 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5204 @ 04/20/24 15:44:40.548
  E0420 15:44:41.008492      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:42.007837      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5204 to expose endpoints map[pod1:[100]] @ 04/20/24 15:44:42.601
  Apr 20 15:44:42.644: INFO: successfully validated that service multi-endpoint-test in namespace services-5204 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5204 @ 04/20/24 15:44:42.644
  E0420 15:44:43.008087      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:44.008432      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5204 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/20/24 15:44:44.691
  Apr 20 15:44:44.725: INFO: successfully validated that service multi-endpoint-test in namespace services-5204 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/20/24 15:44:44.725
  Apr 20 15:44:44.725: INFO: Creating new exec pod
  E0420 15:44:45.009436      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:46.009623      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:47.009764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:47.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5204 exec execpodrbv8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0420 15:44:48.010887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:48.161: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 20 15:44:48.161: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:44:48.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5204 exec execpodrbv8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.194 80'
  Apr 20 15:44:48.448: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.194 80\nConnection to 10.233.15.194 80 port [tcp/http] succeeded!\n"
  Apr 20 15:44:48.448: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:44:48.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5204 exec execpodrbv8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 20 15:44:48.714: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 20 15:44:48.714: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:44:48.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5204 exec execpodrbv8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.194 81'
  Apr 20 15:44:48.962: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.194 81\nConnection to 10.233.15.194 81 port [tcp/*] succeeded!\n"
  Apr 20 15:44:48.962: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5204 @ 04/20/24 15:44:48.962
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5204 to expose endpoints map[pod2:[101]] @ 04/20/24 15:44:49.011
  E0420 15:44:49.011748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:49.038: INFO: successfully validated that service multi-endpoint-test in namespace services-5204 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5204 @ 04/20/24 15:44:49.038
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5204 to expose endpoints map[] @ 04/20/24 15:44:49.087
  E0420 15:44:50.012090      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:50.132: INFO: successfully validated that service multi-endpoint-test in namespace services-5204 exposes endpoints map[]
  Apr 20 15:44:50.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5204" for this suite. @ 04/20/24 15:44:50.195
â€¢ [9.790 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/20/24 15:44:50.227
  Apr 20 15:44:50.227: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 15:44:50.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:50.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:50.272
  E0420 15:44:51.012820      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:52.013271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:52.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2563" for this suite. @ 04/20/24 15:44:52.358
â€¢ [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/20/24 15:44:52.382
  Apr 20 15:44:52.382: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:44:52.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:52.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:52.425
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/20/24 15:44:52.43
  Apr 20 15:44:52.431: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:44:53.013713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:54.014779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:54.485: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:44:55.016081      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:56.018177      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:57.018641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:58.019025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:59.019872      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:00.019875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:01.020993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:02.021737      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:02.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2274" for this suite. @ 04/20/24 15:45:02.381
â€¢ [10.013 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 04/20/24 15:45:02.396
  Apr 20 15:45:02.396: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 15:45:02.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:02.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:02.442
  STEP: Creating replication controller my-hostname-basic-7709cc1a-62c0-45d7-b8ed-2f72a3c54ca1 @ 04/20/24 15:45:02.448
  Apr 20 15:45:02.474: INFO: Pod name my-hostname-basic-7709cc1a-62c0-45d7-b8ed-2f72a3c54ca1: Found 0 pods out of 1
  E0420 15:45:03.023253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:04.023621      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:05.024621      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:06.025163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:07.025477      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:07.485: INFO: Pod name my-hostname-basic-7709cc1a-62c0-45d7-b8ed-2f72a3c54ca1: Found 1 pods out of 1
  Apr 20 15:45:07.486: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-7709cc1a-62c0-45d7-b8ed-2f72a3c54ca1" are running
  Apr 20 15:45:07.494: INFO: Pod "my-hostname-basic-7709cc1a-62c0-45d7-b8ed-2f72a3c54ca1-9wx8f" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:45:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:45:03 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:45:03 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:45:02 +0000 UTC Reason: Message:}])
  Apr 20 15:45:07.494: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 15:45:07.494
  Apr 20 15:45:07.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-970" for this suite. @ 04/20/24 15:45:07.549
â€¢ [5.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 04/20/24 15:45:07.578
  Apr 20 15:45:07.578: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:45:07.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:07.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:07.658
  STEP: Creating configMap with name projected-configmap-test-volume-a90fdeba-946e-4d41-855d-6f4db059d03b @ 04/20/24 15:45:07.664
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:45:07.675
  E0420 15:45:08.026776      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:09.026828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:10.026989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:11.027188      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:11.721
  Apr 20 15:45:11.726: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-projected-configmaps-7b5ad30f-99e3-4e0e-ba6d-e93988bd51e5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:11.74
  Apr 20 15:45:11.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9276" for this suite. @ 04/20/24 15:45:11.778
â€¢ [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 04/20/24 15:45:11.798
  Apr 20 15:45:11.798: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:45:11.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:11.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:11.843
  STEP: Creating configMap configmap-9499/configmap-test-ff32379b-6f43-401b-919a-1a40f255f4cc @ 04/20/24 15:45:11.847
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:45:11.857
  E0420 15:45:12.027854      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:13.028549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:14.029220      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:15.030368      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:15.905
  Apr 20 15:45:15.911: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-c19b3cb2-509e-4a10-b906-96ad0ccf614a container env-test: <nil>
  STEP: delete the pod @ 04/20/24 15:45:15.928
  Apr 20 15:45:15.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9499" for this suite. @ 04/20/24 15:45:15.968
â€¢ [4.184 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/20/24 15:45:15.981
  Apr 20 15:45:15.981: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:45:15.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:16.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:16.021
  Apr 20 15:45:16.025: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:45:16.030980      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:17.031807      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:18.032553      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 15:45:18.804408      15 warnings.go:70] unknown field "alpha"
  W0420 15:45:18.804478      15 warnings.go:70] unknown field "beta"
  W0420 15:45:18.804493      15 warnings.go:70] unknown field "delta"
  W0420 15:45:18.804504      15 warnings.go:70] unknown field "epsilon"
  W0420 15:45:18.804513      15 warnings.go:70] unknown field "gamma"
  E0420 15:45:19.033267      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:19.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9055" for this suite. @ 04/20/24 15:45:19.41
â€¢ [3.443 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 04/20/24 15:45:19.426
  Apr 20 15:45:19.426: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:45:19.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:19.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:19.486
  STEP: Creating the pod @ 04/20/24 15:45:19.493
  E0420 15:45:20.033383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:21.033654      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:22.034537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:22.099: INFO: Successfully updated pod "labelsupdateb8f18748-8906-460c-bba9-2601e0eb8b1e"
  E0420 15:45:23.034834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:24.035831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:24.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1372" for this suite. @ 04/20/24 15:45:24.137
â€¢ [4.723 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 04/20/24 15:45:24.149
  Apr 20 15:45:24.149: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 15:45:24.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:24.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:24.21
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 15:45:24.225
  E0420 15:45:25.035940      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:26.036871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 15:45:26.273
  E0420 15:45:27.037951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:28.038925      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/20/24 15:45:28.309
  E0420 15:45:29.040019      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:30.040340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/20/24 15:45:30.346
  Apr 20 15:45:30.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8020" for this suite. @ 04/20/24 15:45:30.383
â€¢ [6.252 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 04/20/24 15:45:30.402
  Apr 20 15:45:30.402: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:45:30.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:30.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:30.451
  STEP: creating a secret @ 04/20/24 15:45:30.458
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/20/24 15:45:30.467
  STEP: patching the secret @ 04/20/24 15:45:30.474
  STEP: deleting the secret using a LabelSelector @ 04/20/24 15:45:30.492
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/20/24 15:45:30.511
  Apr 20 15:45:30.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8622" for this suite. @ 04/20/24 15:45:30.53
â€¢ [0.142 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/20/24 15:45:30.544
  Apr 20 15:45:30.544: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:45:30.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:30.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:30.606
  Apr 20 15:45:30.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-598" for this suite. @ 04/20/24 15:45:30.633
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 04/20/24 15:45:30.654
  Apr 20 15:45:30.654: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:45:30.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:30.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:30.702
  STEP: creating service in namespace services-1699 @ 04/20/24 15:45:30.71
  STEP: creating service affinity-nodeport-transition in namespace services-1699 @ 04/20/24 15:45:30.71
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1699 @ 04/20/24 15:45:30.74
  I0420 15:45:30.760949      15 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-1699, replica count: 3
  E0420 15:45:31.041418      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:32.042443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:33.043322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:33.812666      15 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 15:45:33.837: INFO: Creating new exec pod
  E0420 15:45:34.044243      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:35.045144      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:36.045428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:36.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-1699 exec execpod-affinityxlkl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0420 15:45:37.046661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:37.151: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 20 15:45:37.151: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:45:37.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-1699 exec execpod-affinityxlkl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.1.201 80'
  Apr 20 15:45:37.401: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.1.201 80\nConnection to 10.233.1.201 80 port [tcp/http] succeeded!\n"
  Apr 20 15:45:37.402: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:45:37.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-1699 exec execpod-affinityxlkl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.198 30615'
  Apr 20 15:45:37.687: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.198 30615\nConnection to 192.168.121.198 30615 port [tcp/*] succeeded!\n"
  Apr 20 15:45:37.687: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:45:37.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-1699 exec execpod-affinityxlkl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.20 30615'
  Apr 20 15:45:37.959: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.20 30615\nConnection to 192.168.121.20 30615 port [tcp/*] succeeded!\n"
  Apr 20 15:45:37.959: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:45:37.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-1699 exec execpod-affinityxlkl6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.198:30615/ ; done'
  E0420 15:45:38.047429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:38.466: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n"
  Apr 20 15:45:38.466: INFO: stdout: "\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-jlmb7\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-jlmb7\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-ntvn7\naffinity-nodeport-transition-jlmb7\naffinity-nodeport-transition-ntvn7"
  Apr 20 15:45:38.466: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.466: INFO: Received response from host: affinity-nodeport-transition-jlmb7
  Apr 20 15:45:38.466: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-jlmb7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-jlmb7
  Apr 20 15:45:38.467: INFO: Received response from host: affinity-nodeport-transition-ntvn7
  Apr 20 15:45:38.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-1699 exec execpod-affinityxlkl6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.198:30615/ ; done'
  Apr 20 15:45:38.919: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.198:30615/\n"
  Apr 20 15:45:38.919: INFO: stdout: "\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d\naffinity-nodeport-transition-66g5d"
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Received response from host: affinity-nodeport-transition-66g5d
  Apr 20 15:45:38.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:45:38.929: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1699, will wait for the garbage collector to delete the pods @ 04/20/24 15:45:38.952
  Apr 20 15:45:39.025: INFO: Deleting ReplicationController affinity-nodeport-transition took: 15.189743ms
  E0420 15:45:39.047326      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:39.126: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.224448ms
  E0420 15:45:40.048530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:41.049166      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1699" for this suite. @ 04/20/24 15:45:41.987
â€¢ [11.348 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 04/20/24 15:45:42.004
  Apr 20 15:45:42.004: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:45:42.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:42.048
  E0420 15:45:42.049511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:42.054
  STEP: Creating a pod to test downward api env vars @ 04/20/24 15:45:42.06
  E0420 15:45:43.049750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:44.050000      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:45.050878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:46.050926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:46.114
  Apr 20 15:45:46.121: INFO: Trying to get logs from node aat3reeth3ee-3 pod downward-api-fc130892-1e7c-49f0-814a-d9eae06fe8a7 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:46.134
  Apr 20 15:45:46.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3069" for this suite. @ 04/20/24 15:45:46.188
â€¢ [4.197 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/20/24 15:45:46.203
  Apr 20 15:45:46.203: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:45:46.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:46.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:46.276
  Apr 20 15:45:46.299: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0420 15:45:47.051882      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:48.052037      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:49.052218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:50.053331      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:51.053769      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:51.306: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 15:45:51.306
  Apr 20 15:45:51.306: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/20/24 15:45:51.329
  Apr 20 15:45:51.351: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c72e7a5-3fdb-4714-aca6-5d39f47fced2",
      ResourceVersion: (string) (len=5) "60044",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 15:45:51.360: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Apr 20 15:45:51.360: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 20 15:45:51.361: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "334ab8cc-688b-4537-b6cc-8d5c31999b6e",
      ResourceVersion: (string) (len=5) "60045",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3c72e7a5-3fdb-4714-aca6-5d39f47fced2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 33 63 37 32 65 37 61  |"uid\":\"3c72e7a|
              00000040  35 2d 33 66 64 62 2d 34  37 31 34 2d 61 63 61 36  |5-3fdb-4714-aca6|
              00000050  2d 35 64 33 39 66 34 37  66 63 65 64 32 5c 22 7d  |-5d39f47fced2\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:45:51.385: INFO: Pod "test-cleanup-controller-gvwhf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-gvwhf",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-9370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecd1a8b7-77d3-41fc-9215-071b957f6f41",
      ResourceVersion: (string) (len=5) "60031",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "334ab8cc-688b-4537-b6cc-8d5c31999b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 33 34 61 62 38 63 63  |uid\":\"334ab8cc|
              00000080  2d 36 38 38 62 2d 34 35  33 37 2d 62 36 63 63 2d  |-688b-4537-b6cc-|
              00000090  38 64 35 63 33 31 39 39  39 62 36 65 5c 22 7d 22  |8d5c31999b6e\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 39 33 5c 22 7d  |10.233.66.193\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-stjf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-stjf4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.193",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.193"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://901037e72ef8df6010818627e8f9fd88b91e5c778753e338619b34c2ea7059df",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:45:51.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9370" for this suite. @ 04/20/24 15:45:51.402
â€¢ [5.224 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 04/20/24 15:45:51.429
  Apr 20 15:45:51.429: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:45:51.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:51.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:51.497
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 15:45:51.501
  E0420 15:45:52.054494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:53.054697      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:54.055058      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:55.055895      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:55.558
  Apr 20 15:45:55.566: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-2bebe864-6e1e-4e92-8ae9-91ff31d30247 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:55.577
  Apr 20 15:45:55.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4787" for this suite. @ 04/20/24 15:45:55.614
â€¢ [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/20/24 15:45:55.628
  Apr 20 15:45:55.628: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:45:55.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:55.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:55.669
  Apr 20 15:45:55.709: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:45:55.722
  Apr 20 15:45:55.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:45:55.738: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:45:56.057383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:56.768: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:45:56.769: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:45:57.058063      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:57.761: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:45:57.761: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/20/24 15:45:57.804
  STEP: Check that daemon pods images are updated. @ 04/20/24 15:45:57.829
  Apr 20 15:45:57.838: INFO: Wrong image for pod: daemon-set-4fpbn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:45:57.838: INFO: Wrong image for pod: daemon-set-gq8vl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:45:57.838: INFO: Wrong image for pod: daemon-set-ljjqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:45:58.058405      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:58.864: INFO: Wrong image for pod: daemon-set-4fpbn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:45:58.864: INFO: Pod daemon-set-bnjf8 is not available
  Apr 20 15:45:58.864: INFO: Wrong image for pod: daemon-set-ljjqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:45:59.058814      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:59.862: INFO: Wrong image for pod: daemon-set-4fpbn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:45:59.862: INFO: Pod daemon-set-bnjf8 is not available
  Apr 20 15:45:59.862: INFO: Wrong image for pod: daemon-set-ljjqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:46:00.059809      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:00.868: INFO: Pod daemon-set-2pkj7 is not available
  Apr 20 15:46:00.868: INFO: Wrong image for pod: daemon-set-ljjqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:46:01.060003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:02.061022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:02.865: INFO: Pod daemon-set-cfrwq is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/20/24 15:46:02.877
  Apr 20 15:46:02.898: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:46:02.898: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:46:03.061820      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:03.918: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:46:03.918: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:46:03.951
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8182, will wait for the garbage collector to delete the pods @ 04/20/24 15:46:03.951
  Apr 20 15:46:04.026: INFO: Deleting DaemonSet.extensions daemon-set took: 14.987997ms
  E0420 15:46:04.062293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:04.127: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.997019ms
  E0420 15:46:05.062336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:05.937: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:46:05.937: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:46:05.956: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"60245"},"items":null}

  Apr 20 15:46:05.965: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"60245"},"items":null}

  Apr 20 15:46:06.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8182" for this suite. @ 04/20/24 15:46:06.02
â€¢ [10.406 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/20/24 15:46:06.034
  Apr 20 15:46:06.034: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename disruption @ 04/20/24 15:46:06.038
  E0420 15:46:06.062951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:46:06.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:46:06.085
  STEP: Creating a kubernetes client @ 04/20/24 15:46:06.089
  Apr 20 15:46:06.089: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename disruption-2 @ 04/20/24 15:46:06.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:46:06.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:46:06.131
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:46:06.15
  E0420 15:46:07.063845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:08.064059      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:46:08.191
  E0420 15:46:09.064300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:10.065467      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:46:10.252
  E0420 15:46:11.065667      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:12.066062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/20/24 15:46:12.266
  STEP: listing a collection of PDBs in namespace disruption-9252 @ 04/20/24 15:46:12.273
  STEP: deleting a collection of PDBs @ 04/20/24 15:46:12.279
  STEP: Waiting for the PDB collection to be deleted @ 04/20/24 15:46:12.302
  Apr 20 15:46:12.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:46:12.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9961" for this suite. @ 04/20/24 15:46:12.332
  STEP: Destroying namespace "disruption-9252" for this suite. @ 04/20/24 15:46:12.343
â€¢ [6.319 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 04/20/24 15:46:12.356
  Apr 20 15:46:12.356: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:46:12.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:46:12.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:46:12.395
  STEP: Creating service test in namespace statefulset-307 @ 04/20/24 15:46:12.4
  STEP: Creating a new StatefulSet @ 04/20/24 15:46:12.41
  Apr 20 15:46:12.442: INFO: Found 0 stateful pods, waiting for 3
  E0420 15:46:13.066338      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:14.066401      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:15.067384      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:16.068501      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:17.068741      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:18.069072      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:19.069300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:20.069463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:21.069692      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:22.069880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:22.452: INFO: Found 1 stateful pods, waiting for 3
  E0420 15:46:23.070190      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:24.070343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:25.070951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:26.071459      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:27.071606      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:28.072633      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:29.073498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:30.074191      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:31.074144      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:32.074386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:32.453: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:46:32.453: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:46:32.453: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 15:46:32.481
  Apr 20 15:46:32.517: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 15:46:32.517
  E0420 15:46:33.074697      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:34.075302      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:35.075482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:36.075954      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:37.076427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:38.076673      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:39.076805      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:40.077859      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:41.077999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:42.078602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/20/24 15:46:42.559
  STEP: Performing a canary update @ 04/20/24 15:46:42.559
  Apr 20 15:46:42.588: INFO: Updating stateful set ss2
  Apr 20 15:46:42.610: INFO: Waiting for Pod statefulset-307/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 15:46:43.079330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:44.079918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:45.080464      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:46.080752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:47.081421      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:48.081868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:49.081891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:50.082010      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:51.082555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:52.082953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/20/24 15:46:52.626
  Apr 20 15:46:52.820: INFO: Found 2 stateful pods, waiting for 3
  E0420 15:46:53.083989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:54.084240      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:55.085169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:56.085608      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:57.085839      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:58.086457      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:59.087071      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:00.087566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:01.088025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:02.090655      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:02.831: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:47:02.831: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:47:02.831: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/20/24 15:47:02.847
  Apr 20 15:47:02.877: INFO: Updating stateful set ss2
  Apr 20 15:47:02.896: INFO: Waiting for Pod statefulset-307/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 15:47:03.091574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:04.091872      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:05.092654      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:06.092789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:07.093388      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:08.093562      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:09.094041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:10.094850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:11.095372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:12.095497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:12.951: INFO: Updating stateful set ss2
  Apr 20 15:47:12.986: INFO: Waiting for StatefulSet statefulset-307/ss2 to complete update
  Apr 20 15:47:12.986: INFO: Waiting for Pod statefulset-307/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 15:47:13.096189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:14.096472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:15.097329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:16.097539      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:17.098551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:18.099202      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:19.099308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:20.099349      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:21.099761      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:22.100018      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:23.006: INFO: Deleting all statefulset in ns statefulset-307
  Apr 20 15:47:23.016: INFO: Scaling statefulset ss2 to 0
  E0420 15:47:23.100674      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:24.101172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:25.101417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:26.101646      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:27.102276      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:28.102473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:29.103804      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:30.104172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:31.104756      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:32.105596      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:33.061: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:47:33.068: INFO: Deleting statefulset ss2
  Apr 20 15:47:33.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:47:33.106047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "statefulset-307" for this suite. @ 04/20/24 15:47:33.11
â€¢ [80.786 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/20/24 15:47:33.143
  Apr 20 15:47:33.143: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:47:33.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:47:33.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:47:33.196
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5148 @ 04/20/24 15:47:33.201
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 15:47:33.231
  STEP: creating service externalsvc in namespace services-5148 @ 04/20/24 15:47:33.231
  STEP: creating replication controller externalsvc in namespace services-5148 @ 04/20/24 15:47:33.262
  I0420 15:47:33.287824      15 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5148, replica count: 2
  E0420 15:47:34.106545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:35.106963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:36.107876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:36.339498      15 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/20/24 15:47:36.346
  Apr 20 15:47:36.382: INFO: Creating new exec pod
  E0420 15:47:37.109369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:38.108854      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:38.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5148 exec execpodfwkc8 -- /bin/sh -x -c nslookup nodeport-service.services-5148.svc.cluster.local'
  Apr 20 15:47:38.929: INFO: stderr: "+ nslookup nodeport-service.services-5148.svc.cluster.local\n"
  Apr 20 15:47:38.929: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-5148.svc.cluster.local\tcanonical name = externalsvc.services-5148.svc.cluster.local.\nName:\texternalsvc.services-5148.svc.cluster.local\nAddress: 10.233.31.14\n\n"
  Apr 20 15:47:38.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5148, will wait for the garbage collector to delete the pods @ 04/20/24 15:47:38.943
  Apr 20 15:47:39.019: INFO: Deleting ReplicationController externalsvc took: 17.303084ms
  E0420 15:47:39.109196      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:39.119: INFO: Terminating ReplicationController externalsvc pods took: 100.27161ms
  E0420 15:47:40.109217      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:41.109479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:42.110179      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:42.462: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-5148" for this suite. @ 04/20/24 15:47:42.488
â€¢ [9.360 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/20/24 15:47:42.503
  Apr 20 15:47:42.503: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:47:42.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:47:42.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:47:42.55
  STEP: Create set of pods @ 04/20/24 15:47:42.559
  Apr 20 15:47:42.580: INFO: created test-pod-1
  Apr 20 15:47:42.595: INFO: created test-pod-2
  Apr 20 15:47:42.631: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/20/24 15:47:42.631
  E0420 15:47:43.111314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:44.112257      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/20/24 15:47:44.732
  Apr 20 15:47:44.742: INFO: Pod quantity 3 is different from expected quantity 0
  E0420 15:47:45.113261      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:45.752: INFO: Pod quantity 3 is different from expected quantity 0
  E0420 15:47:46.113573      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:46.751: INFO: Pod quantity 2 is different from expected quantity 0
  E0420 15:47:47.113754      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:47.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1653" for this suite. @ 04/20/24 15:47:47.759
â€¢ [5.272 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 04/20/24 15:47:47.776
  Apr 20 15:47:47.776: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:47:47.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:47:47.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:47:47.835
  STEP: Creating service test in namespace statefulset-7483 @ 04/20/24 15:47:47.842
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/20/24 15:47:47.853
  STEP: Creating stateful set ss in namespace statefulset-7483 @ 04/20/24 15:47:47.861
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7483 @ 04/20/24 15:47:47.878
  Apr 20 15:47:47.885: INFO: Found 0 stateful pods, waiting for 1
  E0420 15:47:48.114371      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:49.114479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:50.115266      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:51.115768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:52.115918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:53.116751      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:54.116878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:55.117722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:56.118375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:57.118881      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:57.900: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/20/24 15:47:57.9
  Apr 20 15:47:57.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 15:47:58.119833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:58.244: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:47:58.244: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:47:58.244: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:47:58.253: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0420 15:47:59.120150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:00.120139      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:01.120852      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:02.121034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:03.123209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:04.122460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:05.122712      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:06.123760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:07.123402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:08.123630      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:08.263: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:48:08.263: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 15:48:08.297: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999417s
  E0420 15:48:09.123695      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:09.307: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.990223961s
  E0420 15:48:10.124053      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:10.314: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.980892187s
  E0420 15:48:11.124850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:11.324: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.972815668s
  E0420 15:48:12.125022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:12.333: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.963898673s
  E0420 15:48:13.126228      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:13.343: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.954802876s
  E0420 15:48:14.126906      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:14.352: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.944795344s
  E0420 15:48:15.127499      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:15.362: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.935181635s
  E0420 15:48:16.129456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:16.372: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.92540552s
  E0420 15:48:17.129705      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:17.382: INFO: Verifying statefulset ss doesn't scale past 1 for another 914.614945ms
  E0420 15:48:18.129700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7483 @ 04/20/24 15:48:18.383
  Apr 20 15:48:18.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:48:18.650: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:48:18.650: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:48:18.650: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:48:18.658: INFO: Found 1 stateful pods, waiting for 3
  E0420 15:48:19.130182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:20.130228      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:21.131533      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:22.132337      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:23.132590      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:24.132936      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:25.133148      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:26.133711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:27.133946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:28.136491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:28.670: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:48:28.670: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:48:28.670: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/20/24 15:48:28.67
  STEP: Scale down will halt with unhealthy stateful pod @ 04/20/24 15:48:28.67
  Apr 20 15:48:28.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:48:28.996: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:48:28.996: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:48:28.997: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:48:28.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 15:48:29.134486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:29.300: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:48:29.300: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:48:29.300: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:48:29.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:48:29.599: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:48:29.599: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:48:29.599: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:48:29.599: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 15:48:29.630: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0420 15:48:30.134835      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:31.134859      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:32.136460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:33.136331      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:34.136670      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:35.137611      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:36.139525      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:37.139627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:38.139756      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:39.140000      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:39.648: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:48:39.648: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:48:39.648: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:48:39.681: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999566s
  E0420 15:48:40.140585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:40.691: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.988908521s
  E0420 15:48:41.141576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:41.701: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.980225517s
  E0420 15:48:42.142547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:42.716: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.968953789s
  E0420 15:48:43.142841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:43.726: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.953800044s
  E0420 15:48:44.143521      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:44.736: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.94385953s
  E0420 15:48:45.143666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:45.744: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.935079782s
  E0420 15:48:46.144816      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:46.758: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.926421528s
  E0420 15:48:47.145494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:47.768: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.91230294s
  E0420 15:48:48.145488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:48.777: INFO: Verifying statefulset ss doesn't scale past 3 for another 902.383961ms
  E0420 15:48:49.145694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7483 @ 04/20/24 15:48:49.778
  Apr 20 15:48:49.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:48:50.040: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:48:50.040: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:48:50.040: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:48:50.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0420 15:48:50.146537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:48:50.349: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:48:50.349: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:48:50.349: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:48:50.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=statefulset-7483 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:48:50.603: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:48:50.603: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:48:50.603: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:48:50.603: INFO: Scaling statefulset ss to 0
  E0420 15:48:51.147511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:52.147954      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:53.148462      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:54.148322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:55.148725      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:56.149333      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:57.149707      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:58.150762      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:59.150791      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:00.151969      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/20/24 15:49:00.644
  Apr 20 15:49:00.645: INFO: Deleting all statefulset in ns statefulset-7483
  Apr 20 15:49:00.654: INFO: Scaling statefulset ss to 0
  Apr 20 15:49:00.681: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:49:00.688: INFO: Deleting statefulset ss
  Apr 20 15:49:00.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7483" for this suite. @ 04/20/24 15:49:00.732
â€¢ [72.970 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 04/20/24 15:49:00.758
  Apr 20 15:49:00.758: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:49:00.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:49:00.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:49:00.798
  STEP: Creating the pod @ 04/20/24 15:49:00.803
  E0420 15:49:01.151882      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:02.152876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:03.153726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:49:03.420: INFO: Successfully updated pod "annotationupdate41a117b9-4f01-416f-b193-3be5a343c8e3"
  E0420 15:49:04.153602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:05.153729      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:49:05.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1697" for this suite. @ 04/20/24 15:49:05.464
â€¢ [4.725 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/20/24 15:49:05.484
  Apr 20 15:49:05.484: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename init-container @ 04/20/24 15:49:05.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:49:05.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:49:05.528
  STEP: creating the pod @ 04/20/24 15:49:05.532
  Apr 20 15:49:05.532: INFO: PodSpec: initContainers in spec.initContainers
  E0420 15:49:06.153955      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:07.154047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:08.155458      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:09.155392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:49:09.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2040" for this suite. @ 04/20/24 15:49:09.789
â€¢ [4.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/20/24 15:49:09.812
  Apr 20 15:49:09.812: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:49:09.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:49:09.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:49:09.854
  STEP: Creating a cronjob @ 04/20/24 15:49:09.859
  STEP: Ensuring more than one job is running at a time @ 04/20/24 15:49:09.87
  E0420 15:49:10.155439      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:11.155897      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:12.159952      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:13.157437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:14.157679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:15.158491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:16.159725      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:17.160214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:18.161054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:19.161403      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:20.161855      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:21.162549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:22.162703      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:23.163322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:24.164197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:25.165443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:26.165765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:27.166349      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:28.166382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:29.166953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:30.167353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:31.167620      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:32.168699      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:33.169173      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:34.170001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:35.170512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:36.171387      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:37.171894      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:38.171988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:39.172426      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:40.173522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:41.174760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:42.174813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:43.175991      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:44.176722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:45.177132      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:46.177308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:47.177755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:48.178272      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:49.178847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:50.178906      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:51.179338      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:52.180052      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:53.180530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:54.180672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:55.181802      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:56.182329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:57.182823      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:58.182946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:59.183413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:00.183838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:01.184412      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:02.185508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:03.185891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:04.186351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:05.187461      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:06.187566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:07.187858      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:08.187868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:09.188086      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:10.188990      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:11.189544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:12.190468      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:13.191250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:14.191322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:15.191486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:16.192282      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:17.192828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:18.193282      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:19.193594      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:20.193807      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:21.194528      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:22.194752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:23.195355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:24.195451      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:25.195643      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:26.196054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:27.196886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:28.198018      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:29.198321      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:30.199479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:31.200056      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:32.200397      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:33.201032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:34.201055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:35.201287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:36.201469      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:37.201734      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:38.201921      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:39.202402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:40.202507      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:41.202712      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:42.203537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:43.203841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:44.203965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:45.204716      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:46.205432      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:47.205661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:48.206512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:49.206410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:50.207694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:51.207635      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:52.208080      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:53.208343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:54.208765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:55.209813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:56.210386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:57.210816      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:58.210989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:59.211528      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:00.212352      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:01.212756      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/20/24 15:51:01.881
  STEP: Removing cronjob @ 04/20/24 15:51:01.894
  Apr 20 15:51:01.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7134" for this suite. @ 04/20/24 15:51:01.943
â€¢ [112.162 seconds]
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 04/20/24 15:51:01.974
  Apr 20 15:51:01.974: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:51:01.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:02.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:02.07
  STEP: creating secret secrets-2412/secret-test-d60c302c-851a-4d69-8dd1-e9dcef3ed205 @ 04/20/24 15:51:02.079
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:51:02.106
  E0420 15:51:02.213037      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:03.214049      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:04.214752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:05.216429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:51:06.156
  Apr 20 15:51:06.168: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-09210fbb-fa6a-4aaf-87de-5377b38b69e7 container env-test: <nil>
  E0420 15:51:06.216243      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 04/20/24 15:51:06.216
  Apr 20 15:51:06.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2412" for this suite. @ 04/20/24 15:51:06.305
â€¢ [4.348 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/20/24 15:51:06.323
  Apr 20 15:51:06.323: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:51:06.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:06.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:06.364
  STEP: Creating secret with name s-test-opt-del-438b98cb-c6d8-4ed5-a055-32b757351a81 @ 04/20/24 15:51:06.378
  STEP: Creating secret with name s-test-opt-upd-1338a95e-5267-4e18-8a85-239a60524a7e @ 04/20/24 15:51:06.387
  STEP: Creating the pod @ 04/20/24 15:51:06.399
  E0420 15:51:07.216944      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:08.232272      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-438b98cb-c6d8-4ed5-a055-32b757351a81 @ 04/20/24 15:51:08.509
  STEP: Updating secret s-test-opt-upd-1338a95e-5267-4e18-8a85-239a60524a7e @ 04/20/24 15:51:08.521
  STEP: Creating secret with name s-test-opt-create-7e4fd8b8-f797-49e8-8100-8adedf699134 @ 04/20/24 15:51:08.532
  STEP: waiting to observe update in volume @ 04/20/24 15:51:08.539
  E0420 15:51:09.220436      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:10.220932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:10.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5344" for this suite. @ 04/20/24 15:51:10.611
â€¢ [4.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 04/20/24 15:51:10.626
  Apr 20 15:51:10.626: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 15:51:10.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:10.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:10.673
  Apr 20 15:51:10.679: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:51:11.221952      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:12.223010      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:13.227209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:14.224253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:14.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3200" for this suite. @ 04/20/24 15:51:14.258
â€¢ [3.646 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 04/20/24 15:51:14.274
  Apr 20 15:51:14.274: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:51:14.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:14.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:14.326
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:51:14.331
  E0420 15:51:15.226385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:16.227698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:17.227787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:18.229467      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:51:18.382
  Apr 20 15:51:18.388: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-ff7db300-a253-41fb-b555-5235a1e6691e container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:51:18.398
  Apr 20 15:51:18.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8474" for this suite. @ 04/20/24 15:51:18.437
â€¢ [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/20/24 15:51:18.482
  Apr 20 15:51:18.482: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename certificates @ 04/20/24 15:51:18.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:18.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:18.531
  E0420 15:51:19.229618      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 04/20/24 15:51:19.662
  STEP: getting /apis/certificates.k8s.io @ 04/20/24 15:51:19.675
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/20/24 15:51:19.677
  STEP: creating @ 04/20/24 15:51:19.679
  STEP: getting @ 04/20/24 15:51:19.715
  STEP: listing @ 04/20/24 15:51:19.727
  STEP: watching @ 04/20/24 15:51:19.736
  Apr 20 15:51:19.736: INFO: starting watch
  STEP: patching @ 04/20/24 15:51:19.739
  STEP: updating @ 04/20/24 15:51:19.754
  Apr 20 15:51:19.770: INFO: waiting for watch events with expected annotations
  Apr 20 15:51:19.770: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/20/24 15:51:19.77
  STEP: patching /approval @ 04/20/24 15:51:19.779
  STEP: updating /approval @ 04/20/24 15:51:19.802
  STEP: getting /status @ 04/20/24 15:51:19.827
  STEP: patching /status @ 04/20/24 15:51:19.838
  STEP: updating /status @ 04/20/24 15:51:19.858
  STEP: deleting @ 04/20/24 15:51:19.88
  STEP: deleting a collection @ 04/20/24 15:51:19.913
  Apr 20 15:51:19.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6354" for this suite. @ 04/20/24 15:51:19.971
â€¢ [1.510 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 04/20/24 15:51:19.993
  Apr 20 15:51:19.993: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:51:19.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:20.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:20.037
  E0420 15:51:20.230652      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:21.231405      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:22.231526      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:23.232249      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:24.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3925" for this suite. @ 04/20/24 15:51:24.095
â€¢ [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 04/20/24 15:51:24.138
  Apr 20 15:51:24.138: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:51:24.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:24.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:24.188
  STEP: creating service in namespace services-7720 @ 04/20/24 15:51:24.2
  STEP: creating service affinity-clusterip in namespace services-7720 @ 04/20/24 15:51:24.2
  STEP: creating replication controller affinity-clusterip in namespace services-7720 @ 04/20/24 15:51:24.218
  E0420 15:51:24.232786      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:51:24.237821      15 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7720, replica count: 3
  E0420 15:51:25.233546      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:26.233779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:27.234753      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:51:27.289390      15 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 15:51:27.303: INFO: Creating new exec pod
  E0420 15:51:28.234356      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:29.234916      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:30.235061      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:30.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-7720 exec execpod-affinity98t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 20 15:51:30.645: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 20 15:51:30.645: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:51:30.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-7720 exec execpod-affinity98t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.141 80'
  Apr 20 15:51:30.869: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.56.141 80\nConnection to 10.233.56.141 80 port [tcp/http] succeeded!\n"
  Apr 20 15:51:30.869: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:51:30.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-7720 exec execpod-affinity98t5m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.56.141:80/ ; done'
  E0420 15:51:31.235333      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:31.292: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.141:80/\n"
  Apr 20 15:51:31.292: INFO: stdout: "\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g\naffinity-clusterip-l6q9g"
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Received response from host: affinity-clusterip-l6q9g
  Apr 20 15:51:31.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:51:31.302: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7720, will wait for the garbage collector to delete the pods @ 04/20/24 15:51:31.326
  Apr 20 15:51:31.397: INFO: Deleting ReplicationController affinity-clusterip took: 14.89942ms
  Apr 20 15:51:31.498: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.637767ms
  E0420 15:51:32.236270      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:33.236561      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:34.237167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7720" for this suite. @ 04/20/24 15:51:34.736
â€¢ [10.611 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 04/20/24 15:51:34.75
  Apr 20 15:51:34.750: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:51:34.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:34.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:34.787
  STEP: Counting existing ResourceQuota @ 04/20/24 15:51:34.792
  E0420 15:51:35.238292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:36.238451      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:37.238779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:38.239733      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:39.240688      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:51:39.804
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:51:39.819
  E0420 15:51:40.241552      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:41.242466      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/20/24 15:51:41.829
  STEP: Ensuring resource quota status captures replicaset creation @ 04/20/24 15:51:41.86
  E0420 15:51:42.242794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:43.242766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/20/24 15:51:43.875
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:51:43.903
  E0420 15:51:44.243651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:45.243616      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:45.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2998" for this suite. @ 04/20/24 15:51:45.927
â€¢ [11.195 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 04/20/24 15:51:45.945
  Apr 20 15:51:45.945: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:51:45.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:45.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:45.996
  STEP: Creating Pod @ 04/20/24 15:51:46.004
  E0420 15:51:46.244249      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:47.244582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 04/20/24 15:51:48.045
  Apr 20 15:51:48.045: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4897 PodName:pod-sharedvolume-977ea73d-fb50-457f-ae45-f48a5c9ae0b3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:51:48.045: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  Apr 20 15:51:48.047: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:51:48.047: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-4897/pods/pod-sharedvolume-977ea73d-fb50-457f-ae45-f48a5c9ae0b3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 20 15:51:48.151: INFO: Exec stderr: ""
  Apr 20 15:51:48.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4897" for this suite. @ 04/20/24 15:51:48.162
â€¢ [2.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/20/24 15:51:48.216
  Apr 20 15:51:48.216: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:51:48.219
  E0420 15:51:48.244400      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:48.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:48.265
  STEP: Setting up server cert @ 04/20/24 15:51:48.313
  E0420 15:51:49.245339      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:51:49.446
  STEP: Deploying the webhook pod @ 04/20/24 15:51:49.464
  STEP: Wait for the deployment to be ready @ 04/20/24 15:51:49.487
  Apr 20 15:51:49.503: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:51:50.246406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:51.247672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:51:51.524
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:51:51.544
  E0420 15:51:52.248589      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:52.545: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/20/24 15:51:52.558
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/20/24 15:51:52.595
  STEP: Creating a configMap that should not be mutated @ 04/20/24 15:51:52.608
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/20/24 15:51:52.629
  STEP: Creating a configMap that should be mutated @ 04/20/24 15:51:52.647
  Apr 20 15:51:52.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8537" for this suite. @ 04/20/24 15:51:52.802
  STEP: Destroying namespace "webhook-markers-9819" for this suite. @ 04/20/24 15:51:52.819
â€¢ [4.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/20/24 15:51:52.838
  Apr 20 15:51:52.838: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:51:52.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:51:52.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:51:52.874
  Apr 20 15:51:52.927: INFO: Create a RollingUpdate DaemonSet
  Apr 20 15:51:52.934: INFO: Check that daemon pods launch on every node of the cluster
  Apr 20 15:51:52.952: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:51:52.952: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:51:53.249585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:53.973: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:51:53.973: INFO: Node aat3reeth3ee-1 is running 0 daemon pod, expected 1
  E0420 15:51:54.250506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:54.975: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:51:54.975: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 20 15:51:54.975: INFO: Update the DaemonSet to trigger a rollout
  Apr 20 15:51:54.995: INFO: Updating DaemonSet daemon-set
  E0420 15:51:55.251611      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:56.037: INFO: Roll back the DaemonSet before rollout is complete
  Apr 20 15:51:56.054: INFO: Updating DaemonSet daemon-set
  Apr 20 15:51:56.054: INFO: Make sure DaemonSet rollback is complete
  Apr 20 15:51:56.063: INFO: Wrong image for pod: daemon-set-kcbnc. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 20 15:51:56.063: INFO: Pod daemon-set-kcbnc is not available
  E0420 15:51:56.251787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:57.252179      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:58.253200      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:59.253596      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:00.253869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:01.254004      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:02.255345      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:03.080: INFO: Pod daemon-set-q4tpg is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:52:03.109
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5352, will wait for the garbage collector to delete the pods @ 04/20/24 15:52:03.109
  Apr 20 15:52:03.179: INFO: Deleting DaemonSet.extensions daemon-set took: 14.088191ms
  E0420 15:52:03.255391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:03.279: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.257466ms
  E0420 15:52:04.256406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:04.587: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:52:04.588: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:52:04.592: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"62270"},"items":null}

  Apr 20 15:52:04.597: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"62270"},"items":null}

  Apr 20 15:52:04.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5352" for this suite. @ 04/20/24 15:52:04.632
â€¢ [11.808 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 04/20/24 15:52:04.648
  Apr 20 15:52:04.648: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:52:04.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:52:04.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:52:04.691
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 15:52:04.697
  E0420 15:52:05.256405      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:06.256951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:52:06.73
  Apr 20 15:52:06.740: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-c0c0ae4e-5a32-4c89-bdf3-3042545b816e container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:52:06.753
  Apr 20 15:52:06.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9023" for this suite. @ 04/20/24 15:52:06.784
â€¢ [2.150 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 04/20/24 15:52:06.799
  Apr 20 15:52:06.799: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:52:06.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:52:06.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:52:06.841
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 15:52:06.845
  E0420 15:52:07.258382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:08.258859      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:09.259518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:10.260676      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:52:10.89
  Apr 20 15:52:10.902: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-3fb784d3-af1e-4402-8ce1-7a7f44a67daf container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:52:10.922
  Apr 20 15:52:10.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-19" for this suite. @ 04/20/24 15:52:10.968
â€¢ [4.183 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/20/24 15:52:10.983
  Apr 20 15:52:10.983: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename disruption @ 04/20/24 15:52:10.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:52:11.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:52:11.032
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:52:11.049
  STEP: Updating PodDisruptionBudget status @ 04/20/24 15:52:11.059
  STEP: Waiting for all pods to be running @ 04/20/24 15:52:11.081
  Apr 20 15:52:11.087: INFO: running pods: 0 < 1
  E0420 15:52:11.261228      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:12.261422      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/20/24 15:52:13.096
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:52:13.118
  STEP: Patching PodDisruptionBudget status @ 04/20/24 15:52:13.131
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:52:13.147
  Apr 20 15:52:13.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2788" for this suite. @ 04/20/24 15:52:13.162
â€¢ [2.191 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/20/24 15:52:13.178
  Apr 20 15:52:13.178: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:52:13.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:52:13.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:52:13.219
  STEP: creating service nodeport-test with type=NodePort in namespace services-5789 @ 04/20/24 15:52:13.224
  STEP: creating replication controller nodeport-test in namespace services-5789 @ 04/20/24 15:52:13.252
  E0420 15:52:13.262401      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:52:13.270585      15 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5789, replica count: 2
  E0420 15:52:14.262845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:15.262920      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:16.263471      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:52:16.321912      15 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 15:52:16.322: INFO: Creating new exec pod
  E0420 15:52:17.263687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:18.263998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:19.264840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:19.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5789 exec execpodvhsb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 20 15:52:19.658: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 20 15:52:19.659: INFO: stdout: "nodeport-test-47xgl"
  Apr 20 15:52:19.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5789 exec execpodvhsb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.200 80'
  Apr 20 15:52:19.969: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.200 80\nConnection to 10.233.15.200 80 port [tcp/http] succeeded!\n"
  Apr 20 15:52:19.969: INFO: stdout: "nodeport-test-db9fd"
  Apr 20 15:52:19.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5789 exec execpodvhsb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.170 30749'
  Apr 20 15:52:20.195: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.170 30749\nConnection to 192.168.121.170 30749 port [tcp/*] succeeded!\n"
  Apr 20 15:52:20.195: INFO: stdout: "nodeport-test-db9fd"
  Apr 20 15:52:20.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-5789 exec execpodvhsb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.20 30749'
  E0420 15:52:20.265620      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:20.440: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.20 30749\nConnection to 192.168.121.20 30749 port [tcp/*] succeeded!\n"
  Apr 20 15:52:20.440: INFO: stdout: "nodeport-test-47xgl"
  Apr 20 15:52:20.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5789" for this suite. @ 04/20/24 15:52:20.451
â€¢ [7.287 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/20/24 15:52:20.466
  Apr 20 15:52:20.466: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:52:20.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:52:20.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:52:20.506
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/20/24 15:52:20.511
  Apr 20 15:52:20.512: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:52:21.266340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:22.266620      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:23.266626      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:24.267253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:25.268389      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:26.268384      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:27.269234      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/20/24 15:52:28.001
  Apr 20 15:52:28.003: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:52:28.270404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:29.271266      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:29.658: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:52:30.271411      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:31.271632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:32.275752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:33.275831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:34.276278      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:35.277621      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:36.278167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:36.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7089" for this suite. @ 04/20/24 15:52:37.001
â€¢ [16.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 04/20/24 15:52:37.019
  Apr 20 15:52:37.019: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:52:37.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:52:37.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:52:37.063
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:52:37.069
  E0420 15:52:37.279305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:38.280067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:39.279928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:40.280417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:52:41.123
  Apr 20 15:52:41.132: INFO: Trying to get logs from node aat3reeth3ee-3 pod downwardapi-volume-454ba5e0-8dec-4e87-90fc-38249755ed97 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:52:41.151
  Apr 20 15:52:41.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9443" for this suite. @ 04/20/24 15:52:41.201
â€¢ [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/20/24 15:52:41.227
  Apr 20 15:52:41.227: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename subpath @ 04/20/24 15:52:41.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:52:41.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:52:41.277
  E0420 15:52:41.281408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up data @ 04/20/24 15:52:41.284
  STEP: Creating pod pod-subpath-test-configmap-rwbn @ 04/20/24 15:52:41.311
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 15:52:41.311
  E0420 15:52:42.282869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:43.282766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:44.283951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:45.284011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:46.284578      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:47.284978      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:48.285497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:49.285780      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:50.286163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:51.286361      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:52.287008      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:53.288225      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:54.288627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:55.289054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:56.289938      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:57.290295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:58.290850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:59.291761      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:00.292067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:01.292912      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:02.293854      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:03.294711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:04.294912      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:05.295966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:53:05.472
  Apr 20 15:53:05.479: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-subpath-test-configmap-rwbn container test-container-subpath-configmap-rwbn: <nil>
  STEP: delete the pod @ 04/20/24 15:53:05.503
  STEP: Deleting pod pod-subpath-test-configmap-rwbn @ 04/20/24 15:53:05.53
  Apr 20 15:53:05.531: INFO: Deleting pod "pod-subpath-test-configmap-rwbn" in namespace "subpath-6801"
  Apr 20 15:53:05.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6801" for this suite. @ 04/20/24 15:53:05.559
â€¢ [24.354 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 04/20/24 15:53:05.582
  Apr 20 15:53:05.582: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:53:05.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:53:05.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:53:05.654
  Apr 20 15:53:05.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8453" for this suite. @ 04/20/24 15:53:05.74
â€¢ [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 04/20/24 15:53:05.755
  Apr 20 15:53:05.755: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename job @ 04/20/24 15:53:05.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:53:05.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:53:05.802
  STEP: Creating a suspended job @ 04/20/24 15:53:05.811
  STEP: Patching the Job @ 04/20/24 15:53:05.821
  STEP: Watching for Job to be patched @ 04/20/24 15:53:05.841
  Apr 20 15:53:05.844: INFO: Event ADDED observed for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-job-label:e2e-57rtw] and annotations: map[]
  Apr 20 15:53:05.844: INFO: Event MODIFIED found for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[]
  STEP: Updating the job @ 04/20/24 15:53:05.844
  STEP: Watching for Job to be updated @ 04/20/24 15:53:05.859
  Apr 20 15:53:05.861: INFO: Event MODIFIED found for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[updated:true]
  Apr 20 15:53:05.861: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/20/24 15:53:05.861
  Apr 20 15:53:05.868: INFO: Job: e2e-57rtw as labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw]
  STEP: Waiting for job to complete @ 04/20/24 15:53:05.868
  E0420 15:53:06.296609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:07.296790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:08.297022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:09.297549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:10.298465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:11.299511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:12.299843      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:13.300244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/20/24 15:53:13.877
  STEP: Watching for Job to be deleted @ 04/20/24 15:53:13.892
  Apr 20 15:53:13.895: INFO: Event MODIFIED observed for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[updated:true]
  Apr 20 15:53:13.895: INFO: Event MODIFIED observed for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[updated:true]
  Apr 20 15:53:13.895: INFO: Event MODIFIED observed for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[updated:true]
  Apr 20 15:53:13.895: INFO: Event MODIFIED observed for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[updated:true]
  Apr 20 15:53:13.896: INFO: Event MODIFIED observed for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[updated:true]
  Apr 20 15:53:13.896: INFO: Event DELETED found for Job e2e-57rtw in namespace job-1409 with labels: map[e2e-57rtw:patched e2e-job-label:e2e-57rtw] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/20/24 15:53:13.896
  Apr 20 15:53:13.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1409" for this suite. @ 04/20/24 15:53:13.908
â€¢ [8.166 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/20/24 15:53:13.922
  Apr 20 15:53:13.922: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:53:13.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:53:13.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:53:13.996
  STEP: Setting up server cert @ 04/20/24 15:53:14.046
  E0420 15:53:14.300164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:53:15.046
  STEP: Deploying the webhook pod @ 04/20/24 15:53:15.065
  STEP: Wait for the deployment to be ready @ 04/20/24 15:53:15.117
  Apr 20 15:53:15.141: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:53:15.300472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:16.301256      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:53:17.17
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:53:17.203
  E0420 15:53:17.301848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:18.204: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/20/24 15:53:18.236
  STEP: create a configmap that should be updated by the webhook @ 04/20/24 15:53:18.283
  E0420 15:53:18.302521      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:18.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1316" for this suite. @ 04/20/24 15:53:18.433
  STEP: Destroying namespace "webhook-markers-2150" for this suite. @ 04/20/24 15:53:18.448
â€¢ [4.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 04/20/24 15:53:18.467
  Apr 20 15:53:18.467: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:53:18.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:53:18.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:53:18.502
  STEP: Creating configMap with name configmap-test-volume-a226197c-593f-4c2c-ac93-50e919492c89 @ 04/20/24 15:53:18.507
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:53:18.516
  E0420 15:53:19.303293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:20.304517      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:21.304756      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:22.305036      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:53:22.592
  Apr 20 15:53:22.599: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-configmaps-06a58207-571d-4984-b2bb-64b7c91ee634 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:53:22.614
  Apr 20 15:53:22.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2843" for this suite. @ 04/20/24 15:53:22.662
â€¢ [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/20/24 15:53:22.695
  Apr 20 15:53:22.695: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 15:53:22.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:53:22.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:53:22.746
  E0420 15:53:23.305540      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:24.306336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:25.306742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:26.307710      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:26.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7731" for this suite. @ 04/20/24 15:53:26.798
â€¢ [4.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 04/20/24 15:53:26.815
  Apr 20 15:53:26.815: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:53:26.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:53:26.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:53:26.857
  STEP: creating a replication controller @ 04/20/24 15:53:26.865
  Apr 20 15:53:26.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 create -f -'
  E0420 15:53:27.307900      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:27.417: INFO: stderr: ""
  Apr 20 15:53:27.417: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 15:53:27.417
  Apr 20 15:53:27.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:53:27.636: INFO: stderr: ""
  Apr 20 15:53:27.636: INFO: stdout: "update-demo-nautilus-5lc6n update-demo-nautilus-8gkhl "
  Apr 20 15:53:27.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-5lc6n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:53:27.871: INFO: stderr: ""
  Apr 20 15:53:27.871: INFO: stdout: ""
  Apr 20 15:53:27.871: INFO: update-demo-nautilus-5lc6n is created but not running
  E0420 15:53:28.309147      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:29.309654      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:30.310700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:31.311182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:32.311255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:32.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:53:33.059: INFO: stderr: ""
  Apr 20 15:53:33.059: INFO: stdout: "update-demo-nautilus-5lc6n update-demo-nautilus-8gkhl "
  Apr 20 15:53:33.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-5lc6n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:53:33.215: INFO: stderr: ""
  Apr 20 15:53:33.215: INFO: stdout: "true"
  Apr 20 15:53:33.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-5lc6n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0420 15:53:33.312564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:33.398: INFO: stderr: ""
  Apr 20 15:53:33.398: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:53:33.398: INFO: validating pod update-demo-nautilus-5lc6n
  Apr 20 15:53:33.417: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:53:33.418: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:53:33.418: INFO: update-demo-nautilus-5lc6n is verified up and running
  Apr 20 15:53:33.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-8gkhl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:53:33.576: INFO: stderr: ""
  Apr 20 15:53:33.576: INFO: stdout: "true"
  Apr 20 15:53:33.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-8gkhl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 15:53:33.735: INFO: stderr: ""
  Apr 20 15:53:33.735: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:53:33.735: INFO: validating pod update-demo-nautilus-8gkhl
  Apr 20 15:53:33.759: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:53:33.759: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:53:33.760: INFO: update-demo-nautilus-8gkhl is verified up and running
  STEP: scaling down the replication controller @ 04/20/24 15:53:33.76
  Apr 20 15:53:33.779: INFO: scanned /root for discovery docs: <nil>
  Apr 20 15:53:33.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0420 15:53:34.312815      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:34.974: INFO: stderr: ""
  Apr 20 15:53:34.974: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 15:53:34.974
  Apr 20 15:53:34.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:53:35.136: INFO: stderr: ""
  Apr 20 15:53:35.136: INFO: stdout: "update-demo-nautilus-8gkhl "
  Apr 20 15:53:35.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-8gkhl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:53:35.287: INFO: stderr: ""
  Apr 20 15:53:35.287: INFO: stdout: "true"
  Apr 20 15:53:35.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-8gkhl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0420 15:53:35.313605      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:35.451: INFO: stderr: ""
  Apr 20 15:53:35.451: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:53:35.451: INFO: validating pod update-demo-nautilus-8gkhl
  Apr 20 15:53:35.461: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:53:35.461: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:53:35.461: INFO: update-demo-nautilus-8gkhl is verified up and running
  STEP: scaling up the replication controller @ 04/20/24 15:53:35.462
  Apr 20 15:53:35.475: INFO: scanned /root for discovery docs: <nil>
  Apr 20 15:53:35.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0420 15:53:36.314030      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:36.683: INFO: stderr: ""
  Apr 20 15:53:36.683: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 15:53:36.683
  Apr 20 15:53:36.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 15:53:36.876: INFO: stderr: ""
  Apr 20 15:53:36.876: INFO: stdout: "update-demo-nautilus-8gkhl update-demo-nautilus-dnh4j "
  Apr 20 15:53:36.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-8gkhl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 15:53:37.022: INFO: stderr: ""
  Apr 20 15:53:37.022: INFO: stdout: "true"
  Apr 20 15:53:37.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-8gkhl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 15:53:37.170: INFO: stderr: ""
  Apr 20 15:53:37.170: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:53:37.170: INFO: validating pod update-demo-nautilus-8gkhl
  Apr 20 15:53:37.181: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:53:37.181: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:53:37.181: INFO: update-demo-nautilus-8gkhl is verified up and running
  Apr 20 15:53:37.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-dnh4j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 15:53:37.314165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:37.341: INFO: stderr: ""
  Apr 20 15:53:37.341: INFO: stdout: "true"
  Apr 20 15:53:37.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods update-demo-nautilus-dnh4j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 15:53:37.495: INFO: stderr: ""
  Apr 20 15:53:37.495: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 15:53:37.495: INFO: validating pod update-demo-nautilus-dnh4j
  E0420 15:53:38.314639      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:39.315428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:40.315826      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:41.316946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:42.317508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:43.317752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:44.318410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:45.318933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:46.319676      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:47.319955      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:48.320223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:48.743: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 15:53:48.743: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 15:53:48.743: INFO: update-demo-nautilus-dnh4j is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 15:53:48.743
  Apr 20 15:53:48.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 delete --grace-period=0 --force -f -'
  Apr 20 15:53:48.928: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 15:53:48.928: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 20 15:53:48.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get rc,svc -l name=update-demo --no-headers'
  Apr 20 15:53:49.186: INFO: stderr: "No resources found in kubectl-8337 namespace.\n"
  Apr 20 15:53:49.186: INFO: stdout: ""
  Apr 20 15:53:49.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-8337 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0420 15:53:49.320928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:49.386: INFO: stderr: ""
  Apr 20 15:53:49.386: INFO: stdout: ""
  Apr 20 15:53:49.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8337" for this suite. @ 04/20/24 15:53:49.397
â€¢ [22.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 04/20/24 15:53:49.412
  Apr 20 15:53:49.412: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename aggregator @ 04/20/24 15:53:49.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:53:49.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:53:49.464
  Apr 20 15:53:49.469: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Registering the sample API server. @ 04/20/24 15:53:49.471
  E0420 15:53:50.321040      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:50.339: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 20 15:53:50.401: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0420 15:53:51.321452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:52.321991      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:52.494: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:53:53.322365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:54.323163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:54.502: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:53:55.323466      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:56.325360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:56.506: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:53:57.325792      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:58.326383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:58.504: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:53:59.327743      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:00.327222      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:00.511: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:01.327659      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:02.328440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:02.503: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:03.328577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:04.329447      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:04.501: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:05.330250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:06.331156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:06.509: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:07.331293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:08.331440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:08.503: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:09.331597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:10.332628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:10.506: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:11.332958      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:12.333320      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:12.506: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:13.333783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:14.333815      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:14.507: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:15.334177      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:16.334485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:16.504: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:17.334861      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:18.335100      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:18.504: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 53, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:54:19.336171      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:20.336088      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:20.648: INFO: Waited 125.901228ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/20/24 15:54:20.732
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/20/24 15:54:20.739
  STEP: List APIServices @ 04/20/24 15:54:20.752
  Apr 20 15:54:20.768: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/20/24 15:54:20.768
  Apr 20 15:54:20.818: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/20/24 15:54:20.818
  Apr 20 15:54:20.844: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 20, 15, 54, 20, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/20/24 15:54:20.844
  Apr 20 15:54:20.856: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-20 15:54:20 +0000 UTC Passed all checks passed}
  Apr 20 15:54:20.856: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 15:54:20.856: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/20/24 15:54:20.856
  Apr 20 15:54:20.886: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-173469260" @ 04/20/24 15:54:20.886
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/20/24 15:54:20.907
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/20/24 15:54:20.937
  STEP: Patch APIService Status @ 04/20/24 15:54:20.944
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/20/24 15:54:20.967
  Apr 20 15:54:20.976: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-20 15:54:20 +0000 UTC Passed all checks passed}
  Apr 20 15:54:20.976: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 15:54:20.976: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 20 15:54:20.976: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 04/20/24 15:54:20.976
  STEP: Confirm that the generated APIService has been deleted @ 04/20/24 15:54:21.006
  Apr 20 15:54:21.007: INFO: Requesting list of APIServices to confirm quantity
  Apr 20 15:54:21.018: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Apr 20 15:54:21.018: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 20 15:54:21.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7239" for this suite. @ 04/20/24 15:54:21.315
â€¢ [31.917 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/20/24 15:54:21.331
  Apr 20 15:54:21.331: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:54:21.335
  E0420 15:54:21.336190      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:54:21.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:54:21.377
  Apr 20 15:54:21.385: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:54:22.336351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 15:54:23.251
  Apr 20 15:54:23.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-2428 --namespace=crd-publish-openapi-2428 create -f -'
  E0420 15:54:23.336899      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:24.337142      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:24.459: INFO: stderr: ""
  Apr 20 15:54:24.460: INFO: stdout: "e2e-test-crd-publish-openapi-9643-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 20 15:54:24.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-2428 --namespace=crd-publish-openapi-2428 delete e2e-test-crd-publish-openapi-9643-crds test-cr'
  Apr 20 15:54:24.657: INFO: stderr: ""
  Apr 20 15:54:24.657: INFO: stdout: "e2e-test-crd-publish-openapi-9643-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 20 15:54:24.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-2428 --namespace=crd-publish-openapi-2428 apply -f -'
  Apr 20 15:54:24.994: INFO: stderr: ""
  Apr 20 15:54:24.994: INFO: stdout: "e2e-test-crd-publish-openapi-9643-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 20 15:54:24.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-2428 --namespace=crd-publish-openapi-2428 delete e2e-test-crd-publish-openapi-9643-crds test-cr'
  Apr 20 15:54:25.173: INFO: stderr: ""
  Apr 20 15:54:25.173: INFO: stdout: "e2e-test-crd-publish-openapi-9643-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 15:54:25.173
  Apr 20 15:54:25.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-2428 explain e2e-test-crd-publish-openapi-9643-crds'
  E0420 15:54:25.338042      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:26.131: INFO: stderr: ""
  Apr 20 15:54:26.131: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9643-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0420 15:54:26.338304      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:27.338831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:27.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2428" for this suite. @ 04/20/24 15:54:27.859
â€¢ [6.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 04/20/24 15:54:27.873
  Apr 20 15:54:27.873: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:54:27.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:54:27.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:54:27.911
  E0420 15:54:28.339260      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:29.339831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:30.339948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:31.340366      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:32.340662      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:33.341965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:34.341522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:35.342633      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:36.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5111" for this suite. @ 04/20/24 15:54:36.027
â€¢ [8.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 04/20/24 15:54:36.048
  Apr 20 15:54:36.048: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename services @ 04/20/24 15:54:36.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:54:36.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:54:36.146
  STEP: creating service in namespace services-9649 @ 04/20/24 15:54:36.152
  STEP: creating service affinity-clusterip-transition in namespace services-9649 @ 04/20/24 15:54:36.152
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9649 @ 04/20/24 15:54:36.212
  I0420 15:54:36.224172      15 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-9649, replica count: 3
  E0420 15:54:36.343726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:37.345197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:38.345717      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:54:39.276047      15 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 15:54:39.288: INFO: Creating new exec pod
  E0420 15:54:39.346598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:40.347304      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:41.347916      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:42.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-9649 exec execpod-affinityfpnz6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0420 15:54:42.348761      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:42.675: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 20 15:54:42.675: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:54:42.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-9649 exec execpod-affinityfpnz6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.55.165 80'
  Apr 20 15:54:42.990: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.55.165 80\nConnection to 10.233.55.165 80 port [tcp/http] succeeded!\n"
  Apr 20 15:54:42.990: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 15:54:43.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-9649 exec execpod-affinityfpnz6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.55.165:80/ ; done'
  E0420 15:54:43.349944      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:44.350929      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:45.352525      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:46.352918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:47.353137      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:48.353725      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:49.354370      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:50.354532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:51.364698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:52.355698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:52.645: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n"
  Apr 20 15:54:52.645: INFO: stdout: "\n\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\n\n\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\n\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-fxc8v\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-fxc8v"
  Apr 20 15:54:52.645: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:54:52.645: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:54:52.645: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:54:52.645: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-fxc8v
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:54:52.646: INFO: Received response from host: affinity-clusterip-transition-fxc8v
  E0420 15:54:53.356074      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:54.356341      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:55.357451      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:56.357827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:57.358225      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:58.359434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:59.359365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:00.359505      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:01.365271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:02.363576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:03.363784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:04.364084      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:05.365348      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:06.365562      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:07.366848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:08.367032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:09.367391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:10.368656      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:11.369457      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:12.383212      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:13.374029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:14.374846      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:15.375826      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:16.376585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:17.377213      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:18.378475      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:19.378644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:20.379089      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:21.380187      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:22.380800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:22.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-9649 exec execpod-affinityfpnz6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.55.165:80/ ; done'
  Apr 20 15:55:23.162: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n"
  Apr 20 15:55:23.163: INFO: stdout: "\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-fxc8v\naffinity-clusterip-transition-fxc8v\naffinity-clusterip-transition-fxc8v\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-fxc8v\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-qnbhw\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8"
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-fxc8v
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-fxc8v
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-fxc8v
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-fxc8v
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-qnbhw
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.163: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=services-9649 exec execpod-affinityfpnz6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.55.165:80/ ; done'
  E0420 15:55:23.381167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:23.656: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.165:80/\n"
  Apr 20 15:55:23.656: INFO: stdout: "\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8\naffinity-clusterip-transition-ht7r8"
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.656: INFO: Received response from host: affinity-clusterip-transition-ht7r8
  Apr 20 15:55:23.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 20 15:55:23.671: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9649, will wait for the garbage collector to delete the pods @ 04/20/24 15:55:23.709
  Apr 20 15:55:23.783: INFO: Deleting ReplicationController affinity-clusterip-transition took: 14.960629ms
  Apr 20 15:55:23.885: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.859951ms
  E0420 15:55:24.381423      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:25.382429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:26.382953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-9649" for this suite. @ 04/20/24 15:55:27.017
â€¢ [50.985 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/20/24 15:55:27.037
  Apr 20 15:55:27.037: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:55:27.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:27.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:27.074
  STEP: set up a multi version CRD @ 04/20/24 15:55:27.079
  Apr 20 15:55:27.080: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:55:27.383868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:28.384000      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:29.384355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:30.384487      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:31.385392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 04/20/24 15:55:31.659
  STEP: check the new version name is served @ 04/20/24 15:55:31.685
  E0420 15:55:32.385823      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 04/20/24 15:55:33.122
  E0420 15:55:33.386709      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/20/24 15:55:33.953
  E0420 15:55:34.387333      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:35.387713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:36.388401      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:37.412827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:37.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6522" for this suite. @ 04/20/24 15:55:37.615
â€¢ [10.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/20/24 15:55:37.648
  Apr 20 15:55:37.648: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:55:37.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:37.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:37.704
  Apr 20 15:55:37.707: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 15:55:38.413455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:39.413560      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 15:55:39.456
  Apr 20 15:55:39.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7394 --namespace=crd-publish-openapi-7394 create -f -'
  E0420 15:55:40.414803      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:40.653: INFO: stderr: ""
  Apr 20 15:55:40.653: INFO: stdout: "e2e-test-crd-publish-openapi-1735-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 20 15:55:40.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7394 --namespace=crd-publish-openapi-7394 delete e2e-test-crd-publish-openapi-1735-crds test-cr'
  Apr 20 15:55:40.827: INFO: stderr: ""
  Apr 20 15:55:40.828: INFO: stdout: "e2e-test-crd-publish-openapi-1735-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 20 15:55:40.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7394 --namespace=crd-publish-openapi-7394 apply -f -'
  E0420 15:55:41.416179      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:41.846: INFO: stderr: ""
  Apr 20 15:55:41.847: INFO: stdout: "e2e-test-crd-publish-openapi-1735-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 20 15:55:41.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7394 --namespace=crd-publish-openapi-7394 delete e2e-test-crd-publish-openapi-1735-crds test-cr'
  Apr 20 15:55:42.021: INFO: stderr: ""
  Apr 20 15:55:42.021: INFO: stdout: "e2e-test-crd-publish-openapi-1735-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/20/24 15:55:42.021
  Apr 20 15:55:42.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=crd-publish-openapi-7394 explain e2e-test-crd-publish-openapi-1735-crds'
  E0420 15:55:42.416424      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:42.418: INFO: stderr: ""
  Apr 20 15:55:42.418: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1735-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0420 15:55:43.417391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:44.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7394" for this suite. @ 04/20/24 15:55:44.176
â€¢ [6.546 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 04/20/24 15:55:44.196
  Apr 20 15:55:44.197: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:55:44.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:44.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:44.236
  STEP: creating Agnhost RC @ 04/20/24 15:55:44.242
  Apr 20 15:55:44.242: INFO: namespace kubectl-2596
  Apr 20 15:55:44.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-2596 create -f -'
  E0420 15:55:44.417860      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:45.286: INFO: stderr: ""
  Apr 20 15:55:45.286: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 15:55:45.286
  E0420 15:55:45.417863      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:46.293: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 15:55:46.293: INFO: Found 1 / 1
  Apr 20 15:55:46.293: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 20 15:55:46.298: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 15:55:46.298: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 15:55:46.299: INFO: wait on agnhost-primary startup in kubectl-2596 
  Apr 20 15:55:46.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-2596 logs agnhost-primary-s6mkn agnhost-primary'
  E0420 15:55:46.419838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:46.504: INFO: stderr: ""
  Apr 20 15:55:46.504: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/20/24 15:55:46.505
  Apr 20 15:55:46.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-2596 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 20 15:55:46.674: INFO: stderr: ""
  Apr 20 15:55:46.674: INFO: stdout: "service/rm2 exposed\n"
  Apr 20 15:55:46.687: INFO: Service rm2 in namespace kubectl-2596 found.
  E0420 15:55:47.421475      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:48.421438      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/20/24 15:55:48.7
  Apr 20 15:55:48.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-674993228 --namespace=kubectl-2596 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Apr 20 15:55:48.889: INFO: stderr: ""
  Apr 20 15:55:48.889: INFO: stdout: "service/rm3 exposed\n"
  Apr 20 15:55:48.901: INFO: Service rm3 in namespace kubectl-2596 found.
  E0420 15:55:49.422198      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:50.422309      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:50.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2596" for this suite. @ 04/20/24 15:55:50.927
â€¢ [6.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/20/24 15:55:50.945
  Apr 20 15:55:50.945: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:55:50.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:50.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:50.987
  STEP: creating a watch on configmaps with a certain label @ 04/20/24 15:55:50.992
  STEP: creating a new configmap @ 04/20/24 15:55:50.996
  STEP: modifying the configmap once @ 04/20/24 15:55:51.004
  STEP: changing the label value of the configmap @ 04/20/24 15:55:51.017
  STEP: Expecting to observe a delete notification for the watched object @ 04/20/24 15:55:51.033
  Apr 20 15:55:51.033: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9804  f9c59388-fe7c-4a12-a7c1-cee2bf2b03b0 63577 0 2024-04-20 15:55:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:55:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:55:51.034: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9804  f9c59388-fe7c-4a12-a7c1-cee2bf2b03b0 63578 0 2024-04-20 15:55:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:55:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:55:51.034: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9804  f9c59388-fe7c-4a12-a7c1-cee2bf2b03b0 63579 0 2024-04-20 15:55:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:55:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/20/24 15:55:51.034
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/20/24 15:55:51.048
  E0420 15:55:51.422675      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:52.423490      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:53.423679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:54.424180      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:55.424429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:56.425068      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:57.425619      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:58.425949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:59.426158      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:00.427030      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/20/24 15:56:01.048
  STEP: modifying the configmap a third time @ 04/20/24 15:56:01.064
  STEP: deleting the configmap @ 04/20/24 15:56:01.078
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/20/24 15:56:01.087
  Apr 20 15:56:01.087: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9804  f9c59388-fe7c-4a12-a7c1-cee2bf2b03b0 63626 0 2024-04-20 15:55:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:56:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:56:01.087: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9804  f9c59388-fe7c-4a12-a7c1-cee2bf2b03b0 63627 0 2024-04-20 15:55:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:56:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:56:01.088: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9804  f9c59388-fe7c-4a12-a7c1-cee2bf2b03b0 63628 0 2024-04-20 15:55:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:56:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:56:01.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9804" for this suite. @ 04/20/24 15:56:01.097
â€¢ [10.167 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 04/20/24 15:56:01.112
  Apr 20 15:56:01.112: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:56:01.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:01.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:01.144
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 15:56:01.15
  E0420 15:56:01.428911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:02.428605      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:03.429256      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:04.430360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:56:05.19
  Apr 20 15:56:05.199: INFO: Trying to get logs from node aat3reeth3ee-3 pod pod-6474550c-e38e-4a3c-b962-d9688402d7ee container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:56:05.239
  Apr 20 15:56:05.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9253" for this suite. @ 04/20/24 15:56:05.279
â€¢ [4.180 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/20/24 15:56:05.297
  Apr 20 15:56:05.297: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:56:05.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:05.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:05.337
  Apr 20 15:56:05.343: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 20 15:56:05.366: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0420 15:56:05.437892      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:06.435157      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:07.435775      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:08.436740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:09.436949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:10.375: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 15:56:10.375
  Apr 20 15:56:10.376: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 20 15:56:10.393: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 20 15:56:10.411: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0420 15:56:10.437504      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:11.441779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:12.430: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 20 15:56:12.436: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  E0420 15:56:12.440056      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:12.462: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6489",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12381c7b-c682-4ec3-afef-7b1e7f62fc23",
      ResourceVersion: (string) (len=5) "63719",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849225370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 15:56:12.474: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6489",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fba4b1bc-0feb-450b-83ae-ad5d1def2108",
      ResourceVersion: (string) (len=5) "63709",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849225370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "12381c7b-c682-4ec3-afef-7b1e7f62fc23",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 32 33 38 31 63  37 62 2d 63 36 38 32 2d  |\"12381c7b-c682-|
              00000120  34 65 63 33 2d 61 66 65  66 2d 37 62 31 65 37 66  |4ec3-afef-7b1e7f|
              00000130  36 32 66 63 32 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |62fc23\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:56:12.478: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 20 15:56:12.479: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6489",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3a49dcb-3da1-42b2-a749-7acd78525359",
      ResourceVersion: (string) (len=5) "63718",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849225365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "12381c7b-c682-4ec3-afef-7b1e7f62fc23",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 32 33 38 31 63 37  |"uid\":\"12381c7|
              000000b0  62 2d 63 36 38 32 2d 34  65 63 33 2d 61 66 65 66  |b-c682-4ec3-afef|
              000000c0  2d 37 62 31 65 37 66 36  32 66 63 32 33 5c 22 7d  |-7b1e7f62fc23\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:56:12.490: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-pgk2g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-pgk2g",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-6489",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbe5e4e2-f2f9-44e8-a8a4-0db3151e48b5",
      ResourceVersion: (string) (len=5) "63708",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849225370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "fba4b1bc-0feb-450b-83ae-ad5d1def2108",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  61 34 62 31 62 63 2d 30  |d\":\"fba4b1bc-0|
              00000090  66 65 62 2d 34 35 30 62  2d 38 33 61 65 2d 61 64  |feb-450b-83ae-ad|
              000000a0  35 64 31 64 65 66 32 31  30 38 5c 22 7d 22 3a 7b  |5d1def2108\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 32 34 32 5c 22 7d  |10.233.66.242\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sdm2j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sdm2j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aat3reeth3ee-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849225370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.20",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849225370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849225371,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://e4f9831adba6e19e4a508ec30b8882f151b6a7b2f86ecd57f4a244c61ed1c16b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:56:12.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6489" for this suite. @ 04/20/24 15:56:12.503
â€¢ [7.225 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/20/24 15:56:12.523
  Apr 20 15:56:12.523: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:56:12.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:12.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:12.564
  STEP: Creating pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194 @ 04/20/24 15:56:12.57
  E0420 15:56:13.440614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:14.441846      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:56:14.613
  Apr 20 15:56:14.621: INFO: Initial restart count of pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f is 0
  Apr 20 15:56:14.626: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:15.442292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:16.442775      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:16.637: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:17.443668      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:18.443903      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:18.645: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:19.444789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:20.445020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:20.654: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:21.445383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:22.445976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:22.664: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:23.446224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:24.446765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:24.672: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:25.447849      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:26.449396      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:26.681: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:27.451421      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:28.451679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:28.693: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:29.451839      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:30.451989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:30.699: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:31.452185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:32.452444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:32.709: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:33.454052      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:34.453720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:34.719: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:35.454789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:36.454840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:36.728: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:37.454961      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:38.455162      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:38.737: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:39.456312      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:40.456731      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:40.747: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:41.456931      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:42.457592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:42.760: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:43.458022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:44.458869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:44.769: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:45.459224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:46.460205      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:46.778: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:47.460367      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:48.461417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:48.787: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:49.462077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:50.462557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:50.800: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:51.462610      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:52.463544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:52.808: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:53.464042      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:54.463751      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:54.817: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:55.464062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:56.464701      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:56.832: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:57.465573      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:58.466332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:58.839: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:56:59.467414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:00.467595      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:00.847: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:01.467620      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:02.468086      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:02.855: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:03.468277      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:04.469078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:04.864: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:05.469576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:06.469971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:06.877: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:07.470909      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:08.471491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:08.886: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:09.472179      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:10.472943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:10.903: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:11.473656      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:12.473715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:12.911: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:13.473997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:14.474580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:14.920: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:15.474847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:16.475793      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:16.932: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:17.475876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:18.476464      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:18.939: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:19.477309      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:20.477453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:20.946: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:21.477532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:22.477777      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:22.954: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:23.478364      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:24.478678      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:24.963: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:25.479742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:26.480613      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:26.972: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:27.480963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:28.481440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:28.981: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:29.482685      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:30.482933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:30.992: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:31.483169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:32.483398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:33.001: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:33.484278      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:34.484970      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:35.013: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:35.485266      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:36.486015      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:37.027: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:37.485693      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:38.486379      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:39.036: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:39.487265      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:40.488259      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:41.049: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:41.489339      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:42.490280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:43.057: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:43.491151      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:44.491438      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:45.070: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:45.492669      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:46.492987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:47.078: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:47.493250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:48.493985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:49.090: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:49.494752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:50.494966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:51.101: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:51.495558      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:52.496029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:53.114: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:53.496867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:54.497413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:55.123: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:55.497581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:56.497780      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:57.131: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:57.498731      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:58.499262      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:59.141: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:57:59.500511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:00.501619      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:01.149: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:01.502373      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:02.502747      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:03.156: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:03.503465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:04.504694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:05.167: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:05.505545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:06.512150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:07.175: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:07.507473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:08.513086      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:09.189: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:09.508429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:10.508783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:11.198: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:11.509428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:12.509269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:13.207: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:13.511288      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:14.511835      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:15.214: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:15.512968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:16.513613      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:17.223: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:17.514295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:18.539437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:19.232: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:19.524340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:20.525015      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:21.242: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:21.525750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:22.526225      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:23.251: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:23.526440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:24.526816      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:25.261: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:25.527751      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:26.528236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:27.270: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:27.528425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:28.529078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:29.281: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:29.528967      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:30.529362      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:31.289: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:31.529993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:32.534372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:33.302: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:33.532503      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:34.532824      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:35.310: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:35.533859      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:36.534301      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:37.320: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:37.535215      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:38.535417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:39.327: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:39.535959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:40.536223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:41.336: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:41.536977      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:42.537837      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:43.348: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:43.538395      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:44.538785      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:45.364: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:45.541337      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:46.541444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:47.375: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:47.541811      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:48.542256      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:49.384: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:49.542591      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:50.543534      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:51.393: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:51.544365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:52.544545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:53.400: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:53.544580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:54.544942      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:55.409: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:55.545506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:56.546046      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:57.417: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:57.546453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:58.546637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:59.425: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:58:59.547624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:00.548555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:01.445: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:01.549489      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:02.549794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:03.453: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:03.550692      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:04.550738      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:05.460: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:05.551868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:06.552277      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:07.471: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:07.552988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:08.553374      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:09.477: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:09.554207      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:10.554221      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:11.484: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:11.555582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:12.555772      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:13.492: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:13.557543      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:14.558245      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:15.499: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:15.560580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:16.559671      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:17.514: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:17.561062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:18.561629      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:19.523: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:19.562452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:20.563529      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:21.530: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:21.563875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:22.564463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:23.538: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:23.565237      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:24.566177      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:25.546: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:25.566333      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:26.567329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:27.561: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:27.567463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:28.568600      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:29.569410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:29.582: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:30.569907      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:31.570149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:31.590: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:32.570236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:33.570598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:33.614: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:34.570757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:35.571502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:35.622: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:36.571866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:37.572524      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:37.631: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:38.573276      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:39.573829      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:39.639: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:40.574869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:41.575150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:41.649: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:42.574854      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:43.574829      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:43.658: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:44.575192      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:45.575471      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:45.674: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:46.576073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:47.576551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:47.682: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:48.576670      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:49.577058      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:49.689: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:50.577803      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:51.577943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:51.697: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:52.578279      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:53.579571      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:53.710: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:54.579594      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:55.579867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:55.719: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:56.580085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:57.580329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:57.731: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 15:59:58.580588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:59.581485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:59.740: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:00.581827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:01.583322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:01.749: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:02.583522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:03.583821      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:03.757: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:04.584932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:05.585441      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:05.767: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:06.585721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:07.585900      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:07.777: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:08.586041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:09.586452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:09.785: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:10.586781      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:11.587287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:11.792: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:12.587619      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:13.589478      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:13.804: INFO: Get pod test-webserver-d39f2782-b44f-4f04-94f3-6e8874155e2f in namespace container-probe-9194
  E0420 16:00:14.589726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:15.590003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:15.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 16:00:15.82
  STEP: Destroying namespace "container-probe-9194" for this suite. @ 04/20/24 16:00:15.861
â€¢ [243.372 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 04/20/24 16:00:15.897
  Apr 20 16:00:15.899: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename secrets @ 04/20/24 16:00:15.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:15.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:15.959
  STEP: Creating projection with secret that has name secret-emptykey-test-1a34a5c2-04e9-4161-ad13-95e28135e720 @ 04/20/24 16:00:15.964
  Apr 20 16:00:15.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2123" for this suite. @ 04/20/24 16:00:15.982
â€¢ [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/20/24 16:00:15.998
  Apr 20 16:00:15.998: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename dns @ 04/20/24 16:00:16.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:16.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:16.033
  STEP: Creating a test externalName service @ 04/20/24 16:00:16.038
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2822.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local; sleep 1; done
   @ 04/20/24 16:00:16.046
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2822.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local; sleep 1; done
   @ 04/20/24 16:00:16.046
  STEP: creating a pod to probe DNS @ 04/20/24 16:00:16.046
  STEP: submitting the pod to kubernetes @ 04/20/24 16:00:16.047
  E0420 16:00:16.590545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:17.591786      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:18.591827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:19.592003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 16:00:20.101
  STEP: looking for the results for each expected name from probers @ 04/20/24 16:00:20.11
  Apr 20 16:00:20.147: INFO: DNS probes using dns-test-c6863830-d784-4575-89b7-3afbb6cbc26c succeeded

  STEP: changing the externalName to bar.example.com @ 04/20/24 16:00:20.148
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2822.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local; sleep 1; done
   @ 04/20/24 16:00:20.197
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2822.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local; sleep 1; done
   @ 04/20/24 16:00:20.197
  STEP: creating a second pod to probe DNS @ 04/20/24 16:00:20.197
  STEP: submitting the pod to kubernetes @ 04/20/24 16:00:20.197
  E0420 16:00:20.592147      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:21.593498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 16:00:22.243
  STEP: looking for the results for each expected name from probers @ 04/20/24 16:00:22.248
  Apr 20 16:00:22.261: INFO: File wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:22.268: INFO: File jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:22.268: INFO: Lookups using dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d failed for: [wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local]

  Apr 20 16:00:22.305: INFO: Pod client logs for webserver: 
  Apr 20 16:00:22.323: INFO: Pod client logs for querier: 
  Apr 20 16:00:22.335: INFO: Pod client logs for jessie-querier: 
  E0420 16:00:22.594052      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:23.594562      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:24.594940      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:25.595450      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:26.595939      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:27.343: INFO: File wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:27.352: INFO: File jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:27.352: INFO: Lookups using dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d failed for: [wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local]

  Apr 20 16:00:27.363: INFO: Pod client logs for webserver: 
  Apr 20 16:00:27.378: INFO: Pod client logs for querier: 
  Apr 20 16:00:27.391: INFO: Pod client logs for jessie-querier: 
  E0420 16:00:27.596020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:28.596255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:29.597464      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:30.597628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:31.598392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:32.344: INFO: File wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:32.353: INFO: File jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:32.353: INFO: Lookups using dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d failed for: [wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local]

  Apr 20 16:00:32.371: INFO: Pod client logs for webserver: 
  Apr 20 16:00:32.389: INFO: Pod client logs for querier: 
  Apr 20 16:00:32.405: INFO: Pod client logs for jessie-querier: 
  E0420 16:00:32.600329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:33.599493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:34.600005      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:35.599980      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:36.600350      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:37.350: INFO: File wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:37.362: INFO: File jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:37.362: INFO: Lookups using dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d failed for: [wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local]

  Apr 20 16:00:37.376: INFO: Pod client logs for webserver: 
  Apr 20 16:00:37.391: INFO: Pod client logs for querier: 
  Apr 20 16:00:37.405: INFO: Pod client logs for jessie-querier: 
  E0420 16:00:37.600909      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:38.601625      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:39.602314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:40.603422      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:41.603572      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:42.346: INFO: File wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:42.355: INFO: File jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:42.355: INFO: Lookups using dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d failed for: [wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local]

  Apr 20 16:00:42.375: INFO: Pod client logs for webserver: 
  Apr 20 16:00:42.392: INFO: Pod client logs for querier: 
  Apr 20 16:00:42.409: INFO: Pod client logs for jessie-querier: 
  E0420 16:00:42.604673      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:43.604578      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:44.604884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:45.605075      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:46.605576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:47.346: INFO: File wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:47.354: INFO: File jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local from pod  dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 16:00:47.354: INFO: Lookups using dns-2822/dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d failed for: [wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local]

  Apr 20 16:00:47.365: INFO: Pod client logs for webserver: 
  Apr 20 16:00:47.374: INFO: Pod client logs for querier: 
  Apr 20 16:00:47.387: INFO: Pod client logs for jessie-querier: 
  E0420 16:00:47.606281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:48.606647      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:49.607381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:50.607506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:51.608604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:52.353: INFO: DNS probes using dns-test-36ce0e78-2f0e-4cc2-bdd3-553b70c7354d succeeded

  STEP: changing the service to type=ClusterIP @ 04/20/24 16:00:52.353
  W0420 16:00:52.386506      15 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2822.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2822.svc.cluster.local; sleep 1; done
   @ 04/20/24 16:00:52.388
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2822.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2822.svc.cluster.local; sleep 1; done
   @ 04/20/24 16:00:52.388
  STEP: creating a third pod to probe DNS @ 04/20/24 16:00:52.388
  STEP: submitting the pod to kubernetes @ 04/20/24 16:00:52.4
  E0420 16:00:52.609632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:53.610614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:54.611302      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:55.612479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 16:00:56.475
  STEP: looking for the results for each expected name from probers @ 04/20/24 16:00:56.481
  Apr 20 16:00:56.510: INFO: DNS probes using dns-test-e161ae0d-7b05-4f87-91c7-e5faa3cfe8a7 succeeded

  Apr 20 16:00:56.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/20/24 16:00:56.524
  STEP: deleting the pod @ 04/20/24 16:00:56.558
  STEP: deleting the pod @ 04/20/24 16:00:56.589
  E0420 16:00:56.614001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test externalName service @ 04/20/24 16:00:56.625
  STEP: Destroying namespace "dns-2822" for this suite. @ 04/20/24 16:00:56.663
â€¢ [40.682 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/20/24 16:00:56.68
  Apr 20 16:00:56.680: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 16:00:56.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:56.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:56.757
  STEP: set up a multi version CRD @ 04/20/24 16:00:56.762
  Apr 20 16:00:56.765: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  E0420 16:00:57.613737      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:58.614481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:59.615439      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:00.616299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:01.616902      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/20/24 16:01:01.634
  STEP: check the unserved version gets removed @ 04/20/24 16:01:01.674
  E0420 16:01:02.630303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/20/24 16:01:03.018
  E0420 16:01:03.630440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:04.630883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:05.631585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:06.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2946" for this suite. @ 04/20/24 16:01:06.516
â€¢ [9.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/20/24 16:01:06.53
  Apr 20 16:01:06.530: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename containers @ 04/20/24 16:01:06.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:06.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:06.563
  E0420 16:01:06.631744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:07.632085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:08.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 16:01:08.632762      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "containers-154" for this suite. @ 04/20/24 16:01:08.642
â€¢ [2.137 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 04/20/24 16:01:08.671
  Apr 20 16:01:08.671: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 16:01:08.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:08.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:08.717
  STEP: Creating a pod to test service account token:  @ 04/20/24 16:01:08.723
  E0420 16:01:09.633924      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:10.635197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:11.635973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:12.636397      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:12.767
  Apr 20 16:01:12.775: INFO: Trying to get logs from node aat3reeth3ee-3 pod test-pod-484b190e-7a58-4937-b66f-1fd66fc2fb95 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 16:01:12.791
  Apr 20 16:01:12.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7232" for this suite. @ 04/20/24 16:01:12.834
â€¢ [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/20/24 16:01:12.85
  Apr 20 16:01:12.850: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 16:01:12.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:12.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:12.884
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/20/24 16:01:12.905
  E0420 16:01:13.636711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:14.637835      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:15.638019      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:16.638548      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:17.638488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:18.638700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:19.638943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:20.639597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:21.639909      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:22.640242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:23.641202      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:24.641188      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:25.641514      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:26.641791      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:27.642246      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/20/24 16:01:28.058
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/20/24 16:01:28.066
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/20/24 16:01:28.081
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 04/20/24 16:01:28.081
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/20/24 16:01:28.131
  E0420 16:01:28.643071      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:29.643993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/20/24 16:01:30.163
  E0420 16:01:30.644972      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/20/24 16:01:31.178
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/20/24 16:01:31.194
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 04/20/24 16:01:31.194
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/20/24 16:01:31.241
  E0420 16:01:31.646454      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/20/24 16:01:32.26
  E0420 16:01:32.646719      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/20/24 16:01:33.279
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/20/24 16:01:33.295
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 04/20/24 16:01:33.296
  Apr 20 16:01:33.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8905" for this suite. @ 04/20/24 16:01:33.353
â€¢ [20.519 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 04/20/24 16:01:33.373
  Apr 20 16:01:33.373: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename job @ 04/20/24 16:01:33.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:33.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:33.412
  STEP: Creating a job @ 04/20/24 16:01:33.417
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/20/24 16:01:33.428
  E0420 16:01:33.647623      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:34.648319      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/20/24 16:01:35.439
  STEP: updating /status @ 04/20/24 16:01:35.456
  STEP: get /status @ 04/20/24 16:01:35.473
  Apr 20 16:01:35.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6283" for this suite. @ 04/20/24 16:01:35.493
â€¢ [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 04/20/24 16:01:35.513
  Apr 20 16:01:35.514: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 16:01:35.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:35.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:35.547
  Apr 20 16:01:35.569: INFO: Endpoints addresses: [192.168.121.170 192.168.121.198] , ports: [6443]
  Apr 20 16:01:35.569: INFO: EndpointSlices addresses: [192.168.121.170 192.168.121.198] , ports: [6443]
  Apr 20 16:01:35.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3471" for this suite. @ 04/20/24 16:01:35.578
â€¢ [0.075 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 04/20/24 16:01:35.59
  Apr 20 16:01:35.590: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 16:01:35.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:35.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:35.634
  E0420 16:01:35.648798      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating configMap with name configmap-test-upd-497c1e9c-24cc-4308-a039-50924de42f30 @ 04/20/24 16:01:35.649
  STEP: Creating the pod @ 04/20/24 16:01:35.658
  E0420 16:01:36.649266      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:37.649972      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/20/24 16:01:37.695
  STEP: Waiting for pod with binary data @ 04/20/24 16:01:37.71
  Apr 20 16:01:37.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5776" for this suite. @ 04/20/24 16:01:37.73
â€¢ [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 04/20/24 16:01:37.746
  Apr 20 16:01:37.747: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename configmap @ 04/20/24 16:01:37.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:37.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:37.791
  STEP: Creating configMap that has name configmap-test-emptyKey-3fd2ff8f-365b-4961-ac34-29fb990ed8fc @ 04/20/24 16:01:37.801
  Apr 20 16:01:37.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3128" for this suite. @ 04/20/24 16:01:37.816
â€¢ [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/20/24 16:01:37.878
  Apr 20 16:01:37.878: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename containers @ 04/20/24 16:01:37.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:37.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:37.91
  STEP: Creating a pod to test override command @ 04/20/24 16:01:37.915
  E0420 16:01:38.651501      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:39.651617      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:40.652217      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:41.652812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:41.956
  Apr 20 16:01:41.962: INFO: Trying to get logs from node aat3reeth3ee-3 pod client-containers-fba44d81-b7cc-4f09-920e-23ca7d8b1b7a container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 16:01:41.973
  Apr 20 16:01:41.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-336" for this suite. @ 04/20/24 16:01:42.002
â€¢ [4.136 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/20/24 16:01:42.014
  Apr 20 16:01:42.014: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 16:01:42.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:42.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:42.052
  STEP: Creating a ReplaceConcurrent cronjob @ 04/20/24 16:01:42.057
  STEP: Ensuring a job is scheduled @ 04/20/24 16:01:42.067
  E0420 16:01:42.652889      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:43.653423      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:44.654743      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:45.654963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:46.655294      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:47.655624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:48.656285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:49.656925      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:50.657225      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:51.657749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:52.659915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:53.659522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:54.660300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:55.660946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:56.661467      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:57.661670      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:58.662460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:59.662718      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:00.663572      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:01.664239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/20/24 16:02:02.075
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 16:02:02.087
  STEP: Ensuring the job is replaced with a new one @ 04/20/24 16:02:02.1
  E0420 16:02:02.664840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:03.665602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:04.666434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:05.666519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:06.667465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:07.667982      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:08.668730      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:09.668903      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:10.669746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:11.670224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:12.670890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:13.671037      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:14.671400      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:15.671654      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:16.671911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:17.672827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:18.673309      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:19.673390      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:20.674464      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:21.675236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:22.675367      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:23.675941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:24.676965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:25.677516      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:26.677874      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:27.678338      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:28.678486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:29.679568      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:30.679880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:31.680648      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:32.680749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:33.681042      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:34.681874      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:35.682474      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:36.683243      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:37.683810      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:38.684756      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:39.685571      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:40.686791      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:41.687396      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:42.687677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:43.688085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:44.688981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:45.689838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:46.690677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:47.691003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:48.691339      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:49.692073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:50.692326      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:51.692445      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:52.692947      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:53.693512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:54.693944      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:55.694397      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:56.694746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:57.695007      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:58.695462      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:59.696356      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:00.700415      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:01.697149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/20/24 16:03:02.111
  Apr 20 16:03:02.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2685" for this suite. @ 04/20/24 16:03:02.159
â€¢ [80.170 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 04/20/24 16:03:02.188
  Apr 20 16:03:02.188: INFO: >>> kubeConfig: /tmp/kubeconfig-674993228
  STEP: Building a namespace api object, basename lease-test @ 04/20/24 16:03:02.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:03:02.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:03:02.274
  Apr 20 16:03:02.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-952" for this suite. @ 04/20/24 16:03:02.388
â€¢ [0.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Apr 20 16:03:02.422: INFO: Running AfterSuite actions on node 1
  Apr 20 16:03:02.422: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.156 seconds]
------------------------------

Ran 380 of 7389 Specs in 6642.257 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h50m43.473382841s
Test Suite Passed
