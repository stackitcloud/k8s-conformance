  I1219 10:01:58.196284      13 e2e.go:117] Starting e2e run "123e97da-6351-46b9-87b5-5e24e238f561" on Ginkgo node 1
  Dec 19 10:01:58.258: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1702980117 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Dec 19 10:01:58.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:01:58.676: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Dec 19 10:01:58.749: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Dec 19 10:01:58.760: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Dec 19 10:01:58.760: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Dec 19 10:01:58.760: INFO: e2e test version: v1.28.4
  Dec 19 10:01:58.762: INFO: kube-apiserver version: v1.28.4
  Dec 19 10:01:58.762: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:01:58.773: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 12/19/23 10:01:59.305
  Dec 19 10:01:59.305: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:01:59.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:01:59.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:01:59.35
  STEP: create deployment with httpd image @ 12/19/23 10:01:59.362
  Dec 19 10:01:59.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-3860 create -f -'
  Dec 19 10:02:00.012: INFO: stderr: ""
  Dec 19 10:02:00.013: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/19/23 10:02:00.013
  Dec 19 10:02:00.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-3860 diff -f -'
  Dec 19 10:02:01.652: INFO: rc: 1
  Dec 19 10:02:01.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-3860 delete -f -'
  Dec 19 10:02:01.807: INFO: stderr: ""
  Dec 19 10:02:01.807: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Dec 19 10:02:01.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3860" for this suite. @ 12/19/23 10:02:01.816
• [2.525 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 12/19/23 10:02:01.829
  Dec 19 10:02:01.829: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 10:02:01.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:02:01.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:02:01.868
  STEP: Performing setup for networking test in namespace pod-network-test-5585 @ 12/19/23 10:02:01.875
  STEP: creating a selector @ 12/19/23 10:02:01.875
  STEP: Creating the service pods in kubernetes @ 12/19/23 10:02:01.875
  Dec 19 10:02:01.875: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 10:03:42.595
  Dec 19 10:03:44.656: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 10:03:44.656: INFO: Breadth first check of 10.233.64.2 on host 192.168.121.113...
  Dec 19 10:03:44.663: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.10:9080/dial?request=hostname&protocol=udp&host=10.233.64.2&port=8081&tries=1'] Namespace:pod-network-test-5585 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:03:44.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:03:44.666: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:03:44.667: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5585/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.10%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.2%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 10:03:44.817: INFO: Waiting for responses: map[]
  Dec 19 10:03:44.817: INFO: reached 10.233.64.2 after 0/1 tries
  Dec 19 10:03:44.817: INFO: Breadth first check of 10.233.65.2 on host 192.168.121.72...
  Dec 19 10:03:44.827: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.10:9080/dial?request=hostname&protocol=udp&host=10.233.65.2&port=8081&tries=1'] Namespace:pod-network-test-5585 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:03:44.828: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:03:44.830: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:03:44.830: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5585/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.10%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.2%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 10:03:44.991: INFO: Waiting for responses: map[]
  Dec 19 10:03:44.991: INFO: reached 10.233.65.2 after 0/1 tries
  Dec 19 10:03:44.991: INFO: Breadth first check of 10.233.66.9 on host 192.168.121.250...
  Dec 19 10:03:45.000: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.10:9080/dial?request=hostname&protocol=udp&host=10.233.66.9&port=8081&tries=1'] Namespace:pod-network-test-5585 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:03:45.000: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:03:45.001: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:03:45.002: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5585/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.10%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.9%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 10:03:45.139: INFO: Waiting for responses: map[]
  Dec 19 10:03:45.139: INFO: reached 10.233.66.9 after 0/1 tries
  Dec 19 10:03:45.139: INFO: Going to retry 0 out of 3 pods....
  Dec 19 10:03:45.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5585" for this suite. @ 12/19/23 10:03:45.153
• [103.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 12/19/23 10:03:45.182
  Dec 19 10:03:45.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:03:45.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:03:45.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:03:45.23
  STEP: Counting existing ResourceQuota @ 12/19/23 10:04:02.244
  STEP: Creating a ResourceQuota @ 12/19/23 10:04:07.254
  STEP: Ensuring resource quota status is calculated @ 12/19/23 10:04:07.266
  STEP: Creating a ConfigMap @ 12/19/23 10:04:09.277
  STEP: Ensuring resource quota status captures configMap creation @ 12/19/23 10:04:09.306
  STEP: Deleting a ConfigMap @ 12/19/23 10:04:11.317
  STEP: Ensuring resource quota status released usage @ 12/19/23 10:04:11.332
  Dec 19 10:04:13.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9509" for this suite. @ 12/19/23 10:04:13.37
• [28.208 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 12/19/23 10:04:13.392
  Dec 19 10:04:13.392: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename gc @ 12/19/23 10:04:13.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:13.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:13.448
  STEP: create the rc @ 12/19/23 10:04:13.454
  W1219 10:04:13.467822      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/19/23 10:04:18.479
  STEP: wait for all pods to be garbage collected @ 12/19/23 10:04:18.498
  STEP: Gathering metrics @ 12/19/23 10:04:23.51
  Dec 19 10:04:23.714: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 10:04:23.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9189" for this suite. @ 12/19/23 10:04:23.724
• [10.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/19/23 10:04:23.751
  Dec 19 10:04:23.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename prestop @ 12/19/23 10:04:23.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:23.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:23.784
  STEP: Creating server pod server in namespace prestop-6932 @ 12/19/23 10:04:23.791
  STEP: Waiting for pods to come up. @ 12/19/23 10:04:23.805
  STEP: Creating tester pod tester in namespace prestop-6932 @ 12/19/23 10:04:25.825
  STEP: Deleting pre-stop pod @ 12/19/23 10:04:29.864
  Dec 19 10:04:34.893: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Dec 19 10:04:34.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 12/19/23 10:04:34.905
  STEP: Destroying namespace "prestop-6932" for this suite. @ 12/19/23 10:04:34.944
• [11.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 12/19/23 10:04:34.999
  Dec 19 10:04:34.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:04:35.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:35.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:35.055
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 10:04:35.062
  Dec 19 10:04:35.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-5069 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 19 10:04:35.288: INFO: stderr: ""
  Dec 19 10:04:35.288: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/19/23 10:04:35.288
  Dec 19 10:04:35.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-5069 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Dec 19 10:04:35.516: INFO: stderr: ""
  Dec 19 10:04:35.516: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 10:04:35.516
  Dec 19 10:04:35.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-5069 delete pods e2e-test-httpd-pod'
  Dec 19 10:04:37.769: INFO: stderr: ""
  Dec 19 10:04:37.769: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 19 10:04:37.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5069" for this suite. @ 12/19/23 10:04:37.783
• [2.805 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 12/19/23 10:04:37.808
  Dec 19 10:04:37.808: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 10:04:37.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:37.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:37.846
  STEP: Updating Namespace "namespaces-5398" @ 12/19/23 10:04:37.855
  Dec 19 10:04:37.870: INFO: Namespace "namespaces-5398" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"123e97da-6351-46b9-87b5-5e24e238f561", "kubernetes.io/metadata.name":"namespaces-5398", "namespaces-5398":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Dec 19 10:04:37.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5398" for this suite. @ 12/19/23 10:04:37.879
• [0.084 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 12/19/23 10:04:37.894
  Dec 19 10:04:37.895: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:04:37.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:37.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:37.935
  STEP: Creating a pod to test downward api env vars @ 12/19/23 10:04:37.941
  STEP: Saw pod success @ 12/19/23 10:04:39.976
  Dec 19 10:04:39.989: INFO: Trying to get logs from node ja4hooch7za7-3 pod downward-api-93eb03e8-c048-469a-b0a0-b8b76bf830ef container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 10:04:40.04
  Dec 19 10:04:40.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9911" for this suite. @ 12/19/23 10:04:40.083
• [2.206 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/19/23 10:04:40.1
  Dec 19 10:04:40.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename watch @ 12/19/23 10:04:40.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:40.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:40.139
  STEP: creating a watch on configmaps with label A @ 12/19/23 10:04:40.146
  STEP: creating a watch on configmaps with label B @ 12/19/23 10:04:40.157
  STEP: creating a watch on configmaps with label A or B @ 12/19/23 10:04:40.168
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/19/23 10:04:40.173
  Dec 19 10:04:40.203: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4408 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:04:40.290: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4408 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/19/23 10:04:40.291
  Dec 19 10:04:40.314: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4415 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:04:40.315: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4415 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/19/23 10:04:40.315
  Dec 19 10:04:40.333: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4416 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:04:40.333: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4416 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/19/23 10:04:40.333
  Dec 19 10:04:40.377: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4418 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:04:40.378: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3819  91c178ba-dbea-4dfa-90bc-fa8cc03290f9 4418 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/19/23 10:04:40.379
  Dec 19 10:04:40.403: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3819  232f1128-dc58-403c-b90c-9344ce5887d3 4421 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:04:40.404: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3819  232f1128-dc58-403c-b90c-9344ce5887d3 4421 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/19/23 10:04:50.405
  Dec 19 10:04:50.425: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3819  232f1128-dc58-403c-b90c-9344ce5887d3 4462 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:04:50.425: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3819  232f1128-dc58-403c-b90c-9344ce5887d3 4462 0 2023-12-19 10:04:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 10:04:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:05:00.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3819" for this suite. @ 12/19/23 10:05:00.441
• [20.358 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 12/19/23 10:05:00.462
  Dec 19 10:05:00.463: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 10:05:00.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:00.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:00.509
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/19/23 10:05:00.514
  Dec 19 10:05:00.530: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4164  3894af97-b585-423b-bbe7-3ee6fd899745 4485 0 2023-12-19 10:05:00 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-12-19 10:05:00 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vwp54,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vwp54,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/19/23 10:05:02.556
  Dec 19 10:05:02.556: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4164 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:05:02.557: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:05:02.559: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:05:02.559: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-4164/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/19/23 10:05:02.719
  Dec 19 10:05:02.720: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4164 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:05:02.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:05:02.722: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:05:02.723: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-4164/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:05:02.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 10:05:02.926: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-4164" for this suite. @ 12/19/23 10:05:02.954
• [2.513 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 12/19/23 10:05:02.98
  Dec 19 10:05:02.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 10:05:02.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:03.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:03.019
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/19/23 10:05:03.024
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/19/23 10:05:03.025
  STEP: creating a pod to probe DNS @ 12/19/23 10:05:03.025
  STEP: submitting the pod to kubernetes @ 12/19/23 10:05:03.026
  STEP: retrieving the pod @ 12/19/23 10:05:27.205
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:05:27.211
  Dec 19 10:05:27.252: INFO: DNS probes using dns-1417/dns-test-64ddea32-bf26-4740-9d86-1ce8f20edb31 succeeded

  Dec 19 10:05:27.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 10:05:27.273
  STEP: Destroying namespace "dns-1417" for this suite. @ 12/19/23 10:05:27.305
• [24.345 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 12/19/23 10:05:27.332
  Dec 19 10:05:27.333: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:05:27.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:27.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:27.377
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/19/23 10:05:27.386
  STEP: Saw pod success @ 12/19/23 10:05:31.437
  Dec 19 10:05:31.505: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-1e7475d5-f40d-4618-8712-5633d9d0f24a container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:05:31.523
  Dec 19 10:05:31.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9857" for this suite. @ 12/19/23 10:05:31.555
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 12/19/23 10:05:31.573
  Dec 19 10:05:31.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:05:31.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:31.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:31.647
  STEP: Creating pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736 @ 12/19/23 10:05:31.655
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:05:33.695
  Dec 19 10:05:33.708: INFO: Initial restart count of pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 is 0
  Dec 19 10:05:33.724: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:35.735: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:37.743: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:39.754: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:41.763: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:43.772: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:45.781: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:47.795: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:49.806: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:51.818: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:53.827: INFO: Get pod liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 in namespace container-probe-3736
  Dec 19 10:05:53.827: INFO: Restart count of pod container-probe-3736/liveness-7a9fe951-f9e4-4cd9-b371-6f2eb4a7ad53 is now 1 (20.118833532s elapsed)
  Dec 19 10:05:53.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 10:05:53.842
  STEP: Destroying namespace "container-probe-3736" for this suite. @ 12/19/23 10:05:53.867
• [22.308 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/19/23 10:05:53.886
  Dec 19 10:05:53.886: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 10:05:53.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:53.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:53.935
  STEP: Creating a ForbidConcurrent cronjob @ 12/19/23 10:05:53.942
  STEP: Ensuring a job is scheduled @ 12/19/23 10:05:53.957
  STEP: Ensuring exactly one is scheduled @ 12/19/23 10:06:01.974
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/19/23 10:06:01.991
  STEP: Ensuring no more jobs are scheduled @ 12/19/23 10:06:01.999
  STEP: Removing cronjob @ 12/19/23 10:11:02.022
  Dec 19 10:11:02.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2471" for this suite. @ 12/19/23 10:11:02.055
• [308.201 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 12/19/23 10:11:02.094
  Dec 19 10:11:02.095: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:11:02.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:02.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:02.169
  STEP: Setting up server cert @ 12/19/23 10:11:02.219
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:11:03.094
  STEP: Deploying the webhook pod @ 12/19/23 10:11:03.114
  STEP: Wait for the deployment to be ready @ 12/19/23 10:11:03.162
  Dec 19 10:11:03.204: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:11:05.234
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:11:05.266
  Dec 19 10:11:06.268: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/19/23 10:11:06.282
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/19/23 10:11:06.285
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/19/23 10:11:06.285
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/19/23 10:11:06.285
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/19/23 10:11:06.287
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/19/23 10:11:06.287
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/19/23 10:11:06.289
  Dec 19 10:11:06.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7670" for this suite. @ 12/19/23 10:11:06.442
  STEP: Destroying namespace "webhook-markers-5223" for this suite. @ 12/19/23 10:11:06.464
• [4.387 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 12/19/23 10:11:06.481
  Dec 19 10:11:06.481: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename controllerrevisions @ 12/19/23 10:11:06.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:06.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:06.525
  STEP: Creating DaemonSet "e2e-h2k4k-daemon-set" @ 12/19/23 10:11:06.571
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 10:11:06.583
  Dec 19 10:11:06.605: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 0
  Dec 19 10:11:06.606: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:07.628: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 0
  Dec 19 10:11:07.629: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:08.628: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:08.628: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:09.628: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:09.628: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:10.623: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:10.623: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:11.696: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:11.697: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:12.626: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:12.626: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:13.629: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:13.629: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:14.625: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:14.625: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:15.665: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:15.666: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:16.625: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:16.625: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:17.630: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:17.630: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:18.631: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:18.632: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:19.636: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:19.636: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:20.628: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:20.628: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:21.627: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:21.627: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:22.638: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:22.638: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:23.643: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:23.644: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:24.623: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:24.624: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:25.635: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:25.636: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:26.630: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:26.631: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:27.671: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:27.671: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:28.626: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 1
  Dec 19 10:11:28.626: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:29.631: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 2
  Dec 19 10:11:29.631: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:30.627: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 2
  Dec 19 10:11:30.627: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:31.699: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 2
  Dec 19 10:11:31.701: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:32.633: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 2
  Dec 19 10:11:32.633: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:33.627: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 2
  Dec 19 10:11:33.627: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:34.627: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 2
  Dec 19 10:11:34.627: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:11:35.646: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 3
  Dec 19 10:11:35.646: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-h2k4k-daemon-set
  STEP: Confirm DaemonSet "e2e-h2k4k-daemon-set" successfully created with "daemonset-name=e2e-h2k4k-daemon-set" label @ 12/19/23 10:11:35.662
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-h2k4k-daemon-set" @ 12/19/23 10:11:35.688
  Dec 19 10:11:35.696: INFO: Located ControllerRevision: "e2e-h2k4k-daemon-set-595f4ffc77"
  STEP: Patching ControllerRevision "e2e-h2k4k-daemon-set-595f4ffc77" @ 12/19/23 10:11:35.707
  Dec 19 10:11:35.729: INFO: e2e-h2k4k-daemon-set-595f4ffc77 has been patched
  STEP: Create a new ControllerRevision @ 12/19/23 10:11:35.729
  Dec 19 10:11:35.743: INFO: Created ControllerRevision: e2e-h2k4k-daemon-set-6d7fbfc6f7
  STEP: Confirm that there are two ControllerRevisions @ 12/19/23 10:11:35.744
  Dec 19 10:11:35.744: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:11:35.755: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-h2k4k-daemon-set-595f4ffc77" @ 12/19/23 10:11:35.755
  STEP: Confirm that there is only one ControllerRevision @ 12/19/23 10:11:35.771
  Dec 19 10:11:35.771: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:11:35.781: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-h2k4k-daemon-set-6d7fbfc6f7" @ 12/19/23 10:11:35.789
  Dec 19 10:11:35.816: INFO: e2e-h2k4k-daemon-set-6d7fbfc6f7 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/19/23 10:11:35.816
  W1219 10:11:35.836620      13 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/19/23 10:11:35.837
  Dec 19 10:11:35.837: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:11:36.848: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:11:36.857: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-h2k4k-daemon-set-6d7fbfc6f7=updated" @ 12/19/23 10:11:36.858
  STEP: Confirm that there is only one ControllerRevision @ 12/19/23 10:11:36.875
  Dec 19 10:11:36.875: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:11:36.884: INFO: Found 1 ControllerRevisions
  Dec 19 10:11:36.889: INFO: ControllerRevision "e2e-h2k4k-daemon-set-6458c67784" has revision 3
  STEP: Deleting DaemonSet "e2e-h2k4k-daemon-set" @ 12/19/23 10:11:36.897
  STEP: deleting DaemonSet.extensions e2e-h2k4k-daemon-set in namespace controllerrevisions-3472, will wait for the garbage collector to delete the pods @ 12/19/23 10:11:36.897
  Dec 19 10:11:36.973: INFO: Deleting DaemonSet.extensions e2e-h2k4k-daemon-set took: 16.071267ms
  Dec 19 10:11:37.075: INFO: Terminating DaemonSet.extensions e2e-h2k4k-daemon-set pods took: 101.580114ms
  Dec 19 10:11:38.286: INFO: Number of nodes with available pods controlled by daemonset e2e-h2k4k-daemon-set: 0
  Dec 19 10:11:38.286: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-h2k4k-daemon-set
  Dec 19 10:11:38.302: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5450"},"items":null}

  Dec 19 10:11:38.311: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5450"},"items":null}

  Dec 19 10:11:38.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3472" for this suite. @ 12/19/23 10:11:38.357
• [31.892 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 12/19/23 10:11:38.374
  Dec 19 10:11:38.374: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:11:38.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:38.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:38.414
  STEP: creating secret secrets-1499/secret-test-37fc69ea-3966-4c1d-ae28-bd007f6b9744 @ 12/19/23 10:11:38.42
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:11:38.429
  STEP: Saw pod success @ 12/19/23 10:11:42.484
  Dec 19 10:11:42.491: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-de7403b1-5477-496e-8f77-415ed249c5e3 container env-test: <nil>
  STEP: delete the pod @ 12/19/23 10:11:42.541
  Dec 19 10:11:42.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1499" for this suite. @ 12/19/23 10:11:42.586
• [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 12/19/23 10:11:42.609
  Dec 19 10:11:42.609: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:11:42.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:42.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:42.647
  STEP: Create a Replicaset @ 12/19/23 10:11:42.661
  STEP: Verify that the required pods have come up. @ 12/19/23 10:11:42.672
  Dec 19 10:11:42.679: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 19 10:11:47.732: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:11:47.733
  STEP: Getting /status @ 12/19/23 10:11:47.733
  Dec 19 10:11:47.763: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/19/23 10:11:47.763
  Dec 19 10:11:47.803: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/19/23 10:11:47.804
  Dec 19 10:11:47.817: INFO: Observed &ReplicaSet event: ADDED
  Dec 19 10:11:47.820: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:11:47.821: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:11:47.821: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:11:47.822: INFO: Found replicaset test-rs in namespace replicaset-3388 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 10:11:47.822: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/19/23 10:11:47.822
  Dec 19 10:11:47.822: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 19 10:11:47.843: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/19/23 10:11:47.845
  Dec 19 10:11:47.851: INFO: Observed &ReplicaSet event: ADDED
  Dec 19 10:11:47.852: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:11:47.852: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:11:47.852: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:11:47.852: INFO: Observed replicaset test-rs in namespace replicaset-3388 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:11:47.853: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:11:47.853: INFO: Found replicaset test-rs in namespace replicaset-3388 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Dec 19 10:11:47.853: INFO: Replicaset test-rs has a patched status
  Dec 19 10:11:47.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3388" for this suite. @ 12/19/23 10:11:47.865
• [5.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/19/23 10:11:47.899
  Dec 19 10:11:47.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename proxy @ 12/19/23 10:11:47.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:47.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:47.955
  Dec 19 10:11:47.962: INFO: Creating pod...
  Dec 19 10:11:50.008: INFO: Creating service...
  Dec 19 10:11:50.047: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/pods/agnhost/proxy?method=DELETE
  Dec 19 10:11:50.080: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 10:11:50.080: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/pods/agnhost/proxy?method=OPTIONS
  Dec 19 10:11:50.103: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 10:11:50.103: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/pods/agnhost/proxy?method=PATCH
  Dec 19 10:11:50.111: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 10:11:50.112: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/pods/agnhost/proxy?method=POST
  Dec 19 10:11:50.121: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 10:11:50.121: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/pods/agnhost/proxy?method=PUT
  Dec 19 10:11:50.132: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 10:11:50.132: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/services/e2e-proxy-test-service/proxy?method=DELETE
  Dec 19 10:11:50.141: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 10:11:50.141: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Dec 19 10:11:50.151: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 10:11:50.151: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/services/e2e-proxy-test-service/proxy?method=PATCH
  Dec 19 10:11:50.165: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 10:11:50.165: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/services/e2e-proxy-test-service/proxy?method=POST
  Dec 19 10:11:50.174: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 10:11:50.175: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/services/e2e-proxy-test-service/proxy?method=PUT
  Dec 19 10:11:50.186: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 10:11:50.186: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/pods/agnhost/proxy?method=GET
  Dec 19 10:11:50.193: INFO: http.Client request:GET StatusCode:301
  Dec 19 10:11:50.194: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/services/e2e-proxy-test-service/proxy?method=GET
  Dec 19 10:11:50.203: INFO: http.Client request:GET StatusCode:301
  Dec 19 10:11:50.203: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/pods/agnhost/proxy?method=HEAD
  Dec 19 10:11:50.210: INFO: http.Client request:HEAD StatusCode:301
  Dec 19 10:11:50.211: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-464/services/e2e-proxy-test-service/proxy?method=HEAD
  Dec 19 10:11:50.220: INFO: http.Client request:HEAD StatusCode:301
  Dec 19 10:11:50.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-464" for this suite. @ 12/19/23 10:11:50.232
• [2.350 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 12/19/23 10:11:50.25
  Dec 19 10:11:50.250: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:11:50.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:50.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:50.286
  STEP: fetching services @ 12/19/23 10:11:50.292
  Dec 19 10:11:50.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8056" for this suite. @ 12/19/23 10:11:50.306
• [0.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/19/23 10:11:50.326
  Dec 19 10:11:50.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/19/23 10:11:50.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:50.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:50.367
  STEP: Setting up the test @ 12/19/23 10:11:50.373
  STEP: Creating hostNetwork=false pod @ 12/19/23 10:11:50.373
  STEP: Creating hostNetwork=true pod @ 12/19/23 10:11:52.433
  STEP: Running the test @ 12/19/23 10:11:54.49
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/19/23 10:11:54.49
  Dec 19 10:11:54.491: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:54.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:54.495: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:54.495: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 10:11:54.653: INFO: Exec stderr: ""
  Dec 19 10:11:54.653: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:54.653: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:54.655: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:54.655: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 10:11:54.763: INFO: Exec stderr: ""
  Dec 19 10:11:54.763: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:54.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:54.765: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:54.766: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 10:11:54.913: INFO: Exec stderr: ""
  Dec 19 10:11:54.913: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:54.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:54.915: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:54.916: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 10:11:55.014: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/19/23 10:11:55.014
  Dec 19 10:11:55.014: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:55.014: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:55.017: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:55.017: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 19 10:11:55.118: INFO: Exec stderr: ""
  Dec 19 10:11:55.119: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:55.119: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:55.123: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:55.123: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 19 10:11:55.235: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/19/23 10:11:55.235
  Dec 19 10:11:55.235: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:55.236: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:55.239: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:55.239: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 10:11:55.603: INFO: Exec stderr: ""
  Dec 19 10:11:55.604: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:55.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:55.607: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:55.607: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 10:11:55.924: INFO: Exec stderr: ""
  Dec 19 10:11:55.924: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:55.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:55.933: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:55.933: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 10:11:56.242: INFO: Exec stderr: ""
  Dec 19 10:11:56.242: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4155 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:56.242: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:11:56.246: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:56.246: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4155/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 10:11:56.530: INFO: Exec stderr: ""
  Dec 19 10:11:56.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4155" for this suite. @ 12/19/23 10:11:56.556
• [6.268 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 12/19/23 10:11:56.601
  Dec 19 10:11:56.601: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:11:56.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:56.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:56.643
  STEP: Creating a pod to test downward api env vars @ 12/19/23 10:11:56.652
  STEP: Saw pod success @ 12/19/23 10:12:02.73
  Dec 19 10:12:02.741: INFO: Trying to get logs from node ja4hooch7za7-2 pod downward-api-52799302-f603-44b6-8c37-ea864b63238a container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 10:12:02.785
  Dec 19 10:12:02.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-134" for this suite. @ 12/19/23 10:12:02.835
• [6.252 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 12/19/23 10:12:02.854
  Dec 19 10:12:02.854: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:12:02.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:02.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:02.909
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:12:02.917
  STEP: Saw pod success @ 12/19/23 10:12:06.968
  Dec 19 10:12:06.974: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-2a70712a-fa2d-4121-9121-d850a403d94c container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:12:06.989
  Dec 19 10:12:07.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6777" for this suite. @ 12/19/23 10:12:07.024
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 12/19/23 10:12:07.04
  Dec 19 10:12:07.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 10:12:07.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:07.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:07.079
  Dec 19 10:12:09.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2424" for this suite. @ 12/19/23 10:12:09.163
• [2.137 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 12/19/23 10:12:09.18
  Dec 19 10:12:09.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:12:09.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:09.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:09.221
  STEP: Creating configMap with name configmap-test-upd-c03f6a6f-1399-42cc-abd3-0de225edd740 @ 12/19/23 10:12:09.238
  STEP: Creating the pod @ 12/19/23 10:12:09.249
  STEP: Waiting for pod with text data @ 12/19/23 10:12:11.301
  STEP: Waiting for pod with binary data @ 12/19/23 10:12:11.322
  Dec 19 10:12:11.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7982" for this suite. @ 12/19/23 10:12:11.353
• [2.192 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/19/23 10:12:11.375
  Dec 19 10:12:11.376: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 10:12:11.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:11.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:11.443
  Dec 19 10:12:11.450: INFO: Creating simple deployment test-new-deployment
  Dec 19 10:12:11.549: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 12, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 12, 11, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"test-new-deployment-557759b7c7\""}}, CollisionCount:(*int32)(nil)}
  STEP: getting scale subresource @ 12/19/23 10:12:13.567
  STEP: updating a scale subresource @ 12/19/23 10:12:13.574
  STEP: verifying the deployment Spec.Replicas was modified @ 12/19/23 10:12:13.586
  STEP: Patch a scale subresource @ 12/19/23 10:12:13.594
  Dec 19 10:12:13.841: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00f10d9e-935f-43e6-b741-d356aa8debf4",
      ResourceVersion: (string) (len=4) "5807",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 10:12:13.891: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b276ddd-c7da-4c12-b5d0-0d3f068df2f2",
      ResourceVersion: (string) (len=4) "5811",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "00f10d9e-935f-43e6-b741-d356aa8debf4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 30 66 31 30 64  39 65 2d 39 33 35 66 2d  |\"00f10d9e-935f-|
              00000120  34 33 65 36 2d 62 37 34  31 2d 64 33 35 36 61 61  |43e6-b741-d356aa|
              00000130  38 64 65 62 66 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8debf4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:12:13.917: INFO: Pod "test-new-deployment-557759b7c7-52jzm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-52jzm",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b338824-911a-420d-a6fd-7a1aa58a797b",
      ResourceVersion: (string) (len=4) "5795",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9b276ddd-c7da-4c12-b5d0-0d3f068df2f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  32 37 36 64 64 64 2d 63  |d\":\"9b276ddd-c|
              00000090  37 64 61 2d 34 63 31 32  2d 62 35 64 30 2d 30 64  |7da-4c12-b5d0-0d|
              000000a0  33 66 30 36 38 64 66 32  66 32 5c 22 7d 22 3a 7b  |3f068df2f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 34 5c 22 7d 22 3a  |10.233.64.4\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hv7wl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hv7wl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.233.64.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.64.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://0c4f38ece2b5a803afae33c5be1dabb7971f65887751179af41291c94a343830",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:12:13.945: INFO: Pod "test-new-deployment-557759b7c7-czgdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-czgdn",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9db07f17-bbe5-4bae-adbe-08a9a36dda3f",
      ResourceVersion: (string) (len=4) "5815",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9b276ddd-c7da-4c12-b5d0-0d3f068df2f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  32 37 36 64 64 64 2d 63  |d\":\"9b276ddd-c|
              00000090  37 64 61 2d 34 63 31 32  2d 62 35 64 30 2d 30 64  |7da-4c12-b5d0-0d|
              000000a0  33 66 30 36 38 64 66 32  66 32 5c 22 7d 22 3a 7b  |3f068df2f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4shhj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4shhj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:12:13.949: INFO: Pod "test-new-deployment-557759b7c7-tkfb7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-tkfb7",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aeb3802f-7a61-49c0-a448-fe1dbc336ed9",
      ResourceVersion: (string) (len=4) "5808",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9b276ddd-c7da-4c12-b5d0-0d3f068df2f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  32 37 36 64 64 64 2d 63  |d\":\"9b276ddd-c|
              00000090  37 64 61 2d 34 63 31 32  2d 62 35 64 30 2d 30 64  |7da-4c12-b5d0-0d|
              000000a0  33 66 30 36 38 64 66 32  66 32 5c 22 7d 22 3a 7b  |3f068df2f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4trw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4trw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:12:13.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9832" for this suite. @ 12/19/23 10:12:13.991
• [2.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 12/19/23 10:12:14.044
  Dec 19 10:12:14.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:12:14.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:14.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:14.106
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:12:14.119
  STEP: Saw pod success @ 12/19/23 10:12:18.183
  Dec 19 10:12:18.194: INFO: Trying to get logs from node ja4hooch7za7-2 pod downwardapi-volume-d02edd56-9de9-4398-b730-b76b129c527c container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:12:18.211
  Dec 19 10:12:18.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2419" for this suite. @ 12/19/23 10:12:18.259
• [4.229 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 12/19/23 10:12:18.277
  Dec 19 10:12:18.277: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:12:18.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:18.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:18.329
  STEP: creating a replication controller @ 12/19/23 10:12:18.337
  Dec 19 10:12:18.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 create -f -'
  Dec 19 10:12:19.025: INFO: stderr: ""
  Dec 19 10:12:19.025: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 10:12:19.025
  Dec 19 10:12:19.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:12:19.347: INFO: stderr: ""
  Dec 19 10:12:19.348: INFO: stdout: "update-demo-nautilus-fl75v update-demo-nautilus-tx47g "
  Dec 19 10:12:19.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-fl75v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:12:19.679: INFO: stderr: ""
  Dec 19 10:12:19.679: INFO: stdout: ""
  Dec 19 10:12:19.680: INFO: update-demo-nautilus-fl75v is created but not running
  Dec 19 10:12:24.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:12:24.877: INFO: stderr: ""
  Dec 19 10:12:24.877: INFO: stdout: "update-demo-nautilus-fl75v update-demo-nautilus-tx47g "
  Dec 19 10:12:24.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-fl75v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:12:25.096: INFO: stderr: ""
  Dec 19 10:12:25.096: INFO: stdout: ""
  Dec 19 10:12:25.096: INFO: update-demo-nautilus-fl75v is created but not running
  Dec 19 10:12:30.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:12:30.284: INFO: stderr: ""
  Dec 19 10:12:30.284: INFO: stdout: "update-demo-nautilus-fl75v update-demo-nautilus-tx47g "
  Dec 19 10:12:30.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-fl75v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:12:30.483: INFO: stderr: ""
  Dec 19 10:12:30.483: INFO: stdout: ""
  Dec 19 10:12:30.483: INFO: update-demo-nautilus-fl75v is created but not running
  Dec 19 10:12:35.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:12:35.881: INFO: stderr: ""
  Dec 19 10:12:35.881: INFO: stdout: "update-demo-nautilus-fl75v update-demo-nautilus-tx47g "
  Dec 19 10:12:35.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-fl75v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:12:36.140: INFO: stderr: ""
  Dec 19 10:12:36.140: INFO: stdout: ""
  Dec 19 10:12:36.140: INFO: update-demo-nautilus-fl75v is created but not running
  Dec 19 10:12:41.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:12:41.413: INFO: stderr: ""
  Dec 19 10:12:41.413: INFO: stdout: "update-demo-nautilus-fl75v update-demo-nautilus-tx47g "
  Dec 19 10:12:41.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-fl75v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:12:41.581: INFO: stderr: ""
  Dec 19 10:12:41.581: INFO: stdout: "true"
  Dec 19 10:12:41.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-fl75v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:12:41.791: INFO: stderr: ""
  Dec 19 10:12:41.791: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:12:41.791: INFO: validating pod update-demo-nautilus-fl75v
  Dec 19 10:12:41.818: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:12:41.818: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:12:41.818: INFO: update-demo-nautilus-fl75v is verified up and running
  Dec 19 10:12:41.819: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-tx47g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:12:41.972: INFO: stderr: ""
  Dec 19 10:12:41.972: INFO: stdout: "true"
  Dec 19 10:12:41.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods update-demo-nautilus-tx47g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:12:42.162: INFO: stderr: ""
  Dec 19 10:12:42.162: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:12:42.162: INFO: validating pod update-demo-nautilus-tx47g
  Dec 19 10:12:42.186: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:12:42.186: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:12:42.186: INFO: update-demo-nautilus-tx47g is verified up and running
  STEP: using delete to clean up resources @ 12/19/23 10:12:42.186
  Dec 19 10:12:42.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 delete --grace-period=0 --force -f -'
  Dec 19 10:12:42.352: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:12:42.352: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 19 10:12:42.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get rc,svc -l name=update-demo --no-headers'
  Dec 19 10:12:42.639: INFO: stderr: "No resources found in kubectl-4894 namespace.\n"
  Dec 19 10:12:42.639: INFO: stdout: ""
  Dec 19 10:12:42.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4894 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 19 10:12:42.902: INFO: stderr: ""
  Dec 19 10:12:42.902: INFO: stdout: ""
  Dec 19 10:12:42.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4894" for this suite. @ 12/19/23 10:12:42.919
• [24.660 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 12/19/23 10:12:42.943
  Dec 19 10:12:42.943: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename events @ 12/19/23 10:12:42.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:42.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:42.992
  STEP: creating a test event @ 12/19/23 10:12:42.998
  STEP: listing all events in all namespaces @ 12/19/23 10:12:43.01
  STEP: patching the test event @ 12/19/23 10:12:43.034
  STEP: fetching the test event @ 12/19/23 10:12:43.05
  STEP: updating the test event @ 12/19/23 10:12:43.064
  STEP: getting the test event @ 12/19/23 10:12:43.087
  STEP: deleting the test event @ 12/19/23 10:12:43.094
  STEP: listing all events in all namespaces @ 12/19/23 10:12:43.116
  Dec 19 10:12:43.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-360" for this suite. @ 12/19/23 10:12:43.229
• [0.308 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 12/19/23 10:12:43.254
  Dec 19 10:12:43.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename discovery @ 12/19/23 10:12:43.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:43.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:43.303
  STEP: Setting up server cert @ 12/19/23 10:12:43.323
  Dec 19 10:12:44.137: INFO: Checking APIGroup: apiregistration.k8s.io
  Dec 19 10:12:44.140: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Dec 19 10:12:44.140: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Dec 19 10:12:44.140: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Dec 19 10:12:44.140: INFO: Checking APIGroup: apps
  Dec 19 10:12:44.143: INFO: PreferredVersion.GroupVersion: apps/v1
  Dec 19 10:12:44.143: INFO: Versions found [{apps/v1 v1}]
  Dec 19 10:12:44.143: INFO: apps/v1 matches apps/v1
  Dec 19 10:12:44.143: INFO: Checking APIGroup: events.k8s.io
  Dec 19 10:12:44.145: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Dec 19 10:12:44.145: INFO: Versions found [{events.k8s.io/v1 v1}]
  Dec 19 10:12:44.145: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Dec 19 10:12:44.145: INFO: Checking APIGroup: authentication.k8s.io
  Dec 19 10:12:44.148: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Dec 19 10:12:44.149: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Dec 19 10:12:44.149: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Dec 19 10:12:44.149: INFO: Checking APIGroup: authorization.k8s.io
  Dec 19 10:12:44.152: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Dec 19 10:12:44.152: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Dec 19 10:12:44.152: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Dec 19 10:12:44.152: INFO: Checking APIGroup: autoscaling
  Dec 19 10:12:44.154: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Dec 19 10:12:44.155: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Dec 19 10:12:44.155: INFO: autoscaling/v2 matches autoscaling/v2
  Dec 19 10:12:44.156: INFO: Checking APIGroup: batch
  Dec 19 10:12:44.158: INFO: PreferredVersion.GroupVersion: batch/v1
  Dec 19 10:12:44.158: INFO: Versions found [{batch/v1 v1}]
  Dec 19 10:12:44.158: INFO: batch/v1 matches batch/v1
  Dec 19 10:12:44.158: INFO: Checking APIGroup: certificates.k8s.io
  Dec 19 10:12:44.160: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Dec 19 10:12:44.160: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Dec 19 10:12:44.161: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Dec 19 10:12:44.161: INFO: Checking APIGroup: networking.k8s.io
  Dec 19 10:12:44.164: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Dec 19 10:12:44.164: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Dec 19 10:12:44.164: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Dec 19 10:12:44.164: INFO: Checking APIGroup: policy
  Dec 19 10:12:44.166: INFO: PreferredVersion.GroupVersion: policy/v1
  Dec 19 10:12:44.167: INFO: Versions found [{policy/v1 v1}]
  Dec 19 10:12:44.167: INFO: policy/v1 matches policy/v1
  Dec 19 10:12:44.167: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Dec 19 10:12:44.171: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Dec 19 10:12:44.171: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Dec 19 10:12:44.171: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Dec 19 10:12:44.171: INFO: Checking APIGroup: storage.k8s.io
  Dec 19 10:12:44.175: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Dec 19 10:12:44.175: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Dec 19 10:12:44.176: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Dec 19 10:12:44.176: INFO: Checking APIGroup: admissionregistration.k8s.io
  Dec 19 10:12:44.178: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Dec 19 10:12:44.178: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Dec 19 10:12:44.178: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Dec 19 10:12:44.178: INFO: Checking APIGroup: apiextensions.k8s.io
  Dec 19 10:12:44.180: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Dec 19 10:12:44.180: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Dec 19 10:12:44.180: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Dec 19 10:12:44.180: INFO: Checking APIGroup: scheduling.k8s.io
  Dec 19 10:12:44.182: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Dec 19 10:12:44.182: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Dec 19 10:12:44.183: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Dec 19 10:12:44.183: INFO: Checking APIGroup: coordination.k8s.io
  Dec 19 10:12:44.184: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Dec 19 10:12:44.185: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Dec 19 10:12:44.185: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Dec 19 10:12:44.186: INFO: Checking APIGroup: node.k8s.io
  Dec 19 10:12:44.188: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Dec 19 10:12:44.188: INFO: Versions found [{node.k8s.io/v1 v1}]
  Dec 19 10:12:44.188: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Dec 19 10:12:44.188: INFO: Checking APIGroup: discovery.k8s.io
  Dec 19 10:12:44.190: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Dec 19 10:12:44.190: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Dec 19 10:12:44.190: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Dec 19 10:12:44.190: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Dec 19 10:12:44.194: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Dec 19 10:12:44.194: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Dec 19 10:12:44.194: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Dec 19 10:12:44.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8058" for this suite. @ 12/19/23 10:12:44.207
• [0.971 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/19/23 10:12:44.226
  Dec 19 10:12:44.226: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename events @ 12/19/23 10:12:44.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:44.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:44.267
  STEP: Create set of events @ 12/19/23 10:12:44.274
  STEP: get a list of Events with a label in the current namespace @ 12/19/23 10:12:44.311
  STEP: delete a list of events @ 12/19/23 10:12:44.396
  Dec 19 10:12:44.396: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/19/23 10:12:44.471
  Dec 19 10:12:44.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9538" for this suite. @ 12/19/23 10:12:44.49
• [0.286 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/19/23 10:12:44.515
  Dec 19 10:12:44.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:12:44.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:44.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:44.56
  STEP: Saw pod success @ 12/19/23 10:12:50.717
  Dec 19 10:12:50.723: INFO: Trying to get logs from node ja4hooch7za7-3 pod client-envvars-05212f09-108c-4ad6-a17e-46207c187f4a container env3cont: <nil>
  STEP: delete the pod @ 12/19/23 10:12:50.744
  Dec 19 10:12:50.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5098" for this suite. @ 12/19/23 10:12:50.793
• [6.298 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 12/19/23 10:12:50.817
  Dec 19 10:12:50.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:12:50.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:50.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:50.854
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7210 @ 12/19/23 10:12:50.86
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/19/23 10:12:50.881
  STEP: creating service externalsvc in namespace services-7210 @ 12/19/23 10:12:50.882
  STEP: creating replication controller externalsvc in namespace services-7210 @ 12/19/23 10:12:50.907
  I1219 10:12:50.926717      13 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7210, replica count: 2
  I1219 10:12:53.983932      13 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/19/23 10:12:53.994
  Dec 19 10:12:54.024: INFO: Creating new exec pod
  Dec 19 10:12:56.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-7210 exec execpod5gp47 -- /bin/sh -x -c nslookup clusterip-service.services-7210.svc.cluster.local'
  Dec 19 10:12:56.670: INFO: stderr: "+ nslookup clusterip-service.services-7210.svc.cluster.local\n"
  Dec 19 10:12:56.676: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-7210.svc.cluster.local\tcanonical name = externalsvc.services-7210.svc.cluster.local.\nName:\texternalsvc.services-7210.svc.cluster.local\nAddress: 10.233.55.23\n\n"
  Dec 19 10:12:56.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-7210, will wait for the garbage collector to delete the pods @ 12/19/23 10:12:56.701
  Dec 19 10:12:56.776: INFO: Deleting ReplicationController externalsvc took: 15.476329ms
  Dec 19 10:12:56.878: INFO: Terminating ReplicationController externalsvc pods took: 101.636544ms
  Dec 19 10:12:59.827: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-7210" for this suite. @ 12/19/23 10:12:59.866
• [9.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 12/19/23 10:12:59.897
  Dec 19 10:12:59.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:12:59.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:59.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:59.945
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/19/23 10:12:59.951
  STEP: Saw pod success @ 12/19/23 10:13:04
  Dec 19 10:13:04.007: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-cccd2d0d-df75-44de-aefb-6e5d79ed2bfc container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:13:04.024
  Dec 19 10:13:04.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9595" for this suite. @ 12/19/23 10:13:04.071
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/19/23 10:13:04.09
  Dec 19 10:13:04.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 10:13:04.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:13:04.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:13:04.13
  STEP: Creating a cronjob @ 12/19/23 10:13:04.137
  STEP: Ensuring more than one job is running at a time @ 12/19/23 10:13:04.149
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/19/23 10:15:00.166
  STEP: Removing cronjob @ 12/19/23 10:15:00.242
  Dec 19 10:15:00.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4361" for this suite. @ 12/19/23 10:15:00.302
• [116.246 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 12/19/23 10:15:00.339
  Dec 19 10:15:00.339: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:15:00.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:00.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:00.445
  STEP: Creating service test in namespace statefulset-8629 @ 12/19/23 10:15:00.451
  STEP: Creating statefulset ss in namespace statefulset-8629 @ 12/19/23 10:15:00.512
  Dec 19 10:15:00.592: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 10:15:10.604: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/19/23 10:15:10.621
  STEP: Getting /status @ 12/19/23 10:15:10.655
  Dec 19 10:15:10.672: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/19/23 10:15:10.672
  Dec 19 10:15:10.698: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/19/23 10:15:10.698
  Dec 19 10:15:10.709: INFO: Observed &StatefulSet event: ADDED
  Dec 19 10:15:10.710: INFO: Found Statefulset ss in namespace statefulset-8629 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:15:10.710: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/19/23 10:15:10.71
  Dec 19 10:15:10.711: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 19 10:15:10.730: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/19/23 10:15:10.73
  Dec 19 10:15:10.734: INFO: Observed &StatefulSet event: ADDED
  Dec 19 10:15:10.735: INFO: Deleting all statefulset in ns statefulset-8629
  Dec 19 10:15:10.746: INFO: Scaling statefulset ss to 0
  Dec 19 10:15:20.787: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:15:20.797: INFO: Deleting statefulset ss
  Dec 19 10:15:20.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8629" for this suite. @ 12/19/23 10:15:20.848
• [20.528 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/19/23 10:15:20.874
  Dec 19 10:15:20.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename subpath @ 12/19/23 10:15:20.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:20.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:20.915
  STEP: Setting up data @ 12/19/23 10:15:20.92
  STEP: Creating pod pod-subpath-test-downwardapi-s2bl @ 12/19/23 10:15:20.941
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 10:15:20.942
  STEP: Saw pod success @ 12/19/23 10:15:45.141
  Dec 19 10:15:45.150: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-subpath-test-downwardapi-s2bl container test-container-subpath-downwardapi-s2bl: <nil>
  STEP: delete the pod @ 12/19/23 10:15:45.192
  STEP: Deleting pod pod-subpath-test-downwardapi-s2bl @ 12/19/23 10:15:45.229
  Dec 19 10:15:45.229: INFO: Deleting pod "pod-subpath-test-downwardapi-s2bl" in namespace "subpath-2036"
  Dec 19 10:15:45.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2036" for this suite. @ 12/19/23 10:15:45.251
• [24.400 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 12/19/23 10:15:45.275
  Dec 19 10:15:45.275: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:15:45.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:45.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:45.334
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/19/23 10:15:45.343
  STEP: Saw pod success @ 12/19/23 10:15:49.391
  Dec 19 10:15:49.397: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-b9b99642-dd6a-4de0-bc87-1936eb8243eb container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:15:49.411
  Dec 19 10:15:49.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6467" for this suite. @ 12/19/23 10:15:49.462
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 12/19/23 10:15:49.486
  Dec 19 10:15:49.486: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:15:49.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:49.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:49.524
  STEP: creating a replication controller @ 12/19/23 10:15:49.531
  Dec 19 10:15:49.531: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 create -f -'
  Dec 19 10:15:50.150: INFO: stderr: ""
  Dec 19 10:15:50.150: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 10:15:50.15
  Dec 19 10:15:50.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:15:50.401: INFO: stderr: ""
  Dec 19 10:15:50.401: INFO: stdout: "update-demo-nautilus-gkhtb update-demo-nautilus-t2kl7 "
  Dec 19 10:15:50.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-gkhtb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:15:50.578: INFO: stderr: ""
  Dec 19 10:15:50.578: INFO: stdout: ""
  Dec 19 10:15:50.578: INFO: update-demo-nautilus-gkhtb is created but not running
  Dec 19 10:15:55.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:15:55.797: INFO: stderr: ""
  Dec 19 10:15:55.797: INFO: stdout: "update-demo-nautilus-gkhtb update-demo-nautilus-t2kl7 "
  Dec 19 10:15:55.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-gkhtb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:15:55.970: INFO: stderr: ""
  Dec 19 10:15:55.970: INFO: stdout: "true"
  Dec 19 10:15:55.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-gkhtb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:15:56.164: INFO: stderr: ""
  Dec 19 10:15:56.164: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:15:56.164: INFO: validating pod update-demo-nautilus-gkhtb
  Dec 19 10:15:56.182: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:15:56.182: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:15:56.182: INFO: update-demo-nautilus-gkhtb is verified up and running
  Dec 19 10:15:56.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-t2kl7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:15:56.399: INFO: stderr: ""
  Dec 19 10:15:56.400: INFO: stdout: "true"
  Dec 19 10:15:56.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-t2kl7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:15:56.575: INFO: stderr: ""
  Dec 19 10:15:56.575: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:15:56.575: INFO: validating pod update-demo-nautilus-t2kl7
  Dec 19 10:15:56.590: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:15:56.590: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:15:56.590: INFO: update-demo-nautilus-t2kl7 is verified up and running
  STEP: scaling down the replication controller @ 12/19/23 10:15:56.59
  Dec 19 10:15:56.607: INFO: scanned /root for discovery docs: <nil>
  Dec 19 10:15:56.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Dec 19 10:15:57.843: INFO: stderr: ""
  Dec 19 10:15:57.843: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 10:15:57.843
  Dec 19 10:15:57.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:15:58.032: INFO: stderr: ""
  Dec 19 10:15:58.032: INFO: stdout: "update-demo-nautilus-gkhtb update-demo-nautilus-t2kl7 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 12/19/23 10:15:58.032
  Dec 19 10:16:03.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:16:03.239: INFO: stderr: ""
  Dec 19 10:16:03.239: INFO: stdout: "update-demo-nautilus-gkhtb "
  Dec 19 10:16:03.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-gkhtb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:16:03.464: INFO: stderr: ""
  Dec 19 10:16:03.464: INFO: stdout: "true"
  Dec 19 10:16:03.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-gkhtb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:16:03.706: INFO: stderr: ""
  Dec 19 10:16:03.706: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:16:03.706: INFO: validating pod update-demo-nautilus-gkhtb
  Dec 19 10:16:03.725: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:16:03.725: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:16:03.725: INFO: update-demo-nautilus-gkhtb is verified up and running
  STEP: scaling up the replication controller @ 12/19/23 10:16:03.725
  Dec 19 10:16:03.737: INFO: scanned /root for discovery docs: <nil>
  Dec 19 10:16:03.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Dec 19 10:16:04.959: INFO: stderr: ""
  Dec 19 10:16:04.959: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 10:16:04.96
  Dec 19 10:16:04.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:16:05.149: INFO: stderr: ""
  Dec 19 10:16:05.149: INFO: stdout: "update-demo-nautilus-gkhtb update-demo-nautilus-tp7qc "
  Dec 19 10:16:05.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-gkhtb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:16:05.344: INFO: stderr: ""
  Dec 19 10:16:05.345: INFO: stdout: "true"
  Dec 19 10:16:05.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-gkhtb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:16:05.506: INFO: stderr: ""
  Dec 19 10:16:05.506: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:16:05.506: INFO: validating pod update-demo-nautilus-gkhtb
  Dec 19 10:16:05.519: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:16:05.520: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:16:05.520: INFO: update-demo-nautilus-gkhtb is verified up and running
  Dec 19 10:16:05.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-tp7qc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:16:05.700: INFO: stderr: ""
  Dec 19 10:16:05.700: INFO: stdout: "true"
  Dec 19 10:16:05.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods update-demo-nautilus-tp7qc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:16:05.856: INFO: stderr: ""
  Dec 19 10:16:05.856: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:16:05.856: INFO: validating pod update-demo-nautilus-tp7qc
  Dec 19 10:16:05.870: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:16:05.870: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:16:05.871: INFO: update-demo-nautilus-tp7qc is verified up and running
  STEP: using delete to clean up resources @ 12/19/23 10:16:05.871
  Dec 19 10:16:05.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 delete --grace-period=0 --force -f -'
  Dec 19 10:16:06.049: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:16:06.049: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 19 10:16:06.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get rc,svc -l name=update-demo --no-headers'
  Dec 19 10:16:06.304: INFO: stderr: "No resources found in kubectl-757 namespace.\n"
  Dec 19 10:16:06.304: INFO: stdout: ""
  Dec 19 10:16:06.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-757 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 19 10:16:06.629: INFO: stderr: ""
  Dec 19 10:16:06.629: INFO: stdout: ""
  Dec 19 10:16:06.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-757" for this suite. @ 12/19/23 10:16:06.66
• [17.188 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 12/19/23 10:16:06.689
  Dec 19 10:16:06.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 10:16:06.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:06.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:06.74
  STEP: Deleting RuntimeClass runtimeclass-2744-delete-me @ 12/19/23 10:16:06.76
  STEP: Waiting for the RuntimeClass to disappear @ 12/19/23 10:16:06.776
  Dec 19 10:16:06.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2744" for this suite. @ 12/19/23 10:16:06.825
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 12/19/23 10:16:06.846
  Dec 19 10:16:06.846: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:16:06.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:06.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:06.905
  Dec 19 10:16:07.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5755" for this suite. @ 12/19/23 10:16:07.024
• [0.193 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/19/23 10:16:07.043
  Dec 19 10:16:07.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename containers @ 12/19/23 10:16:07.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:07.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:07.086
  STEP: Creating a pod to test override all @ 12/19/23 10:16:07.095
  STEP: Saw pod success @ 12/19/23 10:16:11.14
  Dec 19 10:16:11.147: INFO: Trying to get logs from node ja4hooch7za7-3 pod client-containers-aea30b07-bb4d-43b2-aded-c676a0a8fd2f container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:16:11.166
  Dec 19 10:16:11.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-463" for this suite. @ 12/19/23 10:16:11.205
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 12/19/23 10:16:11.221
  Dec 19 10:16:11.221: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:16:11.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:11.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:11.264
  STEP: Creating the pod @ 12/19/23 10:16:11.273
  Dec 19 10:16:13.864: INFO: Successfully updated pod "annotationupdate2a4e3fcb-1fa0-4fa8-868a-1b54ed89d5d4"
  Dec 19 10:16:15.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7973" for this suite. @ 12/19/23 10:16:15.912
• [4.706 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 12/19/23 10:16:15.945
  Dec 19 10:16:15.945: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename taint-single-pod @ 12/19/23 10:16:15.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:15.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:15.988
  Dec 19 10:16:16.001: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 10:17:16.047: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 10:17:16.056: INFO: Starting informer...
  STEP: Starting pod... @ 12/19/23 10:17:16.056
  Dec 19 10:17:16.287: INFO: Pod is running on ja4hooch7za7-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/19/23 10:17:16.288
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 10:17:16.322
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/19/23 10:17:16.337
  Dec 19 10:17:16.337: INFO: Pod wasn't evicted. Proceeding
  Dec 19 10:17:16.337: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 10:17:16.469
  STEP: Waiting some time to make sure that toleration time passed. @ 12/19/23 10:17:16.502
  Dec 19 10:18:31.505: INFO: Pod wasn't evicted. Test successful
  Dec 19 10:18:31.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7259" for this suite. @ 12/19/23 10:18:31.53
• [135.604 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 12/19/23 10:18:31.555
  Dec 19 10:18:31.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:18:31.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:31.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:31.613
  STEP: Creating configMap with name configmap-test-volume-8b5170bd-4dfd-4b4e-9d71-91db5b2610c3 @ 12/19/23 10:18:31.625
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:18:31.636
  STEP: Saw pod success @ 12/19/23 10:18:35.783
  Dec 19 10:18:35.797: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-74ac83bb-a3c7-420f-b3ff-1870adda80c3 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:18:35.845
  Dec 19 10:18:35.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-598" for this suite. @ 12/19/23 10:18:35.879
• [4.338 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 12/19/23 10:18:35.895
  Dec 19 10:18:35.896: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 10:18:35.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:35.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:35.95
  STEP: Creating replication controller my-hostname-basic-493c5387-1b90-47ec-8b82-4cc273e7142a @ 12/19/23 10:18:35.961
  Dec 19 10:18:35.999: INFO: Pod name my-hostname-basic-493c5387-1b90-47ec-8b82-4cc273e7142a: Found 0 pods out of 1
  Dec 19 10:18:41.012: INFO: Pod name my-hostname-basic-493c5387-1b90-47ec-8b82-4cc273e7142a: Found 1 pods out of 1
  Dec 19 10:18:41.012: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-493c5387-1b90-47ec-8b82-4cc273e7142a" are running
  Dec 19 10:18:41.024: INFO: Pod "my-hostname-basic-493c5387-1b90-47ec-8b82-4cc273e7142a-8nkgt" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 10:18:36 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 10:18:37 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 10:18:37 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 10:18:36 +0000 UTC Reason: Message:}])
  Dec 19 10:18:41.025: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/19/23 10:18:41.025
  Dec 19 10:18:41.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1533" for this suite. @ 12/19/23 10:18:41.063
• [5.181 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/19/23 10:18:41.08
  Dec 19 10:18:41.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:18:41.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:41.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:41.137
  STEP: Creating projection with secret that has name projected-secret-test-642a639c-c402-4703-9815-01a189762e56 @ 12/19/23 10:18:41.145
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:18:41.156
  STEP: Saw pod success @ 12/19/23 10:18:43.206
  Dec 19 10:18:43.215: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-secrets-70e29b45-17ff-43bc-b83f-c50da2f7f6f2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:18:43.23
  Dec 19 10:18:43.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4178" for this suite. @ 12/19/23 10:18:43.276
• [2.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 12/19/23 10:18:43.301
  Dec 19 10:18:43.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:18:43.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:43.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:43.343
  STEP: Create a ReplicaSet @ 12/19/23 10:18:43.36
  STEP: Verify that the required pods have come up @ 12/19/23 10:18:43.376
  Dec 19 10:18:43.393: INFO: Pod name sample-pod: Found 0 pods out of 3
  Dec 19 10:18:48.412: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/19/23 10:18:48.412
  Dec 19 10:18:48.422: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/19/23 10:18:48.422
  STEP: DeleteCollection of the ReplicaSets @ 12/19/23 10:18:48.43
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/19/23 10:18:48.458
  Dec 19 10:18:48.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5889" for this suite. @ 12/19/23 10:18:48.512
• [5.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 12/19/23 10:18:48.613
  Dec 19 10:18:48.613: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:18:48.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:48.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:48.654
  STEP: Creating configMap with name configmap-test-volume-map-650aa918-8efd-4d6a-8f40-a3aab7e28fc2 @ 12/19/23 10:18:48.662
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:18:48.674
  STEP: Saw pod success @ 12/19/23 10:18:52.752
  Dec 19 10:18:52.770: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-e11b4995-263a-4613-adc2-ef7f5da0c6bd container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:18:52.796
  Dec 19 10:18:52.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8357" for this suite. @ 12/19/23 10:18:52.848
• [4.253 seconds]
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 12/19/23 10:18:52.867
  Dec 19 10:18:52.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:18:52.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:52.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:52.93
  Dec 19 10:18:52.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8192" for this suite. @ 12/19/23 10:18:52.964
• [0.110 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 12/19/23 10:18:52.978
  Dec 19 10:18:52.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:18:52.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:53.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:53.021
  STEP: Creating configMap with name projected-configmap-test-volume-map-28934757-b8fe-43c8-a757-0346f6352918 @ 12/19/23 10:18:53.027
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:18:53.039
  STEP: Saw pod success @ 12/19/23 10:18:57.097
  Dec 19 10:18:57.108: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-configmaps-1761208e-530e-431d-aaa6-f5dc1aecb51c container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:18:57.126
  Dec 19 10:18:57.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6577" for this suite. @ 12/19/23 10:18:57.185
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 12/19/23 10:18:57.216
  Dec 19 10:18:57.216: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:18:57.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:18:57.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:18:57.27
  STEP: Creating a ResourceQuota with best effort scope @ 12/19/23 10:18:57.282
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 10:18:57.291
  STEP: Creating a ResourceQuota with not best effort scope @ 12/19/23 10:18:59.299
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 10:18:59.313
  STEP: Creating a best-effort pod @ 12/19/23 10:19:01.324
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/19/23 10:19:01.372
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/19/23 10:19:03.384
  STEP: Deleting the pod @ 12/19/23 10:19:05.4
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 10:19:05.443
  STEP: Creating a not best-effort pod @ 12/19/23 10:19:07.451
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/19/23 10:19:07.481
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/19/23 10:19:09.49
  STEP: Deleting the pod @ 12/19/23 10:19:11.503
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 10:19:11.532
  Dec 19 10:19:13.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3777" for this suite. @ 12/19/23 10:19:13.558
• [16.364 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 12/19/23 10:19:13.584
  Dec 19 10:19:13.584: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:19:13.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:13.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:13.629
  STEP: creating all guestbook components @ 12/19/23 10:19:13.633
  Dec 19 10:19:13.633: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Dec 19 10:19:13.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 create -f -'
  Dec 19 10:19:14.284: INFO: stderr: ""
  Dec 19 10:19:14.284: INFO: stdout: "service/agnhost-replica created\n"
  Dec 19 10:19:14.284: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Dec 19 10:19:14.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 create -f -'
  Dec 19 10:19:14.889: INFO: stderr: ""
  Dec 19 10:19:14.889: INFO: stdout: "service/agnhost-primary created\n"
  Dec 19 10:19:14.889: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Dec 19 10:19:14.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 create -f -'
  Dec 19 10:19:15.489: INFO: stderr: ""
  Dec 19 10:19:15.489: INFO: stdout: "service/frontend created\n"
  Dec 19 10:19:15.489: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Dec 19 10:19:15.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 create -f -'
  Dec 19 10:19:15.973: INFO: stderr: ""
  Dec 19 10:19:15.974: INFO: stdout: "deployment.apps/frontend created\n"
  Dec 19 10:19:15.974: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 19 10:19:15.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 create -f -'
  Dec 19 10:19:16.720: INFO: stderr: ""
  Dec 19 10:19:16.720: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Dec 19 10:19:16.722: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 19 10:19:16.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 create -f -'
  Dec 19 10:19:17.392: INFO: stderr: ""
  Dec 19 10:19:17.392: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/19/23 10:19:17.393
  Dec 19 10:19:17.393: INFO: Waiting for all frontend pods to be Running.
  Dec 19 10:19:22.447: INFO: Waiting for frontend to serve content.
  Dec 19 10:19:22.479: INFO: Trying to add a new entry to the guestbook.
  Dec 19 10:19:22.520: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/19/23 10:19:22.539
  Dec 19 10:19:22.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 delete --grace-period=0 --force -f -'
  Dec 19 10:19:22.765: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:19:22.765: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 10:19:22.765
  Dec 19 10:19:22.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 delete --grace-period=0 --force -f -'
  Dec 19 10:19:23.046: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:19:23.046: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 10:19:23.046
  Dec 19 10:19:23.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 delete --grace-period=0 --force -f -'
  Dec 19 10:19:23.272: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:19:23.272: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 10:19:23.273
  Dec 19 10:19:23.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 delete --grace-period=0 --force -f -'
  Dec 19 10:19:23.499: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:19:23.499: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 10:19:23.5
  Dec 19 10:19:23.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 delete --grace-period=0 --force -f -'
  Dec 19 10:19:23.827: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:19:23.827: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 10:19:23.827
  Dec 19 10:19:23.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6650 delete --grace-period=0 --force -f -'
  Dec 19 10:19:24.039: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:19:24.039: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Dec 19 10:19:24.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6650" for this suite. @ 12/19/23 10:19:24.058
• [10.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/19/23 10:19:24.117
  Dec 19 10:19:24.117: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename certificates @ 12/19/23 10:19:24.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:24.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:24.199
  STEP: getting /apis @ 12/19/23 10:19:25.72
  STEP: getting /apis/certificates.k8s.io @ 12/19/23 10:19:25.728
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/19/23 10:19:25.73
  STEP: creating @ 12/19/23 10:19:25.732
  STEP: getting @ 12/19/23 10:19:25.78
  STEP: listing @ 12/19/23 10:19:25.787
  STEP: watching @ 12/19/23 10:19:25.799
  Dec 19 10:19:25.799: INFO: starting watch
  STEP: patching @ 12/19/23 10:19:25.802
  STEP: updating @ 12/19/23 10:19:25.826
  Dec 19 10:19:25.837: INFO: waiting for watch events with expected annotations
  Dec 19 10:19:25.838: INFO: saw patched and updated annotations
  STEP: getting /approval @ 12/19/23 10:19:25.838
  STEP: patching /approval @ 12/19/23 10:19:25.846
  STEP: updating /approval @ 12/19/23 10:19:25.86
  STEP: getting /status @ 12/19/23 10:19:25.877
  STEP: patching /status @ 12/19/23 10:19:25.883
  STEP: updating /status @ 12/19/23 10:19:25.901
  STEP: deleting @ 12/19/23 10:19:25.931
  STEP: deleting a collection @ 12/19/23 10:19:25.981
  Dec 19 10:19:26.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5076" for this suite. @ 12/19/23 10:19:26.055
• [1.962 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/19/23 10:19:26.088
  Dec 19 10:19:26.088: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:19:26.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:26.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:26.148
  STEP: Creating projection with secret that has name projected-secret-test-map-091e3d72-5438-4623-bc99-03bfdc2fe2cf @ 12/19/23 10:19:26.154
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:19:26.168
  STEP: Saw pod success @ 12/19/23 10:19:30.219
  Dec 19 10:19:30.226: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-secrets-1833f2b1-8584-41fd-b485-150e4a4d003f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:19:30.24
  Dec 19 10:19:30.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6761" for this suite. @ 12/19/23 10:19:30.278
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 12/19/23 10:19:30.3
  Dec 19 10:19:30.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:19:30.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:30.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:30.333
  STEP: creating service in namespace services-2858 @ 12/19/23 10:19:30.343
  STEP: creating service affinity-nodeport in namespace services-2858 @ 12/19/23 10:19:30.344
  STEP: creating replication controller affinity-nodeport in namespace services-2858 @ 12/19/23 10:19:30.374
  I1219 10:19:30.389237      13 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2858, replica count: 3
  I1219 10:19:33.443056      13 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 10:19:33.472: INFO: Creating new exec pod
  Dec 19 10:19:36.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-2858 exec execpod-affinityg657d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Dec 19 10:19:36.839: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Dec 19 10:19:36.839: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:19:36.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-2858 exec execpod-affinityg657d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.221 80'
  Dec 19 10:19:37.101: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.37.221 80\nConnection to 10.233.37.221 80 port [tcp/http] succeeded!\n"
  Dec 19 10:19:37.101: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:19:37.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-2858 exec execpod-affinityg657d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.113 32027'
  Dec 19 10:19:37.376: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.113 32027\nConnection to 192.168.121.113 32027 port [tcp/*] succeeded!\n"
  Dec 19 10:19:37.377: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:19:37.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-2858 exec execpod-affinityg657d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.72 32027'
  Dec 19 10:19:37.684: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.72 32027\nConnection to 192.168.121.72 32027 port [tcp/*] succeeded!\n"
  Dec 19 10:19:37.684: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:19:37.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-2858 exec execpod-affinityg657d -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.113:32027/ ; done'
  Dec 19 10:19:38.200: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:32027/\n"
  Dec 19 10:19:38.200: INFO: stdout: "\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm\naffinity-nodeport-b4zvm"
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Received response from host: affinity-nodeport-b4zvm
  Dec 19 10:19:38.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 10:19:38.212: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2858, will wait for the garbage collector to delete the pods @ 12/19/23 10:19:38.246
  Dec 19 10:19:38.333: INFO: Deleting ReplicationController affinity-nodeport took: 22.977658ms
  Dec 19 10:19:38.435: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.296254ms
  STEP: Destroying namespace "services-2858" for this suite. @ 12/19/23 10:19:41.825
• [11.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/19/23 10:19:41.85
  Dec 19 10:19:41.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:19:41.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:41.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:41.891
  STEP: Creating projection with secret that has name projected-secret-test-map-55f398dc-1e6c-48d7-9277-856f2099b776 @ 12/19/23 10:19:41.897
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:19:41.912
  STEP: Saw pod success @ 12/19/23 10:19:45.973
  Dec 19 10:19:45.984: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-secrets-86532b81-c045-451c-83c2-a47d88b36545 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:19:46.002
  Dec 19 10:19:46.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6840" for this suite. @ 12/19/23 10:19:46.039
• [4.204 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/19/23 10:19:46.055
  Dec 19 10:19:46.055: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:19:46.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:46.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:46.103
  STEP: creating the pod @ 12/19/23 10:19:46.11
  STEP: submitting the pod to kubernetes @ 12/19/23 10:19:46.111
  STEP: verifying the pod is in kubernetes @ 12/19/23 10:19:48.171
  STEP: updating the pod @ 12/19/23 10:19:48.179
  Dec 19 10:19:48.713: INFO: Successfully updated pod "pod-update-cc389ae8-e325-4471-87e7-4cb58703d8be"
  STEP: verifying the updated pod is in kubernetes @ 12/19/23 10:19:48.722
  Dec 19 10:19:48.731: INFO: Pod update OK
  Dec 19 10:19:48.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8377" for this suite. @ 12/19/23 10:19:48.74
• [2.697 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 12/19/23 10:19:48.755
  Dec 19 10:19:48.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 10:19:48.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:48.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:48.813
  Dec 19 10:19:52.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-684" for this suite. @ 12/19/23 10:19:52.876
• [4.139 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 12/19/23 10:19:52.9
  Dec 19 10:19:52.900: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:19:52.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:52.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:52.946
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/19/23 10:19:52.95
  Dec 19 10:19:52.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:19:55.228: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:20:02.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8180" for this suite. @ 12/19/23 10:20:02.783
• [9.898 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 12/19/23 10:20:02.799
  Dec 19 10:20:02.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:20:02.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:02.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:02.845
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:20:02.851
  STEP: Saw pod success @ 12/19/23 10:20:06.904
  Dec 19 10:20:06.910: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-7eef5039-d7a2-4bb0-8656-9dd161bd2613 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:20:06.954
  Dec 19 10:20:06.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4707" for this suite. @ 12/19/23 10:20:07.007
• [4.221 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 12/19/23 10:20:07.022
  Dec 19 10:20:07.022: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/19/23 10:20:07.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:07.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:07.101
  STEP: getting /apis @ 12/19/23 10:20:07.111
  STEP: getting /apis/storage.k8s.io @ 12/19/23 10:20:07.127
  STEP: getting /apis/storage.k8s.io/v1 @ 12/19/23 10:20:07.134
  STEP: creating @ 12/19/23 10:20:07.138
  STEP: watching @ 12/19/23 10:20:07.182
  Dec 19 10:20:07.183: INFO: starting watch
  STEP: getting @ 12/19/23 10:20:07.204
  STEP: listing in namespace @ 12/19/23 10:20:07.212
  STEP: listing across namespaces @ 12/19/23 10:20:07.22
  STEP: patching @ 12/19/23 10:20:07.232
  STEP: updating @ 12/19/23 10:20:07.246
  Dec 19 10:20:07.258: INFO: waiting for watch events with expected annotations in namespace
  Dec 19 10:20:07.259: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/19/23 10:20:07.26
  STEP: deleting a collection @ 12/19/23 10:20:07.295
  Dec 19 10:20:07.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7694" for this suite. @ 12/19/23 10:20:07.337
• [0.339 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/19/23 10:20:07.364
  Dec 19 10:20:07.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 10:20:07.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:07.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:07.42
  Dec 19 10:20:07.436: INFO: Creating deployment "webserver-deployment"
  Dec 19 10:20:07.455: INFO: Waiting for observed generation 1
  Dec 19 10:20:09.505: INFO: Waiting for all required pods to come up
  Dec 19 10:20:09.570: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/19/23 10:20:09.57
  Dec 19 10:20:11.633: INFO: Waiting for deployment "webserver-deployment" to complete
  Dec 19 10:20:11.652: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Dec 19 10:20:11.716: INFO: Updating deployment webserver-deployment
  Dec 19 10:20:11.717: INFO: Waiting for observed generation 2
  Dec 19 10:20:13.735: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Dec 19 10:20:13.742: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Dec 19 10:20:13.749: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 19 10:20:13.766: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Dec 19 10:20:13.766: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Dec 19 10:20:13.773: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 19 10:20:13.784: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Dec 19 10:20:13.784: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Dec 19 10:20:13.806: INFO: Updating deployment webserver-deployment
  Dec 19 10:20:13.806: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Dec 19 10:20:13.826: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Dec 19 10:20:13.838: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Dec 19 10:20:16.038: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61ed8939-3bf0-43a4-9801-326edb10318a",
      ResourceVersion: (string) (len=4) "8518",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      UnavailableReplicas: (int32) 24,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 10:20:16.059: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
      ResourceVersion: (string) (len=4) "8479",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "61ed8939-3bf0-43a4-9801-326edb10318a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 65 64 38 39  33 39 2d 33 62 66 30 2d  |\"61ed8939-3bf0-|
              00000120  34 33 61 34 2d 39 38 30  31 2d 33 32 36 65 64 62  |43a4-9801-326edb|
              00000130  31 30 33 31 38 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |10318a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:20:16.061: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Dec 19 10:20:16.061: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
      ResourceVersion: (string) (len=4) "8516",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "61ed8939-3bf0-43a4-9801-326edb10318a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 65 64 38 39  33 39 2d 33 62 66 30 2d  |\"61ed8939-3bf0-|
              00000120  34 33 61 34 2d 39 38 30  31 2d 33 32 36 65 64 62  |43a4-9801-326edb|
              00000130  31 30 33 31 38 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |10318a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:20:16.078: INFO: Pod "webserver-deployment-557759b7c7-29jzf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-29jzf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "693070f6-c7a8-4a56-8746-f9f274084651",
      ResourceVersion: (string) (len=4) "8276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 36 5c 22 7d 22  |10.233.65.16\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnhfw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnhfw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578008,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://8eda8742960549e843aedaf3fc3cc57d16abe6fb417bb1f252ff79edcb775d77",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.085: INFO: Pod "webserver-deployment-557759b7c7-4btfx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4btfx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cec4d298-bace-4e33-a3b3-b643b45b704d",
      ResourceVersion: (string) (len=4) "8478",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rwfln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rwfln",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.089: INFO: Pod "webserver-deployment-557759b7c7-4krw8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4krw8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a272b0b5-a9f0-4e91-a33b-d1fad0f01e9f",
      ResourceVersion: (string) (len=4) "8298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 36 34 5c 22 7d 22  |10.233.66.64\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l4c5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l4c5b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.64",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.64"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578009,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://4188d02a9bad9a3d4c7f10b7d333df54ff6be5ca84e22d34a2198a0de0dc2f1b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.092: INFO: Pod "webserver-deployment-557759b7c7-5r62v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5r62v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a487b878-5af3-4e1d-9d63-15c3b9a9e9b9",
      ResourceVersion: (string) (len=4) "8280",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 37 5c 22 7d 22  |10.233.65.17\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kr5qh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kr5qh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.17",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.17"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578009,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://14bd1afb5d510399723c17e9fb7e884a2d12c2ad27b26d3e86a42ec0504288a8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.096: INFO: Pod "webserver-deployment-557759b7c7-6kwkq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6kwkq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9eaaa1e-48e9-4b9e-b297-7b3484febefe",
      ResourceVersion: (string) (len=4) "8305",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 31 5c 22 7d 22  |10.233.64.11\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vtgj2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vtgj2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578009,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://2dfd411b7142ae07f02e4e8312ba4afd325992a47cee3c59b80d75e4af1bc6ce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.112: INFO: Pod "webserver-deployment-557759b7c7-86cfw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-86cfw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2757c70-4d0a-4f95-9f49-7449a4051554",
      ResourceVersion: (string) (len=4) "8464",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qfxvx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qfxvx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.122: INFO: Pod "webserver-deployment-557759b7c7-bj9cq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bj9cq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5185d47c-5602-4818-86e0-b05c12eb9d04",
      ResourceVersion: (string) (len=4) "8441",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hv2q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hv2q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.140: INFO: Pod "webserver-deployment-557759b7c7-bl7p9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bl7p9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "774cc878-1f4f-47f2-be0c-5254833a76a9",
      ResourceVersion: (string) (len=4) "8282",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 38 5c 22 7d 22  |10.233.65.18\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b92hh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b92hh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578008,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://28fe34842c712fac3aee448b209a716ccdeb83e73f192d4c30b032258a599697",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.162: INFO: Pod "webserver-deployment-557759b7c7-bmzbl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bmzbl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2677e2ba-0d99-4989-a2b4-4d16faf7dbd7",
      ResourceVersion: (string) (len=4) "8423",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sd95l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sd95l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.175: INFO: Pod "webserver-deployment-557759b7c7-cfhnf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cfhnf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0e1993d-63b5-417f-9bde-4f434e260d49",
      ResourceVersion: (string) (len=4) "8493",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbhsj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbhsj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.207: INFO: Pod "webserver-deployment-557759b7c7-fm2rz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fm2rz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cea1628a-50ee-40dd-a90a-73df7643a3cf",
      ResourceVersion: (string) (len=4) "8512",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 32 31 5c 22 7d 22  |10.233.65.21\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pc2lx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pc2lx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578015,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://f1f8931acbe0088ba10f62a8b564ad1bd323bd135171a3cbaf5c5f8fb04e56fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.227: INFO: Pod "webserver-deployment-557759b7c7-g5qdz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-g5qdz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae5de5f7-5aa2-429e-bf72-0db0c4a1cbcc",
      ResourceVersion: (string) (len=4) "8453",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hcbkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hcbkk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.243: INFO: Pod "webserver-deployment-557759b7c7-h8fxq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h8fxq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2494d301-92d8-456e-8e6e-2763904f4750",
      ResourceVersion: (string) (len=4) "8435",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9m7mn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9m7mn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.289: INFO: Pod "webserver-deployment-557759b7c7-h8wzd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h8wzd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6cd113e-1988-441f-b6a2-306c54c1d55a",
      ResourceVersion: (string) (len=4) "8310",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 39 5c 22 7d 22 3a  |10.233.64.9\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fgv5t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fgv5t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.233.64.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.64.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578009,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://a6d7734855c2065f9de62dce0f0ca58914f0e25ca493a83d564b5b5347707dc5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.296: INFO: Pod "webserver-deployment-557759b7c7-hxjkm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hxjkm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc42d37a-aba6-468b-8790-4560877f4dcd",
      ResourceVersion: (string) (len=4) "8308",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 30 5c 22 7d 22  |10.233.64.10\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-drv2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-drv2g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578009,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://a894d18793be0b2ffa4e876dae671926ec2085e906a8291f6c41e82e95bc63e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.305: INFO: Pod "webserver-deployment-557759b7c7-p24t4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-p24t4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5acc554-d7be-47cb-aafe-39719005da34",
      ResourceVersion: (string) (len=4) "8456",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9h4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9h4g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.315: INFO: Pod "webserver-deployment-557759b7c7-q9mdt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q9mdt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd6fc5ae-b4e1-4df1-b7b3-bb35c27c6ace",
      ResourceVersion: (string) (len=4) "8438",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dlfnr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dlfnr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.321: INFO: Pod "webserver-deployment-557759b7c7-qb2gq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qb2gq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93bc1b3b-67d4-43fe-b3ef-19ec2e6dc4df",
      ResourceVersion: (string) (len=4) "8292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 36 33 5c 22 7d 22  |10.233.66.63\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xv6cz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xv6cz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578009,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://7602c8ecfe9245637c153ca157ad700827d93af9f5480164868cd869884d9c9b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.331: INFO: Pod "webserver-deployment-557759b7c7-st9x5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-st9x5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee4765b7-99f5-403e-88f8-b98aee51126e",
      ResourceVersion: (string) (len=4) "8477",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mznxq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mznxq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.335: INFO: Pod "webserver-deployment-557759b7c7-x42lg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x42lg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91f7888d-aebb-4f3d-892e-40cd1854f7ee",
      ResourceVersion: (string) (len=4) "8408",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f884b479-667d-4655-bd1d-2d1c846214fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 34 62 34 37 39 2d 36  |d\":\"f884b479-6|
              00000090  36 37 64 2d 34 36 35 35  2d 62 64 31 64 2d 32 64  |67d-4655-bd1d-2d|
              000000a0  31 63 38 34 36 32 31 34  66 62 5c 22 7d 22 3a 7b  |1c846214fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-njlhq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-njlhq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.346: INFO: Pod "webserver-deployment-9b4f5bf69-2hvzx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2hvzx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc20cc3e-419f-4363-b8e1-2751ae981735",
      ResourceVersion: (string) (len=4) "8433",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c972p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c972p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.350: INFO: Pod "webserver-deployment-9b4f5bf69-2k86b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2k86b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2796714-87d2-4986-bdd3-bde39c2169e0",
      ResourceVersion: (string) (len=4) "8473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bb4g7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bb4g7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.353: INFO: Pod "webserver-deployment-9b4f5bf69-5hb4x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5hb4x",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30b4284a-d587-4f53-9d15-af4619345d7c",
      ResourceVersion: (string) (len=4) "8363",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578012,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bmj48",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bmj48",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578012,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.357: INFO: Pod "webserver-deployment-9b4f5bf69-8lbkt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8lbkt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb6c5fe0-e3a8-456c-b9bf-843e40c2a95e",
      ResourceVersion: (string) (len=4) "8359",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578012,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zddsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zddsp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578012,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.367: INFO: Pod "webserver-deployment-9b4f5bf69-cnfvc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cnfvc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69597f7c-3af1-489d-b2bc-e3347913dbd7",
      ResourceVersion: (string) (len=4) "8331",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5dn9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5dn9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.388: INFO: Pod "webserver-deployment-9b4f5bf69-d2mnz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d2mnz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1642039-e786-4832-b3f8-5f5b52f951b8",
      ResourceVersion: (string) (len=4) "8449",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sr62",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sr62",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.446: INFO: Pod "webserver-deployment-9b4f5bf69-fdzvs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fdzvs",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb614a63-fc9f-44cf-92c0-fb1dd7fe7cb5",
      ResourceVersion: (string) (len=4) "8486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5nb9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5nb9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.463: INFO: Pod "webserver-deployment-9b4f5bf69-lbzq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lbzq6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "642ce115-0b51-44dc-aef6-aef86d909494",
      ResourceVersion: (string) (len=4) "8343",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4wnjh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4wnjh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.467: INFO: Pod "webserver-deployment-9b4f5bf69-n7fns" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n7fns",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16865014-41fa-4941-9f77-4b0545b8bd1b",
      ResourceVersion: (string) (len=4) "8488",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578013,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lsnl6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lsnl6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.490: INFO: Pod "webserver-deployment-9b4f5bf69-rwvgm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rwvgm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8d78b98-48f4-405d-a1c0-ae9c5817f3cc",
      ResourceVersion: (string) (len=4) "8491",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r968m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r968m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.494: INFO: Pod "webserver-deployment-9b4f5bf69-sq7m6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sq7m6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cee5a41-8a41-439c-b08d-1a5b39f945b4",
      ResourceVersion: (string) (len=4) "8483",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t22f9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t22f9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.502: INFO: Pod "webserver-deployment-9b4f5bf69-vpzhj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vpzhj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eea694d4-6da8-4fbb-a776-e0dba36eaec4",
      ResourceVersion: (string) (len=4) "8480",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6nlxk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6nlxk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.509: INFO: Pod "webserver-deployment-9b4f5bf69-vs8vs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vs8vs",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b673cd5-da55-40c2-b066-84ac7217d3e5",
      ResourceVersion: (string) (len=4) "8348",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8b795645-2341-40c1-adcf-8fd092148a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  37 39 35 36 34 35 2d 32  |d\":\"8b795645-2|
              00000090  33 34 31 2d 34 30 63 31  2d 61 64 63 66 2d 38 66  |341-40c1-adcf-8f|
              000000a0  64 30 39 32 31 34 38 61  31 32 5c 22 7d 22 3a 7b  |d092148a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dbf4t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dbf4t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:20:16.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4748" for this suite. @ 12/19/23 10:20:16.555
• [9.206 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/19/23 10:20:16.573
  Dec 19 10:20:16.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename events @ 12/19/23 10:20:16.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:16.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:16.765
  STEP: creating a test event @ 12/19/23 10:20:16.769
  STEP: listing events in all namespaces @ 12/19/23 10:20:16.905
  STEP: listing events in test namespace @ 12/19/23 10:20:16.952
  STEP: listing events with field selection filtering on source @ 12/19/23 10:20:16.99
  STEP: listing events with field selection filtering on reportingController @ 12/19/23 10:20:17.011
  STEP: getting the test event @ 12/19/23 10:20:17.03
  STEP: patching the test event @ 12/19/23 10:20:17.056
  STEP: getting the test event @ 12/19/23 10:20:17.12
  STEP: updating the test event @ 12/19/23 10:20:17.137
  STEP: getting the test event @ 12/19/23 10:20:17.181
  STEP: deleting the test event @ 12/19/23 10:20:17.206
  STEP: listing events in all namespaces @ 12/19/23 10:20:17.261
  STEP: listing events in test namespace @ 12/19/23 10:20:17.296
  Dec 19 10:20:17.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3208" for this suite. @ 12/19/23 10:20:17.327
• [0.786 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 12/19/23 10:20:17.363
  Dec 19 10:20:17.363: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 10:20:17.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:17.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:17.415
  STEP: creating the pod @ 12/19/23 10:20:17.421
  STEP: waiting for pod running @ 12/19/23 10:20:17.448
  STEP: creating a file in subpath @ 12/19/23 10:20:19.464
  Dec 19 10:20:19.490: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2023 PodName:var-expansion-a07f69cf-8948-4610-a6fb-a3a646ff44f7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:20:19.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:20:19.492: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:20:19.493: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2023/pods/var-expansion-a07f69cf-8948-4610-a6fb-a3a646ff44f7/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/19/23 10:20:19.664
  Dec 19 10:20:19.679: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2023 PodName:var-expansion-a07f69cf-8948-4610-a6fb-a3a646ff44f7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:20:19.680: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:20:19.681: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:20:19.681: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2023/pods/var-expansion-a07f69cf-8948-4610-a6fb-a3a646ff44f7/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/19/23 10:20:19.795
  Dec 19 10:20:20.353: INFO: Successfully updated pod "var-expansion-a07f69cf-8948-4610-a6fb-a3a646ff44f7"
  STEP: waiting for annotated pod running @ 12/19/23 10:20:20.353
  STEP: deleting the pod gracefully @ 12/19/23 10:20:20.36
  Dec 19 10:20:20.360: INFO: Deleting pod "var-expansion-a07f69cf-8948-4610-a6fb-a3a646ff44f7" in namespace "var-expansion-2023"
  Dec 19 10:20:20.377: INFO: Wait up to 5m0s for pod "var-expansion-a07f69cf-8948-4610-a6fb-a3a646ff44f7" to be fully deleted
  Dec 19 10:20:54.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2023" for this suite. @ 12/19/23 10:20:54.616
• [37.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/19/23 10:20:54.634
  Dec 19 10:20:54.634: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 10:20:54.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:54.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:54.692
  STEP: create the container @ 12/19/23 10:20:54.696
  W1219 10:20:54.714281      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/19/23 10:20:54.714
  STEP: get the container status @ 12/19/23 10:20:57.745
  STEP: the container should be terminated @ 12/19/23 10:20:57.754
  STEP: the termination message should be set @ 12/19/23 10:20:57.755
  Dec 19 10:20:57.755: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/19/23 10:20:57.755
  Dec 19 10:20:57.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7814" for this suite. @ 12/19/23 10:20:57.808
• [3.192 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 12/19/23 10:20:57.83
  Dec 19 10:20:57.830: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:20:57.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:57.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:57.877
  STEP: Creating configMap with name configmap-test-volume-map-e70a2cbb-ad2e-4f5a-8a16-e077cff709dd @ 12/19/23 10:20:57.884
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:20:57.894
  STEP: Saw pod success @ 12/19/23 10:20:59.932
  Dec 19 10:20:59.942: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-003eadf5-3d02-4988-9d60-0a0b81005636 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:20:59.96
  Dec 19 10:20:59.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5958" for this suite. @ 12/19/23 10:21:00.003
• [2.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 12/19/23 10:21:00.025
  Dec 19 10:21:00.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:21:00.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:00.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:00.086
  STEP: Creating configMap with name configmap-test-volume-aeebde99-cef9-48b2-a17d-a7a0a1a6a115 @ 12/19/23 10:21:00.096
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:21:00.108
  STEP: Saw pod success @ 12/19/23 10:21:04.169
  Dec 19 10:21:04.176: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-da7dcc90-2fb4-4ccc-ad84-1970da465eca container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:21:04.192
  Dec 19 10:21:04.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6292" for this suite. @ 12/19/23 10:21:04.232
• [4.219 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 12/19/23 10:21:04.245
  Dec 19 10:21:04.245: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 10:21:04.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:04.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:04.287
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 10:21:04.302
  STEP: create the pod with lifecycle hook @ 12/19/23 10:21:06.401
  STEP: check poststart hook @ 12/19/23 10:21:08.436
  STEP: delete the pod with lifecycle hook @ 12/19/23 10:21:08.456
  Dec 19 10:21:10.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1341" for this suite. @ 12/19/23 10:21:10.511
• [6.281 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 12/19/23 10:21:10.528
  Dec 19 10:21:10.528: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:21:10.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:10.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:10.573
  Dec 19 10:21:10.586: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/19/23 10:21:12.494
  Dec 19 10:21:12.495: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 create -f -'
  Dec 19 10:21:14.023: INFO: stderr: ""
  Dec 19 10:21:14.023: INFO: stdout: "e2e-test-crd-publish-openapi-8014-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 19 10:21:14.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 delete e2e-test-crd-publish-openapi-8014-crds test-cr'
  Dec 19 10:21:14.201: INFO: stderr: ""
  Dec 19 10:21:14.201: INFO: stdout: "e2e-test-crd-publish-openapi-8014-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Dec 19 10:21:14.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 apply -f -'
  Dec 19 10:21:15.205: INFO: stderr: ""
  Dec 19 10:21:15.205: INFO: stdout: "e2e-test-crd-publish-openapi-8014-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 19 10:21:15.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 delete e2e-test-crd-publish-openapi-8014-crds test-cr'
  Dec 19 10:21:15.368: INFO: stderr: ""
  Dec 19 10:21:15.368: INFO: stdout: "e2e-test-crd-publish-openapi-8014-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/19/23 10:21:15.368
  Dec 19 10:21:15.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-4390 explain e2e-test-crd-publish-openapi-8014-crds'
  Dec 19 10:21:15.915: INFO: stderr: ""
  Dec 19 10:21:15.915: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8014-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Dec 19 10:21:17.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4390" for this suite. @ 12/19/23 10:21:17.825
• [7.315 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 12/19/23 10:21:17.844
  Dec 19 10:21:17.844: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 10:21:17.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:17.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:17.897
  Dec 19 10:21:17.903: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 10:21:17.921: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 10:21:17.927: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-1 before test
  Dec 19 10:21:17.944: INFO: coredns-5dd5756b68-784pk from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.945: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 10:21:17.945: INFO: kube-addon-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.945: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:21:17.946: INFO: kube-apiserver-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.946: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:21:17.946: INFO: kube-controller-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.947: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:21:17.947: INFO: kube-flannel-ds-qkbv6 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.947: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:21:17.947: INFO: kube-proxy-dc2t9 from kube-system started at 2023-12-19 09:34:32 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.948: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:21:17.948: INFO: kube-scheduler-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.948: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:21:17.948: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-kdr9t from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:21:17.949: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:21:17.949: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:21:17.949: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-2 before test
  Dec 19 10:21:17.966: INFO: coredns-5dd5756b68-9m7mp from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.967: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 10:21:17.967: INFO: kube-addon-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.967: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:21:17.967: INFO: kube-apiserver-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.968: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:21:17.968: INFO: kube-controller-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.968: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:21:17.968: INFO: kube-flannel-ds-vhwc5 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.969: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:21:17.969: INFO: kube-proxy-7d2pb from kube-system started at 2023-12-19 09:34:59 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.969: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:21:17.970: INFO: kube-scheduler-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:49 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.971: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:21:17.971: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-5gp8h from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:21:17.971: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:21:17.971: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:21:17.972: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-3 before test
  Dec 19 10:21:17.986: INFO: kube-flannel-ds-rxkbr from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.986: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 10:21:17.987: INFO: kube-proxy-27g55 from kube-system started at 2023-12-19 09:35:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.987: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:21:17.988: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:59 +0000 UTC (1 container statuses recorded)
  Dec 19 10:21:17.988: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 10:21:17.988: INFO: sonobuoy-e2e-job-e8470151cf5a4de6 from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:21:17.989: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 10:21:17.989: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:21:17.990: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-7w8tz from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:21:17.990: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:21:17.991: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ja4hooch7za7-1 @ 12/19/23 10:21:18.028
  STEP: verifying the node has the label node ja4hooch7za7-2 @ 12/19/23 10:21:18.063
  STEP: verifying the node has the label node ja4hooch7za7-3 @ 12/19/23 10:21:18.108
  Dec 19 10:21:18.146: INFO: Pod coredns-5dd5756b68-784pk requesting resource cpu=100m on Node ja4hooch7za7-1
  Dec 19 10:21:18.147: INFO: Pod coredns-5dd5756b68-9m7mp requesting resource cpu=100m on Node ja4hooch7za7-2
  Dec 19 10:21:18.147: INFO: Pod kube-addon-manager-ja4hooch7za7-1 requesting resource cpu=5m on Node ja4hooch7za7-1
  Dec 19 10:21:18.148: INFO: Pod kube-addon-manager-ja4hooch7za7-2 requesting resource cpu=5m on Node ja4hooch7za7-2
  Dec 19 10:21:18.148: INFO: Pod kube-apiserver-ja4hooch7za7-1 requesting resource cpu=250m on Node ja4hooch7za7-1
  Dec 19 10:21:18.148: INFO: Pod kube-apiserver-ja4hooch7za7-2 requesting resource cpu=250m on Node ja4hooch7za7-2
  Dec 19 10:21:18.148: INFO: Pod kube-controller-manager-ja4hooch7za7-1 requesting resource cpu=200m on Node ja4hooch7za7-1
  Dec 19 10:21:18.148: INFO: Pod kube-controller-manager-ja4hooch7za7-2 requesting resource cpu=200m on Node ja4hooch7za7-2
  Dec 19 10:21:18.148: INFO: Pod kube-flannel-ds-qkbv6 requesting resource cpu=100m on Node ja4hooch7za7-1
  Dec 19 10:21:18.149: INFO: Pod kube-flannel-ds-rxkbr requesting resource cpu=100m on Node ja4hooch7za7-3
  Dec 19 10:21:18.149: INFO: Pod kube-flannel-ds-vhwc5 requesting resource cpu=100m on Node ja4hooch7za7-2
  Dec 19 10:21:18.149: INFO: Pod kube-proxy-27g55 requesting resource cpu=0m on Node ja4hooch7za7-3
  Dec 19 10:21:18.149: INFO: Pod kube-proxy-7d2pb requesting resource cpu=0m on Node ja4hooch7za7-2
  Dec 19 10:21:18.149: INFO: Pod kube-proxy-dc2t9 requesting resource cpu=0m on Node ja4hooch7za7-1
  Dec 19 10:21:18.149: INFO: Pod kube-scheduler-ja4hooch7za7-1 requesting resource cpu=100m on Node ja4hooch7za7-1
  Dec 19 10:21:18.149: INFO: Pod kube-scheduler-ja4hooch7za7-2 requesting resource cpu=100m on Node ja4hooch7za7-2
  Dec 19 10:21:18.149: INFO: Pod sonobuoy requesting resource cpu=0m on Node ja4hooch7za7-3
  Dec 19 10:21:18.149: INFO: Pod sonobuoy-e2e-job-e8470151cf5a4de6 requesting resource cpu=0m on Node ja4hooch7za7-3
  Dec 19 10:21:18.149: INFO: Pod sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-5gp8h requesting resource cpu=0m on Node ja4hooch7za7-2
  Dec 19 10:21:18.149: INFO: Pod sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-7w8tz requesting resource cpu=0m on Node ja4hooch7za7-3
  Dec 19 10:21:18.152: INFO: Pod sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-kdr9t requesting resource cpu=0m on Node ja4hooch7za7-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/19/23 10:21:18.152
  Dec 19 10:21:18.152: INFO: Creating a pod which consumes cpu=591m on Node ja4hooch7za7-2
  Dec 19 10:21:18.178: INFO: Creating a pod which consumes cpu=1050m on Node ja4hooch7za7-3
  Dec 19 10:21:18.198: INFO: Creating a pod which consumes cpu=591m on Node ja4hooch7za7-1
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/19/23 10:21:22.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-160fed68-67d5-4e58-8440-ca53c1bda715.17a2347325df3b65], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3469/filler-pod-160fed68-67d5-4e58-8440-ca53c1bda715 to ja4hooch7za7-1] @ 12/19/23 10:21:22.285
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-160fed68-67d5-4e58-8440-ca53c1bda715.17a2347352da030b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/19/23 10:21:22.285
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-160fed68-67d5-4e58-8440-ca53c1bda715.17a234736340c4bd], Reason = [Created], Message = [Created container filler-pod-160fed68-67d5-4e58-8440-ca53c1bda715] @ 12/19/23 10:21:22.285
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-160fed68-67d5-4e58-8440-ca53c1bda715.17a2347365aa5177], Reason = [Started], Message = [Started container filler-pod-160fed68-67d5-4e58-8440-ca53c1bda715] @ 12/19/23 10:21:22.285
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95.17a234732192313c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3469/filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95 to ja4hooch7za7-2] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Warning], Name = [filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95.17a234736c6df844], Reason = [FailedMount], Message = [MountVolume.SetUp failed for volume "kube-api-access-vnzrp" : failed to sync configmap cache: timed out waiting for the condition] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95.17a23473a98f0640], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95.17a23473b5a52b4d], Reason = [Created], Message = [Created container filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95.17a23473b7f9981a], Reason = [Started], Message = [Started container filler-pod-62baaabc-aad9-4b31-b6f3-b34f49f68e95] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e.17a234732226e45c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3469/filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e to ja4hooch7za7-3] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Warning], Name = [filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e.17a234736c71cead], Reason = [FailedMount], Message = [MountVolume.SetUp failed for volume "kube-api-access-pjxxd" : failed to sync configmap cache: timed out waiting for the condition] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e.17a23473aa3cd955], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e.17a23473b5bb4515], Reason = [Created], Message = [Created container filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e.17a23473b72fd9d3], Reason = [Started], Message = [Started container filler-pod-efb29278-9f06-4273-9039-72dcc2cb6d6e] @ 12/19/23 10:21:22.286
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17a2347416493f91], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] @ 12/19/23 10:21:22.315
  STEP: removing the label node off the node ja4hooch7za7-2 @ 12/19/23 10:21:23.311
  STEP: verifying the node doesn't have the label node @ 12/19/23 10:21:23.344
  STEP: removing the label node off the node ja4hooch7za7-3 @ 12/19/23 10:21:23.356
  STEP: verifying the node doesn't have the label node @ 12/19/23 10:21:23.388
  STEP: removing the label node off the node ja4hooch7za7-1 @ 12/19/23 10:21:23.408
  STEP: verifying the node doesn't have the label node @ 12/19/23 10:21:23.469
  Dec 19 10:21:23.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3469" for this suite. @ 12/19/23 10:21:23.493
• [5.671 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 12/19/23 10:21:23.517
  Dec 19 10:21:23.517: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 10:21:23.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:23.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:23.633
  Dec 19 10:21:23.731: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 10:22:23.838: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/19/23 10:22:23.849
  Dec 19 10:22:23.909: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 19 10:22:23.928: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 19 10:22:24.040: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 19 10:22:24.076: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Dec 19 10:22:24.164: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Dec 19 10:22:24.210: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/19/23 10:22:24.21
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/19/23 10:22:28.329
  Dec 19 10:22:32.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2356" for this suite. @ 12/19/23 10:22:33.062
• [69.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/19/23 10:22:33.111
  Dec 19 10:22:33.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename init-container @ 12/19/23 10:22:33.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:33.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:33.176
  STEP: creating the pod @ 12/19/23 10:22:33.193
  Dec 19 10:22:33.193: INFO: PodSpec: initContainers in spec.initContainers
  Dec 19 10:23:15.471: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-1e7d8f0f-39dc-4b44-883a-46fef904feb9", GenerateName:"", Namespace:"init-container-9138", SelfLink:"", UID:"b2f948a2-a1b9-449b-96c2-5dc144e795e7", ResourceVersion:"9510", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 22, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"193177208"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 22, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f860), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-tj8tz", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000c1b680), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tj8tz", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tj8tz", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tj8tz", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0045ca768), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ja4hooch7za7-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000418b60), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0045ca7f0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0045ca810)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0045ca818), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0045ca81c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0007d2c50), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 10, 22, 33, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 10, 22, 33, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 10, 22, 33, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 10, 22, 33, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.250", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.66.85", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.85"}}, StartTime:time.Date(2023, time.December, 19, 10, 22, 33, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000418c40)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000418cb0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"d59c675982d8692814ec9e1486d4c645cd86ad825ef33975a5db196cf2801592", ContainerID:"cri-o://d5288ea53ae632128868f740d161bbd56a6297b50f5433e08917ae912aaef55c", Started:(*bool)(0xc0045ca8ba), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000c1b700), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0045ca8cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000c1b6e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0045ca89f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Dec 19 10:23:15.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9138" for this suite. @ 12/19/23 10:23:15.502
• [42.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 12/19/23 10:23:15.585
  Dec 19 10:23:15.585: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:23:15.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:15.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:15.683
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/19/23 10:23:15.696
  STEP: Saw pod success @ 12/19/23 10:23:19.801
  Dec 19 10:23:19.812: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-18b11857-d036-48f0-b716-2be26d422feb container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:23:19.861
  Dec 19 10:23:19.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5389" for this suite. @ 12/19/23 10:23:19.923
• [4.360 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 12/19/23 10:23:19.947
  Dec 19 10:23:19.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:23:19.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:19.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:19.993
  STEP: creating a secret @ 12/19/23 10:23:20
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/19/23 10:23:20.014
  STEP: patching the secret @ 12/19/23 10:23:20.029
  STEP: deleting the secret using a LabelSelector @ 12/19/23 10:23:20.059
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/19/23 10:23:20.088
  Dec 19 10:23:20.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7611" for this suite. @ 12/19/23 10:23:20.119
• [0.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 12/19/23 10:23:20.144
  Dec 19 10:23:20.144: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:23:20.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:20.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:20.205
  Dec 19 10:23:20.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  W1219 10:23:23.203161      13 warnings.go:70] unknown field "alpha"
  W1219 10:23:23.203451      13 warnings.go:70] unknown field "beta"
  W1219 10:23:23.203580      13 warnings.go:70] unknown field "delta"
  W1219 10:23:23.203702      13 warnings.go:70] unknown field "epsilon"
  W1219 10:23:23.203825      13 warnings.go:70] unknown field "gamma"
  Dec 19 10:23:23.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1780" for this suite. @ 12/19/23 10:23:23.864
• [3.740 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 12/19/23 10:23:23.891
  Dec 19 10:23:23.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:23:23.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:23.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:23.96
  STEP: Setting up server cert @ 12/19/23 10:23:24.02
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:23:24.577
  STEP: Deploying the webhook pod @ 12/19/23 10:23:24.606
  STEP: Wait for the deployment to be ready @ 12/19/23 10:23:24.639
  Dec 19 10:23:24.670: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:23:26.708
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:23:26.755
  Dec 19 10:23:27.755: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/19/23 10:23:27.806
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 10:23:27.871
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/19/23 10:23:27.896
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 10:23:27.924
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/19/23 10:23:27.953
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 10:23:27.972
  Dec 19 10:23:27.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9285" for this suite. @ 12/19/23 10:23:28.159
  STEP: Destroying namespace "webhook-markers-7179" for this suite. @ 12/19/23 10:23:28.187
• [4.317 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/19/23 10:23:28.209
  Dec 19 10:23:28.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 10:23:28.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:28.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:28.291
  STEP: create the container @ 12/19/23 10:23:28.298
  W1219 10:23:28.364378      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/19/23 10:23:28.365
  STEP: get the container status @ 12/19/23 10:23:31.414
  STEP: the container should be terminated @ 12/19/23 10:23:31.423
  STEP: the termination message should be set @ 12/19/23 10:23:31.423
  Dec 19 10:23:31.423: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/19/23 10:23:31.424
  Dec 19 10:23:31.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6820" for this suite. @ 12/19/23 10:23:31.492
• [3.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 12/19/23 10:23:31.566
  Dec 19 10:23:31.566: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:23:31.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:31.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:31.63
  STEP: Counting existing ResourceQuota @ 12/19/23 10:23:31.645
  STEP: Creating a ResourceQuota @ 12/19/23 10:23:36.654
  STEP: Ensuring resource quota status is calculated @ 12/19/23 10:23:36.668
  STEP: Creating a ReplicaSet @ 12/19/23 10:23:38.681
  STEP: Ensuring resource quota status captures replicaset creation @ 12/19/23 10:23:38.713
  STEP: Deleting a ReplicaSet @ 12/19/23 10:23:40.723
  STEP: Ensuring resource quota status released usage @ 12/19/23 10:23:40.739
  Dec 19 10:23:42.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7180" for this suite. @ 12/19/23 10:23:42.757
• [11.209 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 12/19/23 10:23:42.778
  Dec 19 10:23:42.779: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 10:23:42.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:42.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:42.833
  STEP: Creating a pod to test substitution in container's args @ 12/19/23 10:23:42.839
  STEP: Saw pod success @ 12/19/23 10:23:46.893
  Dec 19 10:23:46.900: INFO: Trying to get logs from node ja4hooch7za7-3 pod var-expansion-4518d6bd-b66e-4b43-b3f6-49a40b397a3d container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 10:23:46.929
  Dec 19 10:23:46.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-511" for this suite. @ 12/19/23 10:23:46.985
• [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 12/19/23 10:23:47.006
  Dec 19 10:23:47.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename server-version @ 12/19/23 10:23:47.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:47.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:47.052
  STEP: Request ServerVersion @ 12/19/23 10:23:47.059
  STEP: Confirm major version @ 12/19/23 10:23:47.064
  Dec 19 10:23:47.064: INFO: Major version: 1
  STEP: Confirm minor version @ 12/19/23 10:23:47.064
  Dec 19 10:23:47.064: INFO: cleanMinorVersion: 28
  Dec 19 10:23:47.064: INFO: Minor version: 28
  Dec 19 10:23:47.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4333" for this suite. @ 12/19/23 10:23:47.073
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 12/19/23 10:23:47.088
  Dec 19 10:23:47.088: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename limitrange @ 12/19/23 10:23:47.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:47.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:47.137
  STEP: Creating LimitRange "e2e-limitrange-bpfgh" in namespace "limitrange-9672" @ 12/19/23 10:23:47.143
  STEP: Creating another limitRange in another namespace @ 12/19/23 10:23:47.166
  Dec 19 10:23:47.194: INFO: Namespace "e2e-limitrange-bpfgh-4180" created
  Dec 19 10:23:47.194: INFO: Creating LimitRange "e2e-limitrange-bpfgh" in namespace "e2e-limitrange-bpfgh-4180"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-bpfgh" @ 12/19/23 10:23:47.204
  Dec 19 10:23:47.212: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-bpfgh" in "limitrange-9672" namespace @ 12/19/23 10:23:47.212
  Dec 19 10:23:47.230: INFO: LimitRange "e2e-limitrange-bpfgh" has been patched
  STEP: Delete LimitRange "e2e-limitrange-bpfgh" by Collection with labelSelector: "e2e-limitrange-bpfgh=patched" @ 12/19/23 10:23:47.231
  STEP: Confirm that the limitRange "e2e-limitrange-bpfgh" has been deleted @ 12/19/23 10:23:47.263
  Dec 19 10:23:47.263: INFO: Requesting list of LimitRange to confirm quantity
  Dec 19 10:23:47.269: INFO: Found 0 LimitRange with label "e2e-limitrange-bpfgh=patched"
  Dec 19 10:23:47.270: INFO: LimitRange "e2e-limitrange-bpfgh" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-bpfgh" @ 12/19/23 10:23:47.27
  Dec 19 10:23:47.278: INFO: Found 1 limitRange
  Dec 19 10:23:47.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9672" for this suite. @ 12/19/23 10:23:47.286
  STEP: Destroying namespace "e2e-limitrange-bpfgh-4180" for this suite. @ 12/19/23 10:23:47.301
• [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/19/23 10:23:47.326
  Dec 19 10:23:47.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename tables @ 12/19/23 10:23:47.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:47.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:47.4
  Dec 19 10:23:47.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4702" for this suite. @ 12/19/23 10:23:47.442
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 12/19/23 10:23:47.458
  Dec 19 10:23:47.458: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 10:23:47.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:47.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:47.52
  Dec 19 10:23:47.584: INFO: created pod pod-service-account-defaultsa
  Dec 19 10:23:47.584: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Dec 19 10:23:47.613: INFO: created pod pod-service-account-mountsa
  Dec 19 10:23:47.613: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Dec 19 10:23:47.622: INFO: created pod pod-service-account-nomountsa
  Dec 19 10:23:47.622: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Dec 19 10:23:47.640: INFO: created pod pod-service-account-defaultsa-mountspec
  Dec 19 10:23:47.640: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Dec 19 10:23:47.669: INFO: created pod pod-service-account-mountsa-mountspec
  Dec 19 10:23:47.669: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Dec 19 10:23:47.685: INFO: created pod pod-service-account-nomountsa-mountspec
  Dec 19 10:23:47.685: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Dec 19 10:23:47.701: INFO: created pod pod-service-account-defaultsa-nomountspec
  Dec 19 10:23:47.701: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Dec 19 10:23:47.716: INFO: created pod pod-service-account-mountsa-nomountspec
  Dec 19 10:23:47.716: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Dec 19 10:23:47.740: INFO: created pod pod-service-account-nomountsa-nomountspec
  Dec 19 10:23:47.740: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Dec 19 10:23:47.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8169" for this suite. @ 12/19/23 10:23:47.788
• [0.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 12/19/23 10:23:47.854
  Dec 19 10:23:47.854: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:23:47.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:47.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:47.916
  STEP: Setting up server cert @ 12/19/23 10:23:48.001
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:23:49.119
  STEP: Deploying the webhook pod @ 12/19/23 10:23:49.135
  STEP: Wait for the deployment to be ready @ 12/19/23 10:23:49.164
  Dec 19 10:23:49.180: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:23:51.202
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:23:51.224
  Dec 19 10:23:52.224: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/19/23 10:23:52.242
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/19/23 10:23:52.339
  Dec 19 10:23:52.339: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:23:52.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9945" for this suite. @ 12/19/23 10:23:52.574
  STEP: Destroying namespace "webhook-markers-6699" for this suite. @ 12/19/23 10:23:52.609
• [4.795 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 12/19/23 10:23:52.654
  Dec 19 10:23:52.654: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 10:23:52.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:52.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:52.712
  Dec 19 10:24:00.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5846" for this suite. @ 12/19/23 10:24:00.918
• [8.284 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 12/19/23 10:24:00.941
  Dec 19 10:24:00.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:24:00.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:00.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:00.992
  STEP: Creating a pod to test downward api env vars @ 12/19/23 10:24:00.997
  STEP: Saw pod success @ 12/19/23 10:24:05.062
  Dec 19 10:24:05.073: INFO: Trying to get logs from node ja4hooch7za7-3 pod downward-api-75f8d7bd-5c18-48b4-af42-f6218896f979 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 10:24:05.097
  Dec 19 10:24:05.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3693" for this suite. @ 12/19/23 10:24:05.152
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 12/19/23 10:24:05.187
  Dec 19 10:24:05.187: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 10:24:05.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:05.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:05.233
  STEP: reading a file in the container @ 12/19/23 10:24:07.334
  Dec 19 10:24:07.335: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3239 pod-service-account-337aaf26-f9f7-43ca-b163-be563c9cce92 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/19/23 10:24:07.639
  Dec 19 10:24:07.640: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3239 pod-service-account-337aaf26-f9f7-43ca-b163-be563c9cce92 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/19/23 10:24:07.939
  Dec 19 10:24:07.940: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3239 pod-service-account-337aaf26-f9f7-43ca-b163-be563c9cce92 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Dec 19 10:24:08.227: INFO: Got root ca configmap in namespace "svcaccounts-3239"
  Dec 19 10:24:08.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3239" for this suite. @ 12/19/23 10:24:08.241
• [3.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 12/19/23 10:24:08.256
  Dec 19 10:24:08.256: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 10:24:08.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:08.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:08.323
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 10:24:08.378
  STEP: create the pod with lifecycle hook @ 12/19/23 10:24:10.482
  STEP: delete the pod with lifecycle hook @ 12/19/23 10:24:12.534
  STEP: check prestop hook @ 12/19/23 10:24:16.574
  Dec 19 10:24:16.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3258" for this suite. @ 12/19/23 10:24:16.605
• [8.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/19/23 10:24:16.623
  Dec 19 10:24:16.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:24:16.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:16.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:16.663
  STEP: Creating configMap with name configmap-projected-all-test-volume-f3e4b176-5ac0-4023-9426-cec916af24c5 @ 12/19/23 10:24:16.67
  STEP: Creating secret with name secret-projected-all-test-volume-846644e4-c80c-45e9-94da-93bda16598e3 @ 12/19/23 10:24:16.679
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/19/23 10:24:16.689
  STEP: Saw pod success @ 12/19/23 10:24:20.739
  Dec 19 10:24:20.749: INFO: Trying to get logs from node ja4hooch7za7-3 pod projected-volume-d493825d-d5e2-4376-a541-a33a5bb55ae6 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:24:20.766
  Dec 19 10:24:20.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1979" for this suite. @ 12/19/23 10:24:20.821
• [4.216 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 12/19/23 10:24:20.842
  Dec 19 10:24:20.842: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename job @ 12/19/23 10:24:20.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:20.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:20.885
  STEP: Creating Indexed job @ 12/19/23 10:24:20.89
  STEP: Ensuring job reaches completions @ 12/19/23 10:24:20.899
  STEP: Ensuring pods with index for job exist @ 12/19/23 10:24:28.912
  Dec 19 10:24:28.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-969" for this suite. @ 12/19/23 10:24:28.939
• [8.113 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 12/19/23 10:24:28.955
  Dec 19 10:24:28.955: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:24:28.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:28.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:28.998
  STEP: Creating pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931 @ 12/19/23 10:24:29.004
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:24:31.037
  Dec 19 10:24:31.044: INFO: Initial restart count of pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 is 0
  Dec 19 10:24:31.052: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:33.064: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:35.071: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:37.078: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:39.089: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:41.096: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:43.103: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:45.113: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:47.123: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:49.134: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:51.141: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:53.153: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:55.162: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:57.171: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:24:59.180: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:01.187: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:03.195: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:05.204: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:07.214: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:09.224: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:11.231: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:13.240: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:15.255: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:17.268: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:19.281: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:21.289: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:23.299: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:25.310: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:27.321: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:29.330: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:31.341: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:33.351: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:35.366: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:37.377: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:39.392: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:41.406: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:43.416: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:45.426: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:47.436: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:49.447: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:51.457: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:53.466: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:55.474: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:57.487: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:25:59.499: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:01.514: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:03.522: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:05.534: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:07.547: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:09.560: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:11.570: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:13.582: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:15.593: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:17.603: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:19.635: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:21.645: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:23.657: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:25.667: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:27.677: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:29.690: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:31.702: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:33.711: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:35.720: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:37.731: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:39.742: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:41.754: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:43.764: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:45.775: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:47.785: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:49.798: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:51.812: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:53.832: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:55.842: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:57.861: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:26:59.874: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:01.888: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:03.897: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:05.908: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:07.923: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:09.933: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:11.944: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:13.956: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:15.966: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:17.973: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:19.983: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:21.996: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:24.006: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:26.016: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:28.025: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:30.035: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:32.047: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:34.064: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:36.073: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:38.083: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:40.098: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:42.109: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:44.119: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:46.129: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:48.140: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:50.152: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:52.163: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:54.174: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:56.184: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:27:58.192: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:00.204: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:02.213: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:04.223: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:06.233: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:08.246: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:10.259: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:12.268: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:14.278: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:16.285: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:18.293: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:20.302: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:22.314: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:24.322: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:26.333: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:28.339: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:30.350: INFO: Get pod busybox-66d310a5-1e1c-4f99-a225-0bbcc4b4eba3 in namespace container-probe-8931
  Dec 19 10:28:32.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 10:28:32.362
  STEP: Destroying namespace "container-probe-8931" for this suite. @ 12/19/23 10:28:32.389
• [243.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 12/19/23 10:28:32.415
  Dec 19 10:28:32.415: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:28:32.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:28:32.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:28:32.46
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/19/23 10:28:32.465
  Dec 19 10:28:32.466: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/19/23 10:28:40.433
  Dec 19 10:28:40.435: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:28:42.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:28:49.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6623" for this suite. @ 12/19/23 10:28:49.625
• [17.224 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 12/19/23 10:28:49.641
  Dec 19 10:28:49.642: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:28:49.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:28:49.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:28:49.681
  STEP: Creating configMap with name configmap-test-volume-3df136a2-0c8a-4a57-afb5-6b4b657b065b @ 12/19/23 10:28:49.686
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:28:49.695
  STEP: Saw pod success @ 12/19/23 10:28:53.741
  Dec 19 10:28:53.752: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-1492dfe9-72a9-41db-9f73-824ba8d413e6 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:28:53.829
  Dec 19 10:28:53.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8170" for this suite. @ 12/19/23 10:28:53.879
• [4.254 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 12/19/23 10:28:53.899
  Dec 19 10:28:53.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:28:53.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:28:53.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:28:53.934
  STEP: Creating configMap with name cm-test-opt-del-23837333-654d-4eec-bb75-26c93063bc82 @ 12/19/23 10:28:53.948
  STEP: Creating configMap with name cm-test-opt-upd-6d41cb81-22d7-4106-aa79-201c747fe000 @ 12/19/23 10:28:53.957
  STEP: Creating the pod @ 12/19/23 10:28:53.967
  STEP: Deleting configmap cm-test-opt-del-23837333-654d-4eec-bb75-26c93063bc82 @ 12/19/23 10:28:58.097
  STEP: Updating configmap cm-test-opt-upd-6d41cb81-22d7-4106-aa79-201c747fe000 @ 12/19/23 10:28:58.109
  STEP: Creating configMap with name cm-test-opt-create-144900e3-d4b1-4462-a5aa-2b5233ef9e04 @ 12/19/23 10:28:58.118
  STEP: waiting to observe update in volume @ 12/19/23 10:28:58.126
  Dec 19 10:30:21.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9825" for this suite. @ 12/19/23 10:30:21.174
• [87.290 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 12/19/23 10:30:21.193
  Dec 19 10:30:21.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename gc @ 12/19/23 10:30:21.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:21.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:21.244
  Dec 19 10:30:21.534: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"47a1e6cd-4b64-4206-bafd-2b4fdcbda996", Controller:(*bool)(0xc00164db0e), BlockOwnerDeletion:(*bool)(0xc00164db0f)}}
  Dec 19 10:30:21.589: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"cfc777ee-16df-4c4e-8f8a-2361549d1d43", Controller:(*bool)(0xc004576746), BlockOwnerDeletion:(*bool)(0xc004576747)}}
  Dec 19 10:30:21.679: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"166659f5-aef5-4754-87a0-7ecbf32914ac", Controller:(*bool)(0xc00164ddae), BlockOwnerDeletion:(*bool)(0xc00164ddaf)}}
  Dec 19 10:30:26.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3665" for this suite. @ 12/19/23 10:30:26.762
• [5.594 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 12/19/23 10:30:26.792
  Dec 19 10:30:26.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:30:26.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:26.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:26.873
  STEP: validating cluster-info @ 12/19/23 10:30:26.881
  Dec 19 10:30:26.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-8045 cluster-info'
  Dec 19 10:30:27.120: INFO: stderr: ""
  Dec 19 10:30:27.120: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Dec 19 10:30:27.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8045" for this suite. @ 12/19/23 10:30:27.141
• [0.363 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/19/23 10:30:27.156
  Dec 19 10:30:27.156: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename init-container @ 12/19/23 10:30:27.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:27.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:27.21
  STEP: creating the pod @ 12/19/23 10:30:27.222
  Dec 19 10:30:27.222: INFO: PodSpec: initContainers in spec.initContainers
  Dec 19 10:30:30.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9783" for this suite. @ 12/19/23 10:30:30.934
• [3.799 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 12/19/23 10:30:30.959
  Dec 19 10:30:30.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:30:30.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:30.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:30.997
  STEP: Creating service test in namespace statefulset-8905 @ 12/19/23 10:30:31.003
  Dec 19 10:30:31.059: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 10:30:41.071: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/19/23 10:30:41.087
  W1219 10:30:41.105519      13 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Dec 19 10:30:41.133: INFO: Found 1 stateful pods, waiting for 2
  Dec 19 10:30:51.143: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:30:51.143: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/19/23 10:30:51.172
  STEP: Delete all of the StatefulSets @ 12/19/23 10:30:51.187
  STEP: Verify that StatefulSets have been deleted @ 12/19/23 10:30:51.208
  Dec 19 10:30:51.218: INFO: Deleting all statefulset in ns statefulset-8905
  Dec 19 10:30:51.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8905" for this suite. @ 12/19/23 10:30:51.35
• [20.468 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/19/23 10:30:51.429
  Dec 19 10:30:51.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/19/23 10:30:51.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:51.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:51.548
  STEP: mirroring a new custom Endpoint @ 12/19/23 10:30:51.698
  Dec 19 10:30:51.759: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/19/23 10:30:53.768
  STEP: mirroring deletion of a custom Endpoint @ 12/19/23 10:30:53.802
  Dec 19 10:30:53.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9704" for this suite. @ 12/19/23 10:30:53.867
• [2.469 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 12/19/23 10:30:53.899
  Dec 19 10:30:53.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:30:53.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:53.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:53.969
  STEP: Setting up server cert @ 12/19/23 10:30:54.025
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:30:55.183
  STEP: Deploying the webhook pod @ 12/19/23 10:30:55.198
  STEP: Wait for the deployment to be ready @ 12/19/23 10:30:55.225
  Dec 19 10:30:55.246: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/19/23 10:30:57.274
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:30:57.3
  Dec 19 10:30:58.301: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/19/23 10:30:58.326
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 10:30:58.326
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/19/23 10:30:58.384
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/19/23 10:30:59.403
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 10:30:59.404
  STEP: Having no error when timeout is longer than webhook latency @ 12/19/23 10:31:00.467
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 10:31:00.467
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/19/23 10:31:05.55
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 10:31:05.55
  Dec 19 10:31:10.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4800" for this suite. @ 12/19/23 10:31:10.817
  STEP: Destroying namespace "webhook-markers-9818" for this suite. @ 12/19/23 10:31:10.832
• [16.951 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/19/23 10:31:10.851
  Dec 19 10:31:10.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 10:31:10.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:31:10.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:31:10.955
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/19/23 10:31:11
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/19/23 10:31:25.157
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/19/23 10:31:25.163
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/19/23 10:31:25.177
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 12/19/23 10:31:25.177
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/19/23 10:31:25.221
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/19/23 10:31:28.271
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/19/23 10:31:29.289
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/19/23 10:31:29.314
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 12/19/23 10:31:29.315
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/19/23 10:31:29.359
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/19/23 10:31:30.399
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/19/23 10:31:31.427
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/19/23 10:31:31.441
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 12/19/23 10:31:31.442
  Dec 19 10:31:31.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2343" for this suite. @ 12/19/23 10:31:31.529
• [20.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 12/19/23 10:31:31.554
  Dec 19 10:31:31.554: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:31:31.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:31:31.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:31:31.604
  STEP: Creating pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036 @ 12/19/23 10:31:31.609
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:31:33.641
  Dec 19 10:31:33.648: INFO: Initial restart count of pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 is 0
  Dec 19 10:31:33.654: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:35.666: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:37.675: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:39.685: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:41.694: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:43.707: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:45.716: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:47.728: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:49.737: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:51.750: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:53.762: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:55.778: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:57.788: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:31:59.801: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:01.807: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:03.815: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:05.831: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:07.843: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:09.851: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:11.864: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:13.880: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:15.890: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:17.903: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:19.918: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:21.929: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:23.942: INFO: Get pod busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 in namespace container-probe-5036
  Dec 19 10:32:23.942: INFO: Restart count of pod container-probe-5036/busybox-b0c7a5d2-a44d-4934-a2ff-0d6e0bf49154 is now 1 (50.293852474s elapsed)
  Dec 19 10:32:23.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 10:32:23.952
  STEP: Destroying namespace "container-probe-5036" for this suite. @ 12/19/23 10:32:23.983
• [52.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 12/19/23 10:32:24.031
  Dec 19 10:32:24.032: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 10:32:24.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:32:24.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:32:24.074
  STEP: Performing setup for networking test in namespace pod-network-test-1767 @ 12/19/23 10:32:24.081
  STEP: creating a selector @ 12/19/23 10:32:24.081
  STEP: Creating the service pods in kubernetes @ 12/19/23 10:32:24.081
  Dec 19 10:32:24.082: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 10:32:36.303
  Dec 19 10:32:38.435: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 10:32:38.435: INFO: Going to poll 10.233.64.26 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:32:38.441: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.26 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1767 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:32:38.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:32:38.444: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:32:38.445: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1767/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.26+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:32:39.591: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 19 10:32:39.591: INFO: Going to poll 10.233.65.31 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:32:39.611: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.31 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1767 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:32:39.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:32:39.629: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:32:39.630: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1767/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.31+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:32:40.761: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 19 10:32:40.762: INFO: Going to poll 10.233.66.119 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:32:40.771: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1767 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:32:40.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:32:40.773: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:32:40.773: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1767/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:32:41.894: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 19 10:32:41.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1767" for this suite. @ 12/19/23 10:32:41.91
• [17.895 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 12/19/23 10:32:41.933
  Dec 19 10:32:41.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:32:41.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:32:41.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:32:41.985
  STEP: Creating pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771 @ 12/19/23 10:32:41.993
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:32:44.026
  Dec 19 10:32:44.037: INFO: Initial restart count of pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df is 0
  Dec 19 10:32:44.048: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:32:46.057: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:32:48.067: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:32:50.076: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:32:52.089: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:32:54.096: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:32:56.104: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:32:58.113: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:00.122: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:02.131: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:04.141: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:06.151: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:08.161: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:10.170: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:12.184: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:14.192: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:16.206: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:18.215: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:20.230: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:22.239: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:24.248: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:26.259: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:28.268: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:30.282: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:32.291: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:34.301: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:36.308: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:38.333: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:40.350: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:42.363: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:44.371: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:46.380: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:48.390: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:50.397: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:52.408: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:54.417: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:56.437: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:33:58.444: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:00.450: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:02.460: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:04.470: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:06.480: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:08.491: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:10.498: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:12.508: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:14.516: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:16.526: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:18.535: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:20.545: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:22.555: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:24.564: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:26.573: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:28.587: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:30.598: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:32.607: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:34.623: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:36.633: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:38.645: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:40.653: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:42.661: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:44.670: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:46.685: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:48.696: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:50.705: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:52.718: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:54.727: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:56.739: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:34:58.747: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:00.756: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:02.765: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:04.775: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:06.785: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:08.799: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:10.809: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:12.816: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:14.828: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:16.838: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:18.847: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:20.853: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:22.866: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:24.880: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:26.892: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:28.905: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:30.915: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:32.922: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:34.931: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:36.943: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:38.951: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:40.960: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:42.968: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:44.980: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:46.989: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:48.997: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:51.005: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:53.015: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:55.026: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:57.038: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:35:59.044: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:01.051: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:03.059: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:05.068: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:07.076: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:09.084: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:11.093: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:13.101: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:15.110: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:17.119: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:19.127: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:21.135: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:23.145: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:25.152: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:27.163: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:29.174: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:31.184: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:33.194: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:35.201: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:37.210: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:39.223: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:41.232: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:43.239: INFO: Get pod test-webserver-d9a13fde-2edb-402f-9b3a-495d37da77df in namespace container-probe-4771
  Dec 19 10:36:45.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 10:36:45.253
  STEP: Destroying namespace "container-probe-4771" for this suite. @ 12/19/23 10:36:45.276
• [243.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 12/19/23 10:36:45.308
  Dec 19 10:36:45.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 10:36:45.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:36:45.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:36:45.346
  STEP: referencing a single matching pod @ 12/19/23 10:36:50.532
  STEP: referencing matching pods with named port @ 12/19/23 10:36:55.552
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/19/23 10:37:00.568
  STEP: recreating EndpointSlices after they've been deleted @ 12/19/23 10:37:05.588
  Dec 19 10:37:05.638: INFO: EndpointSlice for Service endpointslice-8474/example-named-port not found
  Dec 19 10:37:15.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8474" for this suite. @ 12/19/23 10:37:15.667
• [30.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 12/19/23 10:37:15.695
  Dec 19 10:37:15.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:37:15.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:15.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:15.738
  Dec 19 10:37:15.745: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  W1219 10:37:18.525458      13 warnings.go:70] unknown field "alpha"
  W1219 10:37:18.526164      13 warnings.go:70] unknown field "beta"
  W1219 10:37:18.526700      13 warnings.go:70] unknown field "delta"
  W1219 10:37:18.527206      13 warnings.go:70] unknown field "epsilon"
  W1219 10:37:18.527670      13 warnings.go:70] unknown field "gamma"
  Dec 19 10:37:19.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9798" for this suite. @ 12/19/23 10:37:19.161
• [3.493 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 12/19/23 10:37:19.193
  Dec 19 10:37:19.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:37:19.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:19.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:19.256
  Dec 19 10:37:19.283: INFO: Creating ReplicaSet my-hostname-basic-b46cdfd2-eaae-47c4-a616-f46a51284c99
  Dec 19 10:37:19.380: INFO: Pod name my-hostname-basic-b46cdfd2-eaae-47c4-a616-f46a51284c99: Found 1 pods out of 1
  Dec 19 10:37:19.382: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-b46cdfd2-eaae-47c4-a616-f46a51284c99" is running
  Dec 19 10:37:21.439: INFO: Pod "my-hostname-basic-b46cdfd2-eaae-47c4-a616-f46a51284c99-kqbl6" is running (conditions: [{Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 10:37:19 +0000 UTC Reason: Message:}])
  Dec 19 10:37:21.439: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/19/23 10:37:21.44
  Dec 19 10:37:21.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-96" for this suite. @ 12/19/23 10:37:21.495
• [2.323 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 12/19/23 10:37:21.518
  Dec 19 10:37:21.518: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:37:21.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:21.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:21.567
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:37:21.572
  STEP: Saw pod success @ 12/19/23 10:37:25.638
  Dec 19 10:37:25.649: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-acc5bd0a-63c3-4109-b05a-897b682be455 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:37:25.697
  Dec 19 10:37:25.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-695" for this suite. @ 12/19/23 10:37:25.751
• [4.252 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 12/19/23 10:37:25.771
  Dec 19 10:37:25.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:37:25.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:25.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:25.819
  STEP: Creating the pod @ 12/19/23 10:37:25.825
  Dec 19 10:37:28.406: INFO: Successfully updated pod "annotationupdateba89f076-4088-467d-a4ea-9064e2b66458"
  Dec 19 10:37:30.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7599" for this suite. @ 12/19/23 10:37:30.447
• [4.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 12/19/23 10:37:30.475
  Dec 19 10:37:30.475: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename job @ 12/19/23 10:37:30.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:30.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:30.523
  STEP: Creating a job @ 12/19/23 10:37:30.527
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/19/23 10:37:30.541
  STEP: patching /status @ 12/19/23 10:37:32.55
  STEP: updating /status @ 12/19/23 10:37:32.563
  STEP: get /status @ 12/19/23 10:37:32.58
  Dec 19 10:37:32.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5848" for this suite. @ 12/19/23 10:37:32.6
• [2.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 12/19/23 10:37:32.616
  Dec 19 10:37:32.616: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 10:37:32.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:32.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:32.659
  STEP: Creating a ReplaceConcurrent cronjob @ 12/19/23 10:37:32.665
  STEP: Ensuring a job is scheduled @ 12/19/23 10:37:32.679
  STEP: Ensuring exactly one is scheduled @ 12/19/23 10:38:00.688
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/19/23 10:38:00.694
  STEP: Ensuring the job is replaced with a new one @ 12/19/23 10:38:00.702
  STEP: Removing cronjob @ 12/19/23 10:39:00.715
  Dec 19 10:39:00.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8465" for this suite. @ 12/19/23 10:39:00.754
• [88.165 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 12/19/23 10:39:00.785
  Dec 19 10:39:00.785: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:39:00.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:00.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:00.842
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:39:00.846
  STEP: Saw pod success @ 12/19/23 10:39:04.887
  Dec 19 10:39:04.901: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-2ef606fb-f1f6-4046-a5c6-dd335474c032 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:39:04.937
  Dec 19 10:39:04.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7996" for this suite. @ 12/19/23 10:39:04.975
• [4.204 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 12/19/23 10:39:04.99
  Dec 19 10:39:04.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 10:39:04.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:05.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:05.037
  STEP: creating a Namespace @ 12/19/23 10:39:05.049
  STEP: patching the Namespace @ 12/19/23 10:39:05.082
  STEP: get the Namespace and ensuring it has the label @ 12/19/23 10:39:05.094
  Dec 19 10:39:05.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5952" for this suite. @ 12/19/23 10:39:05.109
  STEP: Destroying namespace "nspatchtest-8307acc5-3b5e-4302-b5ed-2c6895abffe5-6659" for this suite. @ 12/19/23 10:39:05.121
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 12/19/23 10:39:05.139
  Dec 19 10:39:05.139: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 10:39:05.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:05.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:05.177
  STEP: creating a ServiceAccount @ 12/19/23 10:39:05.181
  STEP: watching for the ServiceAccount to be added @ 12/19/23 10:39:05.2
  STEP: patching the ServiceAccount @ 12/19/23 10:39:05.207
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/19/23 10:39:05.219
  STEP: deleting the ServiceAccount @ 12/19/23 10:39:05.227
  Dec 19 10:39:05.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2743" for this suite. @ 12/19/23 10:39:05.263
• [0.140 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 12/19/23 10:39:05.282
  Dec 19 10:39:05.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:39:05.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:05.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:05.337
  STEP: creating an Endpoint @ 12/19/23 10:39:05.352
  STEP: waiting for available Endpoint @ 12/19/23 10:39:05.359
  STEP: listing all Endpoints @ 12/19/23 10:39:05.361
  STEP: updating the Endpoint @ 12/19/23 10:39:05.367
  STEP: fetching the Endpoint @ 12/19/23 10:39:05.377
  STEP: patching the Endpoint @ 12/19/23 10:39:05.382
  STEP: fetching the Endpoint @ 12/19/23 10:39:05.396
  STEP: deleting the Endpoint by Collection @ 12/19/23 10:39:05.402
  STEP: waiting for Endpoint deletion @ 12/19/23 10:39:05.414
  STEP: fetching the Endpoint @ 12/19/23 10:39:05.418
  Dec 19 10:39:05.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-594" for this suite. @ 12/19/23 10:39:05.431
• [0.160 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/19/23 10:39:05.443
  Dec 19 10:39:05.443: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename watch @ 12/19/23 10:39:05.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:05.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:05.475
  STEP: creating a watch on configmaps with a certain label @ 12/19/23 10:39:05.479
  STEP: creating a new configmap @ 12/19/23 10:39:05.48
  STEP: modifying the configmap once @ 12/19/23 10:39:05.487
  STEP: changing the label value of the configmap @ 12/19/23 10:39:05.499
  STEP: Expecting to observe a delete notification for the watched object @ 12/19/23 10:39:05.509
  Dec 19 10:39:05.509: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3577  f5c70032-8bcb-4d48-8daf-a197ee8d5770 12745 0 2023-12-19 10:39:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:39:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:39:05.509: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3577  f5c70032-8bcb-4d48-8daf-a197ee8d5770 12746 0 2023-12-19 10:39:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:39:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:39:05.509: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3577  f5c70032-8bcb-4d48-8daf-a197ee8d5770 12747 0 2023-12-19 10:39:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:39:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/19/23 10:39:05.51
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/19/23 10:39:05.522
  STEP: changing the label value of the configmap back @ 12/19/23 10:39:15.524
  STEP: modifying the configmap a third time @ 12/19/23 10:39:15.54
  STEP: deleting the configmap @ 12/19/23 10:39:15.554
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/19/23 10:39:15.564
  Dec 19 10:39:15.564: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3577  f5c70032-8bcb-4d48-8daf-a197ee8d5770 12806 0 2023-12-19 10:39:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:39:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:39:15.565: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3577  f5c70032-8bcb-4d48-8daf-a197ee8d5770 12807 0 2023-12-19 10:39:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:39:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:39:15.565: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3577  f5c70032-8bcb-4d48-8daf-a197ee8d5770 12808 0 2023-12-19 10:39:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:39:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:39:15.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3577" for this suite. @ 12/19/23 10:39:15.576
• [10.145 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 12/19/23 10:39:15.59
  Dec 19 10:39:15.590: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:39:15.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:15.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:15.635
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:39:15.641
  STEP: Saw pod success @ 12/19/23 10:39:19.691
  Dec 19 10:39:19.698: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-d52d9f13-25a2-4025-84f2-09754b5b9bee container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:39:19.709
  Dec 19 10:39:19.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2363" for this suite. @ 12/19/23 10:39:19.75
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 12/19/23 10:39:19.766
  Dec 19 10:39:19.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 10:39:19.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:19.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:19.808
  Dec 19 10:39:21.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4370" for this suite. @ 12/19/23 10:39:21.878
• [2.127 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 12/19/23 10:39:21.893
  Dec 19 10:39:21.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:39:21.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:21.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:21.95
  STEP: Counting existing ResourceQuota @ 12/19/23 10:39:21.955
  STEP: Creating a ResourceQuota @ 12/19/23 10:39:26.963
  STEP: Ensuring resource quota status is calculated @ 12/19/23 10:39:26.993
  STEP: Creating a Service @ 12/19/23 10:39:29.001
  STEP: Creating a NodePort Service @ 12/19/23 10:39:29.039
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/19/23 10:39:29.11
  STEP: Ensuring resource quota status captures service creation @ 12/19/23 10:39:29.158
  STEP: Deleting Services @ 12/19/23 10:39:31.168
  STEP: Ensuring resource quota status released usage @ 12/19/23 10:39:31.257
  Dec 19 10:39:33.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5310" for this suite. @ 12/19/23 10:39:33.284
• [11.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 12/19/23 10:39:33.307
  Dec 19 10:39:33.307: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:39:33.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:33.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:33.346
  STEP: creating a ConfigMap @ 12/19/23 10:39:33.353
  STEP: fetching the ConfigMap @ 12/19/23 10:39:33.362
  STEP: patching the ConfigMap @ 12/19/23 10:39:33.381
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/19/23 10:39:33.392
  STEP: deleting the ConfigMap by collection with a label selector @ 12/19/23 10:39:33.398
  STEP: listing all ConfigMaps in test namespace @ 12/19/23 10:39:33.413
  Dec 19 10:39:33.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3671" for this suite. @ 12/19/23 10:39:33.428
• [0.135 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 12/19/23 10:39:33.444
  Dec 19 10:39:33.444: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:39:33.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:33.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:33.484
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/19/23 10:39:33.495
  STEP: Saw pod success @ 12/19/23 10:39:37.545
  Dec 19 10:39:37.554: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-026a3f48-abd5-4da9-a1c0-f3bc71135629 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:39:37.575
  Dec 19 10:39:37.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9182" for this suite. @ 12/19/23 10:39:37.627
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 12/19/23 10:39:37.651
  Dec 19 10:39:37.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 10:39:37.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:37.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:37.706
  STEP: Creating namespace "e2e-ns-9bnwg" @ 12/19/23 10:39:37.716
  Dec 19 10:39:37.755: INFO: Namespace "e2e-ns-9bnwg-4893" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-9bnwg-4893" @ 12/19/23 10:39:37.756
  Dec 19 10:39:37.777: INFO: Namespace "e2e-ns-9bnwg-4893" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-9bnwg-4893" @ 12/19/23 10:39:37.778
  Dec 19 10:39:37.797: INFO: Namespace "e2e-ns-9bnwg-4893" has []v1.FinalizerName{"kubernetes"}
  Dec 19 10:39:37.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-660" for this suite. @ 12/19/23 10:39:37.81
  STEP: Destroying namespace "e2e-ns-9bnwg-4893" for this suite. @ 12/19/23 10:39:37.831
• [0.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/19/23 10:39:37.858
  Dec 19 10:39:37.858: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:39:37.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:37.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:37.91
  STEP: Create set of pods @ 12/19/23 10:39:37.915
  Dec 19 10:39:37.930: INFO: created test-pod-1
  Dec 19 10:39:37.949: INFO: created test-pod-2
  Dec 19 10:39:37.970: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/19/23 10:39:37.971
  STEP: waiting for all pods to be deleted @ 12/19/23 10:39:42.165
  Dec 19 10:39:42.172: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 19 10:39:43.186: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 19 10:39:44.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-828" for this suite. @ 12/19/23 10:39:44.19
• [6.351 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 12/19/23 10:39:44.209
  Dec 19 10:39:44.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename limitrange @ 12/19/23 10:39:44.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:44.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:44.249
  STEP: Creating a LimitRange @ 12/19/23 10:39:44.255
  STEP: Setting up watch @ 12/19/23 10:39:44.255
  STEP: Submitting a LimitRange @ 12/19/23 10:39:44.363
  STEP: Verifying LimitRange creation was observed @ 12/19/23 10:39:44.38
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/19/23 10:39:44.38
  Dec 19 10:39:44.389: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 19 10:39:44.389: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/19/23 10:39:44.389
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/19/23 10:39:44.405
  Dec 19 10:39:44.421: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 19 10:39:44.422: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/19/23 10:39:44.422
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/19/23 10:39:44.443
  Dec 19 10:39:44.458: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Dec 19 10:39:44.458: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/19/23 10:39:44.459
  STEP: Failing to create a Pod with more than max resources @ 12/19/23 10:39:44.463
  STEP: Updating a LimitRange @ 12/19/23 10:39:44.47
  STEP: Verifying LimitRange updating is effective @ 12/19/23 10:39:44.481
  STEP: Creating a Pod with less than former min resources @ 12/19/23 10:39:46.491
  STEP: Failing to create a Pod with more than max resources @ 12/19/23 10:39:46.51
  STEP: Deleting a LimitRange @ 12/19/23 10:39:46.514
  STEP: Verifying the LimitRange was deleted @ 12/19/23 10:39:46.53
  Dec 19 10:39:51.541: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/19/23 10:39:51.541
  Dec 19 10:39:51.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6019" for this suite. @ 12/19/23 10:39:51.58
• [7.408 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 12/19/23 10:39:51.62
  Dec 19 10:39:51.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:39:51.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:51.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:51.686
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3965 @ 12/19/23 10:39:51.698
  STEP: changing the ExternalName service to type=NodePort @ 12/19/23 10:39:51.718
  STEP: creating replication controller externalname-service in namespace services-3965 @ 12/19/23 10:39:51.762
  I1219 10:39:51.788885      13 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3965, replica count: 2
  I1219 10:39:54.842629      13 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 10:39:54.842: INFO: Creating new exec pod
  Dec 19 10:39:57.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3965 exec execpodw7vhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 19 10:39:58.260: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 19 10:39:58.260: INFO: stdout: "externalname-service-dll9k"
  Dec 19 10:39:58.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3965 exec execpodw7vhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.58.242 80'
  Dec 19 10:39:58.585: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.58.242 80\nConnection to 10.233.58.242 80 port [tcp/http] succeeded!\n"
  Dec 19 10:39:58.585: INFO: stdout: "externalname-service-dll9k"
  Dec 19 10:39:58.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3965 exec execpodw7vhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.113 30566'
  Dec 19 10:39:58.915: INFO: stderr: "+ + nc -v -t -w 2 192.168.121.113 30566\necho hostName\nConnection to 192.168.121.113 30566 port [tcp/*] succeeded!\n"
  Dec 19 10:39:58.915: INFO: stdout: "externalname-service-jjm8n"
  Dec 19 10:39:58.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3965 exec execpodw7vhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.72 30566'
  Dec 19 10:39:59.259: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.72 30566\nConnection to 192.168.121.72 30566 port [tcp/*] succeeded!\n"
  Dec 19 10:39:59.259: INFO: stdout: "externalname-service-dll9k"
  Dec 19 10:39:59.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 10:39:59.271: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-3965" for this suite. @ 12/19/23 10:39:59.334
• [7.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 12/19/23 10:39:59.357
  Dec 19 10:39:59.357: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:39:59.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:39:59.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:39:59.416
  STEP: creating service multi-endpoint-test in namespace services-3593 @ 12/19/23 10:39:59.423
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3593 to expose endpoints map[] @ 12/19/23 10:39:59.458
  Dec 19 10:39:59.521: INFO: successfully validated that service multi-endpoint-test in namespace services-3593 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3593 @ 12/19/23 10:39:59.521
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3593 to expose endpoints map[pod1:[100]] @ 12/19/23 10:40:01.567
  Dec 19 10:40:01.592: INFO: successfully validated that service multi-endpoint-test in namespace services-3593 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3593 @ 12/19/23 10:40:01.592
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3593 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/19/23 10:40:03.644
  Dec 19 10:40:03.683: INFO: successfully validated that service multi-endpoint-test in namespace services-3593 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/19/23 10:40:03.683
  Dec 19 10:40:03.683: INFO: Creating new exec pod
  Dec 19 10:40:06.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3593 exec execpodsvpnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Dec 19 10:40:07.208: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Dec 19 10:40:07.208: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:40:07.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3593 exec execpodsvpnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.186 80'
  Dec 19 10:40:07.595: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.186 80\nConnection to 10.233.50.186 80 port [tcp/http] succeeded!\n"
  Dec 19 10:40:07.595: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:40:07.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3593 exec execpodsvpnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Dec 19 10:40:07.904: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Dec 19 10:40:07.904: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:40:07.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3593 exec execpodsvpnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.186 81'
  Dec 19 10:40:08.247: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.186 81\nConnection to 10.233.50.186 81 port [tcp/*] succeeded!\n"
  Dec 19 10:40:08.248: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3593 @ 12/19/23 10:40:08.248
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3593 to expose endpoints map[pod2:[101]] @ 12/19/23 10:40:08.306
  Dec 19 10:40:09.381: INFO: successfully validated that service multi-endpoint-test in namespace services-3593 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3593 @ 12/19/23 10:40:09.381
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3593 to expose endpoints map[] @ 12/19/23 10:40:09.425
  Dec 19 10:40:10.489: INFO: successfully validated that service multi-endpoint-test in namespace services-3593 exposes endpoints map[]
  Dec 19 10:40:10.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3593" for this suite. @ 12/19/23 10:40:10.552
• [11.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 12/19/23 10:40:10.572
  Dec 19 10:40:10.572: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl-logs @ 12/19/23 10:40:10.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:10.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:10.614
  STEP: creating an pod @ 12/19/23 10:40:10.623
  Dec 19 10:40:10.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Dec 19 10:40:10.815: INFO: stderr: ""
  Dec 19 10:40:10.816: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/19/23 10:40:10.816
  Dec 19 10:40:10.816: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Dec 19 10:40:12.840: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/19/23 10:40:12.84
  Dec 19 10:40:12.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 logs logs-generator logs-generator'
  Dec 19 10:40:13.051: INFO: stderr: ""
  Dec 19 10:40:13.051: INFO: stdout: "I1219 10:40:11.595178       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/fq4 395\nI1219 10:40:11.792051       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/c5d 440\nI1219 10:40:11.992578       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/4qz 463\nI1219 10:40:12.193061       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/c9zz 493\nI1219 10:40:12.392588       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/nlbb 200\nI1219 10:40:12.593144       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/wnt 490\nI1219 10:40:12.792604       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/mvr 560\nI1219 10:40:12.992692       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/2l9x 330\n"
  STEP: limiting log lines @ 12/19/23 10:40:13.051
  Dec 19 10:40:13.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 logs logs-generator logs-generator --tail=1'
  Dec 19 10:40:13.226: INFO: stderr: ""
  Dec 19 10:40:13.227: INFO: stdout: "I1219 10:40:13.192572       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/774 328\n"
  Dec 19 10:40:13.227: INFO: got output "I1219 10:40:13.192572       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/774 328\n"
  STEP: limiting log bytes @ 12/19/23 10:40:13.227
  Dec 19 10:40:13.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 logs logs-generator logs-generator --limit-bytes=1'
  Dec 19 10:40:13.441: INFO: stderr: ""
  Dec 19 10:40:13.441: INFO: stdout: "I"
  Dec 19 10:40:13.441: INFO: got output "I"
  STEP: exposing timestamps @ 12/19/23 10:40:13.443
  Dec 19 10:40:13.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 logs logs-generator logs-generator --tail=1 --timestamps'
  Dec 19 10:40:13.663: INFO: stderr: ""
  Dec 19 10:40:13.663: INFO: stdout: "2023-12-19T10:40:13.592459909Z I1219 10:40:13.592354       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/9rj9 407\n"
  Dec 19 10:40:13.663: INFO: got output "2023-12-19T10:40:13.592459909Z I1219 10:40:13.592354       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/9rj9 407\n"
  STEP: restricting to a time range @ 12/19/23 10:40:13.663
  Dec 19 10:40:16.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 logs logs-generator logs-generator --since=1s'
  Dec 19 10:40:16.493: INFO: stderr: ""
  Dec 19 10:40:16.493: INFO: stdout: "I1219 10:40:15.592247       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/4tmp 253\nI1219 10:40:15.792757       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/wz8 467\nI1219 10:40:15.992129       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/hkm6 520\nI1219 10:40:16.192730       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/9kds 428\nI1219 10:40:16.393604       1 logs_generator.go:76] 24 POST /api/v1/namespaces/kube-system/pods/bhd 251\n"
  Dec 19 10:40:16.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 logs logs-generator logs-generator --since=24h'
  Dec 19 10:40:16.684: INFO: stderr: ""
  Dec 19 10:40:16.684: INFO: stdout: "I1219 10:40:11.595178       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/fq4 395\nI1219 10:40:11.792051       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/c5d 440\nI1219 10:40:11.992578       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/4qz 463\nI1219 10:40:12.193061       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/c9zz 493\nI1219 10:40:12.392588       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/nlbb 200\nI1219 10:40:12.593144       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/wnt 490\nI1219 10:40:12.792604       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/mvr 560\nI1219 10:40:12.992692       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/2l9x 330\nI1219 10:40:13.192572       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/774 328\nI1219 10:40:13.395034       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/2t2 470\nI1219 10:40:13.592354       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/9rj9 407\nI1219 10:40:13.792494       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/xqdq 441\nI1219 10:40:13.993033       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/qtxd 283\nI1219 10:40:14.192600       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/rpd 519\nI1219 10:40:14.393132       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/b85 320\nI1219 10:40:14.592579       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/2bm 272\nI1219 10:40:14.793091       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/7ts 227\nI1219 10:40:14.992864       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/d4h 260\nI1219 10:40:15.192320       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/m5q 256\nI1219 10:40:15.392796       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/q4p 469\nI1219 10:40:15.592247       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/4tmp 253\nI1219 10:40:15.792757       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/wz8 467\nI1219 10:40:15.992129       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/hkm6 520\nI1219 10:40:16.192730       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/9kds 428\nI1219 10:40:16.393604       1 logs_generator.go:76] 24 POST /api/v1/namespaces/kube-system/pods/bhd 251\nI1219 10:40:16.593162       1 logs_generator.go:76] 25 GET /api/v1/namespaces/ns/pods/p8c6 411\n"
  Dec 19 10:40:16.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-logs-4602 delete pod logs-generator'
  Dec 19 10:40:17.621: INFO: stderr: ""
  Dec 19 10:40:17.621: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Dec 19 10:40:17.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4602" for this suite. @ 12/19/23 10:40:17.632
• [7.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 12/19/23 10:40:17.659
  Dec 19 10:40:17.659: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:40:17.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:17.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:17.694
  Dec 19 10:40:17.736: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 19 10:40:22.747: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:40:22.747
  STEP: Scaling up "test-rs" replicaset  @ 12/19/23 10:40:22.747
  Dec 19 10:40:22.771: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/19/23 10:40:22.771
  Dec 19 10:40:22.845: INFO: observed ReplicaSet test-rs in namespace replicaset-5394 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:40:22.867: INFO: observed ReplicaSet test-rs in namespace replicaset-5394 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:40:22.963: INFO: observed ReplicaSet test-rs in namespace replicaset-5394 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:40:23.006: INFO: observed ReplicaSet test-rs in namespace replicaset-5394 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:40:23.808: INFO: observed ReplicaSet test-rs in namespace replicaset-5394 with ReadyReplicas 2, AvailableReplicas 2
  Dec 19 10:40:25.119: INFO: observed Replicaset test-rs in namespace replicaset-5394 with ReadyReplicas 3 found true
  Dec 19 10:40:25.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5394" for this suite. @ 12/19/23 10:40:25.129
• [7.486 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/19/23 10:40:25.146
  Dec 19 10:40:25.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename proxy @ 12/19/23 10:40:25.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:25.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:25.186
  Dec 19 10:40:25.191: INFO: Creating pod...
  Dec 19 10:40:27.227: INFO: Creating service...
  Dec 19 10:40:27.260: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/pods/agnhost/proxy/some/path/with/DELETE
  Dec 19 10:40:27.293: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 10:40:27.293: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/pods/agnhost/proxy/some/path/with/GET
  Dec 19 10:40:27.300: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 19 10:40:27.300: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/pods/agnhost/proxy/some/path/with/HEAD
  Dec 19 10:40:27.311: INFO: http.Client request:HEAD | StatusCode:200
  Dec 19 10:40:27.312: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/pods/agnhost/proxy/some/path/with/OPTIONS
  Dec 19 10:40:27.319: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 10:40:27.319: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/pods/agnhost/proxy/some/path/with/PATCH
  Dec 19 10:40:27.331: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 10:40:27.332: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/pods/agnhost/proxy/some/path/with/POST
  Dec 19 10:40:27.339: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 10:40:27.341: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/pods/agnhost/proxy/some/path/with/PUT
  Dec 19 10:40:27.349: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 10:40:27.350: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/services/test-service/proxy/some/path/with/DELETE
  Dec 19 10:40:27.362: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 10:40:27.363: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/services/test-service/proxy/some/path/with/GET
  Dec 19 10:40:27.376: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 19 10:40:27.376: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/services/test-service/proxy/some/path/with/HEAD
  Dec 19 10:40:27.387: INFO: http.Client request:HEAD | StatusCode:200
  Dec 19 10:40:27.387: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/services/test-service/proxy/some/path/with/OPTIONS
  Dec 19 10:40:27.397: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 10:40:27.397: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/services/test-service/proxy/some/path/with/PATCH
  Dec 19 10:40:27.408: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 10:40:27.408: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/services/test-service/proxy/some/path/with/POST
  Dec 19 10:40:27.425: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 10:40:27.425: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3568/services/test-service/proxy/some/path/with/PUT
  Dec 19 10:40:27.435: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 10:40:27.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3568" for this suite. @ 12/19/23 10:40:27.445
• [2.313 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 12/19/23 10:40:27.465
  Dec 19 10:40:27.466: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:40:27.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:27.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:27.538
  STEP: Setting up server cert @ 12/19/23 10:40:27.59
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:40:29.423
  STEP: Deploying the webhook pod @ 12/19/23 10:40:29.437
  STEP: Wait for the deployment to be ready @ 12/19/23 10:40:29.461
  Dec 19 10:40:29.486: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:40:31.505
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:40:31.528
  Dec 19 10:40:32.529: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/19/23 10:40:32.547
  STEP: create a pod @ 12/19/23 10:40:32.59
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/19/23 10:40:34.628
  Dec 19 10:40:34.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=webhook-4903 attach --namespace=webhook-4903 to-be-attached-pod -i -c=container1'
  Dec 19 10:40:34.833: INFO: rc: 1
  Dec 19 10:40:34.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4903" for this suite. @ 12/19/23 10:40:35.025
  STEP: Destroying namespace "webhook-markers-3857" for this suite. @ 12/19/23 10:40:35.05
• [7.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 12/19/23 10:40:35.078
  Dec 19 10:40:35.078: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:40:35.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:35.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:35.119
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/19/23 10:40:35.123
  STEP: Saw pod success @ 12/19/23 10:40:39.165
  Dec 19 10:40:39.173: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-6a275c69-2231-4ffb-83c0-282c81221d5b container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:40:39.19
  Dec 19 10:40:39.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3540" for this suite. @ 12/19/23 10:40:39.228
• [4.166 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 12/19/23 10:40:39.246
  Dec 19 10:40:39.247: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 10:40:39.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:39.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:39.292
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-310.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-310.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/19/23 10:40:39.297
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-310.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-310.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/19/23 10:40:39.297
  STEP: creating a pod to probe /etc/hosts @ 12/19/23 10:40:39.297
  STEP: submitting the pod to kubernetes @ 12/19/23 10:40:39.298
  STEP: retrieving the pod @ 12/19/23 10:40:41.338
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:40:41.346
  Dec 19 10:40:41.384: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-310/dns-test-aacb0761-6c9d-480d-8bf1-c10946671e23: the server could not find the requested resource (get pods dns-test-aacb0761-6c9d-480d-8bf1-c10946671e23)
  Dec 19 10:40:41.384: INFO: Lookups using dns-310/dns-test-aacb0761-6c9d-480d-8bf1-c10946671e23 failed for: [jessie_hosts@dns-querier-1]

  Dec 19 10:40:41.399: INFO: Pod client logs for webserver: 
  Dec 19 10:40:41.414: INFO: Pod client logs for querier: 
  Dec 19 10:40:41.426: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:40:46.459: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-310/dns-test-aacb0761-6c9d-480d-8bf1-c10946671e23: the server could not find the requested resource (get pods dns-test-aacb0761-6c9d-480d-8bf1-c10946671e23)
  Dec 19 10:40:46.460: INFO: Lookups using dns-310/dns-test-aacb0761-6c9d-480d-8bf1-c10946671e23 failed for: [jessie_hosts@dns-querier-1]

  Dec 19 10:40:46.474: INFO: Pod client logs for webserver: 
  Dec 19 10:40:46.489: INFO: Pod client logs for querier: 
  Dec 19 10:40:46.502: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:40:51.469: INFO: DNS probes using dns-310/dns-test-aacb0761-6c9d-480d-8bf1-c10946671e23 succeeded

  Dec 19 10:40:51.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 10:40:51.481
  STEP: Destroying namespace "dns-310" for this suite. @ 12/19/23 10:40:51.541
• [12.322 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 12/19/23 10:40:51.572
  Dec 19 10:40:51.572: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:40:51.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:51.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:51.634
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/19/23 10:40:51.638
  Dec 19 10:40:51.653: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 19 10:40:56.671: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:40:56.672
  STEP: getting scale subresource @ 12/19/23 10:40:56.673
  STEP: updating a scale subresource @ 12/19/23 10:40:56.696
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/19/23 10:40:56.711
  STEP: Patch a scale subresource @ 12/19/23 10:40:56.729
  Dec 19 10:40:56.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2553" for this suite. @ 12/19/23 10:40:56.82
• [5.290 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 12/19/23 10:40:56.863
  Dec 19 10:40:56.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:40:56.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:40:56.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:40:56.912
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:40:56.918
  STEP: Saw pod success @ 12/19/23 10:41:00.968
  Dec 19 10:41:00.973: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-12a664f6-b7d6-48ba-8f7e-5bf579efedca container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:41:00.986
  Dec 19 10:41:01.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6199" for this suite. @ 12/19/23 10:41:01.027
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 12/19/23 10:41:01.043
  Dec 19 10:41:01.043: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:41:01.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:41:01.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:41:01.077
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-d97b67cf-99ff-413f-a9c7-196a013fe853 @ 12/19/23 10:41:01.094
  STEP: Creating the pod @ 12/19/23 10:41:01.105
  STEP: Updating configmap projected-configmap-test-upd-d97b67cf-99ff-413f-a9c7-196a013fe853 @ 12/19/23 10:41:03.183
  STEP: waiting to observe update in volume @ 12/19/23 10:41:03.198
  Dec 19 10:42:30.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9580" for this suite. @ 12/19/23 10:42:30.116
• [89.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 12/19/23 10:42:30.133
  Dec 19 10:42:30.133: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:42:30.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:42:30.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:42:30.176
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5226 @ 12/19/23 10:42:30.18
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/19/23 10:42:30.206
  STEP: creating service externalsvc in namespace services-5226 @ 12/19/23 10:42:30.206
  STEP: creating replication controller externalsvc in namespace services-5226 @ 12/19/23 10:42:30.251
  I1219 10:42:30.274582      13 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5226, replica count: 2
  I1219 10:42:33.329609      13 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/19/23 10:42:33.341
  Dec 19 10:42:33.382: INFO: Creating new exec pod
  Dec 19 10:42:35.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-5226 exec execpodcv972 -- /bin/sh -x -c nslookup nodeport-service.services-5226.svc.cluster.local'
  Dec 19 10:42:35.939: INFO: stderr: "+ nslookup nodeport-service.services-5226.svc.cluster.local\n"
  Dec 19 10:42:35.939: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-5226.svc.cluster.local\tcanonical name = externalsvc.services-5226.svc.cluster.local.\nName:\texternalsvc.services-5226.svc.cluster.local\nAddress: 10.233.52.191\n\n"
  Dec 19 10:42:35.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5226, will wait for the garbage collector to delete the pods @ 12/19/23 10:42:35.949
  Dec 19 10:42:36.024: INFO: Deleting ReplicationController externalsvc took: 16.617298ms
  Dec 19 10:42:36.126: INFO: Terminating ReplicationController externalsvc pods took: 101.682848ms
  Dec 19 10:42:39.381: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-5226" for this suite. @ 12/19/23 10:42:39.402
• [9.294 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 12/19/23 10:42:39.432
  Dec 19 10:42:39.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:42:39.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:42:39.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:42:39.478
  STEP: creating a Service @ 12/19/23 10:42:39.505
  STEP: watching for the Service to be added @ 12/19/23 10:42:39.53
  Dec 19 10:42:39.533: INFO: Found Service test-service-nmbpc in namespace services-8880 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Dec 19 10:42:39.533: INFO: Service test-service-nmbpc created
  STEP: Getting /status @ 12/19/23 10:42:39.534
  Dec 19 10:42:39.540: INFO: Service test-service-nmbpc has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/19/23 10:42:39.541
  STEP: watching for the Service to be patched @ 12/19/23 10:42:39.551
  Dec 19 10:42:39.554: INFO: observed Service test-service-nmbpc in namespace services-8880 with annotations: map[] & LoadBalancer: {[]}
  Dec 19 10:42:39.555: INFO: Found Service test-service-nmbpc in namespace services-8880 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Dec 19 10:42:39.555: INFO: Service test-service-nmbpc has service status patched
  STEP: updating the ServiceStatus @ 12/19/23 10:42:39.556
  Dec 19 10:42:39.572: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/19/23 10:42:39.573
  Dec 19 10:42:39.576: INFO: Observed Service test-service-nmbpc in namespace services-8880 with annotations: map[] & Conditions: {[]}
  Dec 19 10:42:39.576: INFO: Observed event: &Service{ObjectMeta:{test-service-nmbpc  services-8880  20b60b24-3133-429c-9bc1-d6e4d2b6fddb 14028 0 2023-12-19 10:42:39 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-12-19 10:42:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-12-19 10:42:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.61.245,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.61.245],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Dec 19 10:42:39.577: INFO: Found Service test-service-nmbpc in namespace services-8880 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 10:42:39.577: INFO: Service test-service-nmbpc has service status updated
  STEP: patching the service @ 12/19/23 10:42:39.578
  STEP: watching for the Service to be patched @ 12/19/23 10:42:39.613
  Dec 19 10:42:39.618: INFO: observed Service test-service-nmbpc in namespace services-8880 with labels: map[test-service-static:true]
  Dec 19 10:42:39.618: INFO: observed Service test-service-nmbpc in namespace services-8880 with labels: map[test-service-static:true]
  Dec 19 10:42:39.618: INFO: observed Service test-service-nmbpc in namespace services-8880 with labels: map[test-service-static:true]
  Dec 19 10:42:39.619: INFO: Found Service test-service-nmbpc in namespace services-8880 with labels: map[test-service:patched test-service-static:true]
  Dec 19 10:42:39.619: INFO: Service test-service-nmbpc patched
  STEP: deleting the service @ 12/19/23 10:42:39.619
  STEP: watching for the Service to be deleted @ 12/19/23 10:42:39.668
  Dec 19 10:42:39.671: INFO: Observed event: ADDED
  Dec 19 10:42:39.671: INFO: Observed event: MODIFIED
  Dec 19 10:42:39.672: INFO: Observed event: MODIFIED
  Dec 19 10:42:39.672: INFO: Observed event: MODIFIED
  Dec 19 10:42:39.673: INFO: Found Service test-service-nmbpc in namespace services-8880 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Dec 19 10:42:39.673: INFO: Service test-service-nmbpc deleted
  Dec 19 10:42:39.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8880" for this suite. @ 12/19/23 10:42:39.682
• [0.264 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 12/19/23 10:42:39.703
  Dec 19 10:42:39.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 10:42:39.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:42:39.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:42:39.742
  STEP: creating a Deployment @ 12/19/23 10:42:39.751
  Dec 19 10:42:39.752: INFO: Creating simple deployment test-deployment-g2lgd
  Dec 19 10:42:39.777: INFO: deployment "test-deployment-g2lgd" doesn't have the required revision set
  STEP: Getting /status @ 12/19/23 10:42:41.806
  Dec 19 10:42:41.815: INFO: Deployment test-deployment-g2lgd has Conditions: [{Available True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g2lgd-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/19/23 10:42:41.816
  Dec 19 10:42:41.836: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 42, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 42, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 42, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 42, 39, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-g2lgd-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/19/23 10:42:41.836
  Dec 19 10:42:41.842: INFO: Observed &Deployment event: ADDED
  Dec 19 10:42:41.843: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g2lgd-5d576bd769"}
  Dec 19 10:42:41.844: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.844: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g2lgd-5d576bd769"}
  Dec 19 10:42:41.844: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 10:42:41.846: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.846: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 10:42:41.846: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-g2lgd-5d576bd769" is progressing.}
  Dec 19 10:42:41.847: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.847: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 10:42:41.848: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g2lgd-5d576bd769" has successfully progressed.}
  Dec 19 10:42:41.848: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.848: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 10:42:41.849: INFO: Observed Deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g2lgd-5d576bd769" has successfully progressed.}
  Dec 19 10:42:41.849: INFO: Found Deployment test-deployment-g2lgd in namespace deployment-9966 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:42:41.849: INFO: Deployment test-deployment-g2lgd has an updated status
  STEP: patching the Statefulset Status @ 12/19/23 10:42:41.849
  Dec 19 10:42:41.849: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 19 10:42:41.867: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/19/23 10:42:41.867
  Dec 19 10:42:41.881: INFO: Observed &Deployment event: ADDED
  Dec 19 10:42:41.881: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g2lgd-5d576bd769"}
  Dec 19 10:42:41.882: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.882: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g2lgd-5d576bd769"}
  Dec 19 10:42:41.883: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 10:42:41.883: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.883: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 10:42:41.884: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:39 +0000 UTC 2023-12-19 10:42:39 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-g2lgd-5d576bd769" is progressing.}
  Dec 19 10:42:41.884: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.885: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 10:42:41.885: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g2lgd-5d576bd769" has successfully progressed.}
  Dec 19 10:42:41.885: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.885: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 10:42:41.886: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 10:42:41 +0000 UTC 2023-12-19 10:42:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g2lgd-5d576bd769" has successfully progressed.}
  Dec 19 10:42:41.886: INFO: Observed deployment test-deployment-g2lgd in namespace deployment-9966 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:42:41.886: INFO: Observed &Deployment event: MODIFIED
  Dec 19 10:42:41.886: INFO: Found deployment test-deployment-g2lgd in namespace deployment-9966 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Dec 19 10:42:41.886: INFO: Deployment test-deployment-g2lgd has a patched status
  Dec 19 10:42:41.896: INFO: Deployment "test-deployment-g2lgd":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-g2lgd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9966",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3093067b-c73a-493a-bd3a-4925b8a866b3",
      ResourceVersion: (string) (len=5) "14061",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-g2lgd-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 10:42:41.924: INFO: New ReplicaSet "test-deployment-g2lgd-5d576bd769" of Deployment "test-deployment-g2lgd":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-g2lgd-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9966",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6dd5d48f-de40-4421-8667-9c836258b9f8",
      ResourceVersion: (string) (len=5) "14056",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-g2lgd",
          UID: (types.UID) (len=36) "3093067b-c73a-493a-bd3a-4925b8a866b3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 30 39  |k:{\"uid\":\"309|
              00000120  33 30 36 37 62 2d 63 37  33 61 2d 34 39 33 61 2d  |3067b-c73a-493a-|
              00000130  62 64 33 61 2d 34 39 32  35 62 38 61 38 36 36 62  |bd3a-4925b8a866b|
              00000140  33 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |3\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:42:41.936: INFO: Pod "test-deployment-g2lgd-5d576bd769-4bfw8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-g2lgd-5d576bd769-4bfw8",
      GenerateName: (string) (len=33) "test-deployment-g2lgd-5d576bd769-",
      Namespace: (string) (len=15) "deployment-9966",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8410f4c-7d84-4d0c-a6f1-b0f14fe20293",
      ResourceVersion: (string) (len=5) "14055",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-g2lgd-5d576bd769",
          UID: (types.UID) (len=36) "6dd5d48f-de40-4421-8667-9c836258b9f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 64 64 35 64 34 38  66 2d 64 65 34 30 2d 34  |"6dd5d48f-de40-4|
              000000a0  34 32 31 2d 38 36 36 37  2d 39 63 38 33 36 32 35  |421-8667-9c83625|
              000000b0  38 62 39 66 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |8b9f8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 35 35 5c 22 7d  |10.233.66.155\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n67dk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n67dk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838579360,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://54540bcdc25e0d3207a7c41ae4c932dedcc66fdeb67ed39e6bd4decd590ab56a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:42:41.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9966" for this suite. @ 12/19/23 10:42:41.958
• [2.274 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/19/23 10:42:41.98
  Dec 19 10:42:41.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 10:42:41.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:42:42.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:42:42.026
  STEP: create the container @ 12/19/23 10:42:42.032
  W1219 10:42:42.052162      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/19/23 10:42:42.053
  STEP: get the container status @ 12/19/23 10:42:45.098
  STEP: the container should be terminated @ 12/19/23 10:42:45.112
  STEP: the termination message should be set @ 12/19/23 10:42:45.112
  Dec 19 10:42:45.112: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/19/23 10:42:45.112
  Dec 19 10:42:45.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6825" for this suite. @ 12/19/23 10:42:45.206
• [3.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 12/19/23 10:42:45.256
  Dec 19 10:42:45.256: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 10:42:45.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:42:45.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:42:45.334
  Dec 19 10:42:45.345: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 10:42:45.368: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 10:42:45.376: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-1 before test
  Dec 19 10:42:45.401: INFO: coredns-5dd5756b68-784pk from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 10:42:45.401: INFO: kube-addon-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:42:45.401: INFO: kube-apiserver-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:42:45.401: INFO: kube-controller-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:42:45.401: INFO: kube-flannel-ds-qkbv6 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:42:45.401: INFO: kube-proxy-dc2t9 from kube-system started at 2023-12-19 09:34:32 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:42:45.401: INFO: kube-scheduler-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:42:45.401: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-kdr9t from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:42:45.401: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:42:45.401: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:42:45.401: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-2 before test
  Dec 19 10:42:45.417: INFO: coredns-5dd5756b68-9m7mp from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 10:42:45.417: INFO: kube-addon-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:42:45.417: INFO: kube-apiserver-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:42:45.417: INFO: kube-controller-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:42:45.417: INFO: kube-flannel-ds-vhwc5 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:42:45.417: INFO: kube-proxy-7d2pb from kube-system started at 2023-12-19 09:34:59 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:42:45.417: INFO: kube-scheduler-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:49 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:42:45.417: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-5gp8h from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:42:45.417: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:42:45.417: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:42:45.417: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-3 before test
  Dec 19 10:42:45.431: INFO: test-deployment-g2lgd-5d576bd769-4bfw8 from deployment-9966 started at 2023-12-19 10:42:39 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.431: INFO: 	Container httpd ready: true, restart count 0
  Dec 19 10:42:45.432: INFO: kube-flannel-ds-rxkbr from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.433: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 10:42:45.433: INFO: kube-proxy-27g55 from kube-system started at 2023-12-19 09:35:23 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.434: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:42:45.434: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:59 +0000 UTC (1 container statuses recorded)
  Dec 19 10:42:45.435: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 10:42:45.435: INFO: sonobuoy-e2e-job-e8470151cf5a4de6 from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:42:45.435: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 10:42:45.436: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:42:45.436: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-7w8tz from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 10:42:45.437: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:42:45.437: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/19/23 10:42:45.438
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17a2359ed9eb16f9], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 12/19/23 10:42:45.502
  Dec 19 10:42:46.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7169" for this suite. @ 12/19/23 10:42:46.507
• [1.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 12/19/23 10:42:46.53
  Dec 19 10:42:46.530: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 10:42:46.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:42:46.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:42:46.573
  STEP: creating the pod with failed condition @ 12/19/23 10:42:46.577
  STEP: updating the pod @ 12/19/23 10:44:46.602
  Dec 19 10:44:47.135: INFO: Successfully updated pod "var-expansion-eaececd7-681d-45ca-9224-f9d5a45f5d76"
  STEP: waiting for pod running @ 12/19/23 10:44:47.135
  STEP: deleting the pod gracefully @ 12/19/23 10:44:49.159
  Dec 19 10:44:49.159: INFO: Deleting pod "var-expansion-eaececd7-681d-45ca-9224-f9d5a45f5d76" in namespace "var-expansion-8022"
  Dec 19 10:44:49.172: INFO: Wait up to 5m0s for pod "var-expansion-eaececd7-681d-45ca-9224-f9d5a45f5d76" to be fully deleted
  Dec 19 10:45:21.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8022" for this suite. @ 12/19/23 10:45:21.365
• [154.850 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 12/19/23 10:45:21.384
  Dec 19 10:45:21.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:45:21.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:21.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:21.437
  Dec 19 10:45:21.445: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:45:24.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9134" for this suite. @ 12/19/23 10:45:24.995
• [3.623 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/19/23 10:45:25.008
  Dec 19 10:45:25.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:45:25.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:25.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:25.068
  STEP: Creating secret with name secret-test-e99f3b87-2d92-459a-bf7b-56a5550e18ee @ 12/19/23 10:45:25.073
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:45:25.085
  STEP: Saw pod success @ 12/19/23 10:45:29.159
  Dec 19 10:45:29.166: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-937437d4-a6d6-471d-bb25-f05a9ea2743a container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:45:29.201
  Dec 19 10:45:29.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8023" for this suite. @ 12/19/23 10:45:29.25
• [4.256 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 12/19/23 10:45:29.265
  Dec 19 10:45:29.266: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:45:29.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:29.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:29.314
  STEP: Setting up server cert @ 12/19/23 10:45:29.367
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:45:30.957
  STEP: Deploying the webhook pod @ 12/19/23 10:45:30.973
  STEP: Wait for the deployment to be ready @ 12/19/23 10:45:30.996
  Dec 19 10:45:31.021: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:45:33.039
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:45:33.067
  Dec 19 10:45:34.068: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/19/23 10:45:34.084
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/19/23 10:45:34.131
  STEP: Creating a dummy validating-webhook-configuration object @ 12/19/23 10:45:34.167
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/19/23 10:45:34.19
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/19/23 10:45:34.203
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/19/23 10:45:34.222
  Dec 19 10:45:34.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6832" for this suite. @ 12/19/23 10:45:34.41
  STEP: Destroying namespace "webhook-markers-1816" for this suite. @ 12/19/23 10:45:34.427
• [5.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 12/19/23 10:45:34.45
  Dec 19 10:45:34.450: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 10:45:34.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:34.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:34.503
  Dec 19 10:45:36.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1990" for this suite. @ 12/19/23 10:45:36.656
• [2.225 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 12/19/23 10:45:36.684
  Dec 19 10:45:36.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:45:36.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:36.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:36.738
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8853 @ 12/19/23 10:45:36.755
  STEP: changing the ExternalName service to type=ClusterIP @ 12/19/23 10:45:36.767
  STEP: creating replication controller externalname-service in namespace services-8853 @ 12/19/23 10:45:36.793
  I1219 10:45:36.818726      13 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8853, replica count: 2
  I1219 10:45:39.870841      13 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 10:45:39.871: INFO: Creating new exec pod
  Dec 19 10:45:42.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8853 exec execpod8qbmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 19 10:45:43.296: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 19 10:45:43.296: INFO: stdout: ""
  Dec 19 10:45:44.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8853 exec execpod8qbmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 19 10:45:44.604: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 19 10:45:44.604: INFO: stdout: ""
  Dec 19 10:45:45.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8853 exec execpod8qbmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 19 10:45:45.624: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 19 10:45:45.624: INFO: stdout: "externalname-service-dw2m4"
  Dec 19 10:45:45.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8853 exec execpod8qbmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.80 80'
  Dec 19 10:45:45.898: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.80 80\nConnection to 10.233.27.80 80 port [tcp/http] succeeded!\n"
  Dec 19 10:45:45.898: INFO: stdout: ""
  Dec 19 10:45:46.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8853 exec execpod8qbmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.80 80'
  Dec 19 10:45:47.194: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.80 80\nConnection to 10.233.27.80 80 port [tcp/http] succeeded!\n"
  Dec 19 10:45:47.194: INFO: stdout: "externalname-service-dw2m4"
  Dec 19 10:45:47.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 10:45:47.202: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-8853" for this suite. @ 12/19/23 10:45:47.237
• [10.570 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 12/19/23 10:45:47.253
  Dec 19 10:45:47.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 10:45:47.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:47.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:47.305
  Dec 19 10:45:49.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1999" for this suite. @ 12/19/23 10:45:49.397
• [2.155 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 12/19/23 10:45:49.415
  Dec 19 10:45:49.415: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:45:49.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:49.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:49.459
  STEP: Creating service test in namespace statefulset-9110 @ 12/19/23 10:45:49.469
  STEP: Looking for a node to schedule stateful set and pod @ 12/19/23 10:45:49.48
  STEP: Creating pod with conflicting port in namespace statefulset-9110 @ 12/19/23 10:45:49.5
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9110 @ 12/19/23 10:45:49.527
  STEP: Creating statefulset with conflicting port in namespace statefulset-9110 @ 12/19/23 10:45:51.553
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9110 @ 12/19/23 10:45:51.568
  Dec 19 10:45:51.622: INFO: Observed stateful pod in namespace: statefulset-9110, name: ss-0, uid: a328c566-3a92-4c69-963c-8c7e7c4c7661, status phase: Pending. Waiting for statefulset controller to delete.
  Dec 19 10:45:51.712: INFO: Observed stateful pod in namespace: statefulset-9110, name: ss-0, uid: a328c566-3a92-4c69-963c-8c7e7c4c7661, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 19 10:45:51.737: INFO: Observed stateful pod in namespace: statefulset-9110, name: ss-0, uid: a328c566-3a92-4c69-963c-8c7e7c4c7661, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 19 10:45:51.755: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9110
  STEP: Removing pod with conflicting port in namespace statefulset-9110 @ 12/19/23 10:45:51.756
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9110 and will be in running state @ 12/19/23 10:45:51.794
  Dec 19 10:46:07.913: INFO: Deleting all statefulset in ns statefulset-9110
  Dec 19 10:46:07.924: INFO: Scaling statefulset ss to 0
  Dec 19 10:46:17.991: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:46:17.996: INFO: Deleting statefulset ss
  Dec 19 10:46:18.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9110" for this suite. @ 12/19/23 10:46:18.043
• [28.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 12/19/23 10:46:18.068
  Dec 19 10:46:18.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:46:18.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:18.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:18.105
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:46:18.11
  STEP: Saw pod success @ 12/19/23 10:46:22.158
  Dec 19 10:46:22.165: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-07147c86-66da-48eb-b928-9662acef8659 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:46:22.18
  Dec 19 10:46:22.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1528" for this suite. @ 12/19/23 10:46:22.22
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 12/19/23 10:46:22.241
  Dec 19 10:46:22.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 10:46:22.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:22.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:22.275
  STEP: Performing setup for networking test in namespace pod-network-test-9304 @ 12/19/23 10:46:22.281
  STEP: creating a selector @ 12/19/23 10:46:22.281
  STEP: Creating the service pods in kubernetes @ 12/19/23 10:46:22.281
  Dec 19 10:46:22.282: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 10:46:44.536
  Dec 19 10:46:46.614: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 10:46:46.615: INFO: Going to poll 10.233.64.32 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:46:46.623: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.32:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9304 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:46:46.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:46:46.626: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:46:46.627: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9304/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.32%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:46:46.795: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 19 10:46:46.795: INFO: Going to poll 10.233.65.36 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:46:46.804: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.36:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9304 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:46:46.804: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:46:46.807: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:46:46.807: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9304/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.36%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:46:46.925: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 19 10:46:46.925: INFO: Going to poll 10.233.66.163 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:46:46.933: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.163:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9304 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:46:46.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:46:46.937: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:46:46.937: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9304/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.163%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:46:47.059: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 19 10:46:47.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9304" for this suite. @ 12/19/23 10:46:47.076
• [24.846 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/19/23 10:46:47.089
  Dec 19 10:46:47.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:46:47.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:47.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:47.129
  STEP: creating pod @ 12/19/23 10:46:47.135
  Dec 19 10:46:49.182: INFO: Pod pod-hostip-f83778e2-138c-4fe7-8d66-c755e4b5bc84 has hostIP: 192.168.121.250
  Dec 19 10:46:49.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6312" for this suite. @ 12/19/23 10:46:49.197
• [2.122 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 12/19/23 10:46:49.213
  Dec 19 10:46:49.213: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sysctl @ 12/19/23 10:46:49.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:49.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:49.257
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/19/23 10:46:49.262
  STEP: Watching for error events or started pod @ 12/19/23 10:46:49.281
  STEP: Waiting for pod completion @ 12/19/23 10:46:51.291
  STEP: Checking that the pod succeeded @ 12/19/23 10:46:53.381
  STEP: Getting logs from the pod @ 12/19/23 10:46:53.381
  STEP: Checking that the sysctl is actually updated @ 12/19/23 10:46:53.462
  Dec 19 10:46:53.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1377" for this suite. @ 12/19/23 10:46:53.498
• [4.335 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 12/19/23 10:46:53.549
  Dec 19 10:46:53.549: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:46:53.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:53.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:53.613
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:46:53.626
  STEP: Saw pod success @ 12/19/23 10:46:57.7
  Dec 19 10:46:57.709: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-af04f654-8bcc-452b-9e34-221b3d555cd1 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:46:57.724
  Dec 19 10:46:57.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1575" for this suite. @ 12/19/23 10:46:57.774
• [4.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/19/23 10:46:57.796
  Dec 19 10:46:57.796: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:46:57.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:57.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:57.84
  STEP: creating a Pod with a static label @ 12/19/23 10:46:57.857
  STEP: watching for Pod to be ready @ 12/19/23 10:46:57.875
  Dec 19 10:46:57.885: INFO: observed Pod pod-test in namespace pods-4034 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Dec 19 10:46:57.885: INFO: observed Pod pod-test in namespace pods-4034 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:57 +0000 UTC  }]
  Dec 19 10:46:57.910: INFO: observed Pod pod-test in namespace pods-4034 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:57 +0000 UTC  }]
  Dec 19 10:46:59.438: INFO: Found Pod pod-test in namespace pods-4034 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:57 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:59 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:59 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:46:57 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/19/23 10:46:59.453
  STEP: getting the Pod and ensuring that it's patched @ 12/19/23 10:46:59.476
  STEP: replacing the Pod's status Ready condition to False @ 12/19/23 10:46:59.516
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/19/23 10:46:59.54
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/19/23 10:46:59.541
  STEP: watching for the Pod to be deleted @ 12/19/23 10:46:59.561
  Dec 19 10:46:59.565: INFO: observed event type MODIFIED
  Dec 19 10:47:01.440: INFO: observed event type MODIFIED
  Dec 19 10:47:01.630: INFO: observed event type MODIFIED
  Dec 19 10:47:02.449: INFO: observed event type MODIFIED
  Dec 19 10:47:02.490: INFO: observed event type MODIFIED
  Dec 19 10:47:02.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4034" for this suite. @ 12/19/23 10:47:02.519
• [4.737 seconds]
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 12/19/23 10:47:02.534
  Dec 19 10:47:02.534: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 10:47:02.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:02.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:02.571
  Dec 19 10:47:02.578: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/19/23 10:47:03.623
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/19/23 10:47:03.639
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/19/23 10:47:04.665
  Dec 19 10:47:04.692: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/19/23 10:47:04.693
  Dec 19 10:47:04.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3781" for this suite. @ 12/19/23 10:47:04.718
• [2.210 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 12/19/23 10:47:04.745
  Dec 19 10:47:04.745: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:47:04.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:04.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:04.783
  STEP: Creating configMap with name projected-configmap-test-volume-d3551af3-30fd-46d3-9144-5f73f6e8d877 @ 12/19/23 10:47:04.815
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:47:04.845
  STEP: Saw pod success @ 12/19/23 10:47:08.898
  Dec 19 10:47:08.904: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-configmaps-c3e81b02-4cd5-4e6d-a624-d4acb435b64a container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:47:08.92
  Dec 19 10:47:08.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5846" for this suite. @ 12/19/23 10:47:08.964
• [4.231 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 12/19/23 10:47:08.98
  Dec 19 10:47:08.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 10:47:08.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:09.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:09.021
  Dec 19 10:47:09.045: INFO: Endpoints addresses: [192.168.121.113 192.168.121.72] , ports: [6443]
  Dec 19 10:47:09.045: INFO: EndpointSlices addresses: [192.168.121.113 192.168.121.72] , ports: [6443]
  Dec 19 10:47:09.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7981" for this suite. @ 12/19/23 10:47:09.051
• [0.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 12/19/23 10:47:09.069
  Dec 19 10:47:09.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename aggregator @ 12/19/23 10:47:09.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:09.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:09.101
  Dec 19 10:47:09.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Registering the sample API server. @ 12/19/23 10:47:09.112
  Dec 19 10:47:10.101: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Dec 19 10:47:10.193: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Dec 19 10:47:12.332: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:14.348: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:16.344: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:18.345: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:20.363: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:22.340: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:24.341: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:26.341: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:28.343: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:30.343: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:32.340: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:34.341: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 10:47:36.491: INFO: Waited 127.578733ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/19/23 10:47:36.573
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/19/23 10:47:36.582
  STEP: List APIServices @ 12/19/23 10:47:36.601
  Dec 19 10:47:36.613: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/19/23 10:47:36.614
  Dec 19 10:47:36.657: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/19/23 10:47:36.657
  Dec 19 10:47:36.680: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.December, 19, 10, 47, 36, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/19/23 10:47:36.682
  Dec 19 10:47:36.692: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-12-19 10:47:36 +0000 UTC Passed all checks passed}
  Dec 19 10:47:36.693: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:47:36.693: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/19/23 10:47:36.694
  Dec 19 10:47:36.712: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-815484152" @ 12/19/23 10:47:36.716
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/19/23 10:47:36.737
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/19/23 10:47:36.753
  STEP: Patch APIService Status @ 12/19/23 10:47:36.762
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/19/23 10:47:36.776
  Dec 19 10:47:36.786: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-12-19 10:47:36 +0000 UTC Passed all checks passed}
  Dec 19 10:47:36.787: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:47:36.788: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Dec 19 10:47:36.789: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 12/19/23 10:47:36.789
  STEP: Confirm that the generated APIService has been deleted @ 12/19/23 10:47:36.805
  Dec 19 10:47:36.805: INFO: Requesting list of APIServices to confirm quantity
  Dec 19 10:47:36.817: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Dec 19 10:47:36.818: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Dec 19 10:47:37.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7170" for this suite. @ 12/19/23 10:47:37.117
• [28.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/19/23 10:47:37.149
  Dec 19 10:47:37.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 10:47:37.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:37.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:37.208
  Dec 19 10:47:37.269: INFO: Create a RollingUpdate DaemonSet
  Dec 19 10:47:37.292: INFO: Check that daemon pods launch on every node of the cluster
  Dec 19 10:47:37.341: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:47:37.341: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:47:38.368: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:47:38.368: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:47:39.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:47:39.367: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Dec 19 10:47:39.367: INFO: Update the DaemonSet to trigger a rollout
  Dec 19 10:47:39.387: INFO: Updating DaemonSet daemon-set
  Dec 19 10:47:40.444: INFO: Roll back the DaemonSet before rollout is complete
  Dec 19 10:47:40.464: INFO: Updating DaemonSet daemon-set
  Dec 19 10:47:40.465: INFO: Make sure DaemonSet rollback is complete
  Dec 19 10:47:40.477: INFO: Wrong image for pod: daemon-set-hvx7h. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Dec 19 10:47:40.477: INFO: Pod daemon-set-hvx7h is not available
  Dec 19 10:47:47.523: INFO: Pod daemon-set-kzx4k is not available
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 10:47:47.605
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5160, will wait for the garbage collector to delete the pods @ 12/19/23 10:47:47.605
  Dec 19 10:47:47.684: INFO: Deleting DaemonSet.extensions daemon-set took: 12.408104ms
  Dec 19 10:47:47.785: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.494105ms
  Dec 19 10:48:19.201: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:48:19.201: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 10:48:19.209: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15617"},"items":null}

  Dec 19 10:48:19.215: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15617"},"items":null}

  Dec 19 10:48:19.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5160" for this suite. @ 12/19/23 10:48:19.273
• [42.151 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 12/19/23 10:48:19.301
  Dec 19 10:48:19.302: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:48:19.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:48:19.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:48:19.349
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:48:19.356
  STEP: Saw pod success @ 12/19/23 10:48:23.407
  Dec 19 10:48:23.416: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-f67969b5-4886-43e6-83f7-f2ae2b9f0ebe container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:48:23.439
  Dec 19 10:48:23.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4518" for this suite. @ 12/19/23 10:48:23.48
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 12/19/23 10:48:23.502
  Dec 19 10:48:23.502: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename ingress @ 12/19/23 10:48:23.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:48:23.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:48:23.569
  STEP: getting /apis @ 12/19/23 10:48:23.578
  STEP: getting /apis/networking.k8s.io @ 12/19/23 10:48:23.589
  STEP: getting /apis/networking.k8s.iov1 @ 12/19/23 10:48:23.596
  STEP: creating @ 12/19/23 10:48:23.6
  STEP: getting @ 12/19/23 10:48:23.645
  STEP: listing @ 12/19/23 10:48:23.659
  STEP: watching @ 12/19/23 10:48:23.667
  Dec 19 10:48:23.667: INFO: starting watch
  STEP: cluster-wide listing @ 12/19/23 10:48:23.671
  STEP: cluster-wide watching @ 12/19/23 10:48:23.679
  Dec 19 10:48:23.679: INFO: starting watch
  STEP: patching @ 12/19/23 10:48:23.683
  STEP: updating @ 12/19/23 10:48:23.698
  Dec 19 10:48:23.723: INFO: waiting for watch events with expected annotations
  Dec 19 10:48:23.724: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/19/23 10:48:23.725
  STEP: updating /status @ 12/19/23 10:48:23.749
  STEP: get /status @ 12/19/23 10:48:23.77
  STEP: deleting @ 12/19/23 10:48:23.78
  STEP: deleting a collection @ 12/19/23 10:48:23.815
  Dec 19 10:48:23.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5682" for this suite. @ 12/19/23 10:48:23.878
• [0.391 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 12/19/23 10:48:23.897
  Dec 19 10:48:23.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 10:48:23.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:48:23.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:48:23.938
  STEP: Creating a test namespace @ 12/19/23 10:48:23.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:48:23.982
  STEP: Creating a service in the namespace @ 12/19/23 10:48:23.988
  STEP: Deleting the namespace @ 12/19/23 10:48:24.052
  STEP: Waiting for the namespace to be removed. @ 12/19/23 10:48:24.076
  STEP: Recreating the namespace @ 12/19/23 10:48:30.084
  STEP: Verifying there is no service in the namespace @ 12/19/23 10:48:30.111
  Dec 19 10:48:30.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6421" for this suite. @ 12/19/23 10:48:30.132
  STEP: Destroying namespace "nsdeletetest-8827" for this suite. @ 12/19/23 10:48:30.145
  Dec 19 10:48:30.151: INFO: Namespace nsdeletetest-8827 was already deleted
  STEP: Destroying namespace "nsdeletetest-7852" for this suite. @ 12/19/23 10:48:30.151
• [6.268 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/19/23 10:48:30.166
  Dec 19 10:48:30.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename watch @ 12/19/23 10:48:30.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:48:30.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:48:30.2
  STEP: creating a new configmap @ 12/19/23 10:48:30.205
  STEP: modifying the configmap once @ 12/19/23 10:48:30.213
  STEP: modifying the configmap a second time @ 12/19/23 10:48:30.228
  STEP: deleting the configmap @ 12/19/23 10:48:30.239
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/19/23 10:48:30.249
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/19/23 10:48:30.251
  Dec 19 10:48:30.251: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3951  95b959fe-c27c-4edc-9314-1ca562db04b8 15746 0 2023-12-19 10:48:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-19 10:48:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:48:30.253: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3951  95b959fe-c27c-4edc-9314-1ca562db04b8 15747 0 2023-12-19 10:48:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-19 10:48:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:48:30.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3951" for this suite. @ 12/19/23 10:48:30.262
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 12/19/23 10:48:30.28
  Dec 19 10:48:30.280: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:48:30.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:48:30.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:48:30.314
  STEP: Creating pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181 @ 12/19/23 10:48:30.32
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:48:32.352
  Dec 19 10:48:32.359: INFO: Initial restart count of pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 is 0
  Dec 19 10:48:32.376: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:34.384: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:36.393: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:38.402: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:40.421: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:42.430: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:44.439: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:46.448: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:48.458: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:50.470: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:52.481: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:54.497: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:56.508: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:48:58.518: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:00.533: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:02.541: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:04.553: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:06.561: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:08.570: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:10.582: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:12.590: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:14.597: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:16.610: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:18.619: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:20.628: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:22.643: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:24.653: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:26.663: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:28.672: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:30.685: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:32.696: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:34.707: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:36.718: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:38.727: INFO: Get pod test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 in namespace container-probe-3181
  Dec 19 10:49:38.728: INFO: Restart count of pod container-probe-3181/test-grpc-3c7e8949-b181-4630-b1f3-03a1d6c898a8 is now 1 (1m6.368930786s elapsed)
  Dec 19 10:49:38.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 10:49:38.739
  STEP: Destroying namespace "container-probe-3181" for this suite. @ 12/19/23 10:49:38.771
• [68.512 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 12/19/23 10:49:38.793
  Dec 19 10:49:38.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename events @ 12/19/23 10:49:38.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:49:38.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:49:38.896
  STEP: Create set of events @ 12/19/23 10:49:38.912
  Dec 19 10:49:38.931: INFO: created test-event-1
  Dec 19 10:49:38.939: INFO: created test-event-2
  Dec 19 10:49:38.957: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/19/23 10:49:38.957
  STEP: delete collection of events @ 12/19/23 10:49:38.967
  Dec 19 10:49:38.967: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/19/23 10:49:39.012
  Dec 19 10:49:39.012: INFO: requesting list of events to confirm quantity
  Dec 19 10:49:39.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5728" for this suite. @ 12/19/23 10:49:39.033
• [0.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 12/19/23 10:49:39.052
  Dec 19 10:49:39.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename disruption @ 12/19/23 10:49:39.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:49:39.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:49:39.108
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:49:39.134
  STEP: Updating PodDisruptionBudget status @ 12/19/23 10:49:41.153
  STEP: Waiting for all pods to be running @ 12/19/23 10:49:41.172
  Dec 19 10:49:41.194: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 12/19/23 10:49:43.202
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:49:43.228
  STEP: Patching PodDisruptionBudget status @ 12/19/23 10:49:43.245
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:49:43.266
  Dec 19 10:49:43.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4903" for this suite. @ 12/19/23 10:49:43.285
• [4.249 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/19/23 10:49:43.302
  Dec 19 10:49:43.302: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:49:43.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:49:43.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:49:43.339
  STEP: creating the pod @ 12/19/23 10:49:43.343
  STEP: setting up watch @ 12/19/23 10:49:43.344
  STEP: submitting the pod to kubernetes @ 12/19/23 10:49:43.451
  STEP: verifying the pod is in kubernetes @ 12/19/23 10:49:43.477
  STEP: verifying pod creation was observed @ 12/19/23 10:49:43.5
  STEP: deleting the pod gracefully @ 12/19/23 10:49:45.543
  STEP: verifying pod deletion was observed @ 12/19/23 10:49:45.559
  Dec 19 10:49:46.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6626" for this suite. @ 12/19/23 10:49:46.526
• [3.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 12/19/23 10:49:46.551
  Dec 19 10:49:46.551: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 10:49:46.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:49:46.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:49:46.614
  STEP: creating service endpoint-test2 in namespace services-5991 @ 12/19/23 10:49:46.621
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5991 to expose endpoints map[] @ 12/19/23 10:49:46.645
  Dec 19 10:49:46.659: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Dec 19 10:49:47.680: INFO: successfully validated that service endpoint-test2 in namespace services-5991 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5991 @ 12/19/23 10:49:47.681
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5991 to expose endpoints map[pod1:[80]] @ 12/19/23 10:49:49.729
  Dec 19 10:49:49.753: INFO: successfully validated that service endpoint-test2 in namespace services-5991 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/19/23 10:49:49.753
  Dec 19 10:49:49.753: INFO: Creating new exec pod
  Dec 19 10:49:52.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-5991 exec execpodfmfhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 19 10:49:53.155: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 19 10:49:53.155: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:49:53.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-5991 exec execpodfmfhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.112 80'
  Dec 19 10:49:53.470: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.112 80\nConnection to 10.233.46.112 80 port [tcp/http] succeeded!\n"
  Dec 19 10:49:53.470: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5991 @ 12/19/23 10:49:53.47
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5991 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/19/23 10:49:55.524
  Dec 19 10:49:55.555: INFO: successfully validated that service endpoint-test2 in namespace services-5991 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/19/23 10:49:55.555
  Dec 19 10:49:56.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-5991 exec execpodfmfhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 19 10:49:56.968: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 19 10:49:56.968: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:49:56.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-5991 exec execpodfmfhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.112 80'
  Dec 19 10:49:57.256: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.112 80\nConnection to 10.233.46.112 80 port [tcp/http] succeeded!\n"
  Dec 19 10:49:57.256: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5991 @ 12/19/23 10:49:57.256
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5991 to expose endpoints map[pod2:[80]] @ 12/19/23 10:49:57.283
  Dec 19 10:49:58.333: INFO: successfully validated that service endpoint-test2 in namespace services-5991 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/19/23 10:49:58.333
  Dec 19 10:49:59.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-5991 exec execpodfmfhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 19 10:49:59.672: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 19 10:49:59.672: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:49:59.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-5991 exec execpodfmfhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.112 80'
  Dec 19 10:50:00.009: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.112 80\nConnection to 10.233.46.112 80 port [tcp/http] succeeded!\n"
  Dec 19 10:50:00.009: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5991 @ 12/19/23 10:50:00.009
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5991 to expose endpoints map[] @ 12/19/23 10:50:00.057
  Dec 19 10:50:01.099: INFO: successfully validated that service endpoint-test2 in namespace services-5991 exposes endpoints map[]
  Dec 19 10:50:01.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5991" for this suite. @ 12/19/23 10:50:01.169
• [14.635 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/19/23 10:50:01.2
  Dec 19 10:50:01.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:50:01.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:50:01.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:50:01.252
  STEP: Creating secret with name secret-test-c4f59ed8-7806-47a0-89c7-50b791310d6c @ 12/19/23 10:50:01.258
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:50:01.269
  STEP: Saw pod success @ 12/19/23 10:50:05.317
  Dec 19 10:50:05.326: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-3737f338-e8bb-4ea9-b092-2cbdec2d81f0 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:50:05.365
  Dec 19 10:50:05.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6176" for this suite. @ 12/19/23 10:50:05.413
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 12/19/23 10:50:05.436
  Dec 19 10:50:05.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 10:50:05.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:50:05.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:50:05.484
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/19/23 10:50:05.49
  STEP: When a replication controller with a matching selector is created @ 12/19/23 10:50:07.547
  STEP: Then the orphan pod is adopted @ 12/19/23 10:50:07.563
  Dec 19 10:50:08.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9874" for this suite. @ 12/19/23 10:50:08.611
• [3.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 12/19/23 10:50:08.645
  Dec 19 10:50:08.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:50:08.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:50:08.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:50:08.702
  STEP: Creating configMap with name configmap-test-upd-ace0a48b-dc4e-4900-bfcd-d043fa35ffe8 @ 12/19/23 10:50:08.717
  STEP: Creating the pod @ 12/19/23 10:50:08.732
  STEP: Updating configmap configmap-test-upd-ace0a48b-dc4e-4900-bfcd-d043fa35ffe8 @ 12/19/23 10:50:10.798
  STEP: waiting to observe update in volume @ 12/19/23 10:50:10.824
  Dec 19 10:51:39.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6922" for this suite. @ 12/19/23 10:51:39.87
• [91.238 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 12/19/23 10:51:39.885
  Dec 19 10:51:39.885: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 10:51:39.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:39.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:39.933
  STEP: Creating a pod to test substitution in container's command @ 12/19/23 10:51:39.937
  STEP: Saw pod success @ 12/19/23 10:51:43.987
  Dec 19 10:51:43.996: INFO: Trying to get logs from node ja4hooch7za7-3 pod var-expansion-ab7e6374-91b2-467d-a98d-60e44c0b64b5 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 10:51:44.012
  Dec 19 10:51:44.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4371" for this suite. @ 12/19/23 10:51:44.062
• [4.193 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/19/23 10:51:44.083
  Dec 19 10:51:44.083: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:51:44.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:44.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:44.123
  STEP: Creating projection with secret that has name projected-secret-test-0a78eb9b-4d0a-4843-8344-5886b6b4bc75 @ 12/19/23 10:51:44.128
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:51:44.139
  STEP: Saw pod success @ 12/19/23 10:51:46.181
  Dec 19 10:51:46.192: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-secrets-2340efbf-5e9d-4b91-8d95-92e90cd01101 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:51:46.207
  Dec 19 10:51:46.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1951" for this suite. @ 12/19/23 10:51:46.268
• [2.202 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 12/19/23 10:51:46.285
  Dec 19 10:51:46.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:51:46.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:46.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:46.329
  STEP: Creating configMap with name configmap-test-volume-map-d6a91eda-3285-48d8-9e12-5568f8b8e6be @ 12/19/23 10:51:46.334
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:51:46.346
  STEP: Saw pod success @ 12/19/23 10:51:50.394
  Dec 19 10:51:50.404: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-79228151-1227-49e5-ad7e-1d15ad5f4150 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:51:50.422
  Dec 19 10:51:50.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5848" for this suite. @ 12/19/23 10:51:50.463
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 12/19/23 10:51:50.493
  Dec 19 10:51:50.493: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 10:51:50.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:50.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:50.538
  Dec 19 10:51:50.544: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 10:51:54.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2941" for this suite. @ 12/19/23 10:51:54.029
• [3.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/19/23 10:51:54.059
  Dec 19 10:51:54.059: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/19/23 10:51:54.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:54.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:54.101
  Dec 19 10:51:56.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 12/19/23 10:51:56.195
  STEP: Cleaning up the configmap @ 12/19/23 10:51:56.226
  STEP: Cleaning up the pod @ 12/19/23 10:51:56.244
  STEP: Destroying namespace "emptydir-wrapper-6486" for this suite. @ 12/19/23 10:51:56.291
• [2.254 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/19/23 10:51:56.314
  Dec 19 10:51:56.314: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 10:51:56.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:56.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:56.365
  Dec 19 10:51:56.376: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Dec 19 10:51:56.467: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 19 10:52:01.480: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:52:01.48
  Dec 19 10:52:01.480: INFO: Creating deployment "test-rolling-update-deployment"
  Dec 19 10:52:01.503: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Dec 19 10:52:01.515: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Dec 19 10:52:03.547: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Dec 19 10:52:03.560: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Dec 19 10:52:03.593: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab72084e-3e26-4957-9794-14873a0a81e4",
      ResourceVersion: (string) (len=5) "16556",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 10:52:03.611: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a80777ba-14d0-4c76-87ff-775a4553e042",
      ResourceVersion: (string) (len=5) "16546",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ab72084e-3e26-4957-9794-14873a0a81e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 62 37 32 30 38  34 65 2d 33 65 32 36 2d  |\"ab72084e-3e26-|
              00000120  34 39 35 37 2d 39 37 39  34 2d 31 34 38 37 33 61  |4957-9794-14873a|
              00000130  30 61 38 31 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0a81e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:52:03.642: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Dec 19 10:52:03.643: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3febf063-de3c-4ede-8e72-e66289f7edb2",
      ResourceVersion: (string) (len=5) "16555",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579916,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ab72084e-3e26-4957-9794-14873a0a81e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 62 37 32 30 38 34  |"uid\":\"ab72084|
              000000b0  65 2d 33 65 32 36 2d 34  39 35 37 2d 39 37 39 34  |e-3e26-4957-9794|
              000000c0  2d 31 34 38 37 33 61 30  61 38 31 65 34 5c 22 7d  |-14873a0a81e4\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:52:03.656: INFO: Pod "test-rolling-update-deployment-7f5c55c64-ckpcj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-ckpcj",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-8748",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "982239e5-431d-415f-baac-569712d03115",
      ResourceVersion: (string) (len=5) "16545",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "a80777ba-14d0-4c76-87ff-775a4553e042",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  30 37 37 37 62 61 2d 31  |d\":\"a80777ba-1|
              00000090  34 64 30 2d 34 63 37 36  2d 38 37 66 66 2d 37 37  |4d0-4c76-87ff-77|
              000000a0  35 61 34 35 35 33 65 30  34 32 5c 22 7d 22 3a 7b  |5a4553e042\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 38 37 5c 22 7d  |10.233.66.187\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pg8zc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pg8zc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838579921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838579921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838579922,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://42ca64d5afd27a7408d08ee839eb747a30980be58226b51bf404869acf6489a0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:52:03.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8748" for this suite. @ 12/19/23 10:52:03.704
• [7.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 12/19/23 10:52:03.732
  Dec 19 10:52:03.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:52:03.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:52:03.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:52:03.788
  Dec 19 10:52:03.796: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/19/23 10:52:05.864
  Dec 19 10:52:05.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 create -f -'
  Dec 19 10:52:07.305: INFO: stderr: ""
  Dec 19 10:52:07.305: INFO: stdout: "e2e-test-crd-publish-openapi-8880-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 19 10:52:07.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 delete e2e-test-crd-publish-openapi-8880-crds test-foo'
  Dec 19 10:52:07.558: INFO: stderr: ""
  Dec 19 10:52:07.558: INFO: stdout: "e2e-test-crd-publish-openapi-8880-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Dec 19 10:52:07.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 apply -f -'
  Dec 19 10:52:07.943: INFO: stderr: ""
  Dec 19 10:52:07.943: INFO: stdout: "e2e-test-crd-publish-openapi-8880-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 19 10:52:07.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 delete e2e-test-crd-publish-openapi-8880-crds test-foo'
  Dec 19 10:52:08.232: INFO: stderr: ""
  Dec 19 10:52:08.232: INFO: stdout: "e2e-test-crd-publish-openapi-8880-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/19/23 10:52:08.232
  Dec 19 10:52:08.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 create -f -'
  Dec 19 10:52:08.592: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/19/23 10:52:08.592
  Dec 19 10:52:08.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 create -f -'
  Dec 19 10:52:09.036: INFO: rc: 1
  Dec 19 10:52:09.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 apply -f -'
  Dec 19 10:52:09.928: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/19/23 10:52:09.928
  Dec 19 10:52:09.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 create -f -'
  Dec 19 10:52:10.373: INFO: rc: 1
  Dec 19 10:52:10.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 --namespace=crd-publish-openapi-1681 apply -f -'
  Dec 19 10:52:10.799: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/19/23 10:52:10.799
  Dec 19 10:52:10.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 explain e2e-test-crd-publish-openapi-8880-crds'
  Dec 19 10:52:11.217: INFO: stderr: ""
  Dec 19 10:52:11.217: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8880-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/19/23 10:52:11.218
  Dec 19 10:52:11.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 explain e2e-test-crd-publish-openapi-8880-crds.metadata'
  Dec 19 10:52:11.544: INFO: stderr: ""
  Dec 19 10:52:11.545: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8880-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Dec 19 10:52:11.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 explain e2e-test-crd-publish-openapi-8880-crds.spec'
  Dec 19 10:52:11.905: INFO: stderr: ""
  Dec 19 10:52:11.905: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8880-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Dec 19 10:52:11.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 explain e2e-test-crd-publish-openapi-8880-crds.spec.bars'
  Dec 19 10:52:12.253: INFO: stderr: ""
  Dec 19 10:52:12.253: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8880-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/19/23 10:52:12.254
  Dec 19 10:52:12.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-1681 explain e2e-test-crd-publish-openapi-8880-crds.spec.bars2'
  Dec 19 10:52:12.680: INFO: rc: 1
  Dec 19 10:52:14.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1681" for this suite. @ 12/19/23 10:52:14.624
• [10.906 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 12/19/23 10:52:14.639
  Dec 19 10:52:14.639: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename discovery @ 12/19/23 10:52:14.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:52:14.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:52:14.69
  STEP: Setting up server cert @ 12/19/23 10:52:14.698
  STEP: Requesting APIResourceList from "/api/v1" @ 12/19/23 10:52:15.176
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/19/23 10:52:15.185
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/19/23 10:52:15.187
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/19/23 10:52:15.19
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/19/23 10:52:15.192
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/19/23 10:52:15.194
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/19/23 10:52:15.196
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/19/23 10:52:15.199
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/19/23 10:52:15.201
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/19/23 10:52:15.204
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/19/23 10:52:15.206
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/19/23 10:52:15.208
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/19/23 10:52:15.212
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/19/23 10:52:15.215
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/19/23 10:52:15.217
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/19/23 10:52:15.22
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/19/23 10:52:15.221
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/19/23 10:52:15.223
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/19/23 10:52:15.225
  Dec 19 10:52:15.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3894" for this suite. @ 12/19/23 10:52:15.239
• [0.615 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 12/19/23 10:52:15.256
  Dec 19 10:52:15.256: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:52:15.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:52:15.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:52:15.304
  STEP: Setting up server cert @ 12/19/23 10:52:15.352
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:52:15.989
  STEP: Deploying the webhook pod @ 12/19/23 10:52:16.01
  STEP: Wait for the deployment to be ready @ 12/19/23 10:52:16.039
  Dec 19 10:52:16.059: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/19/23 10:52:18.087
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:52:18.13
  Dec 19 10:52:19.130: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/19/23 10:52:19.148
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/19/23 10:52:19.198
  STEP: Creating a configMap that should not be mutated @ 12/19/23 10:52:19.216
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/19/23 10:52:19.245
  STEP: Creating a configMap that should be mutated @ 12/19/23 10:52:19.264
  Dec 19 10:52:19.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-908" for this suite. @ 12/19/23 10:52:19.449
  STEP: Destroying namespace "webhook-markers-3149" for this suite. @ 12/19/23 10:52:19.48
• [4.281 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 12/19/23 10:52:19.538
  Dec 19 10:52:19.539: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 10:52:19.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:52:19.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:52:19.578
  Dec 19 10:52:19.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7827" for this suite. @ 12/19/23 10:52:19.692
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 12/19/23 10:52:19.719
  Dec 19 10:52:19.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 10:52:19.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:52:19.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:52:19.777
  STEP: Creating a pod to test service account token:  @ 12/19/23 10:52:19.784
  STEP: Saw pod success @ 12/19/23 10:52:23.83
  Dec 19 10:52:23.837: INFO: Trying to get logs from node ja4hooch7za7-3 pod test-pod-e579e3fe-06eb-41d3-a33d-f07d454551b1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:52:23.86
  Dec 19 10:52:23.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5608" for this suite. @ 12/19/23 10:52:23.901
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 12/19/23 10:52:23.921
  Dec 19 10:52:23.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:52:23.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:52:23.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:52:23.959
  Dec 19 10:53:23.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2134" for this suite. @ 12/19/23 10:53:24.01
• [60.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 12/19/23 10:53:24.041
  Dec 19 10:53:24.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 10:53:24.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:53:24.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:53:24.088
  STEP: Waiting for pod completion @ 12/19/23 10:53:24.125
  Dec 19 10:53:28.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9271" for this suite. @ 12/19/23 10:53:28.207
• [4.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 12/19/23 10:53:28.268
  Dec 19 10:53:28.268: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:53:28.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:53:28.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:53:28.324
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/19/23 10:53:28.33
  STEP: Saw pod success @ 12/19/23 10:53:32.404
  Dec 19 10:53:32.412: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-6ceeacfe-9d6f-4c84-9f50-58be8ec44952 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:53:32.43
  Dec 19 10:53:32.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6137" for this suite. @ 12/19/23 10:53:32.497
• [4.250 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/19/23 10:53:32.519
  Dec 19 10:53:32.519: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename subpath @ 12/19/23 10:53:32.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:53:32.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:53:32.567
  STEP: Setting up data @ 12/19/23 10:53:32.585
  STEP: Creating pod pod-subpath-test-projected-klbd @ 12/19/23 10:53:32.619
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 10:53:32.62
  STEP: Saw pod success @ 12/19/23 10:53:54.772
  Dec 19 10:53:54.786: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-subpath-test-projected-klbd container test-container-subpath-projected-klbd: <nil>
  STEP: delete the pod @ 12/19/23 10:53:54.811
  STEP: Deleting pod pod-subpath-test-projected-klbd @ 12/19/23 10:53:54.852
  Dec 19 10:53:54.853: INFO: Deleting pod "pod-subpath-test-projected-klbd" in namespace "subpath-8121"
  Dec 19 10:53:54.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8121" for this suite. @ 12/19/23 10:53:54.872
• [22.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 12/19/23 10:53:54.897
  Dec 19 10:53:54.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 10:53:54.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:53:54.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:53:54.943
  STEP: Creating simple DaemonSet "daemon-set" @ 12/19/23 10:53:55.003
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 10:53:55.02
  Dec 19 10:53:55.041: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:53:55.042: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:53:56.074: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 10:53:56.074: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 10:53:57.062: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:53:57.062: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/19/23 10:53:57.07
  STEP: DeleteCollection of the DaemonSets @ 12/19/23 10:53:57.081
  STEP: Verify that ReplicaSets have been deleted @ 12/19/23 10:53:57.101
  Dec 19 10:53:57.131: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17052"},"items":null}

  Dec 19 10:53:57.153: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17053"},"items":[{"metadata":{"name":"daemon-set-59kcj","generateName":"daemon-set-","namespace":"daemonsets-1702","uid":"ee4d798c-835e-469a-9c89-37e8e6b457b9","resourceVersion":"17050","creationTimestamp":"2023-12-19T10:53:55Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a0f7f2f9-f0ff-4b1f-87c7-d5deb4e79ce5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-19T10:53:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a0f7f2f9-f0ff-4b1f-87c7-d5deb4e79ce5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-19T10:53:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.194\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-sknwn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-sknwn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ja4hooch7za7-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ja4hooch7za7-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"}],"hostIP":"192.168.121.250","podIP":"10.233.66.194","podIPs":[{"ip":"10.233.66.194"}],"startTime":"2023-12-19T10:53:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-19T10:53:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://75ae7caa3fcdbe9dbed916c4e7baf0a4439c6c6d66a61d86c55bcab9b6fc74a2","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qllpf","generateName":"daemon-set-","namespace":"daemonsets-1702","uid":"94c28ad7-770a-4128-af95-1b7dd36f8ba0","resourceVersion":"17042","creationTimestamp":"2023-12-19T10:53:55Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a0f7f2f9-f0ff-4b1f-87c7-d5deb4e79ce5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-19T10:53:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a0f7f2f9-f0ff-4b1f-87c7-d5deb4e79ce5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-19T10:53:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.39\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-t75gw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-t75gw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ja4hooch7za7-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ja4hooch7za7-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"}],"hostIP":"192.168.121.72","podIP":"10.233.65.39","podIPs":[{"ip":"10.233.65.39"}],"startTime":"2023-12-19T10:53:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-19T10:53:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://1bf6bbceae79f448360a22163f54f607931933e52211ed89d25dcd07f37c7d2f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-t6nk7","generateName":"daemon-set-","namespace":"daemonsets-1702","uid":"1ff8f88f-1b77-405b-8e83-e7c88ea5db4b","resourceVersion":"17048","creationTimestamp":"2023-12-19T10:53:55Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a0f7f2f9-f0ff-4b1f-87c7-d5deb4e79ce5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-19T10:53:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a0f7f2f9-f0ff-4b1f-87c7-d5deb4e79ce5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-19T10:53:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tqsvs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tqsvs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ja4hooch7za7-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ja4hooch7za7-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T10:53:55Z"}],"hostIP":"192.168.121.113","podIP":"10.233.64.37","podIPs":[{"ip":"10.233.64.37"}],"startTime":"2023-12-19T10:53:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-19T10:53:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://24edb2618aab442c6f2d45f404b1baf9d1155f2176ce30558809a10e2b3757c3","started":true}],"qosClass":"BestEffort"}}]}

  Dec 19 10:53:57.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1702" for this suite. @ 12/19/23 10:53:57.237
• [2.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 12/19/23 10:53:57.257
  Dec 19 10:53:57.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:53:57.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:53:57.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:53:57.306
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/19/23 10:53:57.313
  STEP: Saw pod success @ 12/19/23 10:54:01.363
  Dec 19 10:54:01.372: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-92c8808e-440e-4f29-bc6a-4f3cf9e76421 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:54:01.387
  Dec 19 10:54:01.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4024" for this suite. @ 12/19/23 10:54:01.457
• [4.215 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 12/19/23 10:54:01.473
  Dec 19 10:54:01.474: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 10:54:01.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:54:01.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:54:01.516
  STEP: Creating ServiceAccount "e2e-sa-qdxx5"  @ 12/19/23 10:54:01.522
  Dec 19 10:54:01.532: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-qdxx5"  @ 12/19/23 10:54:01.532
  Dec 19 10:54:01.548: INFO: AutomountServiceAccountToken: true
  Dec 19 10:54:01.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4191" for this suite. @ 12/19/23 10:54:01.562
• [0.102 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 12/19/23 10:54:01.577
  Dec 19 10:54:01.577: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:54:01.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:54:01.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:54:01.612
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:54:01.619
  STEP: Saw pod success @ 12/19/23 10:54:05.665
  Dec 19 10:54:05.673: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-a4b45870-4afd-4744-aacc-34f03d21cf8f container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:54:05.695
  Dec 19 10:54:05.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8433" for this suite. @ 12/19/23 10:54:05.748
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 12/19/23 10:54:05.764
  Dec 19 10:54:05.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:54:05.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:54:05.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:54:05.802
  STEP: Creating configMap with name projected-configmap-test-volume-7a39dc44-2fa7-4ccc-8797-b58e47e997ca @ 12/19/23 10:54:05.808
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:54:05.816
  STEP: Saw pod success @ 12/19/23 10:54:07.846
  Dec 19 10:54:07.854: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-configmaps-0b2fff9d-8a08-4c2c-aea0-6bd27e1a0e97 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:54:07.878
  Dec 19 10:54:07.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7752" for this suite. @ 12/19/23 10:54:07.938
• [2.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/19/23 10:54:07.978
  Dec 19 10:54:07.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:54:07.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:54:08.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:54:08.022
  Dec 19 10:54:08.032: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: creating the pod @ 12/19/23 10:54:08.034
  STEP: submitting the pod to kubernetes @ 12/19/23 10:54:08.035
  Dec 19 10:54:10.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9718" for this suite. @ 12/19/23 10:54:10.162
• [2.212 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 12/19/23 10:54:10.19
  Dec 19 10:54:10.190: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename security-context @ 12/19/23 10:54:10.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:54:10.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:54:10.233
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/19/23 10:54:10.239
  STEP: Saw pod success @ 12/19/23 10:54:14.286
  Dec 19 10:54:14.294: INFO: Trying to get logs from node ja4hooch7za7-3 pod security-context-2ce88494-5b8a-4c8d-a622-6264e1056892 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:54:14.309
  Dec 19 10:54:14.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7609" for this suite. @ 12/19/23 10:54:14.352
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 12/19/23 10:54:14.378
  Dec 19 10:54:14.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:54:14.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:54:14.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:54:14.426
  STEP: set up a multi version CRD @ 12/19/23 10:54:14.434
  Dec 19 10:54:14.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: rename a version @ 12/19/23 10:54:19.183
  STEP: check the new version name is served @ 12/19/23 10:54:19.211
  STEP: check the old version name is removed @ 12/19/23 10:54:20.845
  STEP: check the other version is not changed @ 12/19/23 10:54:21.748
  Dec 19 10:54:25.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-731" for this suite. @ 12/19/23 10:54:25.202
• [10.841 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 12/19/23 10:54:25.226
  Dec 19 10:54:25.227: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:54:25.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:54:25.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:54:25.275
  STEP: Creating resourceQuota "e2e-rq-status-fbgqs" @ 12/19/23 10:54:25.29
  Dec 19 10:54:25.320: INFO: Resource quota "e2e-rq-status-fbgqs" reports spec: hard cpu limit of 500m
  Dec 19 10:54:25.320: INFO: Resource quota "e2e-rq-status-fbgqs" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-fbgqs" /status @ 12/19/23 10:54:25.32
  STEP: Confirm /status for "e2e-rq-status-fbgqs" resourceQuota via watch @ 12/19/23 10:54:25.338
  Dec 19 10:54:25.342: INFO: observed resourceQuota "e2e-rq-status-fbgqs" in namespace "resourcequota-9697" with hard status: v1.ResourceList(nil)
  Dec 19 10:54:25.342: INFO: Found resourceQuota "e2e-rq-status-fbgqs" in namespace "resourcequota-9697" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 19 10:54:25.342: INFO: ResourceQuota "e2e-rq-status-fbgqs" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/19/23 10:54:25.349
  Dec 19 10:54:25.370: INFO: Resource quota "e2e-rq-status-fbgqs" reports spec: hard cpu limit of 1
  Dec 19 10:54:25.371: INFO: Resource quota "e2e-rq-status-fbgqs" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-fbgqs" /status @ 12/19/23 10:54:25.371
  STEP: Confirm /status for "e2e-rq-status-fbgqs" resourceQuota via watch @ 12/19/23 10:54:25.386
  Dec 19 10:54:25.389: INFO: observed resourceQuota "e2e-rq-status-fbgqs" in namespace "resourcequota-9697" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 19 10:54:25.390: INFO: Found resourceQuota "e2e-rq-status-fbgqs" in namespace "resourcequota-9697" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Dec 19 10:54:25.390: INFO: ResourceQuota "e2e-rq-status-fbgqs" /status was patched
  STEP: Get "e2e-rq-status-fbgqs" /status @ 12/19/23 10:54:25.39
  Dec 19 10:54:25.401: INFO: Resourcequota "e2e-rq-status-fbgqs" reports status: hard cpu of 1
  Dec 19 10:54:25.402: INFO: Resourcequota "e2e-rq-status-fbgqs" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-fbgqs" /status before checking Spec is unchanged @ 12/19/23 10:54:25.411
  Dec 19 10:54:25.422: INFO: Resourcequota "e2e-rq-status-fbgqs" reports status: hard cpu of 2
  Dec 19 10:54:25.422: INFO: Resourcequota "e2e-rq-status-fbgqs" reports status: hard memory of 2Gi
  Dec 19 10:54:25.426: INFO: Found resourceQuota "e2e-rq-status-fbgqs" in namespace "resourcequota-9697" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Dec 19 10:56:35.453: INFO: ResourceQuota "e2e-rq-status-fbgqs" Spec was unchanged and /status reset
  Dec 19 10:56:35.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9697" for this suite. @ 12/19/23 10:56:35.496
• [130.304 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 12/19/23 10:56:35.535
  Dec 19 10:56:35.535: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:56:35.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:35.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:35.593
  STEP: apply creating a deployment @ 12/19/23 10:56:35.6
  Dec 19 10:56:35.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6889" for this suite. @ 12/19/23 10:56:35.669
• [0.157 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 12/19/23 10:56:35.692
  Dec 19 10:56:35.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:56:35.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:35.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:35.729
  STEP: Creating a pod to test downward api env vars @ 12/19/23 10:56:35.734
  STEP: Saw pod success @ 12/19/23 10:56:39.777
  Dec 19 10:56:39.784: INFO: Trying to get logs from node ja4hooch7za7-3 pod downward-api-9015ff9e-f2e4-4b6d-a230-eec5d7cb3dbf container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 10:56:39.822
  Dec 19 10:56:39.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8954" for this suite. @ 12/19/23 10:56:39.87
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 12/19/23 10:56:39.892
  Dec 19 10:56:39.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:56:39.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:39.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:39.933
  STEP: Creating pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270 @ 12/19/23 10:56:39.94
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:56:41.988
  Dec 19 10:56:41.996: INFO: Initial restart count of pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab is 0
  Dec 19 10:56:42.002: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:44.015: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:46.023: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:48.033: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:50.044: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:52.052: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:54.062: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:56.071: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:56:58.080: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:00.088: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:02.105: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:04.113: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:06.124: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:08.134: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:10.145: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:12.154: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:14.163: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:16.170: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:18.180: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:20.189: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:22.201: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:24.210: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:26.220: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:28.230: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:30.242: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:32.250: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:34.259: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:36.271: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:38.284: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:40.294: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:42.303: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:44.315: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:46.341: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:48.350: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:50.363: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:52.375: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:54.386: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:56.395: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:57:58.404: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:00.414: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:02.423: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:04.432: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:06.439: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:08.446: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:10.459: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:12.473: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:14.480: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:16.490: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:18.497: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:20.507: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:22.517: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:24.531: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:26.539: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:28.548: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:30.557: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:32.575: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:34.586: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:36.597: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:38.603: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:40.617: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:42.634: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:44.647: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:46.656: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:48.664: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:50.681: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:52.693: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:54.704: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:56.712: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:58:58.719: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:00.730: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:02.740: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:04.747: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:06.757: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:08.783: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:10.793: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:12.804: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:14.820: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:16.830: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:18.839: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:20.852: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:22.862: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:24.876: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:26.885: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:28.893: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:30.902: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:32.912: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:34.924: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:36.932: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:38.941: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:40.951: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:42.961: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:44.971: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:46.981: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:48.990: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:51.000: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:53.008: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:55.025: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:57.039: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 10:59:59.049: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:01.086: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:03.108: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:05.121: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:07.131: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:09.145: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:11.155: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:13.163: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:15.171: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:17.180: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:19.188: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:21.197: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:23.205: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:25.218: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:27.231: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:29.241: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:31.250: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:33.259: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:35.271: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:37.283: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:39.290: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:41.301: INFO: Get pod test-grpc-35028416-c47c-4590-a69f-cf861229a2ab in namespace container-probe-9270
  Dec 19 11:00:43.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:00:43.314
  STEP: Destroying namespace "container-probe-9270" for this suite. @ 12/19/23 11:00:43.34
• [243.466 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/19/23 11:00:43.361
  Dec 19 11:00:43.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename proxy @ 12/19/23 11:00:43.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:00:43.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:00:43.442
  STEP: starting an echo server on multiple ports @ 12/19/23 11:00:43.524
  STEP: creating replication controller proxy-service-tfkvt in namespace proxy-645 @ 12/19/23 11:00:43.525
  I1219 11:00:43.547938      13 runners.go:197] Created replication controller with name: proxy-service-tfkvt, namespace: proxy-645, replica count: 1
  I1219 11:00:44.599591      13 runners.go:197] proxy-service-tfkvt Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 11:00:45.600575      13 runners.go:197] proxy-service-tfkvt Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:00:45.607: INFO: setup took 2.159928657s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/19/23 11:00:45.607
  Dec 19 11:00:45.627: INFO: (0) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 18.974935ms)
  Dec 19 11:00:45.628: INFO: (0) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 20.383419ms)
  Dec 19 11:00:45.652: INFO: (0) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 43.923088ms)
  Dec 19 11:00:45.653: INFO: (0) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 44.17ms)
  Dec 19 11:00:45.667: INFO: (0) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 59.077651ms)
  Dec 19 11:00:45.668: INFO: (0) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 59.555269ms)
  Dec 19 11:00:45.678: INFO: (0) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 68.727749ms)
  Dec 19 11:00:45.690: INFO: (0) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 81.341134ms)
  Dec 19 11:00:45.693: INFO: (0) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 83.635536ms)
  Dec 19 11:00:45.697: INFO: (0) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 88.130862ms)
  Dec 19 11:00:45.697: INFO: (0) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 89.143213ms)
  Dec 19 11:00:45.698: INFO: (0) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 89.438229ms)
  Dec 19 11:00:45.699: INFO: (0) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 90.996947ms)
  Dec 19 11:00:45.701: INFO: (0) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 92.488955ms)
  Dec 19 11:00:45.703: INFO: (0) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 93.859909ms)
  Dec 19 11:00:45.703: INFO: (0) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 94.035676ms)
  Dec 19 11:00:45.730: INFO: (1) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 26.309187ms)
  Dec 19 11:00:45.737: INFO: (1) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 32.938481ms)
  Dec 19 11:00:45.737: INFO: (1) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 32.756267ms)
  Dec 19 11:00:45.738: INFO: (1) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 33.589361ms)
  Dec 19 11:00:45.744: INFO: (1) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 38.029282ms)
  Dec 19 11:00:45.744: INFO: (1) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 37.719533ms)
  Dec 19 11:00:45.744: INFO: (1) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 37.630386ms)
  Dec 19 11:00:45.745: INFO: (1) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 40.150147ms)
  Dec 19 11:00:45.745: INFO: (1) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 40.079778ms)
  Dec 19 11:00:45.745: INFO: (1) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 41.254905ms)
  Dec 19 11:00:45.748: INFO: (1) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 42.161331ms)
  Dec 19 11:00:45.749: INFO: (1) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 43.707141ms)
  Dec 19 11:00:45.754: INFO: (1) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 48.494275ms)
  Dec 19 11:00:45.755: INFO: (1) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 47.587718ms)
  Dec 19 11:00:45.755: INFO: (1) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 48.055314ms)
  Dec 19 11:00:45.755: INFO: (1) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 49.805786ms)
  Dec 19 11:00:45.778: INFO: (2) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 21.120054ms)
  Dec 19 11:00:45.778: INFO: (2) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 20.789232ms)
  Dec 19 11:00:45.778: INFO: (2) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 22.027082ms)
  Dec 19 11:00:45.778: INFO: (2) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 22.281477ms)
  Dec 19 11:00:45.784: INFO: (2) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 26.786083ms)
  Dec 19 11:00:45.788: INFO: (2) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 31.605745ms)
  Dec 19 11:00:45.788: INFO: (2) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 31.202195ms)
  Dec 19 11:00:45.788: INFO: (2) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 31.997289ms)
  Dec 19 11:00:45.795: INFO: (2) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 38.276457ms)
  Dec 19 11:00:45.795: INFO: (2) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 38.189439ms)
  Dec 19 11:00:45.795: INFO: (2) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 38.063823ms)
  Dec 19 11:00:45.795: INFO: (2) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 39.046436ms)
  Dec 19 11:00:45.795: INFO: (2) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 39.258785ms)
  Dec 19 11:00:45.796: INFO: (2) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 38.231548ms)
  Dec 19 11:00:45.796: INFO: (2) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 38.281086ms)
  Dec 19 11:00:45.796: INFO: (2) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 40.025633ms)
  Dec 19 11:00:45.831: INFO: (3) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 33.79293ms)
  Dec 19 11:00:45.831: INFO: (3) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 33.187611ms)
  Dec 19 11:00:45.831: INFO: (3) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 33.562067ms)
  Dec 19 11:00:45.833: INFO: (3) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 36.031595ms)
  Dec 19 11:00:45.838: INFO: (3) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 40.907879ms)
  Dec 19 11:00:45.838: INFO: (3) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 40.329936ms)
  Dec 19 11:00:45.838: INFO: (3) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 40.874238ms)
  Dec 19 11:00:45.839: INFO: (3) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 41.20056ms)
  Dec 19 11:00:45.839: INFO: (3) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 41.4587ms)
  Dec 19 11:00:45.839: INFO: (3) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 41.927216ms)
  Dec 19 11:00:45.841: INFO: (3) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 43.164154ms)
  Dec 19 11:00:45.841: INFO: (3) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 44.277376ms)
  Dec 19 11:00:45.841: INFO: (3) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 43.317423ms)
  Dec 19 11:00:45.846: INFO: (3) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 47.793144ms)
  Dec 19 11:00:45.846: INFO: (3) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 48.370453ms)
  Dec 19 11:00:45.849: INFO: (3) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 51.261064ms)
  Dec 19 11:00:45.867: INFO: (4) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 17.62339ms)
  Dec 19 11:00:45.875: INFO: (4) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 24.968175ms)
  Dec 19 11:00:45.875: INFO: (4) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 25.068804ms)
  Dec 19 11:00:45.875: INFO: (4) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 25.645119ms)
  Dec 19 11:00:45.875: INFO: (4) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 25.602072ms)
  Dec 19 11:00:45.877: INFO: (4) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 26.902311ms)
  Dec 19 11:00:45.878: INFO: (4) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 27.593626ms)
  Dec 19 11:00:45.878: INFO: (4) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 27.832513ms)
  Dec 19 11:00:45.878: INFO: (4) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 28.203464ms)
  Dec 19 11:00:45.882: INFO: (4) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 31.599561ms)
  Dec 19 11:00:45.884: INFO: (4) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 33.755368ms)
  Dec 19 11:00:45.886: INFO: (4) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 36.067584ms)
  Dec 19 11:00:45.887: INFO: (4) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 36.875602ms)
  Dec 19 11:00:45.887: INFO: (4) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 36.620804ms)
  Dec 19 11:00:45.888: INFO: (4) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 37.56911ms)
  Dec 19 11:00:45.889: INFO: (4) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 38.732513ms)
  Dec 19 11:00:45.901: INFO: (5) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 11.639595ms)
  Dec 19 11:00:45.903: INFO: (5) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 13.54817ms)
  Dec 19 11:00:45.903: INFO: (5) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 13.354416ms)
  Dec 19 11:00:45.904: INFO: (5) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 14.64651ms)
  Dec 19 11:00:45.914: INFO: (5) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 24.402157ms)
  Dec 19 11:00:45.914: INFO: (5) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 23.4754ms)
  Dec 19 11:00:45.915: INFO: (5) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 22.933732ms)
  Dec 19 11:00:45.916: INFO: (5) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 25.849288ms)
  Dec 19 11:00:45.917: INFO: (5) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 26.113792ms)
  Dec 19 11:00:45.918: INFO: (5) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 26.932835ms)
  Dec 19 11:00:45.921: INFO: (5) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 30.271939ms)
  Dec 19 11:00:45.922: INFO: (5) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 31.134406ms)
  Dec 19 11:00:45.922: INFO: (5) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 30.719223ms)
  Dec 19 11:00:45.922: INFO: (5) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 32.22609ms)
  Dec 19 11:00:45.922: INFO: (5) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 31.35243ms)
  Dec 19 11:00:45.922: INFO: (5) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 32.458487ms)
  Dec 19 11:00:45.937: INFO: (6) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 13.569463ms)
  Dec 19 11:00:45.941: INFO: (6) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 17.336887ms)
  Dec 19 11:00:45.941: INFO: (6) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 18.762169ms)
  Dec 19 11:00:45.944: INFO: (6) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 21.157743ms)
  Dec 19 11:00:45.945: INFO: (6) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 21.924018ms)
  Dec 19 11:00:45.945: INFO: (6) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 22.008627ms)
  Dec 19 11:00:45.945: INFO: (6) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 22.87146ms)
  Dec 19 11:00:45.945: INFO: (6) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 21.605942ms)
  Dec 19 11:00:45.945: INFO: (6) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 21.500477ms)
  Dec 19 11:00:45.947: INFO: (6) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 24.252904ms)
  Dec 19 11:00:45.952: INFO: (6) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 29.361246ms)
  Dec 19 11:00:45.952: INFO: (6) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 28.774899ms)
  Dec 19 11:00:45.953: INFO: (6) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 30.137474ms)
  Dec 19 11:00:45.953: INFO: (6) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 30.325741ms)
  Dec 19 11:00:45.955: INFO: (6) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 31.217872ms)
  Dec 19 11:00:45.955: INFO: (6) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 31.929861ms)
  Dec 19 11:00:45.973: INFO: (7) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 16.6008ms)
  Dec 19 11:00:45.974: INFO: (7) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 17.555829ms)
  Dec 19 11:00:45.975: INFO: (7) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 18.531075ms)
  Dec 19 11:00:45.975: INFO: (7) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 19.315631ms)
  Dec 19 11:00:45.978: INFO: (7) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 21.511403ms)
  Dec 19 11:00:45.980: INFO: (7) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 23.369925ms)
  Dec 19 11:00:45.985: INFO: (7) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 27.551358ms)
  Dec 19 11:00:45.985: INFO: (7) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 27.735892ms)
  Dec 19 11:00:45.985: INFO: (7) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 27.635906ms)
  Dec 19 11:00:45.985: INFO: (7) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 28.672946ms)
  Dec 19 11:00:45.985: INFO: (7) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 28.376249ms)
  Dec 19 11:00:45.988: INFO: (7) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 30.987429ms)
  Dec 19 11:00:45.988: INFO: (7) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 31.898164ms)
  Dec 19 11:00:45.988: INFO: (7) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 31.291149ms)
  Dec 19 11:00:45.988: INFO: (7) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 31.672176ms)
  Dec 19 11:00:45.988: INFO: (7) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 31.609732ms)
  Dec 19 11:00:46.002: INFO: (8) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 11.413379ms)
  Dec 19 11:00:46.004: INFO: (8) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 12.254388ms)
  Dec 19 11:00:46.013: INFO: (8) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 20.219134ms)
  Dec 19 11:00:46.017: INFO: (8) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 24.490526ms)
  Dec 19 11:00:46.018: INFO: (8) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 26.133949ms)
  Dec 19 11:00:46.018: INFO: (8) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 26.189662ms)
  Dec 19 11:00:46.019: INFO: (8) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 26.483028ms)
  Dec 19 11:00:46.019: INFO: (8) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 26.692433ms)
  Dec 19 11:00:46.019: INFO: (8) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 27.684734ms)
  Dec 19 11:00:46.023: INFO: (8) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 30.371898ms)
  Dec 19 11:00:46.023: INFO: (8) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 30.780945ms)
  Dec 19 11:00:46.023: INFO: (8) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 31.281986ms)
  Dec 19 11:00:46.024: INFO: (8) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 32.819439ms)
  Dec 19 11:00:46.024: INFO: (8) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 32.388336ms)
  Dec 19 11:00:46.025: INFO: (8) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 32.62075ms)
  Dec 19 11:00:46.025: INFO: (8) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 32.801044ms)
  Dec 19 11:00:46.043: INFO: (9) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 17.437403ms)
  Dec 19 11:00:46.050: INFO: (9) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 24.336533ms)
  Dec 19 11:00:46.050: INFO: (9) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 23.363416ms)
  Dec 19 11:00:46.051: INFO: (9) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 25.035768ms)
  Dec 19 11:00:46.052: INFO: (9) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 26.429551ms)
  Dec 19 11:00:46.057: INFO: (9) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 29.980863ms)
  Dec 19 11:00:46.057: INFO: (9) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 30.712059ms)
  Dec 19 11:00:46.057: INFO: (9) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 30.737534ms)
  Dec 19 11:00:46.058: INFO: (9) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 30.815123ms)
  Dec 19 11:00:46.058: INFO: (9) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 31.666155ms)
  Dec 19 11:00:46.058: INFO: (9) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 32.218434ms)
  Dec 19 11:00:46.058: INFO: (9) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 31.132157ms)
  Dec 19 11:00:46.061: INFO: (9) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 35.128685ms)
  Dec 19 11:00:46.065: INFO: (9) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 38.005997ms)
  Dec 19 11:00:46.068: INFO: (9) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 41.833163ms)
  Dec 19 11:00:46.068: INFO: (9) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 41.090865ms)
  Dec 19 11:00:46.079: INFO: (10) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 10.555822ms)
  Dec 19 11:00:46.086: INFO: (10) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 17.163262ms)
  Dec 19 11:00:46.087: INFO: (10) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 18.522625ms)
  Dec 19 11:00:46.087: INFO: (10) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 18.568059ms)
  Dec 19 11:00:46.088: INFO: (10) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 18.895907ms)
  Dec 19 11:00:46.096: INFO: (10) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 25.761063ms)
  Dec 19 11:00:46.096: INFO: (10) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 26.921096ms)
  Dec 19 11:00:46.099: INFO: (10) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 29.364745ms)
  Dec 19 11:00:46.099: INFO: (10) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 29.528841ms)
  Dec 19 11:00:46.099: INFO: (10) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 29.14307ms)
  Dec 19 11:00:46.101: INFO: (10) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 31.518712ms)
  Dec 19 11:00:46.104: INFO: (10) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 35.446341ms)
  Dec 19 11:00:46.104: INFO: (10) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 34.784851ms)
  Dec 19 11:00:46.104: INFO: (10) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 35.326715ms)
  Dec 19 11:00:46.106: INFO: (10) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 35.942948ms)
  Dec 19 11:00:46.107: INFO: (10) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 38.304901ms)
  Dec 19 11:00:46.123: INFO: (11) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 14.990049ms)
  Dec 19 11:00:46.123: INFO: (11) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 14.965634ms)
  Dec 19 11:00:46.127: INFO: (11) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 18.457086ms)
  Dec 19 11:00:46.128: INFO: (11) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 18.421503ms)
  Dec 19 11:00:46.128: INFO: (11) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 20.083367ms)
  Dec 19 11:00:46.130: INFO: (11) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 21.480046ms)
  Dec 19 11:00:46.133: INFO: (11) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 23.206185ms)
  Dec 19 11:00:46.135: INFO: (11) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 25.920181ms)
  Dec 19 11:00:46.136: INFO: (11) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 26.714021ms)
  Dec 19 11:00:46.136: INFO: (11) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 27.42418ms)
  Dec 19 11:00:46.137: INFO: (11) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 28.867294ms)
  Dec 19 11:00:46.139: INFO: (11) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 31.483812ms)
  Dec 19 11:00:46.140: INFO: (11) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 31.972846ms)
  Dec 19 11:00:46.141: INFO: (11) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 32.985197ms)
  Dec 19 11:00:46.142: INFO: (11) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 33.328049ms)
  Dec 19 11:00:46.146: INFO: (11) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 37.390585ms)
  Dec 19 11:00:46.163: INFO: (12) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 16.415301ms)
  Dec 19 11:00:46.174: INFO: (12) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 26.906708ms)
  Dec 19 11:00:46.175: INFO: (12) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 27.932666ms)
  Dec 19 11:00:46.179: INFO: (12) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 31.525882ms)
  Dec 19 11:00:46.194: INFO: (12) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 45.763015ms)
  Dec 19 11:00:46.197: INFO: (12) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 49.205728ms)
  Dec 19 11:00:46.197: INFO: (12) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 49.538976ms)
  Dec 19 11:00:46.199: INFO: (12) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 50.571523ms)
  Dec 19 11:00:46.199: INFO: (12) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 50.919881ms)
  Dec 19 11:00:46.199: INFO: (12) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 51.430728ms)
  Dec 19 11:00:46.199: INFO: (12) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 52.431873ms)
  Dec 19 11:00:46.199: INFO: (12) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 51.789ms)
  Dec 19 11:00:46.200: INFO: (12) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 51.971201ms)
  Dec 19 11:00:46.201: INFO: (12) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 52.788611ms)
  Dec 19 11:00:46.201: INFO: (12) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 52.992165ms)
  Dec 19 11:00:46.203: INFO: (12) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 55.454164ms)
  Dec 19 11:00:46.223: INFO: (13) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 19.187265ms)
  Dec 19 11:00:46.224: INFO: (13) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 17.255637ms)
  Dec 19 11:00:46.225: INFO: (13) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 17.980391ms)
  Dec 19 11:00:46.232: INFO: (13) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 25.260312ms)
  Dec 19 11:00:46.232: INFO: (13) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 28.12956ms)
  Dec 19 11:00:46.240: INFO: (13) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 31.324459ms)
  Dec 19 11:00:46.241: INFO: (13) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 37.69404ms)
  Dec 19 11:00:46.253: INFO: (13) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 45.635743ms)
  Dec 19 11:00:46.254: INFO: (13) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 44.091343ms)
  Dec 19 11:00:46.254: INFO: (13) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 44.002683ms)
  Dec 19 11:00:46.254: INFO: (13) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 46.940807ms)
  Dec 19 11:00:46.255: INFO: (13) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 47.594642ms)
  Dec 19 11:00:46.255: INFO: (13) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 46.877037ms)
  Dec 19 11:00:46.255: INFO: (13) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 45.562804ms)
  Dec 19 11:00:46.255: INFO: (13) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 46.631494ms)
  Dec 19 11:00:46.256: INFO: (13) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 46.615198ms)
  Dec 19 11:00:46.273: INFO: (14) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 17.25046ms)
  Dec 19 11:00:46.277: INFO: (14) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 20.405296ms)
  Dec 19 11:00:46.277: INFO: (14) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 19.824708ms)
  Dec 19 11:00:46.278: INFO: (14) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 21.725229ms)
  Dec 19 11:00:46.284: INFO: (14) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 26.845543ms)
  Dec 19 11:00:46.286: INFO: (14) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 29.061294ms)
  Dec 19 11:00:46.287: INFO: (14) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 29.987164ms)
  Dec 19 11:00:46.290: INFO: (14) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 33.377882ms)
  Dec 19 11:00:46.293: INFO: (14) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 35.177933ms)
  Dec 19 11:00:46.298: INFO: (14) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 41.717663ms)
  Dec 19 11:00:46.298: INFO: (14) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 41.728294ms)
  Dec 19 11:00:46.298: INFO: (14) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 42.270427ms)
  Dec 19 11:00:46.298: INFO: (14) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 41.658708ms)
  Dec 19 11:00:46.298: INFO: (14) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 42.003578ms)
  Dec 19 11:00:46.298: INFO: (14) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 41.059128ms)
  Dec 19 11:00:46.299: INFO: (14) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 41.781156ms)
  Dec 19 11:00:46.329: INFO: (15) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 25.071265ms)
  Dec 19 11:00:46.330: INFO: (15) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 25.741529ms)
  Dec 19 11:00:46.330: INFO: (15) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 26.032616ms)
  Dec 19 11:00:46.332: INFO: (15) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 28.764949ms)
  Dec 19 11:00:46.340: INFO: (15) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 35.261529ms)
  Dec 19 11:00:46.340: INFO: (15) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 36.082218ms)
  Dec 19 11:00:46.340: INFO: (15) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 35.972269ms)
  Dec 19 11:00:46.340: INFO: (15) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 35.744223ms)
  Dec 19 11:00:46.340: INFO: (15) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 35.757244ms)
  Dec 19 11:00:46.340: INFO: (15) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 36.384803ms)
  Dec 19 11:00:46.343: INFO: (15) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 38.519909ms)
  Dec 19 11:00:46.344: INFO: (15) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 39.710608ms)
  Dec 19 11:00:46.347: INFO: (15) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 42.30644ms)
  Dec 19 11:00:46.351: INFO: (15) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 46.243615ms)
  Dec 19 11:00:46.351: INFO: (15) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 46.833276ms)
  Dec 19 11:00:46.357: INFO: (15) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 52.378766ms)
  Dec 19 11:00:46.373: INFO: (16) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 16.403048ms)
  Dec 19 11:00:46.376: INFO: (16) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 18.441673ms)
  Dec 19 11:00:46.379: INFO: (16) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 21.032046ms)
  Dec 19 11:00:46.381: INFO: (16) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 23.527557ms)
  Dec 19 11:00:46.383: INFO: (16) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 24.422198ms)
  Dec 19 11:00:46.383: INFO: (16) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 26.066404ms)
  Dec 19 11:00:46.383: INFO: (16) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 26.377085ms)
  Dec 19 11:00:46.384: INFO: (16) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 26.291285ms)
  Dec 19 11:00:46.385: INFO: (16) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 27.023381ms)
  Dec 19 11:00:46.386: INFO: (16) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 27.629463ms)
  Dec 19 11:00:46.387: INFO: (16) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 28.199159ms)
  Dec 19 11:00:46.388: INFO: (16) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 30.123557ms)
  Dec 19 11:00:46.399: INFO: (16) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 41.497306ms)
  Dec 19 11:00:46.399: INFO: (16) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 42.035412ms)
  Dec 19 11:00:46.400: INFO: (16) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 42.351153ms)
  Dec 19 11:00:46.400: INFO: (16) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 42.599619ms)
  Dec 19 11:00:46.414: INFO: (17) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 13.006599ms)
  Dec 19 11:00:46.414: INFO: (17) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 12.931451ms)
  Dec 19 11:00:46.417: INFO: (17) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 16.123261ms)
  Dec 19 11:00:46.422: INFO: (17) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 21.520338ms)
  Dec 19 11:00:46.422: INFO: (17) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 21.163959ms)
  Dec 19 11:00:46.422: INFO: (17) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 21.78615ms)
  Dec 19 11:00:46.426: INFO: (17) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 24.586547ms)
  Dec 19 11:00:46.429: INFO: (17) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 28.730501ms)
  Dec 19 11:00:46.430: INFO: (17) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 29.454881ms)
  Dec 19 11:00:46.430: INFO: (17) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 29.313055ms)
  Dec 19 11:00:46.432: INFO: (17) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 31.356772ms)
  Dec 19 11:00:46.434: INFO: (17) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 33.535226ms)
  Dec 19 11:00:46.436: INFO: (17) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 35.323606ms)
  Dec 19 11:00:46.437: INFO: (17) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 36.30803ms)
  Dec 19 11:00:46.438: INFO: (17) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 36.914139ms)
  Dec 19 11:00:46.438: INFO: (17) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 37.201154ms)
  Dec 19 11:00:46.456: INFO: (18) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 17.765673ms)
  Dec 19 11:00:46.456: INFO: (18) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 18.06906ms)
  Dec 19 11:00:46.457: INFO: (18) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 18.2086ms)
  Dec 19 11:00:46.457: INFO: (18) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 17.999542ms)
  Dec 19 11:00:46.466: INFO: (18) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 26.627709ms)
  Dec 19 11:00:46.467: INFO: (18) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 28.064837ms)
  Dec 19 11:00:46.468: INFO: (18) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 28.808489ms)
  Dec 19 11:00:46.468: INFO: (18) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 28.678335ms)
  Dec 19 11:00:46.471: INFO: (18) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 31.540918ms)
  Dec 19 11:00:46.474: INFO: (18) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 34.336348ms)
  Dec 19 11:00:46.475: INFO: (18) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 35.317661ms)
  Dec 19 11:00:46.475: INFO: (18) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 35.445486ms)
  Dec 19 11:00:46.475: INFO: (18) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 35.485332ms)
  Dec 19 11:00:46.478: INFO: (18) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 39.014808ms)
  Dec 19 11:00:46.479: INFO: (18) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 40.265406ms)
  Dec 19 11:00:46.482: INFO: (18) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 42.690802ms)
  Dec 19 11:00:46.495: INFO: (19) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 13.214568ms)
  Dec 19 11:00:46.514: INFO: (19) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">test</... (200; 31.296453ms)
  Dec 19 11:00:46.514: INFO: (19) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:162/proxy/: bar (200; 31.534378ms)
  Dec 19 11:00:46.515: INFO: (19) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname1/proxy/: foo (200; 32.722922ms)
  Dec 19 11:00:46.519: INFO: (19) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:443/proxy/tlsrewriteme... (200; 35.697699ms)
  Dec 19 11:00:46.520: INFO: (19) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:462/proxy/: tls qux (200; 36.386192ms)
  Dec 19 11:00:46.520: INFO: (19) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:1080/proxy/rewriteme">t... (200; 36.306079ms)
  Dec 19 11:00:46.520: INFO: (19) /api/v1/namespaces/proxy-645/pods/http:proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 35.946931ms)
  Dec 19 11:00:46.520: INFO: (19) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname2/proxy/: tls qux (200; 37.397422ms)
  Dec 19 11:00:46.520: INFO: (19) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn:160/proxy/: foo (200; 37.298597ms)
  Dec 19 11:00:46.521: INFO: (19) /api/v1/namespaces/proxy-645/services/proxy-service-tfkvt:portname2/proxy/: bar (200; 37.366172ms)
  Dec 19 11:00:46.521: INFO: (19) /api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/: <a href="/api/v1/namespaces/proxy-645/pods/proxy-service-tfkvt-xnmzn/proxy/rewriteme">test</a> (200; 38.246526ms)
  Dec 19 11:00:46.521: INFO: (19) /api/v1/namespaces/proxy-645/pods/https:proxy-service-tfkvt-xnmzn:460/proxy/: tls baz (200; 37.831434ms)
  Dec 19 11:00:46.521: INFO: (19) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname1/proxy/: foo (200; 38.909737ms)
  Dec 19 11:00:46.527: INFO: (19) /api/v1/namespaces/proxy-645/services/http:proxy-service-tfkvt:portname2/proxy/: bar (200; 43.566507ms)
  Dec 19 11:00:46.528: INFO: (19) /api/v1/namespaces/proxy-645/services/https:proxy-service-tfkvt:tlsportname1/proxy/: tls baz (200; 44.056825ms)
  Dec 19 11:00:46.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-tfkvt in namespace proxy-645, will wait for the garbage collector to delete the pods @ 12/19/23 11:00:46.542
  Dec 19 11:00:46.613: INFO: Deleting ReplicationController proxy-service-tfkvt took: 11.589351ms
  Dec 19 11:00:46.714: INFO: Terminating ReplicationController proxy-service-tfkvt pods took: 101.10436ms
  STEP: Destroying namespace "proxy-645" for this suite. @ 12/19/23 11:00:49.419
• [6.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 12/19/23 11:00:49.437
  Dec 19 11:00:49.437: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename job @ 12/19/23 11:00:49.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:00:49.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:00:49.48
  STEP: Creating a suspended job @ 12/19/23 11:00:49.489
  STEP: Patching the Job @ 12/19/23 11:00:49.509
  STEP: Watching for Job to be patched @ 12/19/23 11:00:49.537
  Dec 19 11:00:49.543: INFO: Event ADDED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-job-label:e2e-76p4b] and annotations: map[]
  Dec 19 11:00:49.544: INFO: Event MODIFIED found for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[]
  STEP: Updating the job @ 12/19/23 11:00:49.544
  STEP: Watching for Job to be updated @ 12/19/23 11:00:49.567
  Dec 19 11:00:49.571: INFO: Event MODIFIED found for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:49.571: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/19/23 11:00:49.571
  Dec 19 11:00:49.579: INFO: Job: e2e-76p4b as labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b]
  STEP: Waiting for job to complete @ 12/19/23 11:00:49.579
  STEP: Delete a job collection with a labelselector @ 12/19/23 11:00:57.599
  STEP: Watching for Job to be deleted @ 12/19/23 11:00:57.63
  Dec 19 11:00:57.637: INFO: Event MODIFIED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:57.638: INFO: Event MODIFIED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:57.639: INFO: Event MODIFIED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:57.640: INFO: Event MODIFIED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:57.640: INFO: Event MODIFIED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:57.640: INFO: Event MODIFIED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:57.641: INFO: Event MODIFIED observed for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  Dec 19 11:00:57.641: INFO: Event DELETED found for Job e2e-76p4b in namespace job-1769 with labels: map[e2e-76p4b:patched e2e-job-label:e2e-76p4b] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/19/23 11:00:57.641
  Dec 19 11:00:57.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1769" for this suite. @ 12/19/23 11:00:57.679
• [8.301 seconds]
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 12/19/23 11:00:57.74
  Dec 19 11:00:57.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:00:57.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:00:57.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:00:57.79
  STEP: Creating secret with name secret-test-0e84c179-a580-40ce-b0a0-b46dc0b2c833 @ 12/19/23 11:00:57.797
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:00:57.81
  STEP: Saw pod success @ 12/19/23 11:01:01.886
  Dec 19 11:01:01.894: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-7bf8cc42-fd29-4021-be44-ef6d86b6a7cd container secret-env-test: <nil>
  STEP: delete the pod @ 12/19/23 11:01:01.936
  Dec 19 11:01:01.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9472" for this suite. @ 12/19/23 11:01:01.974
• [4.247 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/19/23 11:01:01.988
  Dec 19 11:01:01.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:01:01.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:01:02.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:01:02.04
  Dec 19 11:01:02.074: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Dec 19 11:01:07.086: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 11:01:07.087
  Dec 19 11:01:07.088: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Dec 19 11:01:09.096: INFO: Creating deployment "test-rollover-deployment"
  Dec 19 11:01:09.122: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Dec 19 11:01:11.146: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Dec 19 11:01:11.165: INFO: Ensure that both replica sets have 1 created replica
  Dec 19 11:01:11.180: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Dec 19 11:01:11.198: INFO: Updating deployment test-rollover-deployment
  Dec 19 11:01:11.199: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Dec 19 11:01:13.221: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Dec 19 11:01:13.240: INFO: Make sure deployment "test-rollover-deployment" is complete
  Dec 19 11:01:13.256: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:01:13.256: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:01:15.272: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:01:15.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:01:17.275: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:01:17.275: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:01:19.275: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:01:19.276: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:01:21.275: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:01:21.275: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 1, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:01:23.279: INFO: 
  Dec 19 11:01:23.280: INFO: Ensure that both old replica sets have no replicas
  Dec 19 11:01:23.303: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2011",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90ee5fb5-7ed4-4523-baee-3235afc7d893",
      ResourceVersion: (string) (len=5) "18335",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580482,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580482,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:01:23.342: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2011",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b31b30c1-d72b-4b26-8d5c-6fd33b2d282f",
      ResourceVersion: (string) (len=5) "18324",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580471,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "90ee5fb5-7ed4-4523-baee-3235afc7d893",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 30 65 65 35 66  62 35 2d 37 65 64 34 2d  |\"90ee5fb5-7ed4-|
              00000120  34 35 32 33 2d 62 61 65  65 2d 33 32 33 35 61 66  |4523-baee-3235af|
              00000130  63 37 64 38 39 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c7d893\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580482,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:01:23.344: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Dec 19 11:01:23.345: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2011",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebc041f3-26bb-4d6d-8b3b-c12bbdc69bbe",
      ResourceVersion: (string) (len=5) "18334",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "90ee5fb5-7ed4-4523-baee-3235afc7d893",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580482,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 30 65 65 35 66 62 35  2d 37 65 64 34 2d 34 35  |90ee5fb5-7ed4-45|
              000000c0  32 33 2d 62 61 65 65 2d  33 32 33 35 61 66 63 37  |23-baee-3235afc7|
              000000d0  64 38 39 33 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |d893\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580482,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:01:23.349: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2011",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98fa3bf1-5c03-4f08-87be-a61bb84d99f9",
      ResourceVersion: (string) (len=5) "18299",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "90ee5fb5-7ed4-4523-baee-3235afc7d893",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 30 65 65 35 66  62 35 2d 37 65 64 34 2d  |\"90ee5fb5-7ed4-|
              00000120  34 35 32 33 2d 62 61 65  65 2d 33 32 33 35 61 66  |4523-baee-3235af|
              00000130  63 37 64 38 39 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c7d893\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:01:23.360: INFO: Pod "test-rollover-deployment-5d484bf7f9-fsp4v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-fsp4v",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-2011",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63f376eb-4c7a-4a58-86de-7aaff0c96d62",
      ResourceVersion: (string) (len=5) "18305",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580471,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "b31b30c1-d72b-4b26-8d5c-6fd33b2d282f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  31 62 33 30 63 31 2d 64  |d\":\"b31b30c1-d|
              00000090  37 32 62 2d 34 62 32 36  2d 38 64 35 63 2d 36 66  |72b-4b26-8d5c-6f|
              000000a0  64 33 33 62 32 64 32 38  32 66 5c 22 7d 22 3a 7b  |d33b2d282f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 32 31 30 5c 22 7d  |10.233.66.210\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2c994",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2c994",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580471,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838580471,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://270dd0ed4705a1de06edcbdb7fbe481d36e1a0c7878a8b1e6894dbf3f6131d41",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:01:23.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2011" for this suite. @ 12/19/23 11:01:23.383
• [21.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 12/19/23 11:01:23.409
  Dec 19 11:01:23.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:01:23.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:01:23.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:01:23.456
  STEP: Setting up server cert @ 12/19/23 11:01:23.528
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:01:24.794
  STEP: Deploying the webhook pod @ 12/19/23 11:01:24.824
  STEP: Wait for the deployment to be ready @ 12/19/23 11:01:24.845
  Dec 19 11:01:24.865: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:01:26.905
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:01:26.935
  Dec 19 11:01:27.936: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 11:01:27.955: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-472-crds.webhook.example.com via the AdmissionRegistration API @ 12/19/23 11:01:28.495
  STEP: Creating a custom resource while v1 is storage version @ 12/19/23 11:01:28.569
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/19/23 11:01:30.857
  STEP: Patching the custom resource while v2 is storage version @ 12/19/23 11:01:31.081
  Dec 19 11:01:31.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5787" for this suite. @ 12/19/23 11:01:32.083
  STEP: Destroying namespace "webhook-markers-5721" for this suite. @ 12/19/23 11:01:32.096
• [8.700 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 12/19/23 11:01:32.111
  Dec 19 11:01:32.112: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:01:32.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:01:32.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:01:32.154
  STEP: creating the pod @ 12/19/23 11:01:32.158
  Dec 19 11:01:32.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 create -f -'
  Dec 19 11:01:32.909: INFO: stderr: ""
  Dec 19 11:01:32.909: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/19/23 11:01:34.934
  Dec 19 11:01:34.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 label pods pause testing-label=testing-label-value'
  Dec 19 11:01:35.134: INFO: stderr: ""
  Dec 19 11:01:35.134: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/19/23 11:01:35.134
  Dec 19 11:01:35.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 get pod pause -L testing-label'
  Dec 19 11:01:35.332: INFO: stderr: ""
  Dec 19 11:01:35.332: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/19/23 11:01:35.332
  Dec 19 11:01:35.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 label pods pause testing-label-'
  Dec 19 11:01:35.542: INFO: stderr: ""
  Dec 19 11:01:35.542: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/19/23 11:01:35.542
  Dec 19 11:01:35.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 get pod pause -L testing-label'
  Dec 19 11:01:35.726: INFO: stderr: ""
  Dec 19 11:01:35.726: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 12/19/23 11:01:35.727
  Dec 19 11:01:35.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 delete --grace-period=0 --force -f -'
  Dec 19 11:01:35.892: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:01:35.892: INFO: stdout: "pod \"pause\" force deleted\n"
  Dec 19 11:01:35.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 get rc,svc -l name=pause --no-headers'
  Dec 19 11:01:36.135: INFO: stderr: "No resources found in kubectl-2913 namespace.\n"
  Dec 19 11:01:36.135: INFO: stdout: ""
  Dec 19 11:01:36.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2913 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 19 11:01:36.309: INFO: stderr: ""
  Dec 19 11:01:36.309: INFO: stdout: ""
  Dec 19 11:01:36.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2913" for this suite. @ 12/19/23 11:01:36.36
• [4.270 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 12/19/23 11:01:36.382
  Dec 19 11:01:36.382: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:01:36.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:01:36.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:01:36.423
  STEP: Creating the pod @ 12/19/23 11:01:36.427
  Dec 19 11:01:39.008: INFO: Successfully updated pod "labelsupdate02a8d28c-42f1-4755-9dd2-72e8089bfcfa"
  Dec 19 11:01:43.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7874" for this suite. @ 12/19/23 11:01:43.102
• [6.734 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 12/19/23 11:01:43.121
  Dec 19 11:01:43.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:01:43.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:01:43.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:01:43.165
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:01:43.171
  STEP: Saw pod success @ 12/19/23 11:01:47.219
  Dec 19 11:01:47.229: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-6358384d-9864-4782-ade2-e55f9fe61a2d container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:01:47.248
  Dec 19 11:01:47.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2437" for this suite. @ 12/19/23 11:01:47.294
• [4.184 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 12/19/23 11:01:47.306
  Dec 19 11:01:47.306: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:01:47.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:01:47.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:01:47.355
  STEP: Creating a test headless service @ 12/19/23 11:01:47.364
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local;sleep 1; done
   @ 12/19/23 11:01:47.377
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6292.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local;sleep 1; done
   @ 12/19/23 11:01:47.377
  STEP: creating a pod to probe DNS @ 12/19/23 11:01:47.377
  STEP: submitting the pod to kubernetes @ 12/19/23 11:01:47.377
  STEP: retrieving the pod @ 12/19/23 11:01:51.452
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:01:51.48
  Dec 19 11:01:51.492: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.500: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.512: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.529: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.537: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.547: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.557: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.567: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:51.567: INFO: Lookups using dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local]

  Dec 19 11:01:51.583: INFO: Pod client logs for webserver: 
  Dec 19 11:01:51.610: INFO: Pod client logs for querier: 
  Dec 19 11:01:51.630: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:01:56.644: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.653: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.665: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.681: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.699: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.715: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.728: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.738: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:01:56.739: INFO: Lookups using dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local]

  Dec 19 11:01:56.756: INFO: Pod client logs for webserver: 
  Dec 19 11:01:56.770: INFO: Pod client logs for querier: 
  Dec 19 11:01:56.783: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:02:01.642: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.652: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.671: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.684: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.691: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.702: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.719: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.726: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:01.726: INFO: Lookups using dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local]

  Dec 19 11:02:01.740: INFO: Pod client logs for webserver: 
  Dec 19 11:02:01.756: INFO: Pod client logs for querier: 
  Dec 19 11:02:01.767: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:02:06.642: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.650: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.657: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.669: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.686: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.696: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.708: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.722: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:06.723: INFO: Lookups using dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local]

  Dec 19 11:02:06.742: INFO: Pod client logs for webserver: 
  Dec 19 11:02:06.760: INFO: Pod client logs for querier: 
  Dec 19 11:02:06.779: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:02:11.662: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.670: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.680: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.692: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.702: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.713: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.725: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.736: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:11.736: INFO: Lookups using dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local]

  Dec 19 11:02:11.754: INFO: Pod client logs for webserver: 
  Dec 19 11:02:11.765: INFO: Pod client logs for querier: 
  Dec 19 11:02:11.776: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:02:16.644: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.667: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.680: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.692: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.702: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.713: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.723: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.733: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local from pod dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae: the server could not find the requested resource (get pods dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae)
  Dec 19 11:02:16.734: INFO: Lookups using dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6292.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6292.svc.cluster.local jessie_udp@dns-test-service-2.dns-6292.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6292.svc.cluster.local]

  Dec 19 11:02:16.757: INFO: Pod client logs for webserver: 
  Dec 19 11:02:16.776: INFO: Pod client logs for querier: 
  Dec 19 11:02:16.796: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:02:21.713: INFO: DNS probes using dns-6292/dns-test-54cbf37a-f92a-47e1-a957-b0a52c1fc9ae succeeded

  Dec 19 11:02:21.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:02:21.726
  STEP: deleting the test headless service @ 12/19/23 11:02:21.753
  STEP: Destroying namespace "dns-6292" for this suite. @ 12/19/23 11:02:21.81
• [34.526 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 12/19/23 11:02:21.834
  Dec 19 11:02:21.834: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:02:21.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:21.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:21.894
  STEP: Counting existing ResourceQuota @ 12/19/23 11:02:21.899
  STEP: Creating a ResourceQuota @ 12/19/23 11:02:26.91
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:02:26.928
  Dec 19 11:02:28.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-761" for this suite. @ 12/19/23 11:02:28.953
• [7.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 12/19/23 11:02:28.982
  Dec 19 11:02:28.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:02:28.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:29.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:29.023
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 11:02:29.028
  Dec 19 11:02:29.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-9617 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 19 11:02:29.244: INFO: stderr: ""
  Dec 19 11:02:29.244: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/19/23 11:02:29.244
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/19/23 11:02:34.297
  Dec 19 11:02:34.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-9617 get pod e2e-test-httpd-pod -o json'
  Dec 19 11:02:34.477: INFO: stderr: ""
  Dec 19 11:02:34.477: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-12-19T11:02:29Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9617\",\n        \"resourceVersion\": \"18706\",\n        \"uid\": \"8d90e13e-504e-4646-aa67-b7924211ae60\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5hdsw\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ja4hooch7za7-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-5hdsw\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:02:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:02:30Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:02:30Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:02:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://04d2559a7a932512a9fbacaa08977475b6b5d35cd4ad7073b800722c33cb9458\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-12-19T11:02:29Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.250\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.216\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.216\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-12-19T11:02:29Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/19/23 11:02:34.478
  Dec 19 11:02:34.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-9617 replace -f -'
  Dec 19 11:02:35.058: INFO: stderr: ""
  Dec 19 11:02:35.058: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 12/19/23 11:02:35.058
  Dec 19 11:02:35.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-9617 delete pods e2e-test-httpd-pod'
  Dec 19 11:02:36.947: INFO: stderr: ""
  Dec 19 11:02:36.948: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 19 11:02:36.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9617" for this suite. @ 12/19/23 11:02:36.963
• [8.002 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/19/23 11:02:36.985
  Dec 19 11:02:36.985: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename init-container @ 12/19/23 11:02:36.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:37.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:37.034
  STEP: creating the pod @ 12/19/23 11:02:37.041
  Dec 19 11:02:37.041: INFO: PodSpec: initContainers in spec.initContainers
  Dec 19 11:02:39.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9217" for this suite. @ 12/19/23 11:02:39.94
• [2.971 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 12/19/23 11:02:39.98
  Dec 19 11:02:39.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:02:39.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:40.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:40.023
  STEP: Creating ReplicationController "e2e-rc-v24n5" @ 12/19/23 11:02:40.028
  Dec 19 11:02:40.042: INFO: Get Replication Controller "e2e-rc-v24n5" to confirm replicas
  Dec 19 11:02:41.055: INFO: Get Replication Controller "e2e-rc-v24n5" to confirm replicas
  Dec 19 11:02:41.064: INFO: Found 1 replicas for "e2e-rc-v24n5" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-v24n5" @ 12/19/23 11:02:41.065
  STEP: Updating a scale subresource @ 12/19/23 11:02:41.072
  STEP: Verifying replicas where modified for replication controller "e2e-rc-v24n5" @ 12/19/23 11:02:41.084
  Dec 19 11:02:41.084: INFO: Get Replication Controller "e2e-rc-v24n5" to confirm replicas
  Dec 19 11:02:42.096: INFO: Get Replication Controller "e2e-rc-v24n5" to confirm replicas
  Dec 19 11:02:42.105: INFO: Found 2 replicas for "e2e-rc-v24n5" replication controller
  Dec 19 11:02:42.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7811" for this suite. @ 12/19/23 11:02:42.115
• [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 12/19/23 11:02:42.142
  Dec 19 11:02:42.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename podtemplate @ 12/19/23 11:02:42.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:42.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:42.187
  Dec 19 11:02:42.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4326" for this suite. @ 12/19/23 11:02:42.281
• [0.154 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 12/19/23 11:02:42.297
  Dec 19 11:02:42.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 11:02:42.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:42.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:42.382
  STEP: creating service in namespace services-3662 @ 12/19/23 11:02:42.389
  STEP: creating service affinity-clusterip-transition in namespace services-3662 @ 12/19/23 11:02:42.39
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3662 @ 12/19/23 11:02:42.42
  I1219 11:02:42.470615      13 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3662, replica count: 3
  I1219 11:02:45.523277      13 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:02:45.554: INFO: Creating new exec pod
  Dec 19 11:02:48.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3662 exec execpod-affinitydgwjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Dec 19 11:02:48.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Dec 19 11:02:48.961: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:02:48.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3662 exec execpod-affinitydgwjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.5.252 80'
  Dec 19 11:02:49.313: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.5.252 80\nConnection to 10.233.5.252 80 port [tcp/http] succeeded!\n"
  Dec 19 11:02:49.313: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:02:49.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3662 exec execpod-affinitydgwjv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.5.252:80/ ; done'
  Dec 19 11:02:49.831: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n"
  Dec 19 11:02:49.832: INFO: stdout: "\naffinity-clusterip-transition-9wjwc\naffinity-clusterip-transition-fr7pj\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-9wjwc\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-fr7pj\naffinity-clusterip-transition-fr7pj\naffinity-clusterip-transition-9wjwc\naffinity-clusterip-transition-9wjwc\naffinity-clusterip-transition-fr7pj\naffinity-clusterip-transition-9wjwc\naffinity-clusterip-transition-fr7pj\naffinity-clusterip-transition-9wjwc\naffinity-clusterip-transition-fr7pj\naffinity-clusterip-transition-9wjwc\naffinity-clusterip-transition-8g82c"
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-9wjwc
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-fr7pj
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-9wjwc
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-fr7pj
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-fr7pj
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-9wjwc
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-9wjwc
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-fr7pj
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-9wjwc
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-fr7pj
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-9wjwc
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-fr7pj
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-9wjwc
  Dec 19 11:02:49.832: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:49.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-3662 exec execpod-affinitydgwjv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.5.252:80/ ; done'
  Dec 19 11:02:50.483: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.5.252:80/\n"
  Dec 19 11:02:50.484: INFO: stdout: "\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c\naffinity-clusterip-transition-8g82c"
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.484: INFO: Received response from host: affinity-clusterip-transition-8g82c
  Dec 19 11:02:50.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:02:50.497: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3662, will wait for the garbage collector to delete the pods @ 12/19/23 11:02:50.53
  Dec 19 11:02:50.606: INFO: Deleting ReplicationController affinity-clusterip-transition took: 15.867259ms
  Dec 19 11:02:50.706: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.675141ms
  STEP: Destroying namespace "services-3662" for this suite. @ 12/19/23 11:02:53.759
• [11.486 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/19/23 11:02:53.783
  Dec 19 11:02:53.783: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:02:53.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:53.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:53.825
  STEP: Creating secret with name secret-test-map-0659dfe5-ea6a-4e87-8f15-02048da75125 @ 12/19/23 11:02:53.83
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:02:53.844
  STEP: Saw pod success @ 12/19/23 11:02:57.9
  Dec 19 11:02:57.907: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-12949a1d-5144-4e3f-a444-a2b081cffc64 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:02:57.928
  Dec 19 11:02:57.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7077" for this suite. @ 12/19/23 11:02:57.991
• [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 12/19/23 11:02:58.012
  Dec 19 11:02:58.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:02:58.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:02:58.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:02:58.053
  STEP: Counting existing ResourceQuota @ 12/19/23 11:02:58.061
  STEP: Creating a ResourceQuota @ 12/19/23 11:03:03.078
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:03:03.101
  STEP: Creating a Pod that fits quota @ 12/19/23 11:03:05.11
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/19/23 11:03:05.146
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/19/23 11:03:07.156
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/19/23 11:03:07.16
  STEP: Ensuring a pod cannot update its resource requirements @ 12/19/23 11:03:07.164
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/19/23 11:03:07.174
  STEP: Deleting the pod @ 12/19/23 11:03:09.184
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 11:03:09.225
  Dec 19 11:03:11.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7653" for this suite. @ 12/19/23 11:03:11.248
• [13.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 12/19/23 11:03:11.272
  Dec 19 11:03:11.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:03:11.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:03:11.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:03:11.318
  STEP: validating api versions @ 12/19/23 11:03:11.325
  Dec 19 11:03:11.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-4384 api-versions'
  Dec 19 11:03:11.513: INFO: stderr: ""
  Dec 19 11:03:11.513: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Dec 19 11:03:11.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4384" for this suite. @ 12/19/23 11:03:11.534
• [0.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 12/19/23 11:03:11.558
  Dec 19 11:03:11.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 11:03:11.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:03:11.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:03:11.629
  Dec 19 11:03:11.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:03:18.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9243" for this suite. @ 12/19/23 11:03:18.23
• [6.691 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/19/23 11:03:18.252
  Dec 19 11:03:18.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:03:18.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:03:18.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:03:18.295
  STEP: creating the pod @ 12/19/23 11:03:18.306
  STEP: submitting the pod to kubernetes @ 12/19/23 11:03:18.307
  STEP: verifying QOS class is set on the pod @ 12/19/23 11:03:18.33
  Dec 19 11:03:18.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5898" for this suite. @ 12/19/23 11:03:18.37
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/19/23 11:03:18.409
  Dec 19 11:03:18.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:03:18.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:03:18.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:03:18.454
  STEP: Create a pod @ 12/19/23 11:03:18.46
  STEP: patching /status @ 12/19/23 11:03:20.516
  Dec 19 11:03:20.530: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Dec 19 11:03:20.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2162" for this suite. @ 12/19/23 11:03:20.545
• [2.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 12/19/23 11:03:20.573
  Dec 19 11:03:20.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 11:03:20.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:03:20.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:03:20.616
  Dec 19 11:03:20.620: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 11:03:20.643: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 11:03:20.656: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-1 before test
  Dec 19 11:03:20.672: INFO: coredns-5dd5756b68-784pk from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.673: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 11:03:20.673: INFO: kube-addon-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.673: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:03:20.673: INFO: kube-apiserver-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.674: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:03:20.674: INFO: kube-controller-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.674: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:03:20.675: INFO: kube-flannel-ds-qkbv6 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.675: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:03:20.675: INFO: kube-proxy-dc2t9 from kube-system started at 2023-12-19 09:34:32 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.676: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:03:20.676: INFO: kube-scheduler-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.677: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:03:20.677: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-kdr9t from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:03:20.677: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:03:20.677: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:03:20.678: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-2 before test
  Dec 19 11:03:20.707: INFO: coredns-5dd5756b68-9m7mp from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.707: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 11:03:20.708: INFO: kube-addon-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.708: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:03:20.708: INFO: kube-apiserver-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.709: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:03:20.709: INFO: kube-controller-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.709: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:03:20.709: INFO: kube-flannel-ds-vhwc5 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.710: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:03:20.710: INFO: kube-proxy-7d2pb from kube-system started at 2023-12-19 09:34:59 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.710: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:03:20.710: INFO: kube-scheduler-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:49 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.711: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:03:20.711: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-5gp8h from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:03:20.711: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:03:20.711: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:03:20.712: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-3 before test
  Dec 19 11:03:20.727: INFO: kube-flannel-ds-rxkbr from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.728: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 11:03:20.728: INFO: kube-proxy-27g55 from kube-system started at 2023-12-19 09:35:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.728: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:03:20.728: INFO: pod-4krlw from pods-2162 started at 2023-12-19 11:03:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.728: INFO: 	Container agnhost ready: true, restart count 0
  Dec 19 11:03:20.728: INFO: pod-qos-class-aa30dd16-f854-4e5a-b24c-09369b645f29 from pods-5898 started at 2023-12-19 11:03:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.728: INFO: 	Container agnhost ready: false, restart count 0
  Dec 19 11:03:20.728: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:59 +0000 UTC (1 container statuses recorded)
  Dec 19 11:03:20.728: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 11:03:20.728: INFO: sonobuoy-e2e-job-e8470151cf5a4de6 from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:03:20.728: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 11:03:20.728: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:03:20.728: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-7w8tz from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:03:20.728: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:03:20.728: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/19/23 11:03:20.728
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/19/23 11:03:22.771
  STEP: Trying to apply a random label on the found node. @ 12/19/23 11:03:22.822
  STEP: verifying the node has the label kubernetes.io/e2e-fc6ef5fe-28d5-4fd7-935c-94405d7a379b 95 @ 12/19/23 11:03:22.85
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/19/23 11:03:22.87
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.250 on the node which pod4 resides and expect not scheduled @ 12/19/23 11:03:24.921
  STEP: removing the label kubernetes.io/e2e-fc6ef5fe-28d5-4fd7-935c-94405d7a379b off the node ja4hooch7za7-3 @ 12/19/23 11:08:24.946
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-fc6ef5fe-28d5-4fd7-935c-94405d7a379b @ 12/19/23 11:08:24.98
  Dec 19 11:08:24.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6643" for this suite. @ 12/19/23 11:08:25.005
• [304.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 12/19/23 11:08:25.044
  Dec 19 11:08:25.046: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:08:25.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:25.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:25.103
  STEP: Creating the pod @ 12/19/23 11:08:25.116
  Dec 19 11:08:27.761: INFO: Successfully updated pod "labelsupdate03d1690b-9c8f-40d5-9f07-2a1d02997210"
  Dec 19 11:08:29.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5856" for this suite. @ 12/19/23 11:08:29.809
• [4.780 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 12/19/23 11:08:29.824
  Dec 19 11:08:29.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:08:29.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:29.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:29.859
  STEP: Creating configMap with name projected-configmap-test-volume-89ebdda1-cd94-4922-b3d2-2f461cd71787 @ 12/19/23 11:08:29.864
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:08:29.874
  STEP: Saw pod success @ 12/19/23 11:08:33.926
  Dec 19 11:08:33.935: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-configmaps-1ebdfb35-e073-489c-9576-dc0d10388d9f container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:08:33.955
  Dec 19 11:08:34.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1019" for this suite. @ 12/19/23 11:08:34.01
• [4.198 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 12/19/23 11:08:34.023
  Dec 19 11:08:34.024: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename disruption @ 12/19/23 11:08:34.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:34.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:34.069
  STEP: Creating a kubernetes client @ 12/19/23 11:08:34.074
  Dec 19 11:08:34.074: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename disruption-2 @ 12/19/23 11:08:34.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:34.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:34.144
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:08:34.166
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:08:36.216
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:08:36.254
  STEP: listing a collection of PDBs across all namespaces @ 12/19/23 11:08:38.275
  STEP: listing a collection of PDBs in namespace disruption-9159 @ 12/19/23 11:08:38.284
  STEP: deleting a collection of PDBs @ 12/19/23 11:08:38.292
  STEP: Waiting for the PDB collection to be deleted @ 12/19/23 11:08:38.316
  Dec 19 11:08:38.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:08:38.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-649" for this suite. @ 12/19/23 11:08:38.343
  STEP: Destroying namespace "disruption-9159" for this suite. @ 12/19/23 11:08:38.356
• [4.347 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/19/23 11:08:38.374
  Dec 19 11:08:38.374: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:08:38.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:38.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:38.418
  STEP: Creating secret with name secret-test-d96f57a5-b87a-4012-891b-3f892bf3518d @ 12/19/23 11:08:38.456
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:08:38.465
  STEP: Saw pod success @ 12/19/23 11:08:42.524
  Dec 19 11:08:42.533: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-82eb0210-a925-4b76-9c77-a878739c5224 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:08:42.547
  Dec 19 11:08:42.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4457" for this suite. @ 12/19/23 11:08:42.588
  STEP: Destroying namespace "secret-namespace-6206" for this suite. @ 12/19/23 11:08:42.6
• [4.240 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 12/19/23 11:08:42.614
  Dec 19 11:08:42.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 11:08:42.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:42.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:42.657
  Dec 19 11:08:42.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  W1219 11:08:42.666023      13 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0012be680 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1219 11:08:45.535670      13 warnings.go:70] unknown field "alpha"
  W1219 11:08:45.536052      13 warnings.go:70] unknown field "beta"
  W1219 11:08:45.536342      13 warnings.go:70] unknown field "delta"
  W1219 11:08:45.536576      13 warnings.go:70] unknown field "epsilon"
  W1219 11:08:45.536855      13 warnings.go:70] unknown field "gamma"
  Dec 19 11:08:46.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7195" for this suite. @ 12/19/23 11:08:46.148
• [3.551 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 12/19/23 11:08:46.167
  Dec 19 11:08:46.167: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 11:08:46.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:46.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:46.21
  Dec 19 11:08:46.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7545" for this suite. @ 12/19/23 11:08:46.246
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/19/23 11:08:46.275
  Dec 19 11:08:46.275: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:08:46.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:46.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:46.334
  Dec 19 11:08:46.347: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: creating the pod @ 12/19/23 11:08:46.348
  STEP: submitting the pod to kubernetes @ 12/19/23 11:08:46.349
  Dec 19 11:08:48.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4322" for this suite. @ 12/19/23 11:08:48.553
• [2.293 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/19/23 11:08:48.574
  Dec 19 11:08:48.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:08:48.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:48.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:48.615
  STEP: Creating secret with name secret-test-map-6155297f-6a1c-4937-af87-5c982569cf5a @ 12/19/23 11:08:48.62
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:08:48.632
  STEP: Saw pod success @ 12/19/23 11:08:50.669
  Dec 19 11:08:50.677: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-0056e456-aa81-46bd-9964-a3c78b27e61c container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:08:50.699
  Dec 19 11:08:50.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2239" for this suite. @ 12/19/23 11:08:50.743
• [2.184 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 12/19/23 11:08:50.759
  Dec 19 11:08:50.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:08:50.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:50.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:50.798
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/19/23 11:08:50.804
  Dec 19 11:08:50.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:08:53.112: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:09:00.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4694" for this suite. @ 12/19/23 11:09:00.603
• [9.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 12/19/23 11:09:00.622
  Dec 19 11:09:00.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-webhook @ 12/19/23 11:09:00.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:09:00.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:09:00.719
  STEP: Setting up server cert @ 12/19/23 11:09:00.727
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/19/23 11:09:01.801
  STEP: Deploying the custom resource conversion webhook pod @ 12/19/23 11:09:01.82
  STEP: Wait for the deployment to be ready @ 12/19/23 11:09:01.844
  Dec 19 11:09:01.860: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:09:03.897
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:09:03.929
  Dec 19 11:09:04.929: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 19 11:09:04.943: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Creating a v1 custom resource @ 12/19/23 11:09:07.742
  STEP: Create a v2 custom resource @ 12/19/23 11:09:07.782
  STEP: List CRs in v1 @ 12/19/23 11:09:08.118
  STEP: List CRs in v2 @ 12/19/23 11:09:08.139
  Dec 19 11:09:08.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1542" for this suite. @ 12/19/23 11:09:08.855
• [8.290 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/19/23 11:09:08.913
  Dec 19 11:09:08.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svc-latency @ 12/19/23 11:09:08.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:09:08.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:09:08.989
  Dec 19 11:09:08.998: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1481 @ 12/19/23 11:09:09.003
  I1219 11:09:09.031890      13 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1481, replica count: 1
  I1219 11:09:10.084173      13 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 11:09:11.084929      13 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:09:11.227: INFO: Created: latency-svc-66gvx
  Dec 19 11:09:11.240: INFO: Got endpoints: latency-svc-66gvx [54.705581ms]
  Dec 19 11:09:11.271: INFO: Created: latency-svc-zgfr5
  Dec 19 11:09:11.282: INFO: Created: latency-svc-5lsmt
  Dec 19 11:09:11.302: INFO: Created: latency-svc-tflq2
  Dec 19 11:09:11.313: INFO: Got endpoints: latency-svc-zgfr5 [69.867054ms]
  Dec 19 11:09:11.326: INFO: Created: latency-svc-8hz4m
  Dec 19 11:09:11.332: INFO: Got endpoints: latency-svc-5lsmt [88.208185ms]
  Dec 19 11:09:11.348: INFO: Created: latency-svc-7rssx
  Dec 19 11:09:11.361: INFO: Got endpoints: latency-svc-7rssx [116.295502ms]
  Dec 19 11:09:11.362: INFO: Got endpoints: latency-svc-tflq2 [119.463265ms]
  Dec 19 11:09:11.363: INFO: Got endpoints: latency-svc-8hz4m [118.280186ms]
  Dec 19 11:09:11.389: INFO: Created: latency-svc-bfz99
  Dec 19 11:09:11.399: INFO: Got endpoints: latency-svc-bfz99 [155.40979ms]
  Dec 19 11:09:11.412: INFO: Created: latency-svc-g2xtv
  Dec 19 11:09:11.423: INFO: Created: latency-svc-nh48x
  Dec 19 11:09:11.433: INFO: Got endpoints: latency-svc-g2xtv [187.344713ms]
  Dec 19 11:09:11.443: INFO: Created: latency-svc-fpzcz
  Dec 19 11:09:11.456: INFO: Got endpoints: latency-svc-nh48x [210.11869ms]
  Dec 19 11:09:11.463: INFO: Created: latency-svc-vp5h2
  Dec 19 11:09:11.470: INFO: Got endpoints: latency-svc-fpzcz [224.021497ms]
  Dec 19 11:09:11.492: INFO: Got endpoints: latency-svc-vp5h2 [245.179452ms]
  Dec 19 11:09:11.504: INFO: Created: latency-svc-hmtt7
  Dec 19 11:09:11.530: INFO: Got endpoints: latency-svc-hmtt7 [283.772553ms]
  Dec 19 11:09:11.567: INFO: Created: latency-svc-gpb5p
  Dec 19 11:09:11.604: INFO: Created: latency-svc-8nrn2
  Dec 19 11:09:11.607: INFO: Got endpoints: latency-svc-gpb5p [359.339795ms]
  Dec 19 11:09:11.636: INFO: Got endpoints: latency-svc-8nrn2 [389.082449ms]
  Dec 19 11:09:11.715: INFO: Created: latency-svc-hjxwk
  Dec 19 11:09:11.748: INFO: Got endpoints: latency-svc-hjxwk [503.432507ms]
  Dec 19 11:09:11.755: INFO: Created: latency-svc-d4r74
  Dec 19 11:09:11.780: INFO: Got endpoints: latency-svc-d4r74 [532.454966ms]
  Dec 19 11:09:11.789: INFO: Created: latency-svc-d6ft5
  Dec 19 11:09:11.798: INFO: Created: latency-svc-gfbj7
  Dec 19 11:09:11.831: INFO: Created: latency-svc-k6q8s
  Dec 19 11:09:11.840: INFO: Created: latency-svc-sxmmw
  Dec 19 11:09:11.841: INFO: Got endpoints: latency-svc-d6ft5 [526.841272ms]
  Dec 19 11:09:11.849: INFO: Got endpoints: latency-svc-gfbj7 [517.59795ms]
  Dec 19 11:09:11.860: INFO: Got endpoints: latency-svc-k6q8s [497.315907ms]
  Dec 19 11:09:11.872: INFO: Created: latency-svc-tqvkt
  Dec 19 11:09:11.901: INFO: Created: latency-svc-xfhtm
  Dec 19 11:09:11.921: INFO: Created: latency-svc-ql2sz
  Dec 19 11:09:11.925: INFO: Got endpoints: latency-svc-tqvkt [562.571107ms]
  Dec 19 11:09:11.925: INFO: Got endpoints: latency-svc-sxmmw [563.356981ms]
  Dec 19 11:09:11.935: INFO: Got endpoints: latency-svc-xfhtm [535.161521ms]
  Dec 19 11:09:11.955: INFO: Created: latency-svc-p2x7k
  Dec 19 11:09:11.965: INFO: Got endpoints: latency-svc-ql2sz [531.815531ms]
  Dec 19 11:09:11.978: INFO: Got endpoints: latency-svc-p2x7k [520.723734ms]
  Dec 19 11:09:11.984: INFO: Created: latency-svc-bqmdv
  Dec 19 11:09:11.996: INFO: Created: latency-svc-cmxhh
  Dec 19 11:09:12.004: INFO: Got endpoints: latency-svc-bqmdv [528.496816ms]
  Dec 19 11:09:12.014: INFO: Created: latency-svc-hptmp
  Dec 19 11:09:12.024: INFO: Got endpoints: latency-svc-cmxhh [531.51385ms]
  Dec 19 11:09:12.030: INFO: Created: latency-svc-s87z4
  Dec 19 11:09:12.053: INFO: Got endpoints: latency-svc-hptmp [522.637076ms]
  Dec 19 11:09:12.058: INFO: Created: latency-svc-9sgkg
  Dec 19 11:09:12.069: INFO: Got endpoints: latency-svc-s87z4 [462.004707ms]
  Dec 19 11:09:12.073: INFO: Got endpoints: latency-svc-9sgkg [436.877825ms]
  Dec 19 11:09:12.080: INFO: Created: latency-svc-znwcg
  Dec 19 11:09:12.111: INFO: Created: latency-svc-ltzws
  Dec 19 11:09:12.117: INFO: Got endpoints: latency-svc-znwcg [368.757316ms]
  Dec 19 11:09:12.119: INFO: Got endpoints: latency-svc-ltzws [339.208277ms]
  Dec 19 11:09:12.136: INFO: Created: latency-svc-fdtrg
  Dec 19 11:09:12.165: INFO: Created: latency-svc-mj46j
  Dec 19 11:09:12.168: INFO: Got endpoints: latency-svc-fdtrg [326.287237ms]
  Dec 19 11:09:12.177: INFO: Created: latency-svc-9d48z
  Dec 19 11:09:12.180: INFO: Got endpoints: latency-svc-mj46j [330.481076ms]
  Dec 19 11:09:12.210: INFO: Created: latency-svc-rdh57
  Dec 19 11:09:12.213: INFO: Got endpoints: latency-svc-9d48z [352.393102ms]
  Dec 19 11:09:12.221: INFO: Created: latency-svc-cs744
  Dec 19 11:09:12.235: INFO: Created: latency-svc-zzt95
  Dec 19 11:09:12.253: INFO: Created: latency-svc-qb7lr
  Dec 19 11:09:12.270: INFO: Got endpoints: latency-svc-rdh57 [344.578535ms]
  Dec 19 11:09:12.282: INFO: Created: latency-svc-jvnrc
  Dec 19 11:09:12.292: INFO: Got endpoints: latency-svc-cs744 [367.146487ms]
  Dec 19 11:09:12.300: INFO: Got endpoints: latency-svc-zzt95 [364.23173ms]
  Dec 19 11:09:12.312: INFO: Created: latency-svc-rjwtq
  Dec 19 11:09:12.335: INFO: Got endpoints: latency-svc-qb7lr [369.234782ms]
  Dec 19 11:09:12.349: INFO: Got endpoints: latency-svc-rjwtq [344.721464ms]
  Dec 19 11:09:12.350: INFO: Got endpoints: latency-svc-jvnrc [371.010589ms]
  Dec 19 11:09:12.365: INFO: Created: latency-svc-75nrn
  Dec 19 11:09:12.377: INFO: Created: latency-svc-l2wnm
  Dec 19 11:09:12.408: INFO: Got endpoints: latency-svc-l2wnm [354.634435ms]
  Dec 19 11:09:12.409: INFO: Got endpoints: latency-svc-75nrn [384.536534ms]
  Dec 19 11:09:12.426: INFO: Created: latency-svc-6xwx4
  Dec 19 11:09:12.464: INFO: Got endpoints: latency-svc-6xwx4 [394.942895ms]
  Dec 19 11:09:12.475: INFO: Created: latency-svc-cnptt
  Dec 19 11:09:12.489: INFO: Got endpoints: latency-svc-cnptt [415.774472ms]
  Dec 19 11:09:12.501: INFO: Created: latency-svc-fpfbw
  Dec 19 11:09:12.515: INFO: Got endpoints: latency-svc-fpfbw [397.686873ms]
  Dec 19 11:09:12.537: INFO: Created: latency-svc-9t96x
  Dec 19 11:09:12.562: INFO: Got endpoints: latency-svc-9t96x [442.641345ms]
  Dec 19 11:09:12.582: INFO: Created: latency-svc-jzc5l
  Dec 19 11:09:12.583: INFO: Got endpoints: latency-svc-jzc5l [414.637345ms]
  Dec 19 11:09:12.585: INFO: Created: latency-svc-4r25x
  Dec 19 11:09:12.598: INFO: Got endpoints: latency-svc-4r25x [417.743859ms]
  Dec 19 11:09:12.619: INFO: Created: latency-svc-w7n4h
  Dec 19 11:09:12.633: INFO: Got endpoints: latency-svc-w7n4h [419.761916ms]
  Dec 19 11:09:12.642: INFO: Created: latency-svc-t79js
  Dec 19 11:09:12.649: INFO: Got endpoints: latency-svc-t79js [379.156645ms]
  Dec 19 11:09:12.660: INFO: Created: latency-svc-njbkp
  Dec 19 11:09:12.672: INFO: Created: latency-svc-4c7dq
  Dec 19 11:09:12.691: INFO: Created: latency-svc-c5lv5
  Dec 19 11:09:12.700: INFO: Got endpoints: latency-svc-njbkp [407.924777ms]
  Dec 19 11:09:12.708: INFO: Created: latency-svc-hjrwm
  Dec 19 11:09:12.713: INFO: Created: latency-svc-jqc9m
  Dec 19 11:09:12.731: INFO: Created: latency-svc-tpf29
  Dec 19 11:09:12.743: INFO: Created: latency-svc-rlf78
  Dec 19 11:09:12.759: INFO: Created: latency-svc-gxq2b
  Dec 19 11:09:12.785: INFO: Created: latency-svc-gjhmj
  Dec 19 11:09:12.795: INFO: Created: latency-svc-4f8lx
  Dec 19 11:09:12.814: INFO: Created: latency-svc-smvbd
  Dec 19 11:09:12.831: INFO: Created: latency-svc-c5jrr
  Dec 19 11:09:12.851: INFO: Created: latency-svc-k6thd
  Dec 19 11:09:12.855: INFO: Got endpoints: latency-svc-jqc9m [505.287044ms]
  Dec 19 11:09:12.856: INFO: Got endpoints: latency-svc-4c7dq [555.137091ms]
  Dec 19 11:09:12.863: INFO: Got endpoints: latency-svc-c5lv5 [528.261392ms]
  Dec 19 11:09:12.870: INFO: Created: latency-svc-8d9mw
  Dec 19 11:09:12.870: INFO: Got endpoints: latency-svc-hjrwm [521.213756ms]
  Dec 19 11:09:12.873: INFO: Created: latency-svc-ljcpq
  Dec 19 11:09:12.892: INFO: Created: latency-svc-8qwnp
  Dec 19 11:09:12.906: INFO: Got endpoints: latency-svc-tpf29 [498.416364ms]
  Dec 19 11:09:12.916: INFO: Created: latency-svc-qs5wd
  Dec 19 11:09:12.920: INFO: Created: latency-svc-sgrvl
  Dec 19 11:09:12.932: INFO: Created: latency-svc-shnnv
  Dec 19 11:09:12.957: INFO: Got endpoints: latency-svc-gxq2b [492.929179ms]
  Dec 19 11:09:12.958: INFO: Got endpoints: latency-svc-rlf78 [549.629132ms]
  Dec 19 11:09:12.970: INFO: Created: latency-svc-pbp47
  Dec 19 11:09:12.975: INFO: Got endpoints: latency-svc-gjhmj [485.943047ms]
  Dec 19 11:09:12.981: INFO: Created: latency-svc-w7gvj
  Dec 19 11:09:13.004: INFO: Created: latency-svc-69lvc
  Dec 19 11:09:13.006: INFO: Got endpoints: latency-svc-c5jrr [422.954407ms]
  Dec 19 11:09:13.018: INFO: Got endpoints: latency-svc-4f8lx [503.019271ms]
  Dec 19 11:09:13.021: INFO: Got endpoints: latency-svc-smvbd [458.295389ms]
  Dec 19 11:09:13.037: INFO: Created: latency-svc-z7jvd
  Dec 19 11:09:13.053: INFO: Created: latency-svc-pr464
  Dec 19 11:09:13.092: INFO: Got endpoints: latency-svc-8d9mw [459.477795ms]
  Dec 19 11:09:13.094: INFO: Got endpoints: latency-svc-k6thd [495.812822ms]
  Dec 19 11:09:13.105: INFO: Created: latency-svc-zh9s4
  Dec 19 11:09:13.111: INFO: Got endpoints: latency-svc-ljcpq [461.791968ms]
  Dec 19 11:09:13.128: INFO: Created: latency-svc-knvb4
  Dec 19 11:09:13.128: INFO: Created: latency-svc-svlsw
  Dec 19 11:09:13.144: INFO: Created: latency-svc-7nb6w
  Dec 19 11:09:13.159: INFO: Got endpoints: latency-svc-8qwnp [458.185251ms]
  Dec 19 11:09:13.171: INFO: Created: latency-svc-pzfmq
  Dec 19 11:09:13.190: INFO: Created: latency-svc-49tq8
  Dec 19 11:09:13.246: INFO: Got endpoints: latency-svc-shnnv [382.084007ms]
  Dec 19 11:09:13.246: INFO: Got endpoints: latency-svc-qs5wd [390.682315ms]
  Dec 19 11:09:13.247: INFO: Got endpoints: latency-svc-sgrvl [391.938923ms]
  Dec 19 11:09:13.259: INFO: Created: latency-svc-lfct8
  Dec 19 11:09:13.286: INFO: Got endpoints: latency-svc-pbp47 [415.898223ms]
  Dec 19 11:09:13.295: INFO: Got endpoints: latency-svc-w7gvj [388.91112ms]
  Dec 19 11:09:13.305: INFO: Created: latency-svc-n2mrj
  Dec 19 11:09:13.324: INFO: Created: latency-svc-nv986
  Dec 19 11:09:13.349: INFO: Created: latency-svc-cp2xd
  Dec 19 11:09:13.358: INFO: Created: latency-svc-kkt8h
  Dec 19 11:09:13.375: INFO: Created: latency-svc-fbblh
  Dec 19 11:09:13.384: INFO: Got endpoints: latency-svc-69lvc [426.817742ms]
  Dec 19 11:09:13.408: INFO: Created: latency-svc-6lcwb
  Dec 19 11:09:13.420: INFO: Got endpoints: latency-svc-z7jvd [461.397102ms]
  Dec 19 11:09:13.492: INFO: Got endpoints: latency-svc-pr464 [516.966811ms]
  Dec 19 11:09:13.514: INFO: Created: latency-svc-krsj8
  Dec 19 11:09:13.520: INFO: Got endpoints: latency-svc-zh9s4 [514.35635ms]
  Dec 19 11:09:13.523: INFO: Created: latency-svc-kvvm8
  Dec 19 11:09:13.554: INFO: Created: latency-svc-gzfx4
  Dec 19 11:09:13.557: INFO: Got endpoints: latency-svc-knvb4 [537.943191ms]
  Dec 19 11:09:13.586: INFO: Created: latency-svc-k77rh
  Dec 19 11:09:13.608: INFO: Got endpoints: latency-svc-svlsw [587.235173ms]
  Dec 19 11:09:13.639: INFO: Got endpoints: latency-svc-7nb6w [546.286346ms]
  Dec 19 11:09:13.656: INFO: Created: latency-svc-n74dd
  Dec 19 11:09:13.695: INFO: Created: latency-svc-n28fg
  Dec 19 11:09:13.696: INFO: Got endpoints: latency-svc-pzfmq [602.365878ms]
  Dec 19 11:09:13.732: INFO: Created: latency-svc-9jgh6
  Dec 19 11:09:13.748: INFO: Got endpoints: latency-svc-49tq8 [631.777779ms]
  Dec 19 11:09:13.775: INFO: Created: latency-svc-t2j6x
  Dec 19 11:09:13.789: INFO: Got endpoints: latency-svc-lfct8 [628.925821ms]
  Dec 19 11:09:13.821: INFO: Created: latency-svc-zw98m
  Dec 19 11:09:13.856: INFO: Got endpoints: latency-svc-n2mrj [609.595781ms]
  Dec 19 11:09:13.886: INFO: Created: latency-svc-nkn9t
  Dec 19 11:09:13.899: INFO: Got endpoints: latency-svc-nv986 [651.917224ms]
  Dec 19 11:09:13.934: INFO: Created: latency-svc-wljt4
  Dec 19 11:09:13.950: INFO: Got endpoints: latency-svc-cp2xd [704.523446ms]
  Dec 19 11:09:13.982: INFO: Created: latency-svc-kn5xs
  Dec 19 11:09:13.999: INFO: Got endpoints: latency-svc-kkt8h [711.957424ms]
  Dec 19 11:09:14.052: INFO: Got endpoints: latency-svc-fbblh [756.826262ms]
  Dec 19 11:09:14.057: INFO: Created: latency-svc-k5tfv
  Dec 19 11:09:14.087: INFO: Created: latency-svc-x65jh
  Dec 19 11:09:14.105: INFO: Got endpoints: latency-svc-6lcwb [721.330651ms]
  Dec 19 11:09:14.140: INFO: Created: latency-svc-wghvj
  Dec 19 11:09:14.152: INFO: Got endpoints: latency-svc-krsj8 [731.470979ms]
  Dec 19 11:09:14.178: INFO: Created: latency-svc-rgw6p
  Dec 19 11:09:14.197: INFO: Got endpoints: latency-svc-kvvm8 [705.07046ms]
  Dec 19 11:09:14.220: INFO: Created: latency-svc-klgzm
  Dec 19 11:09:14.248: INFO: Got endpoints: latency-svc-gzfx4 [726.835288ms]
  Dec 19 11:09:14.271: INFO: Created: latency-svc-vxwzt
  Dec 19 11:09:14.290: INFO: Got endpoints: latency-svc-k77rh [733.743849ms]
  Dec 19 11:09:14.326: INFO: Created: latency-svc-mdl7z
  Dec 19 11:09:14.339: INFO: Got endpoints: latency-svc-n74dd [730.862292ms]
  Dec 19 11:09:14.377: INFO: Created: latency-svc-k2lfx
  Dec 19 11:09:14.392: INFO: Got endpoints: latency-svc-n28fg [752.793621ms]
  Dec 19 11:09:14.415: INFO: Created: latency-svc-b6h89
  Dec 19 11:09:14.446: INFO: Got endpoints: latency-svc-9jgh6 [749.029294ms]
  Dec 19 11:09:14.469: INFO: Created: latency-svc-jb8ws
  Dec 19 11:09:14.498: INFO: Got endpoints: latency-svc-t2j6x [749.640692ms]
  Dec 19 11:09:14.518: INFO: Created: latency-svc-jspg4
  Dec 19 11:09:14.535: INFO: Got endpoints: latency-svc-zw98m [745.331503ms]
  Dec 19 11:09:14.562: INFO: Created: latency-svc-z885m
  Dec 19 11:09:14.597: INFO: Got endpoints: latency-svc-nkn9t [740.989084ms]
  Dec 19 11:09:14.631: INFO: Created: latency-svc-nf6ff
  Dec 19 11:09:14.647: INFO: Got endpoints: latency-svc-wljt4 [747.002021ms]
  Dec 19 11:09:14.672: INFO: Created: latency-svc-wfrcm
  Dec 19 11:09:14.692: INFO: Got endpoints: latency-svc-kn5xs [741.177983ms]
  Dec 19 11:09:14.719: INFO: Created: latency-svc-gvxkz
  Dec 19 11:09:14.739: INFO: Got endpoints: latency-svc-k5tfv [738.681568ms]
  Dec 19 11:09:14.771: INFO: Created: latency-svc-kjshq
  Dec 19 11:09:14.798: INFO: Got endpoints: latency-svc-x65jh [744.307989ms]
  Dec 19 11:09:14.830: INFO: Created: latency-svc-kgb2s
  Dec 19 11:09:14.839: INFO: Got endpoints: latency-svc-wghvj [733.261732ms]
  Dec 19 11:09:14.868: INFO: Created: latency-svc-b26hk
  Dec 19 11:09:14.891: INFO: Got endpoints: latency-svc-rgw6p [737.419208ms]
  Dec 19 11:09:14.913: INFO: Created: latency-svc-qsw58
  Dec 19 11:09:14.937: INFO: Got endpoints: latency-svc-klgzm [738.773145ms]
  Dec 19 11:09:14.958: INFO: Created: latency-svc-48q5j
  Dec 19 11:09:14.989: INFO: Got endpoints: latency-svc-vxwzt [739.791981ms]
  Dec 19 11:09:15.009: INFO: Created: latency-svc-c6xvp
  Dec 19 11:09:15.043: INFO: Got endpoints: latency-svc-mdl7z [752.110086ms]
  Dec 19 11:09:15.069: INFO: Created: latency-svc-pm4m5
  Dec 19 11:09:15.094: INFO: Got endpoints: latency-svc-k2lfx [753.8761ms]
  Dec 19 11:09:15.117: INFO: Created: latency-svc-j5b2j
  Dec 19 11:09:15.140: INFO: Got endpoints: latency-svc-b6h89 [747.200049ms]
  Dec 19 11:09:15.172: INFO: Created: latency-svc-22sgt
  Dec 19 11:09:15.188: INFO: Got endpoints: latency-svc-jb8ws [742.07269ms]
  Dec 19 11:09:15.212: INFO: Created: latency-svc-dxgzr
  Dec 19 11:09:15.250: INFO: Got endpoints: latency-svc-jspg4 [752.026801ms]
  Dec 19 11:09:15.270: INFO: Created: latency-svc-t4tkq
  Dec 19 11:09:15.295: INFO: Got endpoints: latency-svc-z885m [759.636375ms]
  Dec 19 11:09:15.317: INFO: Created: latency-svc-8dnhj
  Dec 19 11:09:15.341: INFO: Got endpoints: latency-svc-nf6ff [743.285243ms]
  Dec 19 11:09:15.361: INFO: Created: latency-svc-qd28m
  Dec 19 11:09:15.390: INFO: Got endpoints: latency-svc-wfrcm [742.198617ms]
  Dec 19 11:09:15.429: INFO: Created: latency-svc-wmq8q
  Dec 19 11:09:15.463: INFO: Got endpoints: latency-svc-gvxkz [770.970613ms]
  Dec 19 11:09:15.514: INFO: Created: latency-svc-hf78n
  Dec 19 11:09:15.517: INFO: Got endpoints: latency-svc-kjshq [777.067552ms]
  Dec 19 11:09:15.561: INFO: Got endpoints: latency-svc-kgb2s [762.938141ms]
  Dec 19 11:09:15.594: INFO: Created: latency-svc-hsf7v
  Dec 19 11:09:15.598: INFO: Got endpoints: latency-svc-b26hk [755.751363ms]
  Dec 19 11:09:15.616: INFO: Created: latency-svc-grs2v
  Dec 19 11:09:15.643: INFO: Created: latency-svc-ht6rd
  Dec 19 11:09:15.644: INFO: Got endpoints: latency-svc-qsw58 [752.497087ms]
  Dec 19 11:09:15.723: INFO: Got endpoints: latency-svc-48q5j [786.431823ms]
  Dec 19 11:09:15.731: INFO: Created: latency-svc-jbp4x
  Dec 19 11:09:15.783: INFO: Got endpoints: latency-svc-c6xvp [793.297367ms]
  Dec 19 11:09:15.826: INFO: Created: latency-svc-lh9cz
  Dec 19 11:09:15.831: INFO: Got endpoints: latency-svc-pm4m5 [787.650064ms]
  Dec 19 11:09:15.856: INFO: Created: latency-svc-zkhmq
  Dec 19 11:09:15.880: INFO: Got endpoints: latency-svc-j5b2j [785.316929ms]
  Dec 19 11:09:15.892: INFO: Created: latency-svc-gqj88
  Dec 19 11:09:15.907: INFO: Got endpoints: latency-svc-22sgt [766.360536ms]
  Dec 19 11:09:15.917: INFO: Created: latency-svc-q89qw
  Dec 19 11:09:15.933: INFO: Created: latency-svc-cm68l
  Dec 19 11:09:15.942: INFO: Got endpoints: latency-svc-dxgzr [753.272926ms]
  Dec 19 11:09:15.966: INFO: Created: latency-svc-6rzb5
  Dec 19 11:09:15.990: INFO: Got endpoints: latency-svc-t4tkq [739.822849ms]
  Dec 19 11:09:16.021: INFO: Created: latency-svc-7fkxg
  Dec 19 11:09:16.039: INFO: Got endpoints: latency-svc-8dnhj [744.110149ms]
  Dec 19 11:09:16.065: INFO: Created: latency-svc-5sbpd
  Dec 19 11:09:16.098: INFO: Got endpoints: latency-svc-qd28m [756.48323ms]
  Dec 19 11:09:16.130: INFO: Created: latency-svc-nbm6j
  Dec 19 11:09:16.141: INFO: Got endpoints: latency-svc-wmq8q [750.729835ms]
  Dec 19 11:09:16.173: INFO: Created: latency-svc-798t6
  Dec 19 11:09:16.188: INFO: Got endpoints: latency-svc-hf78n [724.259357ms]
  Dec 19 11:09:16.214: INFO: Created: latency-svc-7t6qk
  Dec 19 11:09:16.238: INFO: Got endpoints: latency-svc-hsf7v [720.542449ms]
  Dec 19 11:09:16.269: INFO: Created: latency-svc-mv6h4
  Dec 19 11:09:16.301: INFO: Got endpoints: latency-svc-grs2v [738.733304ms]
  Dec 19 11:09:16.350: INFO: Got endpoints: latency-svc-ht6rd [751.777633ms]
  Dec 19 11:09:16.371: INFO: Created: latency-svc-dm55k
  Dec 19 11:09:16.385: INFO: Created: latency-svc-phmnj
  Dec 19 11:09:16.399: INFO: Got endpoints: latency-svc-jbp4x [754.642058ms]
  Dec 19 11:09:16.431: INFO: Created: latency-svc-nxltg
  Dec 19 11:09:16.456: INFO: Got endpoints: latency-svc-lh9cz [732.953011ms]
  Dec 19 11:09:16.510: INFO: Created: latency-svc-f7pjf
  Dec 19 11:09:16.511: INFO: Got endpoints: latency-svc-zkhmq [728.059108ms]
  Dec 19 11:09:16.556: INFO: Got endpoints: latency-svc-gqj88 [724.980128ms]
  Dec 19 11:09:16.576: INFO: Created: latency-svc-mc4p2
  Dec 19 11:09:16.601: INFO: Got endpoints: latency-svc-q89qw [720.659795ms]
  Dec 19 11:09:16.604: INFO: Created: latency-svc-8ng84
  Dec 19 11:09:16.626: INFO: Created: latency-svc-ntbhm
  Dec 19 11:09:16.639: INFO: Got endpoints: latency-svc-cm68l [731.83114ms]
  Dec 19 11:09:16.662: INFO: Created: latency-svc-nlhq7
  Dec 19 11:09:16.689: INFO: Got endpoints: latency-svc-6rzb5 [747.322161ms]
  Dec 19 11:09:16.715: INFO: Created: latency-svc-6fch5
  Dec 19 11:09:16.740: INFO: Got endpoints: latency-svc-7fkxg [749.120198ms]
  Dec 19 11:09:16.767: INFO: Created: latency-svc-9nj5c
  Dec 19 11:09:16.795: INFO: Got endpoints: latency-svc-5sbpd [756.136403ms]
  Dec 19 11:09:16.814: INFO: Created: latency-svc-dp4kb
  Dec 19 11:09:16.840: INFO: Got endpoints: latency-svc-nbm6j [742.14888ms]
  Dec 19 11:09:16.876: INFO: Created: latency-svc-bbttg
  Dec 19 11:09:16.911: INFO: Got endpoints: latency-svc-798t6 [770.14511ms]
  Dec 19 11:09:16.945: INFO: Got endpoints: latency-svc-7t6qk [756.938708ms]
  Dec 19 11:09:16.948: INFO: Created: latency-svc-bp7mp
  Dec 19 11:09:16.971: INFO: Created: latency-svc-kbgp8
  Dec 19 11:09:16.994: INFO: Got endpoints: latency-svc-mv6h4 [755.466768ms]
  Dec 19 11:09:17.021: INFO: Created: latency-svc-k6k4n
  Dec 19 11:09:17.038: INFO: Got endpoints: latency-svc-dm55k [736.829026ms]
  Dec 19 11:09:17.064: INFO: Created: latency-svc-rb7hp
  Dec 19 11:09:17.090: INFO: Got endpoints: latency-svc-phmnj [740.360018ms]
  Dec 19 11:09:17.118: INFO: Created: latency-svc-8vmfb
  Dec 19 11:09:17.139: INFO: Got endpoints: latency-svc-nxltg [740.20467ms]
  Dec 19 11:09:17.171: INFO: Created: latency-svc-fwkt9
  Dec 19 11:09:17.188: INFO: Got endpoints: latency-svc-f7pjf [731.247232ms]
  Dec 19 11:09:17.211: INFO: Created: latency-svc-p42mf
  Dec 19 11:09:17.245: INFO: Got endpoints: latency-svc-mc4p2 [727.947465ms]
  Dec 19 11:09:17.270: INFO: Created: latency-svc-8ssqd
  Dec 19 11:09:17.298: INFO: Got endpoints: latency-svc-8ng84 [741.684408ms]
  Dec 19 11:09:17.330: INFO: Created: latency-svc-2qb8z
  Dec 19 11:09:17.340: INFO: Got endpoints: latency-svc-ntbhm [739.178641ms]
  Dec 19 11:09:17.365: INFO: Created: latency-svc-5dtvt
  Dec 19 11:09:17.392: INFO: Got endpoints: latency-svc-nlhq7 [752.673557ms]
  Dec 19 11:09:17.420: INFO: Created: latency-svc-w5cv5
  Dec 19 11:09:17.442: INFO: Got endpoints: latency-svc-6fch5 [751.878542ms]
  Dec 19 11:09:17.469: INFO: Created: latency-svc-7cnhq
  Dec 19 11:09:17.497: INFO: Got endpoints: latency-svc-9nj5c [757.222153ms]
  Dec 19 11:09:17.521: INFO: Created: latency-svc-ttrxt
  Dec 19 11:09:17.543: INFO: Got endpoints: latency-svc-dp4kb [747.327197ms]
  Dec 19 11:09:17.574: INFO: Created: latency-svc-6fn66
  Dec 19 11:09:17.592: INFO: Got endpoints: latency-svc-bbttg [751.363737ms]
  Dec 19 11:09:17.623: INFO: Created: latency-svc-nfbv2
  Dec 19 11:09:17.640: INFO: Got endpoints: latency-svc-bp7mp [728.149349ms]
  Dec 19 11:09:17.660: INFO: Created: latency-svc-rl8mp
  Dec 19 11:09:17.694: INFO: Got endpoints: latency-svc-kbgp8 [749.041077ms]
  Dec 19 11:09:17.718: INFO: Created: latency-svc-xh6c6
  Dec 19 11:09:17.738: INFO: Got endpoints: latency-svc-k6k4n [744.421695ms]
  Dec 19 11:09:17.759: INFO: Created: latency-svc-8d27k
  Dec 19 11:09:17.789: INFO: Got endpoints: latency-svc-rb7hp [751.259946ms]
  Dec 19 11:09:17.818: INFO: Created: latency-svc-wd62c
  Dec 19 11:09:17.841: INFO: Got endpoints: latency-svc-8vmfb [750.586099ms]
  Dec 19 11:09:17.866: INFO: Created: latency-svc-l7vjj
  Dec 19 11:09:17.888: INFO: Got endpoints: latency-svc-fwkt9 [748.561624ms]
  Dec 19 11:09:17.913: INFO: Created: latency-svc-nmpnr
  Dec 19 11:09:17.940: INFO: Got endpoints: latency-svc-p42mf [751.510519ms]
  Dec 19 11:09:17.961: INFO: Created: latency-svc-v9bsf
  Dec 19 11:09:17.992: INFO: Got endpoints: latency-svc-8ssqd [746.855074ms]
  Dec 19 11:09:18.014: INFO: Created: latency-svc-k8ckq
  Dec 19 11:09:18.038: INFO: Got endpoints: latency-svc-2qb8z [738.445101ms]
  Dec 19 11:09:18.063: INFO: Created: latency-svc-ttkp4
  Dec 19 11:09:18.090: INFO: Got endpoints: latency-svc-5dtvt [748.243785ms]
  Dec 19 11:09:18.116: INFO: Created: latency-svc-wx26j
  Dec 19 11:09:18.142: INFO: Got endpoints: latency-svc-w5cv5 [749.586972ms]
  Dec 19 11:09:18.166: INFO: Created: latency-svc-xdfk8
  Dec 19 11:09:18.189: INFO: Got endpoints: latency-svc-7cnhq [746.886964ms]
  Dec 19 11:09:18.217: INFO: Created: latency-svc-hj7gj
  Dec 19 11:09:18.241: INFO: Got endpoints: latency-svc-ttrxt [743.267738ms]
  Dec 19 11:09:18.264: INFO: Created: latency-svc-5btwj
  Dec 19 11:09:18.294: INFO: Got endpoints: latency-svc-6fn66 [750.345403ms]
  Dec 19 11:09:18.357: INFO: Got endpoints: latency-svc-nfbv2 [764.35176ms]
  Dec 19 11:09:18.364: INFO: Created: latency-svc-glvqc
  Dec 19 11:09:18.404: INFO: Got endpoints: latency-svc-rl8mp [763.805714ms]
  Dec 19 11:09:18.408: INFO: Created: latency-svc-dqtkp
  Dec 19 11:09:18.429: INFO: Created: latency-svc-4rxl9
  Dec 19 11:09:18.444: INFO: Got endpoints: latency-svc-xh6c6 [749.342936ms]
  Dec 19 11:09:18.463: INFO: Created: latency-svc-gcwhg
  Dec 19 11:09:18.487: INFO: Got endpoints: latency-svc-8d27k [747.709954ms]
  Dec 19 11:09:18.510: INFO: Created: latency-svc-qchn7
  Dec 19 11:09:18.539: INFO: Got endpoints: latency-svc-wd62c [749.882312ms]
  Dec 19 11:09:18.563: INFO: Created: latency-svc-z9pcm
  Dec 19 11:09:18.589: INFO: Got endpoints: latency-svc-l7vjj [747.099004ms]
  Dec 19 11:09:18.613: INFO: Created: latency-svc-ptnfh
  Dec 19 11:09:18.637: INFO: Got endpoints: latency-svc-nmpnr [748.532382ms]
  Dec 19 11:09:18.673: INFO: Created: latency-svc-jvw6p
  Dec 19 11:09:18.689: INFO: Got endpoints: latency-svc-v9bsf [748.847927ms]
  Dec 19 11:09:18.710: INFO: Created: latency-svc-d54sf
  Dec 19 11:09:18.737: INFO: Got endpoints: latency-svc-k8ckq [745.007344ms]
  Dec 19 11:09:18.762: INFO: Created: latency-svc-9hw52
  Dec 19 11:09:18.787: INFO: Got endpoints: latency-svc-ttkp4 [747.850407ms]
  Dec 19 11:09:18.810: INFO: Created: latency-svc-9zrxx
  Dec 19 11:09:18.872: INFO: Got endpoints: latency-svc-wx26j [782.225086ms]
  Dec 19 11:09:18.897: INFO: Created: latency-svc-h7xph
  Dec 19 11:09:18.907: INFO: Got endpoints: latency-svc-xdfk8 [764.347132ms]
  Dec 19 11:09:18.929: INFO: Created: latency-svc-swkqq
  Dec 19 11:09:18.955: INFO: Got endpoints: latency-svc-hj7gj [764.92966ms]
  Dec 19 11:09:18.987: INFO: Created: latency-svc-ldw6j
  Dec 19 11:09:19.009: INFO: Got endpoints: latency-svc-5btwj [767.60776ms]
  Dec 19 11:09:19.031: INFO: Created: latency-svc-pwg5p
  Dec 19 11:09:19.047: INFO: Got endpoints: latency-svc-glvqc [752.072651ms]
  Dec 19 11:09:19.069: INFO: Created: latency-svc-5mtrw
  Dec 19 11:09:19.091: INFO: Got endpoints: latency-svc-dqtkp [723.887975ms]
  Dec 19 11:09:19.143: INFO: Got endpoints: latency-svc-4rxl9 [737.196866ms]
  Dec 19 11:09:19.195: INFO: Got endpoints: latency-svc-gcwhg [751.327049ms]
  Dec 19 11:09:19.248: INFO: Got endpoints: latency-svc-qchn7 [760.083392ms]
  Dec 19 11:09:19.292: INFO: Got endpoints: latency-svc-z9pcm [751.855069ms]
  Dec 19 11:09:19.354: INFO: Got endpoints: latency-svc-ptnfh [765.582706ms]
  Dec 19 11:09:19.389: INFO: Got endpoints: latency-svc-jvw6p [751.703599ms]
  Dec 19 11:09:19.446: INFO: Got endpoints: latency-svc-d54sf [756.485691ms]
  Dec 19 11:09:19.489: INFO: Got endpoints: latency-svc-9hw52 [751.517762ms]
  Dec 19 11:09:19.545: INFO: Got endpoints: latency-svc-9zrxx [758.06303ms]
  Dec 19 11:09:19.591: INFO: Got endpoints: latency-svc-h7xph [717.898449ms]
  Dec 19 11:09:19.643: INFO: Got endpoints: latency-svc-swkqq [735.571135ms]
  Dec 19 11:09:19.698: INFO: Got endpoints: latency-svc-ldw6j [742.174106ms]
  Dec 19 11:09:19.741: INFO: Got endpoints: latency-svc-pwg5p [731.392026ms]
  Dec 19 11:09:19.787: INFO: Got endpoints: latency-svc-5mtrw [738.943078ms]
  Dec 19 11:09:19.787: INFO: Latencies: [69.867054ms 88.208185ms 116.295502ms 118.280186ms 119.463265ms 155.40979ms 187.344713ms 210.11869ms 224.021497ms 245.179452ms 283.772553ms 326.287237ms 330.481076ms 339.208277ms 344.578535ms 344.721464ms 352.393102ms 354.634435ms 359.339795ms 364.23173ms 367.146487ms 368.757316ms 369.234782ms 371.010589ms 379.156645ms 382.084007ms 384.536534ms 388.91112ms 389.082449ms 390.682315ms 391.938923ms 394.942895ms 397.686873ms 407.924777ms 414.637345ms 415.774472ms 415.898223ms 417.743859ms 419.761916ms 422.954407ms 426.817742ms 436.877825ms 442.641345ms 458.185251ms 458.295389ms 459.477795ms 461.397102ms 461.791968ms 462.004707ms 485.943047ms 492.929179ms 495.812822ms 497.315907ms 498.416364ms 503.019271ms 503.432507ms 505.287044ms 514.35635ms 516.966811ms 517.59795ms 520.723734ms 521.213756ms 522.637076ms 526.841272ms 528.261392ms 528.496816ms 531.51385ms 531.815531ms 532.454966ms 535.161521ms 537.943191ms 546.286346ms 549.629132ms 555.137091ms 562.571107ms 563.356981ms 587.235173ms 602.365878ms 609.595781ms 628.925821ms 631.777779ms 651.917224ms 704.523446ms 705.07046ms 711.957424ms 717.898449ms 720.542449ms 720.659795ms 721.330651ms 723.887975ms 724.259357ms 724.980128ms 726.835288ms 727.947465ms 728.059108ms 728.149349ms 730.862292ms 731.247232ms 731.392026ms 731.470979ms 731.83114ms 732.953011ms 733.261732ms 733.743849ms 735.571135ms 736.829026ms 737.196866ms 737.419208ms 738.445101ms 738.681568ms 738.733304ms 738.773145ms 738.943078ms 739.178641ms 739.791981ms 739.822849ms 740.20467ms 740.360018ms 740.989084ms 741.177983ms 741.684408ms 742.07269ms 742.14888ms 742.174106ms 742.198617ms 743.267738ms 743.285243ms 744.110149ms 744.307989ms 744.421695ms 745.007344ms 745.331503ms 746.855074ms 746.886964ms 747.002021ms 747.099004ms 747.200049ms 747.322161ms 747.327197ms 747.709954ms 747.850407ms 748.243785ms 748.532382ms 748.561624ms 748.847927ms 749.029294ms 749.041077ms 749.120198ms 749.342936ms 749.586972ms 749.640692ms 749.882312ms 750.345403ms 750.586099ms 750.729835ms 751.259946ms 751.327049ms 751.363737ms 751.510519ms 751.517762ms 751.703599ms 751.777633ms 751.855069ms 751.878542ms 752.026801ms 752.072651ms 752.110086ms 752.497087ms 752.673557ms 752.793621ms 753.272926ms 753.8761ms 754.642058ms 755.466768ms 755.751363ms 756.136403ms 756.48323ms 756.485691ms 756.826262ms 756.938708ms 757.222153ms 758.06303ms 759.636375ms 760.083392ms 762.938141ms 763.805714ms 764.347132ms 764.35176ms 764.92966ms 765.582706ms 766.360536ms 767.60776ms 770.14511ms 770.970613ms 777.067552ms 782.225086ms 785.316929ms 786.431823ms 787.650064ms 793.297367ms]
  Dec 19 11:09:19.788: INFO: 50 %ile: 731.83114ms
  Dec 19 11:09:19.788: INFO: 90 %ile: 757.222153ms
  Dec 19 11:09:19.788: INFO: 99 %ile: 787.650064ms
  Dec 19 11:09:19.788: INFO: Total sample count: 200
  Dec 19 11:09:19.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1481" for this suite. @ 12/19/23 11:09:19.802
• [10.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 12/19/23 11:09:19.821
  Dec 19 11:09:19.821: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename job @ 12/19/23 11:09:19.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:09:19.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:09:19.86
  STEP: Creating a job @ 12/19/23 11:09:19.868
  STEP: Ensuring active pods == parallelism @ 12/19/23 11:09:19.885
  STEP: Orphaning one of the Job's Pods @ 12/19/23 11:09:21.904
  Dec 19 11:09:22.444: INFO: Successfully updated pod "adopt-release-58fkg"
  STEP: Checking that the Job readopts the Pod @ 12/19/23 11:09:22.445
  STEP: Removing the labels from the Job's Pod @ 12/19/23 11:09:24.487
  Dec 19 11:09:25.015: INFO: Successfully updated pod "adopt-release-58fkg"
  STEP: Checking that the Job releases the Pod @ 12/19/23 11:09:25.016
  Dec 19 11:09:27.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5965" for this suite. @ 12/19/23 11:09:27.041
• [7.233 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/19/23 11:09:27.055
  Dec 19 11:09:27.055: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:09:27.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:09:27.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:09:27.11
  Dec 19 11:09:27.171: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 11:09:27.189
  Dec 19 11:09:27.258: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:09:27.258: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:09:28.326: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:09:28.327: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:09:29.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:09:29.281: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/19/23 11:09:29.33
  STEP: Check that daemon pods images are updated. @ 12/19/23 11:09:29.37
  Dec 19 11:09:29.385: INFO: Wrong image for pod: daemon-set-bppqc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:29.385: INFO: Wrong image for pod: daemon-set-wx99r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:29.385: INFO: Wrong image for pod: daemon-set-z798c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:30.426: INFO: Wrong image for pod: daemon-set-wx99r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:30.426: INFO: Wrong image for pod: daemon-set-z798c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:31.451: INFO: Wrong image for pod: daemon-set-wx99r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:31.451: INFO: Wrong image for pod: daemon-set-z798c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:32.434: INFO: Pod daemon-set-kz852 is not available
  Dec 19 11:09:32.434: INFO: Wrong image for pod: daemon-set-wx99r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:32.434: INFO: Wrong image for pod: daemon-set-z798c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:33.425: INFO: Pod daemon-set-kz852 is not available
  Dec 19 11:09:33.426: INFO: Wrong image for pod: daemon-set-wx99r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:33.426: INFO: Wrong image for pod: daemon-set-z798c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:34.414: INFO: Wrong image for pod: daemon-set-z798c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:35.417: INFO: Pod daemon-set-rwpkm is not available
  Dec 19 11:09:35.417: INFO: Wrong image for pod: daemon-set-z798c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 11:09:36.422: INFO: Pod daemon-set-tb8zs is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/19/23 11:09:36.438
  Dec 19 11:09:36.465: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:09:36.465: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  Dec 19 11:09:37.492: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:09:37.492: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  Dec 19 11:09:38.490: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:09:38.490: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 11:09:38.552
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3082, will wait for the garbage collector to delete the pods @ 12/19/23 11:09:38.553
  Dec 19 11:09:38.628: INFO: Deleting DaemonSet.extensions daemon-set took: 16.507529ms
  Dec 19 11:09:38.728: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.649776ms
  Dec 19 11:09:41.142: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:09:41.142: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 11:09:41.155: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22007"},"items":null}

  Dec 19 11:09:41.161: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22007"},"items":null}

  Dec 19 11:09:41.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3082" for this suite. @ 12/19/23 11:09:41.212
• [14.177 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 12/19/23 11:09:41.236
  Dec 19 11:09:41.236: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:09:41.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:09:41.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:09:41.325
  STEP: Setting up server cert @ 12/19/23 11:09:41.4
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:09:42.716
  STEP: Deploying the webhook pod @ 12/19/23 11:09:42.737
  STEP: Wait for the deployment to be ready @ 12/19/23 11:09:42.765
  Dec 19 11:09:42.805: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:09:44.829
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:09:44.853
  Dec 19 11:09:45.854: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/19/23 11:09:46.005
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 11:09:46.079
  STEP: Deleting the collection of validation webhooks @ 12/19/23 11:09:46.144
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 11:09:46.28
  Dec 19 11:09:46.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9861" for this suite. @ 12/19/23 11:09:46.422
  STEP: Destroying namespace "webhook-markers-4230" for this suite. @ 12/19/23 11:09:46.432
• [5.214 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 12/19/23 11:09:46.452
  Dec 19 11:09:46.452: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 11:09:46.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:09:46.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:09:46.529
  STEP: Creating service test in namespace statefulset-6006 @ 12/19/23 11:09:46.538
  STEP: Creating a new StatefulSet @ 12/19/23 11:09:46.553
  Dec 19 11:09:46.575: INFO: Found 0 stateful pods, waiting for 3
  Dec 19 11:09:56.588: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:09:56.589: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:09:56.589: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/19/23 11:09:56.611
  Dec 19 11:09:56.649: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/19/23 11:09:56.649
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/19/23 11:10:06.702
  STEP: Performing a canary update @ 12/19/23 11:10:06.703
  Dec 19 11:10:06.735: INFO: Updating stateful set ss2
  Dec 19 11:10:06.755: INFO: Waiting for Pod statefulset-6006/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/19/23 11:10:16.785
  Dec 19 11:10:16.882: INFO: Found 2 stateful pods, waiting for 3
  Dec 19 11:10:26.897: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:10:26.897: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:10:26.898: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/19/23 11:10:26.918
  Dec 19 11:10:26.948: INFO: Updating stateful set ss2
  Dec 19 11:10:26.965: INFO: Waiting for Pod statefulset-6006/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Dec 19 11:10:37.023: INFO: Updating stateful set ss2
  Dec 19 11:10:37.039: INFO: Waiting for StatefulSet statefulset-6006/ss2 to complete update
  Dec 19 11:10:37.039: INFO: Waiting for Pod statefulset-6006/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Dec 19 11:10:47.062: INFO: Waiting for StatefulSet statefulset-6006/ss2 to complete update
  Dec 19 11:10:57.081: INFO: Deleting all statefulset in ns statefulset-6006
  Dec 19 11:10:57.093: INFO: Scaling statefulset ss2 to 0
  Dec 19 11:11:07.157: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:11:07.164: INFO: Deleting statefulset ss2
  Dec 19 11:11:07.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6006" for this suite. @ 12/19/23 11:11:07.221
• [80.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/19/23 11:11:07.244
  Dec 19 11:11:07.244: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:11:07.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:07.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:07.294
  STEP: Creating secret with name projected-secret-test-e2be6eee-fe67-42cb-8637-723632b1df63 @ 12/19/23 11:11:07.299
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:11:07.311
  STEP: Saw pod success @ 12/19/23 11:11:11.364
  Dec 19 11:11:11.371: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-secrets-ba1cea69-3496-4dd6-8cd7-a51619b62bfa container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:11:11.418
  Dec 19 11:11:11.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2710" for this suite. @ 12/19/23 11:11:11.484
• [4.256 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 12/19/23 11:11:11.505
  Dec 19 11:11:11.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename lease-test @ 12/19/23 11:11:11.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:11.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:11.572
  Dec 19 11:11:11.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2050" for this suite. @ 12/19/23 11:11:11.785
• [0.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 12/19/23 11:11:11.823
  Dec 19 11:11:11.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:11:11.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:11.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:11.876
  STEP: Given a ReplicationController is created @ 12/19/23 11:11:11.882
  STEP: When the matched label of one of its pods change @ 12/19/23 11:11:11.894
  Dec 19 11:11:11.904: INFO: Pod name pod-release: Found 0 pods out of 1
  Dec 19 11:11:16.915: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/19/23 11:11:16.936
  Dec 19 11:11:17.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8251" for this suite. @ 12/19/23 11:11:17.972
• [6.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 12/19/23 11:11:17.996
  Dec 19 11:11:17.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 11:11:18
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:18.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:18.04
  Dec 19 11:11:18.047: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:11:19.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5504" for this suite. @ 12/19/23 11:11:19.105
• [1.125 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 12/19/23 11:11:19.123
  Dec 19 11:11:19.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 11:11:19.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:19.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:19.186
  Dec 19 11:11:23.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8898" for this suite. @ 12/19/23 11:11:23.252
• [4.142 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 12/19/23 11:11:23.271
  Dec 19 11:11:23.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 11:11:23.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:23.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:23.326
  STEP: getting /apis @ 12/19/23 11:11:23.333
  STEP: getting /apis/discovery.k8s.io @ 12/19/23 11:11:23.343
  STEP: getting /apis/discovery.k8s.iov1 @ 12/19/23 11:11:23.346
  STEP: creating @ 12/19/23 11:11:23.349
  STEP: getting @ 12/19/23 11:11:23.394
  STEP: listing @ 12/19/23 11:11:23.403
  STEP: watching @ 12/19/23 11:11:23.411
  Dec 19 11:11:23.411: INFO: starting watch
  STEP: cluster-wide listing @ 12/19/23 11:11:23.413
  STEP: cluster-wide watching @ 12/19/23 11:11:23.421
  Dec 19 11:11:23.421: INFO: starting watch
  STEP: patching @ 12/19/23 11:11:23.423
  STEP: updating @ 12/19/23 11:11:23.438
  Dec 19 11:11:23.513: INFO: waiting for watch events with expected annotations
  Dec 19 11:11:23.513: INFO: saw patched and updated annotations
  STEP: deleting @ 12/19/23 11:11:23.514
  STEP: deleting a collection @ 12/19/23 11:11:23.599
  Dec 19 11:11:23.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8401" for this suite. @ 12/19/23 11:11:23.713
• [0.461 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/19/23 11:11:23.735
  Dec 19 11:11:23.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:11:23.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:23.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:23.803
  STEP: Creating projection with secret that has name projected-secret-test-7271a4c3-19af-42e2-8e5d-92f71599ca23 @ 12/19/23 11:11:23.81
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:11:23.82
  STEP: Saw pod success @ 12/19/23 11:11:27.868
  Dec 19 11:11:27.877: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-secrets-a9d83410-38f2-4b89-8057-644cf367e24a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:11:27.896
  Dec 19 11:11:27.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2240" for this suite. @ 12/19/23 11:11:27.948
• [4.225 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/19/23 11:11:27.964
  Dec 19 11:11:27.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:11:27.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:28.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:28.011
  STEP: creating a Deployment @ 12/19/23 11:11:28.028
  STEP: waiting for Deployment to be created @ 12/19/23 11:11:28.037
  STEP: waiting for all Replicas to be Ready @ 12/19/23 11:11:28.04
  Dec 19 11:11:28.042: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:28.043: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:28.054: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:28.054: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:28.112: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:28.113: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:28.212: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:28.212: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:11:29.637: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 19 11:11:29.637: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 19 11:11:29.855: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/19/23 11:11:29.855
  Dec 19 11:11:29.873: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/19/23 11:11:29.874
  Dec 19 11:11:29.877: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.878: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.878: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.878: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.879: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.879: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.881: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.882: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 0
  Dec 19 11:11:29.883: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:29.883: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:29.884: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:29.885: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:29.885: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:29.886: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:29.902: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:29.902: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:29.976: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:29.976: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:30.006: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:30.006: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:30.024: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:30.024: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:30.651: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:30.651: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:30.702: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  STEP: listing Deployments @ 12/19/23 11:11:30.703
  Dec 19 11:11:30.710: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/19/23 11:11:30.71
  Dec 19 11:11:30.733: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/19/23 11:11:30.734
  Dec 19 11:11:30.754: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:30.762: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:30.916: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:30.990: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:31.011: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:31.634: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:32.705: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:32.804: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:32.970: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:11:33.951: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/19/23 11:11:34.069
  STEP: fetching the DeploymentStatus @ 12/19/23 11:11:34.089
  Dec 19 11:11:34.099: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:34.099: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:34.099: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:34.099: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:34.100: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 1
  Dec 19 11:11:34.100: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:34.100: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 3
  Dec 19 11:11:34.101: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:34.101: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 2
  Dec 19 11:11:34.101: INFO: observed Deployment test-deployment in namespace deployment-992 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/19/23 11:11:34.102
  Dec 19 11:11:34.124: INFO: observed event type MODIFIED
  Dec 19 11:11:34.124: INFO: observed event type MODIFIED
  Dec 19 11:11:34.125: INFO: observed event type MODIFIED
  Dec 19 11:11:34.126: INFO: observed event type MODIFIED
  Dec 19 11:11:34.126: INFO: observed event type MODIFIED
  Dec 19 11:11:34.126: INFO: observed event type MODIFIED
  Dec 19 11:11:34.126: INFO: observed event type MODIFIED
  Dec 19 11:11:34.126: INFO: observed event type MODIFIED
  Dec 19 11:11:34.127: INFO: observed event type MODIFIED
  Dec 19 11:11:34.127: INFO: observed event type MODIFIED
  Dec 19 11:11:34.127: INFO: observed event type MODIFIED
  Dec 19 11:11:34.127: INFO: observed event type MODIFIED
  Dec 19 11:11:34.127: INFO: observed event type MODIFIED
  Dec 19 11:11:34.134: INFO: Log out all the ReplicaSets if there is no deployment created
  Dec 19 11:11:34.143: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d40b56e-3764-40a2-93a5-bfef0ede01bb",
      ResourceVersion: (string) (len=5) "22968",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581089,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "fe3e2b9e-afb9-4a77-84ef-062d72465c31",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 65 33 65  32 62 39 65 2d 61 66 62  |":\"fe3e2b9e-afb|
              00000130  39 2d 34 61 37 37 2d 38  34 65 66 2d 30 36 32 64  |9-4a77-84ef-062d|
              00000140  37 32 34 36 35 63 33 31  5c 22 7d 22 3a 7b 7d 7d  |72465c31\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 19 11:11:34.168: INFO: pod: "test-deployment-64fd565c98-qwtp9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-qwtp9",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26bbed06-f5b6-4999-9385-dd1fcb39b83f",
      ResourceVersion: (string) (len=5) "22963",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "4d40b56e-3764-40a2-93a5-bfef0ede01bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 64 34 30 62 35 36 65  |uid\":\"4d40b56e|
              000000a0  2d 33 37 36 34 2d 34 30  61 32 2d 39 33 61 35 2d  |-3764-40a2-93a5-|
              000000b0  62 66 65 66 30 65 64 65  30 31 62 62 5c 22 7d 22  |bfef0ede01bb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 34 37 5c 22 7d 22  |10.233.65.47\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fdb7n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fdb7n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=64) "e6f1816883972d4be47bd48879a08919b96afcd344132622e4d444987919323c",
          ContainerID: (string) (len=72) "cri-o://3b1314320a859cba23ec7a0600263ad6e5c7f86d46c6990693b6021dbd7e9628",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 19 11:11:34.175: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "704bcbb2-a240-453e-bf05-d1c5c4deea4b",
      ResourceVersion: (string) (len=5) "22871",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581088,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "fe3e2b9e-afb9-4a77-84ef-062d72465c31",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 65 33 65  32 62 39 65 2d 61 66 62  |":\"fe3e2b9e-afb|
              00000130  39 2d 34 61 37 37 2d 38  34 65 66 2d 30 36 32 64  |9-4a77-84ef-062d|
              00000140  37 32 34 36 35 63 33 31  5c 22 7d 22 3a 7b 7d 7d  |72465c31\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 19 11:11:34.186: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0c4d633-b419-4a20-a3ea-08f0e419cdee",
      ResourceVersion: (string) (len=5) "22958",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "fe3e2b9e-afb9-4a77-84ef-062d72465c31",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 65 33 65  32 62 39 65 2d 61 66 62  |":\"fe3e2b9e-afb|
              00000130  39 2d 34 61 37 37 2d 38  34 65 66 2d 30 36 32 64  |9-4a77-84ef-062d|
              00000140  37 32 34 36 35 63 33 31  5c 22 7d 22 3a 7b 7d 7d  |72465c31\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 19 11:11:34.197: INFO: pod: "test-deployment-79ff746c4-7xz6r":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-7xz6r",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68e21fb3-f226-4c66-b4be-6516b6b2e0a3",
      ResourceVersion: (string) (len=5) "22957",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c0c4d633-b419-4a20-a3ea-08f0e419cdee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 30 63 34 64 36 33 33  |uid\":\"c0c4d633|
              000000a0  2d 62 34 31 39 2d 34 61  32 30 2d 61 33 65 61 2d  |-b419-4a20-a3ea-|
              000000b0  30 38 66 30 65 34 31 39  63 64 65 65 5c 22 7d 22  |08f0e419cdee\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 34 34 5c 22 7d 22  |10.233.64.44\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54hr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54hr9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.113",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581093,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://6dd4ada682bf1290a338d116342868a527e525c4194abe1aa4c06e5bb1c6d48b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 19 11:11:34.205: INFO: pod: "test-deployment-79ff746c4-9p6s2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-9p6s2",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56b361ff-af08-48a6-986c-a8878868a703",
      ResourceVersion: (string) (len=5) "22914",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c0c4d633-b419-4a20-a3ea-08f0e419cdee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 30 63 34 64 36 33 33  |uid\":\"c0c4d633|
              000000a0  2d 62 34 31 39 2d 34 61  32 30 2d 61 33 65 61 2d  |-b419-4a20-a3ea-|
              000000b0  30 38 66 30 65 34 31 39  63 64 65 65 5c 22 7d 22  |08f0e419cdee\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 32 34 38 5c 22 7d  |10.233.66.248\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f2z6r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f2z6r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.248",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.248"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://3f62bc8d99a4293d8c58d087b96123ef86ce97926aef3ccc6cf34895bc95a2dc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 19 11:11:34.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-992" for this suite. @ 12/19/23 11:11:34.231
• [6.286 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 12/19/23 11:11:34.252
  Dec 19 11:11:34.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:11:34.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:34.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:34.295
  STEP: creating Agnhost RC @ 12/19/23 11:11:34.305
  Dec 19 11:11:34.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2651 create -f -'
  Dec 19 11:11:35.015: INFO: stderr: ""
  Dec 19 11:11:35.015: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/19/23 11:11:35.015
  Dec 19 11:11:36.023: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:11:36.023: INFO: Found 0 / 1
  Dec 19 11:11:37.024: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:11:37.025: INFO: Found 1 / 1
  Dec 19 11:11:37.025: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/19/23 11:11:37.025
  Dec 19 11:11:37.036: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:11:37.036: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 11:11:37.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2651 patch pod agnhost-primary-7bm4r -p {"metadata":{"annotations":{"x":"y"}}}'
  Dec 19 11:11:37.244: INFO: stderr: ""
  Dec 19 11:11:37.244: INFO: stdout: "pod/agnhost-primary-7bm4r patched\n"
  STEP: checking annotations @ 12/19/23 11:11:37.244
  Dec 19 11:11:37.257: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:11:37.257: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 11:11:37.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2651" for this suite. @ 12/19/23 11:11:37.285
• [3.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/19/23 11:11:37.309
  Dec 19 11:11:37.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:11:37.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:37.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:37.372
  STEP: Creating secret with name secret-test-2dbe7680-981d-488a-9bb9-b7cc537fa8db @ 12/19/23 11:11:37.379
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:11:37.393
  STEP: Saw pod success @ 12/19/23 11:11:41.478
  Dec 19 11:11:41.489: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-7bea8b5d-bd73-4438-82e8-d4aabdf64a2b container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:11:41.51
  Dec 19 11:11:41.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6662" for this suite. @ 12/19/23 11:11:41.569
• [4.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 12/19/23 11:11:41.625
  Dec 19 11:11:41.625: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 11:11:41.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:41.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:41.694
  Dec 19 11:11:45.780: INFO: Got logs for pod "busybox-privileged-false-b1796f67-dacc-4ffa-a287-03abf7b077a7": "ip: RTNETLINK answers: Operation not permitted\n"
  Dec 19 11:11:45.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8428" for this suite. @ 12/19/23 11:11:45.797
• [4.193 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 12/19/23 11:11:45.818
  Dec 19 11:11:45.818: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:11:45.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:45.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:45.872
  STEP: Creating a ResourceQuota with terminating scope @ 12/19/23 11:11:45.877
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 11:11:45.892
  STEP: Creating a ResourceQuota with not terminating scope @ 12/19/23 11:11:47.902
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 11:11:47.913
  STEP: Creating a long running pod @ 12/19/23 11:11:49.924
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/19/23 11:11:49.95
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/19/23 11:11:51.96
  STEP: Deleting the pod @ 12/19/23 11:11:53.972
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 11:11:54.003
  STEP: Creating a terminating pod @ 12/19/23 11:11:56.013
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/19/23 11:11:56.049
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/19/23 11:11:58.06
  STEP: Deleting the pod @ 12/19/23 11:12:00.075
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 11:12:00.104
  Dec 19 11:12:02.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8630" for this suite. @ 12/19/23 11:12:02.129
• [16.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 12/19/23 11:12:02.158
  Dec 19 11:12:02.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:12:02.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:02.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:02.224
  STEP: Creating a test externalName service @ 12/19/23 11:12:02.232
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9849.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local; sleep 1; done
   @ 12/19/23 11:12:02.244
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9849.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local; sleep 1; done
   @ 12/19/23 11:12:02.245
  STEP: creating a pod to probe DNS @ 12/19/23 11:12:02.246
  STEP: submitting the pod to kubernetes @ 12/19/23 11:12:02.246
  STEP: retrieving the pod @ 12/19/23 11:12:04.3
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:12:04.311
  Dec 19 11:12:04.352: INFO: DNS probes using dns-test-e55a5b1b-7b10-4722-93dd-1a35ecfb716b succeeded

  STEP: changing the externalName to bar.example.com @ 12/19/23 11:12:04.353
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9849.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local; sleep 1; done
   @ 12/19/23 11:12:04.409
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9849.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local; sleep 1; done
   @ 12/19/23 11:12:04.409
  STEP: creating a second pod to probe DNS @ 12/19/23 11:12:04.41
  STEP: submitting the pod to kubernetes @ 12/19/23 11:12:04.41
  STEP: retrieving the pod @ 12/19/23 11:12:06.486
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:12:06.494
  Dec 19 11:12:06.518: INFO: File wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains '' instead of 'bar.example.com.'
  Dec 19 11:12:06.532: INFO: Lookups using dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d failed for: [wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local]

  Dec 19 11:12:06.552: INFO: Pod client logs for webserver: 
  Dec 19 11:12:06.570: INFO: Pod client logs for querier: 
  Dec 19 11:12:06.585: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:12:11.600: INFO: File wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 11:12:11.609: INFO: File jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 11:12:11.609: INFO: Lookups using dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d failed for: [wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local]

  Dec 19 11:12:11.623: INFO: Pod client logs for webserver: 
  Dec 19 11:12:11.638: INFO: Pod client logs for querier: 
  Dec 19 11:12:11.664: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:12:16.597: INFO: File wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 11:12:16.610: INFO: File jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 11:12:16.610: INFO: Lookups using dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d failed for: [wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local]

  Dec 19 11:12:16.629: INFO: Pod client logs for webserver: 
  Dec 19 11:12:16.657: INFO: Pod client logs for querier: 
  Dec 19 11:12:16.673: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:12:21.614: INFO: File jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 11:12:21.615: INFO: Lookups using dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d failed for: [jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local]

  Dec 19 11:12:21.630: INFO: Pod client logs for webserver: 
  Dec 19 11:12:21.648: INFO: Pod client logs for querier: 
  Dec 19 11:12:21.667: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:12:26.610: INFO: File jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 11:12:26.610: INFO: Lookups using dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d failed for: [jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local]

  Dec 19 11:12:26.632: INFO: Pod client logs for webserver: 
  Dec 19 11:12:26.652: INFO: Pod client logs for querier: 
  Dec 19 11:12:26.668: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:12:31.623: INFO: File jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local from pod  dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d contains '' instead of 'bar.example.com.'
  Dec 19 11:12:31.624: INFO: Lookups using dns-9849/dns-test-16b73f0b-9ce5-4183-aef4-72122310277d failed for: [jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local]

  Dec 19 11:12:31.648: INFO: Pod client logs for webserver: 
  Dec 19 11:12:31.671: INFO: Pod client logs for querier: 
  Dec 19 11:12:31.690: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:12:36.608: INFO: DNS probes using dns-test-16b73f0b-9ce5-4183-aef4-72122310277d succeeded

  STEP: changing the service to type=ClusterIP @ 12/19/23 11:12:36.608
  W1219 11:12:36.655634      13 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9849.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9849.svc.cluster.local; sleep 1; done
   @ 12/19/23 11:12:36.656
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9849.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9849.svc.cluster.local; sleep 1; done
   @ 12/19/23 11:12:36.656
  STEP: creating a third pod to probe DNS @ 12/19/23 11:12:36.656
  STEP: submitting the pod to kubernetes @ 12/19/23 11:12:36.668
  STEP: retrieving the pod @ 12/19/23 11:13:20.942
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:13:20.95
  Dec 19 11:13:21.000: INFO: DNS probes using dns-test-718a3f87-8a8c-4494-8186-e940fca548c0 succeeded

  Dec 19 11:13:21.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:13:21.015
  STEP: deleting the pod @ 12/19/23 11:13:21.049
  STEP: deleting the pod @ 12/19/23 11:13:21.081
  STEP: deleting the test externalName service @ 12/19/23 11:13:21.118
  STEP: Destroying namespace "dns-9849" for this suite. @ 12/19/23 11:13:21.153
• [79.013 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 12/19/23 11:13:21.174
  Dec 19 11:13:21.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:13:21.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:21.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:21.246
  STEP: Creating simple DaemonSet "daemon-set" @ 12/19/23 11:13:21.309
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 11:13:21.358
  Dec 19 11:13:21.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:13:21.381: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:13:22.464: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:13:22.464: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:13:23.417: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:13:23.418: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:13:24.405: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:13:24.405: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 12/19/23 11:13:24.419
  Dec 19 11:13:24.430: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/19/23 11:13:24.43
  Dec 19 11:13:24.450: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/19/23 11:13:24.451
  Dec 19 11:13:24.455: INFO: Observed &DaemonSet event: ADDED
  Dec 19 11:13:24.455: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.456: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.456: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.456: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.456: INFO: Found daemon set daemon-set in namespace daemonsets-9168 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 11:13:24.456: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/19/23 11:13:24.456
  STEP: watching for the daemon set status to be patched @ 12/19/23 11:13:24.473
  Dec 19 11:13:24.476: INFO: Observed &DaemonSet event: ADDED
  Dec 19 11:13:24.477: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.477: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.477: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.478: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.478: INFO: Observed daemon set daemon-set in namespace daemonsets-9168 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 11:13:24.481: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 11:13:24.486: INFO: Found daemon set daemon-set in namespace daemonsets-9168 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Dec 19 11:13:24.486: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 11:13:24.5
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9168, will wait for the garbage collector to delete the pods @ 12/19/23 11:13:24.5
  Dec 19 11:13:24.584: INFO: Deleting DaemonSet.extensions daemon-set took: 22.967303ms
  Dec 19 11:13:24.792: INFO: Terminating DaemonSet.extensions daemon-set pods took: 208.538605ms
  Dec 19 11:13:26.206: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:13:26.207: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 11:13:26.215: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23505"},"items":null}

  Dec 19 11:13:26.225: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23505"},"items":null}

  Dec 19 11:13:26.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9168" for this suite. @ 12/19/23 11:13:26.29
• [5.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 12/19/23 11:13:26.32
  Dec 19 11:13:26.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 11:13:26.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:26.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:26.368
  Dec 19 11:13:26.374: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 11:13:26.400: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 11:13:26.409: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-1 before test
  Dec 19 11:13:26.424: INFO: coredns-5dd5756b68-784pk from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.424: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 11:13:26.424: INFO: kube-addon-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.424: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:13:26.424: INFO: kube-apiserver-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.424: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:13:26.424: INFO: kube-controller-manager-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.425: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:13:26.425: INFO: kube-flannel-ds-qkbv6 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.425: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:13:26.425: INFO: kube-proxy-dc2t9 from kube-system started at 2023-12-19 09:34:32 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.426: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:13:26.426: INFO: kube-scheduler-ja4hooch7za7-1 from kube-system started at 2023-12-19 09:47:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.426: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:13:26.426: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-kdr9t from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:13:26.426: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:13:26.426: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:13:26.426: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-2 before test
  Dec 19 11:13:26.449: INFO: coredns-5dd5756b68-9m7mp from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.449: INFO: 	Container coredns ready: true, restart count 0
  Dec 19 11:13:26.450: INFO: kube-addon-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.450: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:13:26.450: INFO: kube-apiserver-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.451: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:13:26.451: INFO: kube-controller-manager-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:50 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.452: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:13:26.452: INFO: kube-flannel-ds-vhwc5 from kube-system started at 2023-12-19 09:35:56 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.453: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:13:26.453: INFO: kube-proxy-7d2pb from kube-system started at 2023-12-19 09:34:59 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.453: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:13:26.454: INFO: kube-scheduler-ja4hooch7za7-2 from kube-system started at 2023-12-19 09:47:49 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.455: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:13:26.455: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-5gp8h from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:13:26.456: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:13:26.457: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:13:26.457: INFO: 
  Logging pods the apiserver thinks is on node ja4hooch7za7-3 before test
  Dec 19 11:13:26.482: INFO: kube-flannel-ds-rxkbr from kube-system started at 2023-12-19 10:17:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.482: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 11:13:26.482: INFO: kube-proxy-27g55 from kube-system started at 2023-12-19 09:35:23 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.482: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:13:26.482: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:59 +0000 UTC (1 container statuses recorded)
  Dec 19 11:13:26.482: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 11:13:26.482: INFO: sonobuoy-e2e-job-e8470151cf5a4de6 from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:13:26.482: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 11:13:26.482: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:13:26.482: INFO: sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-7w8tz from sonobuoy started at 2023-12-19 10:01:10 +0000 UTC (2 container statuses recorded)
  Dec 19 11:13:26.482: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:13:26.482: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/19/23 11:13:26.482
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/19/23 11:13:28.546
  STEP: Trying to apply a random label on the found node. @ 12/19/23 11:13:28.598
  STEP: verifying the node has the label kubernetes.io/e2e-acfe07fa-208c-473f-9d26-2051c8f195a4 42 @ 12/19/23 11:13:28.642
  STEP: Trying to relaunch the pod, now with labels. @ 12/19/23 11:13:28.651
  STEP: removing the label kubernetes.io/e2e-acfe07fa-208c-473f-9d26-2051c8f195a4 off the node ja4hooch7za7-3 @ 12/19/23 11:13:30.709
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-acfe07fa-208c-473f-9d26-2051c8f195a4 @ 12/19/23 11:13:30.753
  Dec 19 11:13:30.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1628" for this suite. @ 12/19/23 11:13:30.777
• [4.477 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 12/19/23 11:13:30.798
  Dec 19 11:13:30.798: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:13:30.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:30.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:30.858
  STEP: Setting up server cert @ 12/19/23 11:13:30.92
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:13:31.657
  STEP: Deploying the webhook pod @ 12/19/23 11:13:31.699
  STEP: Wait for the deployment to be ready @ 12/19/23 11:13:31.733
  Dec 19 11:13:31.763: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Dec 19 11:13:33.813: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:13:35.824: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:13:37.826: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:13:39.822: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:13:41.825: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 13, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/19/23 11:13:43.824
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:13:43.857
  Dec 19 11:13:44.857: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/19/23 11:13:44.875
  STEP: create a pod that should be updated by the webhook @ 12/19/23 11:13:44.931
  Dec 19 11:13:44.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2613" for this suite. @ 12/19/23 11:13:45.13
  STEP: Destroying namespace "webhook-markers-8934" for this suite. @ 12/19/23 11:13:45.167
• [14.384 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 12/19/23 11:13:45.186
  Dec 19 11:13:45.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename podtemplate @ 12/19/23 11:13:45.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:45.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:45.232
  STEP: Create set of pod templates @ 12/19/23 11:13:45.239
  Dec 19 11:13:45.253: INFO: created test-podtemplate-1
  Dec 19 11:13:45.273: INFO: created test-podtemplate-2
  Dec 19 11:13:45.287: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/19/23 11:13:45.288
  STEP: delete collection of pod templates @ 12/19/23 11:13:45.299
  Dec 19 11:13:45.300: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/19/23 11:13:45.348
  Dec 19 11:13:45.348: INFO: requesting list of pod templates to confirm quantity
  Dec 19 11:13:45.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1094" for this suite. @ 12/19/23 11:13:45.374
• [0.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 12/19/23 11:13:45.406
  Dec 19 11:13:45.406: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:13:45.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:45.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:45.458
  STEP: set up a multi version CRD @ 12/19/23 11:13:45.463
  Dec 19 11:13:45.464: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: mark a version not serverd @ 12/19/23 11:13:50.376
  STEP: check the unserved version gets removed @ 12/19/23 11:13:50.428
  STEP: check the other version is not changed @ 12/19/23 11:13:51.755
  Dec 19 11:13:55.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-658" for this suite. @ 12/19/23 11:13:55.541
• [10.157 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/19/23 11:13:55.565
  Dec 19 11:13:55.565: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:13:55.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:55.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:55.614
  STEP: Creating secret with name secret-test-9ab9fc66-517b-4519-b6f1-3f4f892d09eb @ 12/19/23 11:13:55.621
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:13:55.659
  STEP: Saw pod success @ 12/19/23 11:13:57.701
  Dec 19 11:13:57.709: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-secrets-9cd89809-c7c5-431c-bf97-60eb1c83b892 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:13:57.732
  Dec 19 11:13:57.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2352" for this suite. @ 12/19/23 11:13:57.779
• [2.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 12/19/23 11:13:57.809
  Dec 19 11:13:57.809: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-webhook @ 12/19/23 11:13:57.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:57.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:57.863
  STEP: Setting up server cert @ 12/19/23 11:13:57.868
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/19/23 11:13:59.162
  STEP: Deploying the custom resource conversion webhook pod @ 12/19/23 11:13:59.173
  STEP: Wait for the deployment to be ready @ 12/19/23 11:13:59.218
  Dec 19 11:13:59.241: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:14:01.266
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:14:01.297
  Dec 19 11:14:02.298: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 19 11:14:02.312: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Creating a v1 custom resource @ 12/19/23 11:14:05.226
  STEP: v2 custom resource should be converted @ 12/19/23 11:14:05.238
  Dec 19 11:14:05.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7331" for this suite. @ 12/19/23 11:14:05.954
• [8.192 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/19/23 11:14:06.012
  Dec 19 11:14:06.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/19/23 11:14:06.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:06.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:06.066
  STEP: creating a target pod @ 12/19/23 11:14:06.074
  STEP: adding an ephemeral container @ 12/19/23 11:14:08.118
  STEP: checking pod container endpoints @ 12/19/23 11:14:12.173
  Dec 19 11:14:12.174: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4873 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:14:12.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:14:12.179: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:14:12.180: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4873/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 19 11:14:12.319: INFO: Exec stderr: ""
  Dec 19 11:14:12.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4873" for this suite. @ 12/19/23 11:14:12.376
• [6.382 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 12/19/23 11:14:12.396
  Dec 19 11:14:12.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:14:12.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:12.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:12.439
  Dec 19 11:14:12.444: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/19/23 11:14:14.405
  Dec 19 11:14:14.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-3020 --namespace=crd-publish-openapi-3020 create -f -'
  Dec 19 11:14:15.869: INFO: stderr: ""
  Dec 19 11:14:15.869: INFO: stdout: "e2e-test-crd-publish-openapi-7767-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 19 11:14:15.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-3020 --namespace=crd-publish-openapi-3020 delete e2e-test-crd-publish-openapi-7767-crds test-cr'
  Dec 19 11:14:16.157: INFO: stderr: ""
  Dec 19 11:14:16.157: INFO: stdout: "e2e-test-crd-publish-openapi-7767-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Dec 19 11:14:16.157: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-3020 --namespace=crd-publish-openapi-3020 apply -f -'
  Dec 19 11:14:16.596: INFO: stderr: ""
  Dec 19 11:14:16.597: INFO: stdout: "e2e-test-crd-publish-openapi-7767-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 19 11:14:16.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-3020 --namespace=crd-publish-openapi-3020 delete e2e-test-crd-publish-openapi-7767-crds test-cr'
  Dec 19 11:14:16.774: INFO: stderr: ""
  Dec 19 11:14:16.774: INFO: stdout: "e2e-test-crd-publish-openapi-7767-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/19/23 11:14:16.774
  Dec 19 11:14:16.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-3020 explain e2e-test-crd-publish-openapi-7767-crds'
  Dec 19 11:14:17.101: INFO: stderr: ""
  Dec 19 11:14:17.101: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7767-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Dec 19 11:14:18.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3020" for this suite. @ 12/19/23 11:14:18.932
• [6.551 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 12/19/23 11:14:18.948
  Dec 19 11:14:18.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:14:18.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:18.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:18.995
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:14:19
  STEP: Saw pod success @ 12/19/23 11:14:23.052
  Dec 19 11:14:23.058: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-59fb09f0-ffce-4622-afd0-915275518b46 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:14:23.104
  Dec 19 11:14:23.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8674" for this suite. @ 12/19/23 11:14:23.149
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/19/23 11:14:23.173
  Dec 19 11:14:23.173: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:14:23.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:23.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:23.223
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/19/23 11:14:23.283
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 11:14:23.304
  Dec 19 11:14:23.339: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:14:23.339: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:14:24.410: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:14:24.410: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:14:25.364: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:14:25.364: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  Dec 19 11:14:26.362: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:14:26.362: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/19/23 11:14:26.369
  Dec 19 11:14:26.424: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:14:26.424: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  Dec 19 11:14:27.449: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:14:27.449: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  Dec 19 11:14:28.452: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:14:28.453: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/19/23 11:14:28.454
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 11:14:28.479
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6858, will wait for the garbage collector to delete the pods @ 12/19/23 11:14:28.479
  Dec 19 11:14:28.567: INFO: Deleting DaemonSet.extensions daemon-set took: 26.404647ms
  Dec 19 11:14:28.767: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.79547ms
  Dec 19 11:14:30.081: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:14:30.081: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 11:14:30.089: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24080"},"items":null}

  Dec 19 11:14:30.117: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24080"},"items":null}

  Dec 19 11:14:30.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6858" for this suite. @ 12/19/23 11:14:30.203
• [7.047 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/19/23 11:14:30.225
  Dec 19 11:14:30.226: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:14:30.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:30.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:30.276
  Dec 19 11:14:30.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2543" for this suite. @ 12/19/23 11:14:30.413
• [0.201 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 12/19/23 11:14:30.426
  Dec 19 11:14:30.426: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:14:30.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:30.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:30.472
  Dec 19 11:14:32.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:14:32.518: INFO: Deleting pod "var-expansion-1906c446-b842-406a-ad3e-f176e494e57f" in namespace "var-expansion-7841"
  Dec 19 11:14:32.534: INFO: Wait up to 5m0s for pod "var-expansion-1906c446-b842-406a-ad3e-f176e494e57f" to be fully deleted
  STEP: Destroying namespace "var-expansion-7841" for this suite. @ 12/19/23 11:14:34.555
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/19/23 11:14:34.572
  Dec 19 11:14:34.572: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename subpath @ 12/19/23 11:14:34.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:34.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:34.615
  STEP: Setting up data @ 12/19/23 11:14:34.621
  STEP: Creating pod pod-subpath-test-secret-h2wn @ 12/19/23 11:14:34.64
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 11:14:34.64
  STEP: Saw pod success @ 12/19/23 11:14:58.813
  Dec 19 11:14:58.819: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-subpath-test-secret-h2wn container test-container-subpath-secret-h2wn: <nil>
  STEP: delete the pod @ 12/19/23 11:14:58.84
  STEP: Deleting pod pod-subpath-test-secret-h2wn @ 12/19/23 11:14:58.869
  Dec 19 11:14:58.869: INFO: Deleting pod "pod-subpath-test-secret-h2wn" in namespace "subpath-8593"
  Dec 19 11:14:58.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8593" for this suite. @ 12/19/23 11:14:58.888
• [24.332 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/19/23 11:14:58.906
  Dec 19 11:14:58.906: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename watch @ 12/19/23 11:14:58.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:58.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:58.951
  STEP: creating a watch on configmaps @ 12/19/23 11:14:58.957
  STEP: creating a new configmap @ 12/19/23 11:14:58.962
  STEP: modifying the configmap once @ 12/19/23 11:14:58.972
  STEP: closing the watch once it receives two notifications @ 12/19/23 11:14:58.987
  Dec 19 11:14:58.987: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5351  b7e695ae-444e-4628-86b3-9a310b206b94 24229 0 2023-12-19 11:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 11:14:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:14:58.988: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5351  b7e695ae-444e-4628-86b3-9a310b206b94 24230 0 2023-12-19 11:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 11:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/19/23 11:14:58.989
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/19/23 11:14:59.004
  STEP: deleting the configmap @ 12/19/23 11:14:59.006
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/19/23 11:14:59.018
  Dec 19 11:14:59.018: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5351  b7e695ae-444e-4628-86b3-9a310b206b94 24231 0 2023-12-19 11:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 11:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:14:59.019: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5351  b7e695ae-444e-4628-86b3-9a310b206b94 24232 0 2023-12-19 11:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 11:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:14:59.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5351" for this suite. @ 12/19/23 11:14:59.033
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 12/19/23 11:14:59.053
  Dec 19 11:14:59.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:14:59.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:14:59.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:14:59.106
  STEP: Creating pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497 @ 12/19/23 11:14:59.111
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:15:01.152
  Dec 19 11:15:01.161: INFO: Initial restart count of pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 is 0
  Dec 19 11:15:01.169: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:03.178: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:05.189: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:07.197: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:09.214: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:11.228: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:13.239: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:15.252: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:17.264: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:19.273: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:21.284: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:23.291: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:25.301: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:27.316: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:29.328: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:31.340: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:33.350: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:35.361: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:37.373: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:39.382: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:41.393: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:43.409: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:45.421: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:47.433: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:49.443: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:51.453: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:53.463: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:55.475: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:57.484: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:15:59.492: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:01.502: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:03.509: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:05.523: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:07.552: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:09.565: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:11.577: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:13.589: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:15.639: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:17.649: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:19.658: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:21.668: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:23.678: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:25.687: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:27.696: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:29.705: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:31.715: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:33.728: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:35.738: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:37.774: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:39.786: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:41.800: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:43.811: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:45.824: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:47.838: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:49.846: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:51.857: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:53.870: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:55.882: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:57.897: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:16:59.911: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:01.922: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:03.930: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:05.944: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:07.953: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:09.965: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:11.976: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:13.986: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:16.000: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:18.013: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:20.023: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:22.035: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:24.045: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:26.054: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:28.064: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:30.079: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:32.090: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:34.108: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:36.120: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:38.133: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:40.144: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:42.157: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:44.165: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:46.176: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:48.184: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:50.193: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:52.204: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:54.214: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:56.223: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:17:58.233: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:00.242: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:02.254: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:04.266: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:06.281: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:08.310: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:10.325: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:12.362: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:14.372: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:16.418: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:18.431: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:20.439: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:22.450: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:24.459: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:26.469: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:28.476: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:30.484: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:32.496: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:34.503: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:36.514: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:38.529: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:40.539: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:42.556: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:44.565: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:46.575: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:48.587: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:50.598: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:52.611: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:54.619: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:56.629: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:18:58.639: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:19:00.652: INFO: Get pod liveness-fefb5769-4824-4c4f-9d75-0acbd2308763 in namespace container-probe-8497
  Dec 19 11:19:02.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:19:02.668
  STEP: Destroying namespace "container-probe-8497" for this suite. @ 12/19/23 11:19:02.743
• [243.706 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 12/19/23 11:19:02.77
  Dec 19 11:19:02.770: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 11:19:02.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:02.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:02.834
  STEP: Read namespace status @ 12/19/23 11:19:02.841
  Dec 19 11:19:02.850: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/19/23 11:19:02.851
  Dec 19 11:19:02.864: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/19/23 11:19:02.864
  Dec 19 11:19:02.883: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Dec 19 11:19:02.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3162" for this suite. @ 12/19/23 11:19:02.898
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 12/19/23 11:19:02.924
  Dec 19 11:19:02.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:19:02.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:02.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:02.985
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/19/23 11:19:02.992
  STEP: Saw pod success @ 12/19/23 11:19:05.034
  Dec 19 11:19:05.042: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-beb06488-4fea-4ff7-a50e-a71ff058cbfb container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:19:05.087
  Dec 19 11:19:05.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9028" for this suite. @ 12/19/23 11:19:05.137
• [2.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 12/19/23 11:19:05.158
  Dec 19 11:19:05.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 11:19:05.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:05.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:05.197
  STEP: creating service in namespace services-7585 @ 12/19/23 11:19:05.203
  STEP: creating service affinity-clusterip in namespace services-7585 @ 12/19/23 11:19:05.204
  STEP: creating replication controller affinity-clusterip in namespace services-7585 @ 12/19/23 11:19:05.23
  I1219 11:19:05.250649      13 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7585, replica count: 3
  I1219 11:19:08.304915      13 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:19:08.355: INFO: Creating new exec pod
  Dec 19 11:19:11.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-7585 exec execpod-affinityhl86r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Dec 19 11:19:11.891: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Dec 19 11:19:11.891: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:19:11.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-7585 exec execpod-affinityhl86r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.137 80'
  Dec 19 11:19:12.169: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.137 80\nConnection to 10.233.46.137 80 port [tcp/http] succeeded!\n"
  Dec 19 11:19:12.169: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:19:12.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-7585 exec execpod-affinityhl86r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.46.137:80/ ; done'
  Dec 19 11:19:12.719: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.137:80/\n"
  Dec 19 11:19:12.719: INFO: stdout: "\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9\naffinity-clusterip-nvsv9"
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Received response from host: affinity-clusterip-nvsv9
  Dec 19 11:19:12.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:19:12.736: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7585, will wait for the garbage collector to delete the pods @ 12/19/23 11:19:12.762
  Dec 19 11:19:12.835: INFO: Deleting ReplicationController affinity-clusterip took: 13.348041ms
  Dec 19 11:19:12.935: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.381715ms
  STEP: Destroying namespace "services-7585" for this suite. @ 12/19/23 11:19:16.446
• [11.311 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 12/19/23 11:19:16.47
  Dec 19 11:19:16.470: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:19:16.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:16.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:16.522
  Dec 19 11:19:16.563: INFO: created pod
  STEP: Saw pod success @ 12/19/23 11:19:20.595
  Dec 19 11:19:50.597: INFO: polling logs
  Dec 19 11:19:50.617: INFO: Pod logs: 
  I1219 11:19:17.375749       1 log.go:194] OK: Got token
  I1219 11:19:17.378179       1 log.go:194] validating with in-cluster discovery
  I1219 11:19:17.379431       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1219 11:19:17.379564       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5555:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003b4960), NotBefore:(*jwt.NumericDate)(0xc0003b4c88), IssuedAt:(*jwt.NumericDate)(0xc0003b49b0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5555", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c1b06148-0c05-4e7d-90c7-6a403765e6ce"}}}
  I1219 11:19:17.420390       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1219 11:19:17.441154       1 log.go:194] OK: Validated signature on JWT
  I1219 11:19:17.441892       1 log.go:194] OK: Got valid claims from token!
  I1219 11:19:17.442093       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5555:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004b4dd8), NotBefore:(*jwt.NumericDate)(0xc0004b4e00), IssuedAt:(*jwt.NumericDate)(0xc0004b4de0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5555", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c1b06148-0c05-4e7d-90c7-6a403765e6ce"}}}

  Dec 19 11:19:50.617: INFO: completed pod
  Dec 19 11:19:50.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5555" for this suite. @ 12/19/23 11:19:50.642
• [34.191 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 12/19/23 11:19:50.666
  Dec 19 11:19:50.667: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sysctl @ 12/19/23 11:19:50.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:50.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:50.716
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/19/23 11:19:50.721
  Dec 19 11:19:50.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-172" for this suite. @ 12/19/23 11:19:50.745
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 12/19/23 11:19:50.779
  Dec 19 11:19:50.779: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:19:50.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:50.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:50.862
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:19:50.867
  STEP: Saw pod success @ 12/19/23 11:19:54.915
  Dec 19 11:19:54.924: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-5ecab618-260f-41c3-8f71-926d7da6534f container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:19:54.938
  Dec 19 11:19:54.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1322" for this suite. @ 12/19/23 11:19:54.991
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 12/19/23 11:19:55.006
  Dec 19 11:19:55.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename podtemplate @ 12/19/23 11:19:55.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:55.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:55.045
  STEP: Create a pod template @ 12/19/23 11:19:55.052
  STEP: Replace a pod template @ 12/19/23 11:19:55.064
  Dec 19 11:19:55.084: INFO: Found updated podtemplate annotation: "true"

  Dec 19 11:19:55.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5255" for this suite. @ 12/19/23 11:19:55.094
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 12/19/23 11:19:55.108
  Dec 19 11:19:55.108: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:19:55.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:55.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:55.156
  STEP: Counting existing ResourceQuota @ 12/19/23 11:19:55.16
  STEP: Creating a ResourceQuota @ 12/19/23 11:20:00.169
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:20:00.183
  STEP: Creating a ReplicationController @ 12/19/23 11:20:02.199
  STEP: Ensuring resource quota status captures replication controller creation @ 12/19/23 11:20:02.237
  STEP: Deleting a ReplicationController @ 12/19/23 11:20:04.247
  STEP: Ensuring resource quota status released usage @ 12/19/23 11:20:04.259
  Dec 19 11:20:06.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2228" for this suite. @ 12/19/23 11:20:06.282
• [11.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/19/23 11:20:06.317
  Dec 19 11:20:06.317: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/19/23 11:20:06.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:06.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:06.366
  STEP: creating a target pod @ 12/19/23 11:20:06.373
  STEP: adding an ephemeral container @ 12/19/23 11:20:08.423
  STEP: checking pod container endpoints @ 12/19/23 11:20:10.478
  Dec 19 11:20:10.478: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-873 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:20:10.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:20:10.480: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:20:10.480: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-873/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 19 11:20:10.633: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/19/23 11:20:10.65
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/19/23 11:20:10.663
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/19/23 11:20:10.685
  Dec 19 11:20:10.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-873" for this suite. @ 12/19/23 11:20:10.714
• [4.418 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 12/19/23 11:20:10.738
  Dec 19 11:20:10.738: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename disruption @ 12/19/23 11:20:10.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:10.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:10.797
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:20:10.823
  STEP: Waiting for all pods to be running @ 12/19/23 11:20:12.941
  Dec 19 11:20:12.965: INFO: running pods: 0 < 3
  Dec 19 11:20:14.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5258" for this suite. @ 12/19/23 11:20:14.997
• [4.271 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 12/19/23 11:20:15.015
  Dec 19 11:20:15.016: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:20:15.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:15.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:15.059
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:20:15.065
  STEP: Saw pod success @ 12/19/23 11:20:19.109
  Dec 19 11:20:19.116: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-901fdba3-5872-4fd7-b2c9-6a9c0c86de80 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:20:19.132
  Dec 19 11:20:19.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4596" for this suite. @ 12/19/23 11:20:19.188
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/19/23 11:20:19.213
  Dec 19 11:20:19.213: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename subpath @ 12/19/23 11:20:19.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:19.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:19.266
  STEP: Setting up data @ 12/19/23 11:20:19.275
  STEP: Creating pod pod-subpath-test-configmap-t7vg @ 12/19/23 11:20:19.301
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 11:20:19.302
  STEP: Saw pod success @ 12/19/23 11:20:43.513
  Dec 19 11:20:43.522: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-subpath-test-configmap-t7vg container test-container-subpath-configmap-t7vg: <nil>
  STEP: delete the pod @ 12/19/23 11:20:43.543
  STEP: Deleting pod pod-subpath-test-configmap-t7vg @ 12/19/23 11:20:43.587
  Dec 19 11:20:43.587: INFO: Deleting pod "pod-subpath-test-configmap-t7vg" in namespace "subpath-5727"
  Dec 19 11:20:43.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5727" for this suite. @ 12/19/23 11:20:43.616
• [24.422 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 12/19/23 11:20:43.636
  Dec 19 11:20:43.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 11:20:43.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:43.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:43.727
  STEP: getting /apis @ 12/19/23 11:20:43.738
  STEP: getting /apis/node.k8s.io @ 12/19/23 11:20:43.753
  STEP: getting /apis/node.k8s.io/v1 @ 12/19/23 11:20:43.758
  STEP: creating @ 12/19/23 11:20:43.76
  STEP: watching @ 12/19/23 11:20:43.821
  Dec 19 11:20:43.821: INFO: starting watch
  STEP: getting @ 12/19/23 11:20:43.842
  STEP: listing @ 12/19/23 11:20:43.851
  STEP: patching @ 12/19/23 11:20:43.859
  STEP: updating @ 12/19/23 11:20:43.874
  Dec 19 11:20:43.892: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 12/19/23 11:20:43.893
  STEP: deleting a collection @ 12/19/23 11:20:43.933
  Dec 19 11:20:43.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2414" for this suite. @ 12/19/23 11:20:43.99
• [0.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 12/19/23 11:20:44.017
  Dec 19 11:20:44.017: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:20:44.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:44.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:44.064
  STEP: Creating configMap with name projected-configmap-test-volume-map-f0b39bf0-6801-48bb-9f31-2dd647f13ecf @ 12/19/23 11:20:44.077
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:20:44.088
  STEP: Saw pod success @ 12/19/23 11:20:48.142
  Dec 19 11:20:48.151: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-configmaps-d5229b46-9f74-4e13-a519-c1d74d1981b7 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:20:48.175
  Dec 19 11:20:48.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6157" for this suite. @ 12/19/23 11:20:48.222
• [4.222 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 12/19/23 11:20:48.244
  Dec 19 11:20:48.245: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 11:20:48.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:48.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:48.298
  Dec 19 11:20:48.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  W1219 11:20:51.179865      13 warnings.go:70] unknown field "alpha"
  W1219 11:20:51.180036      13 warnings.go:70] unknown field "beta"
  W1219 11:20:51.180065      13 warnings.go:70] unknown field "delta"
  W1219 11:20:51.180178      13 warnings.go:70] unknown field "epsilon"
  W1219 11:20:51.180218      13 warnings.go:70] unknown field "gamma"
  Dec 19 11:20:51.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1564" for this suite. @ 12/19/23 11:20:51.782
• [3.556 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 12/19/23 11:20:51.8
  Dec 19 11:20:51.801: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 11:20:51.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:51.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:51.844
  Dec 19 11:20:51.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9408" for this suite. @ 12/19/23 11:20:51.908
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 12/19/23 11:20:51.927
  Dec 19 11:20:51.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 11:20:51.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:51.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:51.965
  STEP: Creating service test in namespace statefulset-1711 @ 12/19/23 11:20:51.971
  STEP: Creating statefulset ss in namespace statefulset-1711 @ 12/19/23 11:20:51.983
  Dec 19 11:20:52.011: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 11:21:02.025: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/19/23 11:21:02.038
  STEP: updating a scale subresource @ 12/19/23 11:21:02.047
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/19/23 11:21:02.061
  STEP: Patch a scale subresource @ 12/19/23 11:21:02.073
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/19/23 11:21:02.094
  Dec 19 11:21:02.117: INFO: Deleting all statefulset in ns statefulset-1711
  Dec 19 11:21:02.160: INFO: Scaling statefulset ss to 0
  Dec 19 11:21:12.265: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:21:12.272: INFO: Deleting statefulset ss
  Dec 19 11:21:12.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1711" for this suite. @ 12/19/23 11:21:12.35
• [20.452 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/19/23 11:21:12.384
  Dec 19 11:21:12.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:21:12.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:21:12.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:21:12.436
  STEP: creating the pod @ 12/19/23 11:21:12.452
  STEP: submitting the pod to kubernetes @ 12/19/23 11:21:12.453
  W1219 11:21:12.482031      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 12/19/23 11:21:14.516
  STEP: updating the pod @ 12/19/23 11:21:14.523
  Dec 19 11:21:15.053: INFO: Successfully updated pod "pod-update-activedeadlineseconds-0f305bdd-d58c-400a-a2a4-bf238c5921e1"
  Dec 19 11:21:19.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3099" for this suite. @ 12/19/23 11:21:19.092
• [6.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 12/19/23 11:21:19.122
  Dec 19 11:21:19.122: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:21:19.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:21:19.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:21:19.158
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/19/23 11:21:19.164
  STEP: Saw pod success @ 12/19/23 11:21:23.243
  Dec 19 11:21:23.250: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-55cdd838-9c94-4c85-8319-6c375f432df8 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:21:23.266
  Dec 19 11:21:23.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4867" for this suite. @ 12/19/23 11:21:23.302
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/19/23 11:21:23.321
  Dec 19 11:21:23.321: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:21:23.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:21:23.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:21:23.362
  STEP: Creating secret with name s-test-opt-del-4391c31a-a18f-4c9c-990f-9ebe651fd566 @ 12/19/23 11:21:23.381
  STEP: Creating secret with name s-test-opt-upd-a6a4f372-1abd-4ae5-a13f-dfaead396afc @ 12/19/23 11:21:23.391
  STEP: Creating the pod @ 12/19/23 11:21:23.398
  STEP: Deleting secret s-test-opt-del-4391c31a-a18f-4c9c-990f-9ebe651fd566 @ 12/19/23 11:21:25.495
  STEP: Updating secret s-test-opt-upd-a6a4f372-1abd-4ae5-a13f-dfaead396afc @ 12/19/23 11:21:25.512
  STEP: Creating secret with name s-test-opt-create-ccb7ebc1-087e-46ed-9028-2d1def61d824 @ 12/19/23 11:21:25.532
  STEP: waiting to observe update in volume @ 12/19/23 11:21:25.542
  Dec 19 11:22:34.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7253" for this suite. @ 12/19/23 11:22:34.321
• [71.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 12/19/23 11:22:34.362
  Dec 19 11:22:34.363: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:22:34.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:34.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:34.423
  STEP: Creating a pod to test env composition @ 12/19/23 11:22:34.43
  STEP: Saw pod success @ 12/19/23 11:22:38.488
  Dec 19 11:22:38.498: INFO: Trying to get logs from node ja4hooch7za7-3 pod var-expansion-200a0e7b-d4b1-4778-adb8-467e733b72e0 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:22:38.515
  Dec 19 11:22:38.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1647" for this suite. @ 12/19/23 11:22:38.572
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 12/19/23 11:22:38.597
  Dec 19 11:22:38.597: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename disruption @ 12/19/23 11:22:38.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:38.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:38.656
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/19/23 11:22:38.663
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:22:38.673
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/19/23 11:22:40.727
  STEP: Waiting for all pods to be running @ 12/19/23 11:22:40.73
  Dec 19 11:22:40.739: INFO: pods: 0 < 3
  STEP: locating a running pod @ 12/19/23 11:22:42.75
  STEP: Updating the pdb to allow a pod to be evicted @ 12/19/23 11:22:42.778
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:22:42.811
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/19/23 11:22:44.837
  STEP: Waiting for all pods to be running @ 12/19/23 11:22:44.838
  STEP: Waiting for the pdb to observed all healthy pods @ 12/19/23 11:22:44.846
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/19/23 11:22:44.892
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:22:44.93
  STEP: Waiting for all pods to be running @ 12/19/23 11:22:46.949
  STEP: locating a running pod @ 12/19/23 11:22:46.961
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/19/23 11:22:46.987
  STEP: Waiting for the pdb to be deleted @ 12/19/23 11:22:47.002
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/19/23 11:22:47.019
  STEP: Waiting for all pods to be running @ 12/19/23 11:22:47.019
  Dec 19 11:22:47.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5467" for this suite. @ 12/19/23 11:22:47.186
• [8.658 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 12/19/23 11:22:47.257
  Dec 19 11:22:47.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:22:47.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:47.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:47.363
  STEP: Creating projection with secret that has name secret-emptykey-test-deaa92e7-f46d-4c95-aafc-419b516dd8b6 @ 12/19/23 11:22:47.371
  Dec 19 11:22:47.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4240" for this suite. @ 12/19/23 11:22:47.397
• [0.186 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 12/19/23 11:22:47.446
  Dec 19 11:22:47.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:22:47.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:47.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:47.495
  Dec 19 11:22:47.543: INFO: Got root ca configmap in namespace "svcaccounts-1936"
  Dec 19 11:22:47.564: INFO: Deleted root ca configmap in namespace "svcaccounts-1936"
  STEP: waiting for a new root ca configmap created @ 12/19/23 11:22:48.068
  Dec 19 11:22:48.079: INFO: Recreated root ca configmap in namespace "svcaccounts-1936"
  Dec 19 11:22:48.089: INFO: Updated root ca configmap in namespace "svcaccounts-1936"
  STEP: waiting for the root ca configmap reconciled @ 12/19/23 11:22:48.59
  Dec 19 11:22:48.600: INFO: Reconciled root ca configmap in namespace "svcaccounts-1936"
  Dec 19 11:22:48.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1936" for this suite. @ 12/19/23 11:22:48.613
• [1.184 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 12/19/23 11:22:48.631
  Dec 19 11:22:48.631: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename ingressclass @ 12/19/23 11:22:48.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:48.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:48.674
  STEP: getting /apis @ 12/19/23 11:22:48.682
  STEP: getting /apis/networking.k8s.io @ 12/19/23 11:22:48.691
  STEP: getting /apis/networking.k8s.iov1 @ 12/19/23 11:22:48.694
  STEP: creating @ 12/19/23 11:22:48.696
  STEP: getting @ 12/19/23 11:22:48.725
  STEP: listing @ 12/19/23 11:22:48.732
  STEP: watching @ 12/19/23 11:22:48.739
  Dec 19 11:22:48.739: INFO: starting watch
  STEP: patching @ 12/19/23 11:22:48.743
  STEP: updating @ 12/19/23 11:22:48.753
  Dec 19 11:22:48.764: INFO: waiting for watch events with expected annotations
  Dec 19 11:22:48.764: INFO: saw patched and updated annotations
  STEP: deleting @ 12/19/23 11:22:48.764
  STEP: deleting a collection @ 12/19/23 11:22:48.808
  Dec 19 11:22:48.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7331" for this suite. @ 12/19/23 11:22:48.877
• [0.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 12/19/23 11:22:48.894
  Dec 19 11:22:48.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 11:22:48.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:48.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:48.949
  Dec 19 11:22:49.036: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 11:23:49.120: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/19/23 11:23:49.132
  Dec 19 11:23:49.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/19/23 11:23:49.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:49.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:49.178
  Dec 19 11:23:49.219: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Dec 19 11:23:49.226: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Dec 19 11:23:49.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:23:49.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7489" for this suite. @ 12/19/23 11:23:49.477
  STEP: Destroying namespace "sched-preemption-8665" for this suite. @ 12/19/23 11:23:49.496
• [60.616 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/19/23 11:23:49.513
  Dec 19 11:23:49.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/19/23 11:23:49.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:49.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:49.549
  STEP: Creating two CSIDrivers @ 12/19/23 11:23:49.556
  STEP: Getting "inline-driver-88a73eb8-dbd0-44ab-a4b9-e30b7ca9a28a" & "inline-driver-b30db146-802e-4fad-ac3b-5d9993c0667e" @ 12/19/23 11:23:49.598
  STEP: Patching the CSIDriver "inline-driver-b30db146-802e-4fad-ac3b-5d9993c0667e" @ 12/19/23 11:23:49.611
  STEP: Updating the CSIDriver "inline-driver-b30db146-802e-4fad-ac3b-5d9993c0667e" @ 12/19/23 11:23:49.623
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8332" @ 12/19/23 11:23:49.638
  STEP: Deleting CSIDriver "inline-driver-88a73eb8-dbd0-44ab-a4b9-e30b7ca9a28a" @ 12/19/23 11:23:49.643
  STEP: Confirm deletion of CSIDriver "inline-driver-88a73eb8-dbd0-44ab-a4b9-e30b7ca9a28a" @ 12/19/23 11:23:49.654
  STEP: Deleting CSIDriver "inline-driver-b30db146-802e-4fad-ac3b-5d9993c0667e" via DeleteCollection @ 12/19/23 11:23:49.659
  STEP: Confirm deletion of CSIDriver "inline-driver-b30db146-802e-4fad-ac3b-5d9993c0667e" @ 12/19/23 11:23:49.674
  Dec 19 11:23:49.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8332" for this suite. @ 12/19/23 11:23:49.691
• [0.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 12/19/23 11:23:49.722
  Dec 19 11:23:49.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 11:23:49.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:49.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:49.757
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 11:23:49.772
  STEP: create the pod with lifecycle hook @ 12/19/23 11:23:51.82
  STEP: check poststart hook @ 12/19/23 11:24:09.948
  STEP: delete the pod with lifecycle hook @ 12/19/23 11:24:09.994
  Dec 19 11:24:12.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6572" for this suite. @ 12/19/23 11:24:12.043
• [22.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/19/23 11:24:12.07
  Dec 19 11:24:12.071: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename subpath @ 12/19/23 11:24:12.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:12.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:12.122
  STEP: Setting up data @ 12/19/23 11:24:12.132
  STEP: Creating pod pod-subpath-test-configmap-7ndx @ 12/19/23 11:24:12.158
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 11:24:12.158
  STEP: Saw pod success @ 12/19/23 11:24:36.335
  Dec 19 11:24:36.346: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-subpath-test-configmap-7ndx container test-container-subpath-configmap-7ndx: <nil>
  STEP: delete the pod @ 12/19/23 11:24:36.38
  STEP: Deleting pod pod-subpath-test-configmap-7ndx @ 12/19/23 11:24:36.42
  Dec 19 11:24:36.420: INFO: Deleting pod "pod-subpath-test-configmap-7ndx" in namespace "subpath-3303"
  Dec 19 11:24:36.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3303" for this suite. @ 12/19/23 11:24:36.437
• [24.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 12/19/23 11:24:36.466
  Dec 19 11:24:36.466: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:24:36.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:36.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:36.507
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:24:36.514
  STEP: Saw pod success @ 12/19/23 11:24:40.568
  Dec 19 11:24:40.574: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-ec5d77cb-c531-47ee-9ec4-1fd1b7b2971e container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:24:40.589
  Dec 19 11:24:40.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1681" for this suite. @ 12/19/23 11:24:40.637
• [4.184 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/19/23 11:24:40.65
  Dec 19 11:24:40.650: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 11:24:40.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:40.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:40.692
  STEP: Creating a suspended cronjob @ 12/19/23 11:24:40.701
  STEP: Ensuring no jobs are scheduled @ 12/19/23 11:24:40.712
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/19/23 11:29:40.73
  STEP: Removing cronjob @ 12/19/23 11:29:40.74
  Dec 19 11:29:40.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5741" for this suite. @ 12/19/23 11:29:40.774
• [300.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 12/19/23 11:29:40.801
  Dec 19 11:29:40.801: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:29:40.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:40.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:40.858
  STEP: Creating a pod to test substitution in volume subpath @ 12/19/23 11:29:40.865
  STEP: Saw pod success @ 12/19/23 11:29:44.922
  Dec 19 11:29:44.933: INFO: Trying to get logs from node ja4hooch7za7-3 pod var-expansion-edc6a29c-e63d-43da-bff2-85d70bb3333a container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:29:44.981
  Dec 19 11:29:45.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4428" for this suite. @ 12/19/23 11:29:45.02
• [4.233 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 12/19/23 11:29:45.039
  Dec 19 11:29:45.039: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:29:45.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:45.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:45.083
  STEP: create the deployment @ 12/19/23 11:29:45.088
  W1219 11:29:45.101978      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/19/23 11:29:45.102
  STEP: delete the deployment @ 12/19/23 11:29:45.654
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/19/23 11:29:45.672
  STEP: Gathering metrics @ 12/19/23 11:29:46.216
  Dec 19 11:29:46.443: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:29:46.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2785" for this suite. @ 12/19/23 11:29:46.46
• [1.432 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 12/19/23 11:29:46.472
  Dec 19 11:29:46.472: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 11:29:46.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:46.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:46.523
  STEP: Creating a test namespace @ 12/19/23 11:29:46.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:46.572
  STEP: Creating a pod in the namespace @ 12/19/23 11:29:46.578
  STEP: Waiting for the pod to have running status @ 12/19/23 11:29:46.596
  STEP: Deleting the namespace @ 12/19/23 11:29:48.618
  STEP: Waiting for the namespace to be removed. @ 12/19/23 11:29:48.633
  STEP: Recreating the namespace @ 12/19/23 11:30:00.641
  STEP: Verifying there are no pods in the namespace @ 12/19/23 11:30:00.667
  Dec 19 11:30:00.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-395" for this suite. @ 12/19/23 11:30:00.683
  STEP: Destroying namespace "nsdeletetest-5039" for this suite. @ 12/19/23 11:30:00.706
  Dec 19 11:30:00.715: INFO: Namespace nsdeletetest-5039 was already deleted
  STEP: Destroying namespace "nsdeletetest-6603" for this suite. @ 12/19/23 11:30:00.715
• [14.261 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/19/23 11:30:00.735
  Dec 19 11:30:00.735: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-watch @ 12/19/23 11:30:00.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:30:00.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:30:00.771
  Dec 19 11:30:00.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Creating first CR  @ 12/19/23 11:30:03.5
  Dec 19 11:30:03.511: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T11:30:03Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T11:30:03Z]] name:name1 resourceVersion:26937 uid:01141da8-69dc-4866-a0ec-9131b373c42c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/19/23 11:30:13.513
  Dec 19 11:30:13.524: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T11:30:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T11:30:13Z]] name:name2 resourceVersion:26963 uid:6c46d245-25e9-4ff2-9647-5f29b61a6f46] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/19/23 11:30:23.524
  Dec 19 11:30:23.540: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T11:30:03Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T11:30:23Z]] name:name1 resourceVersion:26981 uid:01141da8-69dc-4866-a0ec-9131b373c42c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/19/23 11:30:33.543
  Dec 19 11:30:33.566: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T11:30:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T11:30:33Z]] name:name2 resourceVersion:26999 uid:6c46d245-25e9-4ff2-9647-5f29b61a6f46] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/19/23 11:30:43.567
  Dec 19 11:30:43.583: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T11:30:03Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T11:30:23Z]] name:name1 resourceVersion:27017 uid:01141da8-69dc-4866-a0ec-9131b373c42c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/19/23 11:30:53.583
  Dec 19 11:30:53.602: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T11:30:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T11:30:33Z]] name:name2 resourceVersion:27034 uid:6c46d245-25e9-4ff2-9647-5f29b61a6f46] num:map[num1:9223372036854775807 num2:1000000]]}
  Dec 19 11:31:04.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2008" for this suite. @ 12/19/23 11:31:04.165
• [63.450 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 12/19/23 11:31:04.186
  Dec 19 11:31:04.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:31:04.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:31:04.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:31:04.249
  STEP: creating Agnhost RC @ 12/19/23 11:31:04.255
  Dec 19 11:31:04.255: INFO: namespace kubectl-8217
  Dec 19 11:31:04.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-8217 create -f -'
  Dec 19 11:31:05.840: INFO: stderr: ""
  Dec 19 11:31:05.841: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/19/23 11:31:05.841
  Dec 19 11:31:06.851: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:31:06.852: INFO: Found 0 / 1
  Dec 19 11:31:07.850: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:31:07.850: INFO: Found 1 / 1
  Dec 19 11:31:07.850: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 19 11:31:07.859: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:31:07.860: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 11:31:07.860: INFO: wait on agnhost-primary startup in kubectl-8217 
  Dec 19 11:31:07.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-8217 logs agnhost-primary-2whnb agnhost-primary'
  Dec 19 11:31:08.050: INFO: stderr: ""
  Dec 19 11:31:08.050: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 12/19/23 11:31:08.05
  Dec 19 11:31:08.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-8217 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Dec 19 11:31:08.253: INFO: stderr: ""
  Dec 19 11:31:08.253: INFO: stdout: "service/rm2 exposed\n"
  Dec 19 11:31:08.274: INFO: Service rm2 in namespace kubectl-8217 found.
  STEP: exposing service @ 12/19/23 11:31:10.29
  Dec 19 11:31:10.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-8217 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Dec 19 11:31:10.548: INFO: stderr: ""
  Dec 19 11:31:10.548: INFO: stdout: "service/rm3 exposed\n"
  Dec 19 11:31:10.565: INFO: Service rm3 in namespace kubectl-8217 found.
  Dec 19 11:31:12.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8217" for this suite. @ 12/19/23 11:31:12.596
• [8.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 12/19/23 11:31:12.627
  Dec 19 11:31:12.627: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 11:31:12.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:31:12.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:31:12.671
  STEP: Creating service test in namespace statefulset-9457 @ 12/19/23 11:31:12.677
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/19/23 11:31:12.689
  STEP: Creating stateful set ss in namespace statefulset-9457 @ 12/19/23 11:31:12.699
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9457 @ 12/19/23 11:31:12.71
  Dec 19 11:31:12.717: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 11:31:22.728: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/19/23 11:31:22.729
  Dec 19 11:31:22.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:31:23.021: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:31:23.021: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:31:23.021: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:31:23.029: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Dec 19 11:31:33.049: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:31:33.050: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 11:31:33.102: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999248s
  Dec 19 11:31:34.118: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.982702828s
  Dec 19 11:31:35.127: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.969314258s
  Dec 19 11:31:36.139: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.959411843s
  Dec 19 11:31:37.152: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.947630638s
  Dec 19 11:31:38.163: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.934785147s
  Dec 19 11:31:39.174: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.924001261s
  Dec 19 11:31:40.185: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.913332673s
  Dec 19 11:31:41.200: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.902460294s
  Dec 19 11:31:42.216: INFO: Verifying statefulset ss doesn't scale past 1 for another 885.047277ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9457 @ 12/19/23 11:31:43.217
  Dec 19 11:31:43.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:31:43.644: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:31:43.644: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:31:43.644: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:31:43.651: INFO: Found 1 stateful pods, waiting for 3
  Dec 19 11:31:53.673: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:31:53.673: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:31:53.673: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/19/23 11:31:53.673
  STEP: Scale down will halt with unhealthy stateful pod @ 12/19/23 11:31:53.673
  Dec 19 11:31:53.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:31:54.062: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:31:54.062: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:31:54.062: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:31:54.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:31:54.455: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:31:54.455: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:31:54.455: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:31:54.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:31:54.817: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:31:54.818: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:31:54.818: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:31:54.818: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 11:31:54.825: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  Dec 19 11:32:04.844: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:32:04.845: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:32:04.845: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:32:04.878: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999552s
  Dec 19 11:32:05.891: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.986830377s
  Dec 19 11:32:06.902: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.973747062s
  Dec 19 11:32:07.912: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.961939119s
  Dec 19 11:32:08.924: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.951988572s
  Dec 19 11:32:09.935: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.940843089s
  Dec 19 11:32:10.947: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.929660761s
  Dec 19 11:32:11.959: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.917598701s
  Dec 19 11:32:12.970: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.90588133s
  Dec 19 11:32:13.984: INFO: Verifying statefulset ss doesn't scale past 3 for another 893.995642ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9457 @ 12/19/23 11:32:14.985
  Dec 19 11:32:14.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:32:15.335: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:32:15.335: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:32:15.335: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:32:15.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:32:15.721: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:32:15.721: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:32:15.721: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:32:15.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-9457 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:32:16.027: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:32:16.027: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:32:16.027: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:32:16.027: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/19/23 11:32:26.066
  Dec 19 11:32:26.067: INFO: Deleting all statefulset in ns statefulset-9457
  Dec 19 11:32:26.074: INFO: Scaling statefulset ss to 0
  Dec 19 11:32:26.103: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:32:26.114: INFO: Deleting statefulset ss
  Dec 19 11:32:26.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9457" for this suite. @ 12/19/23 11:32:26.159
• [73.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 12/19/23 11:32:26.185
  Dec 19 11:32:26.185: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:32:26.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:32:26.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:32:26.239
  STEP: Creating configMap with name projected-configmap-test-volume-6d8251c4-34e3-43f2-851a-97516bdf4d23 @ 12/19/23 11:32:26.251
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:32:26.268
  STEP: Saw pod success @ 12/19/23 11:32:30.353
  Dec 19 11:32:30.362: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-configmaps-868c89dc-b9d2-48e5-a5e7-2e059ebd0777 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:32:30.387
  Dec 19 11:32:30.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8737" for this suite. @ 12/19/23 11:32:30.449
• [4.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 12/19/23 11:32:30.523
  Dec 19 11:32:30.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:32:30.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:32:30.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:32:30.57
  STEP: Creating a ResourceQuota @ 12/19/23 11:32:30.575
  STEP: Getting a ResourceQuota @ 12/19/23 11:32:30.585
  STEP: Updating a ResourceQuota @ 12/19/23 11:32:30.592
  STEP: Verifying a ResourceQuota was modified @ 12/19/23 11:32:30.604
  STEP: Deleting a ResourceQuota @ 12/19/23 11:32:30.616
  STEP: Verifying the deleted ResourceQuota @ 12/19/23 11:32:30.629
  Dec 19 11:32:30.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2709" for this suite. @ 12/19/23 11:32:30.648
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 12/19/23 11:32:30.668
  Dec 19 11:32:30.668: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 11:32:30.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:32:30.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:32:30.713
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/19/23 11:32:30.719
  STEP: When a replicaset with a matching selector is created @ 12/19/23 11:32:32.771
  STEP: Then the orphan pod is adopted @ 12/19/23 11:32:32.786
  STEP: When the matched label of one of its pods change @ 12/19/23 11:32:33.809
  Dec 19 11:32:33.819: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/19/23 11:32:33.846
  Dec 19 11:32:34.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-134" for this suite. @ 12/19/23 11:32:34.871
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 12/19/23 11:32:34.893
  Dec 19 11:32:34.893: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:32:34.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:32:34.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:32:34.94
  Dec 19 11:32:34.946: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/19/23 11:32:37.502
  Dec 19 11:32:37.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-6320 --namespace=crd-publish-openapi-6320 create -f -'
  Dec 19 11:32:38.684: INFO: stderr: ""
  Dec 19 11:32:38.684: INFO: stdout: "e2e-test-crd-publish-openapi-9237-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 19 11:32:38.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-6320 --namespace=crd-publish-openapi-6320 delete e2e-test-crd-publish-openapi-9237-crds test-cr'
  Dec 19 11:32:39.036: INFO: stderr: ""
  Dec 19 11:32:39.036: INFO: stdout: "e2e-test-crd-publish-openapi-9237-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Dec 19 11:32:39.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-6320 --namespace=crd-publish-openapi-6320 apply -f -'
  Dec 19 11:32:39.417: INFO: stderr: ""
  Dec 19 11:32:39.417: INFO: stdout: "e2e-test-crd-publish-openapi-9237-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 19 11:32:39.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-6320 --namespace=crd-publish-openapi-6320 delete e2e-test-crd-publish-openapi-9237-crds test-cr'
  Dec 19 11:32:39.654: INFO: stderr: ""
  Dec 19 11:32:39.654: INFO: stdout: "e2e-test-crd-publish-openapi-9237-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/19/23 11:32:39.654
  Dec 19 11:32:39.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=crd-publish-openapi-6320 explain e2e-test-crd-publish-openapi-9237-crds'
  Dec 19 11:32:40.028: INFO: stderr: ""
  Dec 19 11:32:40.028: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9237-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Dec 19 11:32:42.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6320" for this suite. @ 12/19/23 11:32:42.084
• [7.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 12/19/23 11:32:42.105
  Dec 19 11:32:42.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:32:42.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:32:42.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:32:42.168
  STEP: Setting up server cert @ 12/19/23 11:32:42.221
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:32:43.181
  STEP: Deploying the webhook pod @ 12/19/23 11:32:43.199
  STEP: Wait for the deployment to be ready @ 12/19/23 11:32:43.22
  Dec 19 11:32:43.241: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Dec 19 11:32:45.266: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:32:47.278: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:32:49.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:32:51.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:32:53.275: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 32, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/19/23 11:32:55.277
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:32:55.308
  Dec 19 11:32:56.309: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/19/23 11:32:56.326
  STEP: create a configmap that should be updated by the webhook @ 12/19/23 11:32:56.369
  Dec 19 11:32:56.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5334" for this suite. @ 12/19/23 11:32:56.532
  STEP: Destroying namespace "webhook-markers-6359" for this suite. @ 12/19/23 11:32:56.571
• [14.510 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/19/23 11:32:56.616
  Dec 19 11:32:56.616: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename subjectreview @ 12/19/23 11:32:56.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:32:56.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:32:56.665
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6189" @ 12/19/23 11:32:56.67
  Dec 19 11:32:56.678: INFO: saUsername: "system:serviceaccount:subjectreview-6189:e2e"
  Dec 19 11:32:56.678: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6189"}
  Dec 19 11:32:56.679: INFO: saUID: "d73232b4-4cce-4249-9634-492049c8d1e4"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6189:e2e" @ 12/19/23 11:32:56.68
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6189:e2e" @ 12/19/23 11:32:56.681
  Dec 19 11:32:56.686: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6189:e2e" api 'list' configmaps in "subjectreview-6189" namespace @ 12/19/23 11:32:56.686
  Dec 19 11:32:56.689: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6189:e2e" @ 12/19/23 11:32:56.689
  Dec 19 11:32:56.694: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Dec 19 11:32:56.695: INFO: LocalSubjectAccessReview has been verified
  Dec 19 11:32:56.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6189" for this suite. @ 12/19/23 11:32:56.707
• [0.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 12/19/23 11:32:56.731
  Dec 19 11:32:56.731: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:32:56.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:32:56.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:32:56.784
  Dec 19 11:33:18.968: INFO: Container started at 2023-12-19 11:32:57 +0000 UTC, pod became ready at 2023-12-19 11:33:17 +0000 UTC
  Dec 19 11:33:18.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4733" for this suite. @ 12/19/23 11:33:19.005
• [22.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/19/23 11:33:19.068
  Dec 19 11:33:19.068: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:33:19.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:33:19.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:33:19.111
  STEP: Creating secret with name s-test-opt-del-db2993a7-25d9-493d-9caf-1d3774163232 @ 12/19/23 11:33:19.137
  STEP: Creating secret with name s-test-opt-upd-88eb414a-e933-4d0e-a324-3288388c0a33 @ 12/19/23 11:33:19.146
  STEP: Creating the pod @ 12/19/23 11:33:19.154
  STEP: Deleting secret s-test-opt-del-db2993a7-25d9-493d-9caf-1d3774163232 @ 12/19/23 11:33:21.266
  STEP: Updating secret s-test-opt-upd-88eb414a-e933-4d0e-a324-3288388c0a33 @ 12/19/23 11:33:21.28
  STEP: Creating secret with name s-test-opt-create-f0af5a2e-3651-454a-b1f4-d757b103597c @ 12/19/23 11:33:21.293
  STEP: waiting to observe update in volume @ 12/19/23 11:33:21.305
  Dec 19 11:33:23.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3949" for this suite. @ 12/19/23 11:33:23.387
• [4.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/19/23 11:33:23.432
  Dec 19 11:33:23.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:33:23.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:33:23.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:33:23.497
  Dec 19 11:33:23.507: INFO: Creating deployment "test-recreate-deployment"
  Dec 19 11:33:23.524: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Dec 19 11:33:23.548: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  Dec 19 11:33:25.568: INFO: Waiting deployment "test-recreate-deployment" to complete
  Dec 19 11:33:25.576: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Dec 19 11:33:25.599: INFO: Updating deployment test-recreate-deployment
  Dec 19 11:33:25.600: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Dec 19 11:33:25.882: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c4041dd-6a76-4182-8f9a-d3820ed74638",
      ResourceVersion: (string) (len=5) "27869",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:33:25.929: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76321d33-5a32-46f6-b5e1-86dcd85829ab",
      ResourceVersion: (string) (len=5) "27868",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8c4041dd-6a76-4182-8f9a-d3820ed74638",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 63 34 30 34 31  64 64 2d 36 61 37 36 2d  |\"8c4041dd-6a76-|
              00000120  34 31 38 32 2d 38 66 39  61 2d 64 33 38 32 30 65  |4182-8f9a-d3820e|
              00000130  64 37 34 36 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d74638\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:33:25.942: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Dec 19 11:33:25.945: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb6d8ae8-f07b-4c05-994d-61e26b8b79d1",
      ResourceVersion: (string) (len=5) "27857",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8c4041dd-6a76-4182-8f9a-d3820ed74638",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 63 34 30 34 31  64 64 2d 36 61 37 36 2d  |\"8c4041dd-6a76-|
              00000120  34 31 38 32 2d 38 66 39  61 2d 64 33 38 32 30 65  |4182-8f9a-d3820e|
              00000130  64 37 34 36 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d74638\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:33:25.962: INFO: Pod "test-recreate-deployment-76fb77d45-q2czs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-q2czs",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-6992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27d0f9c4-f99e-4857-ac54-1826c2b48b1f",
      ResourceVersion: (string) (len=5) "27863",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "76321d33-5a32-46f6-b5e1-86dcd85829ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  33 32 31 64 33 33 2d 35  |d\":\"76321d33-5|
              00000090  61 33 32 2d 34 36 66 36  2d 62 35 65 31 2d 38 36  |a32-46f6-b5e1-86|
              000000a0  64 63 64 38 35 38 32 39  61 62 5c 22 7d 22 3a 7b  |dcd85829ab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kf52l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kf52l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ja4hooch7za7-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:33:25.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6992" for this suite. @ 12/19/23 11:33:25.982
• [2.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 12/19/23 11:33:26.002
  Dec 19 11:33:26.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 11:33:26.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:33:26.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:33:26.048
  STEP: Creating a cronjob @ 12/19/23 11:33:26.054
  STEP: creating @ 12/19/23 11:33:26.054
  STEP: getting @ 12/19/23 11:33:26.064
  STEP: listing @ 12/19/23 11:33:26.076
  STEP: watching @ 12/19/23 11:33:26.082
  Dec 19 11:33:26.082: INFO: starting watch
  STEP: cluster-wide listing @ 12/19/23 11:33:26.1
  STEP: cluster-wide watching @ 12/19/23 11:33:26.11
  Dec 19 11:33:26.110: INFO: starting watch
  STEP: patching @ 12/19/23 11:33:26.113
  STEP: updating @ 12/19/23 11:33:26.131
  Dec 19 11:33:26.153: INFO: waiting for watch events with expected annotations
  Dec 19 11:33:26.153: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/19/23 11:33:26.153
  STEP: updating /status @ 12/19/23 11:33:26.169
  STEP: get /status @ 12/19/23 11:33:26.187
  STEP: deleting @ 12/19/23 11:33:26.209
  STEP: deleting a collection @ 12/19/23 11:33:26.245
  Dec 19 11:33:26.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2671" for this suite. @ 12/19/23 11:33:26.278
• [0.291 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 12/19/23 11:33:26.296
  Dec 19 11:33:26.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:33:26.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:33:26.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:33:26.352
  STEP: Setting up server cert @ 12/19/23 11:33:26.402
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:33:27.651
  STEP: Deploying the webhook pod @ 12/19/23 11:33:27.671
  STEP: Wait for the deployment to be ready @ 12/19/23 11:33:27.723
  Dec 19 11:33:27.750: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:33:29.775
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:33:29.796
  Dec 19 11:33:30.797: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/19/23 11:33:30.814
  STEP: create a pod that should be denied by the webhook @ 12/19/23 11:33:30.861
  STEP: create a pod that causes the webhook to hang @ 12/19/23 11:33:30.897
  STEP: create a configmap that should be denied by the webhook @ 12/19/23 11:33:40.916
  STEP: create a configmap that should be admitted by the webhook @ 12/19/23 11:33:41.006
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/19/23 11:33:41.031
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/19/23 11:33:41.055
  STEP: create a namespace that bypass the webhook @ 12/19/23 11:33:41.069
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/19/23 11:33:41.105
  Dec 19 11:33:41.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1506" for this suite. @ 12/19/23 11:33:41.27
  STEP: Destroying namespace "webhook-markers-6462" for this suite. @ 12/19/23 11:33:41.286
  STEP: Destroying namespace "exempted-namespace-1899" for this suite. @ 12/19/23 11:33:41.301
• [15.032 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 12/19/23 11:33:41.335
  Dec 19 11:33:41.335: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename job @ 12/19/23 11:33:41.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:33:41.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:33:41.372
  STEP: Creating a job @ 12/19/23 11:33:41.379
  STEP: Ensuring active pods == parallelism @ 12/19/23 11:33:41.392
  STEP: delete a job @ 12/19/23 11:33:43.408
  STEP: deleting Job.batch foo in namespace job-495, will wait for the garbage collector to delete the pods @ 12/19/23 11:33:43.409
  Dec 19 11:33:43.492: INFO: Deleting Job.batch foo took: 24.327753ms
  Dec 19 11:33:43.593: INFO: Terminating Job.batch foo pods took: 101.103988ms
  STEP: Ensuring job was deleted @ 12/19/23 11:34:16.498
  Dec 19 11:34:16.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-495" for this suite. @ 12/19/23 11:34:16.527
• [35.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 12/19/23 11:34:16.549
  Dec 19 11:34:16.549: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 11:34:16.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:34:16.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:34:16.616
  STEP: apply creating a deployment @ 12/19/23 11:34:16.623
  Dec 19 11:34:16.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3280" for this suite. @ 12/19/23 11:34:16.666
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 12/19/23 11:34:16.684
  Dec 19 11:34:16.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:34:16.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:34:16.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:34:16.732
  STEP: Creating pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310 @ 12/19/23 11:34:16.737
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:34:18.776
  Dec 19 11:34:18.786: INFO: Initial restart count of pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c is 0
  Dec 19 11:34:18.792: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:20.804: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:22.817: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:24.830: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:26.840: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:28.849: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:30.857: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:32.868: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:34.879: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:36.890: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:38.898: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:38.898: INFO: Restart count of pod container-probe-8310/liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c is now 1 (20.111495602s elapsed)
  Dec 19 11:34:40.906: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:42.922: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:44.931: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:46.941: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:48.949: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:50.956: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:52.963: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:54.973: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:56.983: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:58.989: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:34:58.989: INFO: Restart count of pod container-probe-8310/liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c is now 2 (40.202919463s elapsed)
  Dec 19 11:35:01.003: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:03.013: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:05.023: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:07.032: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:09.042: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:11.051: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:13.061: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:15.073: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:17.086: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:19.098: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:19.098: INFO: Restart count of pod container-probe-8310/liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c is now 3 (1m0.31152899s elapsed)
  Dec 19 11:35:21.120: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:23.137: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:25.150: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:27.171: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:29.184: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:31.195: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:33.207: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:35.219: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:37.232: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:39.242: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:39.243: INFO: Restart count of pod container-probe-8310/liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c is now 4 (1m20.456464898s elapsed)
  Dec 19 11:35:41.253: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:43.263: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:45.276: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:47.285: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:49.298: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:51.307: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:53.316: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:55.330: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:57.340: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:35:59.351: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:01.361: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:03.370: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:05.380: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:07.393: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:09.401: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:11.411: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:13.422: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:15.431: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:17.440: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:19.478: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:21.488: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:23.496: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:25.506: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:27.518: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:29.528: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:31.540: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:33.555: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:35.564: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:37.577: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:39.600: INFO: Get pod liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c in namespace container-probe-8310
  Dec 19 11:36:39.601: INFO: Restart count of pod container-probe-8310/liveness-2f06bb93-0ffd-4ce3-b164-821ffc3a9c9c is now 5 (2m20.814415029s elapsed)
  Dec 19 11:36:39.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:36:39.613
  STEP: Destroying namespace "container-probe-8310" for this suite. @ 12/19/23 11:36:39.646
• [142.976 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 12/19/23 11:36:39.665
  Dec 19 11:36:39.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:36:39.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:36:39.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:36:39.726
  STEP: create the rc @ 12/19/23 11:36:39.741
  W1219 11:36:39.757076      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/19/23 11:36:45.839
  STEP: wait for the rc to be deleted @ 12/19/23 11:36:45.913
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/19/23 11:36:50.929
  STEP: Gathering metrics @ 12/19/23 11:37:20.968
  Dec 19 11:37:21.174: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:37:21.178: INFO: Deleting pod "simpletest.rc-26fks" in namespace "gc-3095"
  Dec 19 11:37:21.236: INFO: Deleting pod "simpletest.rc-26vwr" in namespace "gc-3095"
  Dec 19 11:37:21.292: INFO: Deleting pod "simpletest.rc-2c8kw" in namespace "gc-3095"
  Dec 19 11:37:21.374: INFO: Deleting pod "simpletest.rc-2fmwn" in namespace "gc-3095"
  Dec 19 11:37:21.443: INFO: Deleting pod "simpletest.rc-2fznr" in namespace "gc-3095"
  Dec 19 11:37:21.509: INFO: Deleting pod "simpletest.rc-2zj89" in namespace "gc-3095"
  Dec 19 11:37:21.576: INFO: Deleting pod "simpletest.rc-4c4c5" in namespace "gc-3095"
  Dec 19 11:37:21.623: INFO: Deleting pod "simpletest.rc-4zgwz" in namespace "gc-3095"
  Dec 19 11:37:21.692: INFO: Deleting pod "simpletest.rc-4zpdm" in namespace "gc-3095"
  Dec 19 11:37:21.750: INFO: Deleting pod "simpletest.rc-5j6ww" in namespace "gc-3095"
  Dec 19 11:37:21.913: INFO: Deleting pod "simpletest.rc-5j7d5" in namespace "gc-3095"
  Dec 19 11:37:21.992: INFO: Deleting pod "simpletest.rc-5l696" in namespace "gc-3095"
  Dec 19 11:37:22.081: INFO: Deleting pod "simpletest.rc-5q2mh" in namespace "gc-3095"
  Dec 19 11:37:22.130: INFO: Deleting pod "simpletest.rc-5wq9j" in namespace "gc-3095"
  Dec 19 11:37:22.175: INFO: Deleting pod "simpletest.rc-5zwd2" in namespace "gc-3095"
  Dec 19 11:37:22.214: INFO: Deleting pod "simpletest.rc-66klt" in namespace "gc-3095"
  Dec 19 11:37:22.275: INFO: Deleting pod "simpletest.rc-6cznh" in namespace "gc-3095"
  Dec 19 11:37:22.351: INFO: Deleting pod "simpletest.rc-76bjp" in namespace "gc-3095"
  Dec 19 11:37:22.439: INFO: Deleting pod "simpletest.rc-78lv4" in namespace "gc-3095"
  Dec 19 11:37:22.506: INFO: Deleting pod "simpletest.rc-79v5r" in namespace "gc-3095"
  Dec 19 11:37:22.543: INFO: Deleting pod "simpletest.rc-7qrfg" in namespace "gc-3095"
  Dec 19 11:37:22.612: INFO: Deleting pod "simpletest.rc-7s2qv" in namespace "gc-3095"
  Dec 19 11:37:22.699: INFO: Deleting pod "simpletest.rc-7s8rf" in namespace "gc-3095"
  Dec 19 11:37:22.767: INFO: Deleting pod "simpletest.rc-8mjgg" in namespace "gc-3095"
  Dec 19 11:37:22.853: INFO: Deleting pod "simpletest.rc-8rmhh" in namespace "gc-3095"
  Dec 19 11:37:22.913: INFO: Deleting pod "simpletest.rc-8tljz" in namespace "gc-3095"
  Dec 19 11:37:22.992: INFO: Deleting pod "simpletest.rc-8tx7h" in namespace "gc-3095"
  Dec 19 11:37:23.024: INFO: Deleting pod "simpletest.rc-8w489" in namespace "gc-3095"
  Dec 19 11:37:23.061: INFO: Deleting pod "simpletest.rc-8zzvr" in namespace "gc-3095"
  Dec 19 11:37:23.149: INFO: Deleting pod "simpletest.rc-9264r" in namespace "gc-3095"
  Dec 19 11:37:23.239: INFO: Deleting pod "simpletest.rc-928p6" in namespace "gc-3095"
  Dec 19 11:37:23.315: INFO: Deleting pod "simpletest.rc-b8mp4" in namespace "gc-3095"
  Dec 19 11:37:23.400: INFO: Deleting pod "simpletest.rc-b9kmm" in namespace "gc-3095"
  Dec 19 11:37:23.531: INFO: Deleting pod "simpletest.rc-c8tl5" in namespace "gc-3095"
  Dec 19 11:37:23.661: INFO: Deleting pod "simpletest.rc-c9dvj" in namespace "gc-3095"
  Dec 19 11:37:23.788: INFO: Deleting pod "simpletest.rc-cbrjp" in namespace "gc-3095"
  Dec 19 11:37:24.061: INFO: Deleting pod "simpletest.rc-cmvkk" in namespace "gc-3095"
  Dec 19 11:37:24.176: INFO: Deleting pod "simpletest.rc-crwtj" in namespace "gc-3095"
  Dec 19 11:37:24.275: INFO: Deleting pod "simpletest.rc-dgbst" in namespace "gc-3095"
  Dec 19 11:37:24.351: INFO: Deleting pod "simpletest.rc-dlwqp" in namespace "gc-3095"
  Dec 19 11:37:24.460: INFO: Deleting pod "simpletest.rc-dqz4x" in namespace "gc-3095"
  Dec 19 11:37:24.588: INFO: Deleting pod "simpletest.rc-dz4p4" in namespace "gc-3095"
  Dec 19 11:37:24.658: INFO: Deleting pod "simpletest.rc-f4sqt" in namespace "gc-3095"
  Dec 19 11:37:24.732: INFO: Deleting pod "simpletest.rc-g5jvm" in namespace "gc-3095"
  Dec 19 11:37:24.846: INFO: Deleting pod "simpletest.rc-gbbpt" in namespace "gc-3095"
  Dec 19 11:37:24.917: INFO: Deleting pod "simpletest.rc-gcnhs" in namespace "gc-3095"
  Dec 19 11:37:24.963: INFO: Deleting pod "simpletest.rc-glbsr" in namespace "gc-3095"
  Dec 19 11:37:25.049: INFO: Deleting pod "simpletest.rc-glm2k" in namespace "gc-3095"
  Dec 19 11:37:25.158: INFO: Deleting pod "simpletest.rc-h4v66" in namespace "gc-3095"
  Dec 19 11:37:25.248: INFO: Deleting pod "simpletest.rc-hlflh" in namespace "gc-3095"
  Dec 19 11:37:25.337: INFO: Deleting pod "simpletest.rc-hqjhs" in namespace "gc-3095"
  Dec 19 11:37:25.441: INFO: Deleting pod "simpletest.rc-j5xs7" in namespace "gc-3095"
  Dec 19 11:37:25.549: INFO: Deleting pod "simpletest.rc-jcg9l" in namespace "gc-3095"
  Dec 19 11:37:25.599: INFO: Deleting pod "simpletest.rc-jh8bf" in namespace "gc-3095"
  Dec 19 11:37:25.723: INFO: Deleting pod "simpletest.rc-k8kvx" in namespace "gc-3095"
  Dec 19 11:37:25.846: INFO: Deleting pod "simpletest.rc-kr7x7" in namespace "gc-3095"
  Dec 19 11:37:25.950: INFO: Deleting pod "simpletest.rc-l6tbd" in namespace "gc-3095"
  Dec 19 11:37:26.027: INFO: Deleting pod "simpletest.rc-lcg66" in namespace "gc-3095"
  Dec 19 11:37:26.081: INFO: Deleting pod "simpletest.rc-m2jdm" in namespace "gc-3095"
  Dec 19 11:37:26.157: INFO: Deleting pod "simpletest.rc-mprkq" in namespace "gc-3095"
  Dec 19 11:37:26.222: INFO: Deleting pod "simpletest.rc-mtslr" in namespace "gc-3095"
  Dec 19 11:37:26.334: INFO: Deleting pod "simpletest.rc-mxnvc" in namespace "gc-3095"
  Dec 19 11:37:26.453: INFO: Deleting pod "simpletest.rc-mzvnn" in namespace "gc-3095"
  Dec 19 11:37:26.556: INFO: Deleting pod "simpletest.rc-ngrpg" in namespace "gc-3095"
  Dec 19 11:37:26.605: INFO: Deleting pod "simpletest.rc-npkmq" in namespace "gc-3095"
  Dec 19 11:37:26.700: INFO: Deleting pod "simpletest.rc-nt86g" in namespace "gc-3095"
  Dec 19 11:37:26.761: INFO: Deleting pod "simpletest.rc-nwd2z" in namespace "gc-3095"
  Dec 19 11:37:26.861: INFO: Deleting pod "simpletest.rc-nxcsl" in namespace "gc-3095"
  Dec 19 11:37:26.939: INFO: Deleting pod "simpletest.rc-p7kbq" in namespace "gc-3095"
  Dec 19 11:37:26.995: INFO: Deleting pod "simpletest.rc-p7knp" in namespace "gc-3095"
  Dec 19 11:37:27.087: INFO: Deleting pod "simpletest.rc-pd6jq" in namespace "gc-3095"
  Dec 19 11:37:27.215: INFO: Deleting pod "simpletest.rc-ph6lg" in namespace "gc-3095"
  Dec 19 11:37:27.290: INFO: Deleting pod "simpletest.rc-pwvx2" in namespace "gc-3095"
  Dec 19 11:37:27.391: INFO: Deleting pod "simpletest.rc-pzds7" in namespace "gc-3095"
  Dec 19 11:37:27.723: INFO: Deleting pod "simpletest.rc-qtcpl" in namespace "gc-3095"
  Dec 19 11:37:27.905: INFO: Deleting pod "simpletest.rc-qv4x2" in namespace "gc-3095"
  Dec 19 11:37:28.195: INFO: Deleting pod "simpletest.rc-rnrqc" in namespace "gc-3095"
  Dec 19 11:37:28.331: INFO: Deleting pod "simpletest.rc-rvqxh" in namespace "gc-3095"
  Dec 19 11:37:28.429: INFO: Deleting pod "simpletest.rc-snp2g" in namespace "gc-3095"
  Dec 19 11:37:28.532: INFO: Deleting pod "simpletest.rc-srdg4" in namespace "gc-3095"
  Dec 19 11:37:28.575: INFO: Deleting pod "simpletest.rc-szd75" in namespace "gc-3095"
  Dec 19 11:37:28.628: INFO: Deleting pod "simpletest.rc-tb6g4" in namespace "gc-3095"
  Dec 19 11:37:28.703: INFO: Deleting pod "simpletest.rc-thnkz" in namespace "gc-3095"
  Dec 19 11:37:28.800: INFO: Deleting pod "simpletest.rc-thzpg" in namespace "gc-3095"
  Dec 19 11:37:28.894: INFO: Deleting pod "simpletest.rc-tpj5c" in namespace "gc-3095"
  Dec 19 11:37:28.959: INFO: Deleting pod "simpletest.rc-tpkjq" in namespace "gc-3095"
  Dec 19 11:37:29.040: INFO: Deleting pod "simpletest.rc-v8x2v" in namespace "gc-3095"
  Dec 19 11:37:29.148: INFO: Deleting pod "simpletest.rc-v9cdn" in namespace "gc-3095"
  Dec 19 11:37:29.208: INFO: Deleting pod "simpletest.rc-vthc2" in namespace "gc-3095"
  Dec 19 11:37:29.275: INFO: Deleting pod "simpletest.rc-wnhrj" in namespace "gc-3095"
  Dec 19 11:37:29.355: INFO: Deleting pod "simpletest.rc-xdtgf" in namespace "gc-3095"
  Dec 19 11:37:29.471: INFO: Deleting pod "simpletest.rc-xgrc8" in namespace "gc-3095"
  Dec 19 11:37:29.557: INFO: Deleting pod "simpletest.rc-xhrhk" in namespace "gc-3095"
  Dec 19 11:37:29.655: INFO: Deleting pod "simpletest.rc-xkqrk" in namespace "gc-3095"
  Dec 19 11:37:29.785: INFO: Deleting pod "simpletest.rc-xmj8w" in namespace "gc-3095"
  Dec 19 11:37:29.952: INFO: Deleting pod "simpletest.rc-xwrvf" in namespace "gc-3095"
  Dec 19 11:37:30.057: INFO: Deleting pod "simpletest.rc-xxft9" in namespace "gc-3095"
  Dec 19 11:37:30.165: INFO: Deleting pod "simpletest.rc-zhrwm" in namespace "gc-3095"
  Dec 19 11:37:30.275: INFO: Deleting pod "simpletest.rc-zkq94" in namespace "gc-3095"
  Dec 19 11:37:30.349: INFO: Deleting pod "simpletest.rc-zrfpg" in namespace "gc-3095"
  Dec 19 11:37:30.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3095" for this suite. @ 12/19/23 11:37:30.458
• [50.821 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 12/19/23 11:37:30.494
  Dec 19 11:37:30.494: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:37:30.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:30.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:30.616
  STEP: Creating Pod @ 12/19/23 11:37:30.621
  STEP: Reading file content from the nginx-container @ 12/19/23 11:37:32.675
  Dec 19 11:37:32.675: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8381 PodName:pod-sharedvolume-65f32069-87c8-44b4-b003-0745a90e5686 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:37:32.676: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:37:32.678: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:37:32.679: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-8381/pods/pod-sharedvolume-65f32069-87c8-44b4-b003-0745a90e5686/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Dec 19 11:37:32.802: INFO: Exec stderr: ""
  Dec 19 11:37:32.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8381" for this suite. @ 12/19/23 11:37:32.815
• [2.412 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 12/19/23 11:37:32.907
  Dec 19 11:37:32.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 11:37:32.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:32.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:32.981
  Dec 19 11:37:33.020: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 11:38:33.073: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/19/23 11:38:33.084
  Dec 19 11:38:33.084: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/19/23 11:38:33.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:33.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:33.153
  STEP: Finding an available node @ 12/19/23 11:38:33.164
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/19/23 11:38:33.164
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/19/23 11:38:35.21
  Dec 19 11:38:35.231: INFO: found a healthy node: ja4hooch7za7-3
  Dec 19 11:38:41.394: INFO: pods created so far: [1 1 1]
  Dec 19 11:38:41.395: INFO: length of pods created so far: 3
  Dec 19 11:38:43.430: INFO: pods created so far: [2 2 1]
  Dec 19 11:38:50.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:38:50.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3027" for this suite. @ 12/19/23 11:38:50.63
  STEP: Destroying namespace "sched-preemption-695" for this suite. @ 12/19/23 11:38:50.643
• [77.751 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 12/19/23 11:38:50.667
  Dec 19 11:38:50.667: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/19/23 11:38:50.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:50.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:50.715
  Dec 19 11:38:50.752: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 11:39:50.795: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 11:39:50.804: INFO: Starting informer...
  STEP: Starting pods... @ 12/19/23 11:39:50.805
  Dec 19 11:39:51.050: INFO: Pod1 is running on ja4hooch7za7-3. Tainting Node
  Dec 19 11:39:53.290: INFO: Pod2 is running on ja4hooch7za7-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/19/23 11:39:53.291
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 11:39:53.325
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/19/23 11:39:53.34
  Dec 19 11:39:59.063: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Dec 19 11:40:19.136: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Dec 19 11:40:19.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 11:40:19.205
  STEP: Destroying namespace "taint-multiple-pods-1869" for this suite. @ 12/19/23 11:40:19.218
• [88.571 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 12/19/23 11:40:19.24
  Dec 19 11:40:19.240: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:40:19.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:40:19.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:40:19.34
  STEP: Creating a pod to test downward api env vars @ 12/19/23 11:40:19.345
  STEP: Saw pod success @ 12/19/23 11:40:23.397
  Dec 19 11:40:23.405: INFO: Trying to get logs from node ja4hooch7za7-3 pod downward-api-f3261bc6-8fb6-4e2d-8556-bb06263eef5f container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:40:23.447
  Dec 19 11:40:23.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3066" for this suite. @ 12/19/23 11:40:23.519
• [4.295 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 12/19/23 11:40:23.541
  Dec 19 11:40:23.542: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 11:40:23.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:40:23.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:40:23.599
  STEP: Performing setup for networking test in namespace pod-network-test-4097 @ 12/19/23 11:40:23.606
  STEP: creating a selector @ 12/19/23 11:40:23.606
  STEP: Creating the service pods in kubernetes @ 12/19/23 11:40:23.606
  Dec 19 11:40:23.607: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 11:40:35.82
  Dec 19 11:40:37.855: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 11:40:37.856: INFO: Breadth first check of 10.233.64.83 on host 192.168.121.113...
  Dec 19 11:40:37.865: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.101:9080/dial?request=hostname&protocol=http&host=10.233.64.83&port=8083&tries=1'] Namespace:pod-network-test-4097 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:40:37.865: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:40:37.866: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:40:37.866: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4097/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.101%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.83%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 11:40:38.077: INFO: Waiting for responses: map[]
  Dec 19 11:40:38.077: INFO: reached 10.233.64.83 after 0/1 tries
  Dec 19 11:40:38.077: INFO: Breadth first check of 10.233.65.87 on host 192.168.121.72...
  Dec 19 11:40:38.085: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.101:9080/dial?request=hostname&protocol=http&host=10.233.65.87&port=8083&tries=1'] Namespace:pod-network-test-4097 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:40:38.085: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:40:38.087: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:40:38.088: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4097/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.101%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.87%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 11:40:38.204: INFO: Waiting for responses: map[]
  Dec 19 11:40:38.204: INFO: reached 10.233.65.87 after 0/1 tries
  Dec 19 11:40:38.204: INFO: Breadth first check of 10.233.66.100 on host 192.168.121.250...
  Dec 19 11:40:38.212: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.101:9080/dial?request=hostname&protocol=http&host=10.233.66.100&port=8083&tries=1'] Namespace:pod-network-test-4097 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:40:38.212: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:40:38.215: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:40:38.215: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4097/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.101%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.100%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 11:40:38.321: INFO: Waiting for responses: map[]
  Dec 19 11:40:38.321: INFO: reached 10.233.66.100 after 0/1 tries
  Dec 19 11:40:38.321: INFO: Going to retry 0 out of 3 pods....
  Dec 19 11:40:38.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4097" for this suite. @ 12/19/23 11:40:38.33
• [14.800 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 12/19/23 11:40:38.346
  Dec 19 11:40:38.346: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:40:38.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:40:38.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:40:38.391
  STEP: Creating configMap configmap-32/configmap-test-59071b23-44e1-47fc-8950-d2ef47667076 @ 12/19/23 11:40:38.396
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:40:38.405
  STEP: Saw pod success @ 12/19/23 11:40:40.442
  Dec 19 11:40:40.449: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-f7fe9599-5c6f-4cac-a11d-343cf5f1548b container env-test: <nil>
  STEP: delete the pod @ 12/19/23 11:40:40.467
  Dec 19 11:40:40.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-32" for this suite. @ 12/19/23 11:40:40.508
• [2.174 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/19/23 11:40:40.521
  Dec 19 11:40:40.521: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/19/23 11:40:40.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:40:40.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:40:40.554
  STEP: Creating 50 configmaps @ 12/19/23 11:40:40.559
  STEP: Creating RC which spawns configmap-volume pods @ 12/19/23 11:40:41.003
  Dec 19 11:40:41.037: INFO: Pod name wrapped-volume-race-65e9c19d-8a26-4d29-8ce1-4cd443d1a10d: Found 0 pods out of 5
  Dec 19 11:40:46.057: INFO: Pod name wrapped-volume-race-65e9c19d-8a26-4d29-8ce1-4cd443d1a10d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/19/23 11:40:46.057
  STEP: Creating RC which spawns configmap-volume pods @ 12/19/23 11:40:46.103
  Dec 19 11:40:46.139: INFO: Pod name wrapped-volume-race-5e93f9ce-34e5-43c6-9e73-2012794b6b6a: Found 0 pods out of 5
  Dec 19 11:40:51.158: INFO: Pod name wrapped-volume-race-5e93f9ce-34e5-43c6-9e73-2012794b6b6a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/19/23 11:40:51.159
  STEP: Creating RC which spawns configmap-volume pods @ 12/19/23 11:40:51.204
  Dec 19 11:40:51.238: INFO: Pod name wrapped-volume-race-b3eccb82-a41a-4c9a-90c6-1e67d3f4edff: Found 0 pods out of 5
  Dec 19 11:40:56.265: INFO: Pod name wrapped-volume-race-b3eccb82-a41a-4c9a-90c6-1e67d3f4edff: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/19/23 11:40:56.267
  Dec 19 11:40:56.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-b3eccb82-a41a-4c9a-90c6-1e67d3f4edff in namespace emptydir-wrapper-2722, will wait for the garbage collector to delete the pods @ 12/19/23 11:40:56.337
  Dec 19 11:40:56.413: INFO: Deleting ReplicationController wrapped-volume-race-b3eccb82-a41a-4c9a-90c6-1e67d3f4edff took: 17.47218ms
  Dec 19 11:40:56.613: INFO: Terminating ReplicationController wrapped-volume-race-b3eccb82-a41a-4c9a-90c6-1e67d3f4edff pods took: 200.286973ms
  STEP: deleting ReplicationController wrapped-volume-race-5e93f9ce-34e5-43c6-9e73-2012794b6b6a in namespace emptydir-wrapper-2722, will wait for the garbage collector to delete the pods @ 12/19/23 11:40:58.416
  Dec 19 11:40:58.499: INFO: Deleting ReplicationController wrapped-volume-race-5e93f9ce-34e5-43c6-9e73-2012794b6b6a took: 19.110766ms
  Dec 19 11:40:58.700: INFO: Terminating ReplicationController wrapped-volume-race-5e93f9ce-34e5-43c6-9e73-2012794b6b6a pods took: 200.964252ms
  STEP: deleting ReplicationController wrapped-volume-race-65e9c19d-8a26-4d29-8ce1-4cd443d1a10d in namespace emptydir-wrapper-2722, will wait for the garbage collector to delete the pods @ 12/19/23 11:41:00.502
  Dec 19 11:41:00.574: INFO: Deleting ReplicationController wrapped-volume-race-65e9c19d-8a26-4d29-8ce1-4cd443d1a10d took: 13.051263ms
  Dec 19 11:41:00.775: INFO: Terminating ReplicationController wrapped-volume-race-65e9c19d-8a26-4d29-8ce1-4cd443d1a10d pods took: 200.779877ms
  STEP: Cleaning up the configMaps @ 12/19/23 11:41:03.177
  STEP: Destroying namespace "emptydir-wrapper-2722" for this suite. @ 12/19/23 11:41:03.783
• [23.278 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 12/19/23 11:41:03.806
  Dec 19 11:41:03.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename disruption @ 12/19/23 11:41:03.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:41:03.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:41:03.857
  STEP: creating the pdb @ 12/19/23 11:41:03.863
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:41:03.869
  STEP: updating the pdb @ 12/19/23 11:41:05.883
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:41:05.898
  STEP: patching the pdb @ 12/19/23 11:41:07.91
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:41:07.939
  STEP: Waiting for the pdb to be deleted @ 12/19/23 11:41:09.96
  Dec 19 11:41:09.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4529" for this suite. @ 12/19/23 11:41:09.973
• [6.180 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 12/19/23 11:41:09.988
  Dec 19 11:41:09.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename security-context @ 12/19/23 11:41:09.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:41:10.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:41:10.021
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/19/23 11:41:10.026
  STEP: Saw pod success @ 12/19/23 11:41:14.068
  Dec 19 11:41:14.077: INFO: Trying to get logs from node ja4hooch7za7-3 pod security-context-5a5933ae-5980-4aca-8550-05f7053bfc46 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:41:14.095
  Dec 19 11:41:14.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-101" for this suite. @ 12/19/23 11:41:14.131
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/19/23 11:41:14.152
  Dec 19 11:41:14.152: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename containers @ 12/19/23 11:41:14.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:41:14.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:41:14.194
  STEP: Creating a pod to test override command @ 12/19/23 11:41:14.199
  STEP: Saw pod success @ 12/19/23 11:41:18.249
  Dec 19 11:41:18.255: INFO: Trying to get logs from node ja4hooch7za7-3 pod client-containers-7928f48e-7c14-4d8c-ae52-dc2326131155 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:41:18.274
  Dec 19 11:41:18.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6438" for this suite. @ 12/19/23 11:41:18.31
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 12/19/23 11:41:18.344
  Dec 19 11:41:18.344: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:41:18.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:41:18.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:41:18.386
  STEP: Creating configMap with name projected-configmap-test-volume-map-3b70543c-989e-4950-87de-53245e9185c8 @ 12/19/23 11:41:18.393
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:41:18.402
  STEP: Saw pod success @ 12/19/23 11:41:22.448
  Dec 19 11:41:22.456: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-projected-configmaps-523c779a-3fc1-4559-b6c4-60f27ccebc01 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:41:22.47
  Dec 19 11:41:22.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-579" for this suite. @ 12/19/23 11:41:22.518
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 12/19/23 11:41:22.537
  Dec 19 11:41:22.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:41:22.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:41:22.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:41:22.626
  STEP: Creating a test headless service @ 12/19/23 11:41:22.633
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9889 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9889;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9889 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9889;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9889.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9889.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9889.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9889.svc;check="$$(dig +notcp +noall +answer +search 118.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.118_udp@PTR;check="$$(dig +tcp +noall +answer +search 118.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.118_tcp@PTR;sleep 1; done
   @ 12/19/23 11:41:22.685
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9889 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9889;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9889 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9889;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9889.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9889.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9889.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9889.svc;check="$$(dig +notcp +noall +answer +search 118.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.118_udp@PTR;check="$$(dig +tcp +noall +answer +search 118.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.118_tcp@PTR;sleep 1; done
   @ 12/19/23 11:41:22.685
  STEP: creating a pod to probe DNS @ 12/19/23 11:41:22.686
  STEP: submitting the pod to kubernetes @ 12/19/23 11:41:22.686
  STEP: retrieving the pod @ 12/19/23 11:41:24.757
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:41:24.764
  Dec 19 11:41:24.776: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.785: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.801: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.810: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.817: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.825: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.832: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.839: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.880: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.888: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.895: INFO: Unable to read jessie_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.902: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.908: INFO: Unable to read jessie_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.916: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.928: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.937: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:24.966: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9889 wheezy_tcp@dns-test-service.dns-9889 wheezy_udp@dns-test-service.dns-9889.svc wheezy_tcp@dns-test-service.dns-9889.svc wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9889 jessie_tcp@dns-test-service.dns-9889 jessie_udp@dns-test-service.dns-9889.svc jessie_tcp@dns-test-service.dns-9889.svc jessie_udp@_http._tcp.dns-test-service.dns-9889.svc jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc]

  Dec 19 11:41:24.978: INFO: Pod client logs for webserver: 
  Dec 19 11:41:24.990: INFO: Pod client logs for querier: 
  Dec 19 11:41:25.003: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:41:30.020: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.029: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.038: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.046: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.055: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.065: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.074: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.086: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.144: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.152: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.159: INFO: Unable to read jessie_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.166: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.173: INFO: Unable to read jessie_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.180: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.187: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.196: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:30.223: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9889 wheezy_tcp@dns-test-service.dns-9889 wheezy_udp@dns-test-service.dns-9889.svc wheezy_tcp@dns-test-service.dns-9889.svc wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9889 jessie_tcp@dns-test-service.dns-9889 jessie_udp@dns-test-service.dns-9889.svc jessie_tcp@dns-test-service.dns-9889.svc jessie_udp@_http._tcp.dns-test-service.dns-9889.svc jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc]

  Dec 19 11:41:30.236: INFO: Pod client logs for webserver: 
  Dec 19 11:41:30.251: INFO: Pod client logs for querier: 
  Dec 19 11:41:30.266: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:41:35.016: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.027: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.046: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.064: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.085: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.098: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.108: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.121: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.191: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.199: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.207: INFO: Unable to read jessie_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.217: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.230: INFO: Unable to read jessie_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.239: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.247: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.253: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:35.283: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9889 wheezy_tcp@dns-test-service.dns-9889 wheezy_udp@dns-test-service.dns-9889.svc wheezy_tcp@dns-test-service.dns-9889.svc wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9889 jessie_tcp@dns-test-service.dns-9889 jessie_udp@dns-test-service.dns-9889.svc jessie_tcp@dns-test-service.dns-9889.svc jessie_udp@_http._tcp.dns-test-service.dns-9889.svc jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc]

  Dec 19 11:41:35.299: INFO: Pod client logs for webserver: 
  Dec 19 11:41:35.315: INFO: Pod client logs for querier: 
  Dec 19 11:41:35.334: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:41:40.013: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.023: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.033: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.056: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.066: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.076: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.086: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.096: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.138: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.154: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.167: INFO: Unable to read jessie_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.178: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.191: INFO: Unable to read jessie_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.205: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.216: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.226: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:40.265: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9889 wheezy_tcp@dns-test-service.dns-9889 wheezy_udp@dns-test-service.dns-9889.svc wheezy_tcp@dns-test-service.dns-9889.svc wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9889 jessie_tcp@dns-test-service.dns-9889 jessie_udp@dns-test-service.dns-9889.svc jessie_tcp@dns-test-service.dns-9889.svc jessie_udp@_http._tcp.dns-test-service.dns-9889.svc jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc]

  Dec 19 11:41:40.286: INFO: Pod client logs for webserver: 
  Dec 19 11:41:40.304: INFO: Pod client logs for querier: 
  Dec 19 11:41:40.408: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:41:45.026: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.035: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.047: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.055: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.065: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.074: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.083: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.095: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.165: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.175: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.187: INFO: Unable to read jessie_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.196: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.209: INFO: Unable to read jessie_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.227: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.234: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.242: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:45.304: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9889 wheezy_tcp@dns-test-service.dns-9889 wheezy_udp@dns-test-service.dns-9889.svc wheezy_tcp@dns-test-service.dns-9889.svc wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9889 jessie_tcp@dns-test-service.dns-9889 jessie_udp@dns-test-service.dns-9889.svc jessie_tcp@dns-test-service.dns-9889.svc jessie_udp@_http._tcp.dns-test-service.dns-9889.svc jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc]

  Dec 19 11:41:45.330: INFO: Pod client logs for webserver: 
  Dec 19 11:41:45.354: INFO: Pod client logs for querier: 
  Dec 19 11:41:45.371: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:41:50.018: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.024: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.032: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.040: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.045: INFO: Unable to read wheezy_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.052: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.059: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.065: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.096: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.105: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.112: INFO: Unable to read jessie_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.122: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.130: INFO: Unable to read jessie_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.137: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.144: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.153: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:50.182: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9889 wheezy_tcp@dns-test-service.dns-9889 wheezy_udp@dns-test-service.dns-9889.svc wheezy_tcp@dns-test-service.dns-9889.svc wheezy_udp@_http._tcp.dns-test-service.dns-9889.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9889.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9889 jessie_tcp@dns-test-service.dns-9889 jessie_udp@dns-test-service.dns-9889.svc jessie_tcp@dns-test-service.dns-9889.svc jessie_udp@_http._tcp.dns-test-service.dns-9889.svc jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc]

  Dec 19 11:41:50.195: INFO: Pod client logs for webserver: 
  Dec 19 11:41:50.205: INFO: Pod client logs for querier: 
  Dec 19 11:41:50.224: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:41:55.100: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.109: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.117: INFO: Unable to read jessie_udp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.124: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889 from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.138: INFO: Unable to read jessie_udp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.148: INFO: Unable to read jessie_tcp@dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.155: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.163: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:41:55.199: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9889 jessie_tcp@dns-test-service.dns-9889 jessie_udp@dns-test-service.dns-9889.svc jessie_tcp@dns-test-service.dns-9889.svc jessie_udp@_http._tcp.dns-test-service.dns-9889.svc jessie_tcp@_http._tcp.dns-test-service.dns-9889.svc]

  Dec 19 11:41:55.215: INFO: Pod client logs for webserver: 
  Dec 19 11:41:55.231: INFO: Pod client logs for querier: 
  Dec 19 11:41:55.250: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:42:00.099: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca: the server could not find the requested resource (get pods dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca)
  Dec 19 11:42:00.177: INFO: Lookups using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca failed for: [jessie_udp@dns-test-service]

  Dec 19 11:42:00.190: INFO: Pod client logs for webserver: 
  Dec 19 11:42:00.204: INFO: Pod client logs for querier: 
  Dec 19 11:42:00.218: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:42:05.186: INFO: DNS probes using dns-9889/dns-test-1e031a48-830a-48c5-83bd-8a9294f7d9ca succeeded

  Dec 19 11:42:05.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:42:05.204
  STEP: deleting the test service @ 12/19/23 11:42:05.268
  STEP: deleting the test headless service @ 12/19/23 11:42:05.327
  STEP: Destroying namespace "dns-9889" for this suite. @ 12/19/23 11:42:05.371
• [42.848 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 12/19/23 11:42:05.399
  Dec 19 11:42:05.399: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:42:05.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:05.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:05.471
  STEP: Creating configMap with name configmap-test-volume-c13203e4-676a-4eaf-960a-60aec5afc2dc @ 12/19/23 11:42:05.477
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:42:05.486
  STEP: Saw pod success @ 12/19/23 11:42:09.529
  Dec 19 11:42:09.536: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-04ce41f5-d6ca-4c92-963b-3911598620f0 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:42:09.55
  Dec 19 11:42:09.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8758" for this suite. @ 12/19/23 11:42:09.601
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 12/19/23 11:42:09.629
  Dec 19 11:42:09.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:42:09.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:09.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:09.678
  STEP: create the rc @ 12/19/23 11:42:09.701
  W1219 11:42:09.712798      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/19/23 11:42:15.798
  STEP: wait for the rc to be deleted @ 12/19/23 11:42:15.88
  Dec 19 11:42:17.166: INFO: 81 pods remaining
  Dec 19 11:42:17.166: INFO: 80 pods has nil DeletionTimestamp
  Dec 19 11:42:17.166: INFO: 
  Dec 19 11:42:18.132: INFO: 71 pods remaining
  Dec 19 11:42:18.132: INFO: 70 pods has nil DeletionTimestamp
  Dec 19 11:42:18.132: INFO: 
  Dec 19 11:42:18.990: INFO: 58 pods remaining
  Dec 19 11:42:18.990: INFO: 58 pods has nil DeletionTimestamp
  Dec 19 11:42:18.990: INFO: 
  Dec 19 11:42:20.206: INFO: 46 pods remaining
  Dec 19 11:42:20.206: INFO: 40 pods has nil DeletionTimestamp
  Dec 19 11:42:20.206: INFO: 
  Dec 19 11:42:20.971: INFO: 29 pods remaining
  Dec 19 11:42:20.971: INFO: 29 pods has nil DeletionTimestamp
  Dec 19 11:42:20.971: INFO: 
  Dec 19 11:42:21.992: INFO: 16 pods remaining
  Dec 19 11:42:21.993: INFO: 16 pods has nil DeletionTimestamp
  Dec 19 11:42:21.993: INFO: 
  Dec 19 11:42:22.904: INFO: 0 pods remaining
  Dec 19 11:42:22.904: INFO: 0 pods has nil DeletionTimestamp
  Dec 19 11:42:22.904: INFO: 
  STEP: Gathering metrics @ 12/19/23 11:42:24.058
  Dec 19 11:42:24.837: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:42:24.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6166" for this suite. @ 12/19/23 11:42:24.878
• [15.273 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 12/19/23 11:42:24.905
  Dec 19 11:42:24.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:42:24.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:24.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:24.987
  STEP: Setting up server cert @ 12/19/23 11:42:25.051
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:42:26.127
  STEP: Deploying the webhook pod @ 12/19/23 11:42:26.157
  STEP: Wait for the deployment to be ready @ 12/19/23 11:42:26.224
  Dec 19 11:42:26.265: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Dec 19 11:42:28.387: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:42:30.413: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 42, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/19/23 11:42:32.409
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:42:32.568
  Dec 19 11:42:33.569: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/19/23 11:42:33.613
  STEP: create a namespace for the webhook @ 12/19/23 11:42:33.657
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/19/23 11:42:33.743
  Dec 19 11:42:33.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4348" for this suite. @ 12/19/23 11:42:34.126
  STEP: Destroying namespace "webhook-markers-5227" for this suite. @ 12/19/23 11:42:34.168
  STEP: Destroying namespace "fail-closed-namespace-5643" for this suite. @ 12/19/23 11:42:34.192
• [9.316 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 12/19/23 11:42:34.222
  Dec 19 11:42:34.222: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:42:34.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:34.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:34.367
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/19/23 11:42:34.373
  STEP: Saw pod success @ 12/19/23 11:42:38.491
  Dec 19 11:42:38.498: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-20335cd0-d84d-4883-9381-7b09a152f528 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:42:38.521
  Dec 19 11:42:38.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4164" for this suite. @ 12/19/23 11:42:38.614
• [4.407 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 12/19/23 11:42:38.633
  Dec 19 11:42:38.633: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:42:38.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:38.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:38.685
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/19/23 11:42:38.692
  STEP: Saw pod success @ 12/19/23 11:42:42.786
  Dec 19 11:42:42.810: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-0bde0b8d-9e38-4bd2-8b58-86872f71f9e7 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:42:42.851
  Dec 19 11:42:42.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9439" for this suite. @ 12/19/23 11:42:42.94
• [4.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 12/19/23 11:42:42.974
  Dec 19 11:42:42.974: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 11:42:42.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:43.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:43.033
  STEP: Creating service test in namespace statefulset-3177 @ 12/19/23 11:42:43.04
  STEP: Creating a new StatefulSet @ 12/19/23 11:42:43.057
  Dec 19 11:42:43.091: INFO: Found 0 stateful pods, waiting for 3
  Dec 19 11:42:53.115: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:42:53.117: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:42:53.118: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:42:53.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-3177 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:42:53.585: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:42:53.585: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:42:53.585: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/19/23 11:43:03.631
  Dec 19 11:43:03.659: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/19/23 11:43:03.66
  STEP: Updating Pods in reverse ordinal order @ 12/19/23 11:43:13.709
  Dec 19 11:43:13.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-3177 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:43:14.063: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:43:14.063: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:43:14.063: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 12/19/23 11:43:24.12
  Dec 19 11:43:24.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-3177 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:43:24.459: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:43:24.459: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:43:24.459: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:43:34.554: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/19/23 11:43:44.602
  Dec 19 11:43:44.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-3177 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:43:44.952: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:43:44.952: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:43:44.952: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:43:55.003: INFO: Waiting for StatefulSet statefulset-3177/ss2 to complete update
  Dec 19 11:44:05.031: INFO: Deleting all statefulset in ns statefulset-3177
  Dec 19 11:44:05.037: INFO: Scaling statefulset ss2 to 0
  Dec 19 11:44:15.077: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:44:15.084: INFO: Deleting statefulset ss2
  Dec 19 11:44:15.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3177" for this suite. @ 12/19/23 11:44:15.118
• [92.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 12/19/23 11:44:15.146
  Dec 19 11:44:15.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:44:15.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:44:15.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:44:15.189
  Dec 19 11:44:15.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2458 create -f -'
  Dec 19 11:44:15.929: INFO: stderr: ""
  Dec 19 11:44:15.929: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Dec 19 11:44:15.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2458 create -f -'
  Dec 19 11:44:16.575: INFO: stderr: ""
  Dec 19 11:44:16.575: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/19/23 11:44:16.575
  Dec 19 11:44:17.584: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:44:17.584: INFO: Found 0 / 1
  Dec 19 11:44:18.590: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:44:18.590: INFO: Found 1 / 1
  Dec 19 11:44:18.591: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 19 11:44:18.603: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:44:18.603: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 11:44:18.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2458 describe pod agnhost-primary-4sjzq'
  Dec 19 11:44:18.793: INFO: stderr: ""
  Dec 19 11:44:18.793: INFO: stdout: "Name:             agnhost-primary-4sjzq\nNamespace:        kubectl-2458\nPriority:         0\nService Account:  default\nNode:             ja4hooch7za7-3/192.168.121.250\nStart Time:       Tue, 19 Dec 2023 11:44:15 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.150\nIPs:\n  IP:           10.233.66.150\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://33f5e3d436d666b763bb441dac9526384dd21ef9e66546f307491bc5f0b947dd\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 19 Dec 2023 11:44:16 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-9hc5h (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-9hc5h:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-2458/agnhost-primary-4sjzq to ja4hooch7za7-3\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Dec 19 11:44:18.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2458 describe rc agnhost-primary'
  Dec 19 11:44:18.985: INFO: stderr: ""
  Dec 19 11:44:18.985: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2458\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-4sjzq\n"
  Dec 19 11:44:18.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2458 describe service agnhost-primary'
  Dec 19 11:44:19.150: INFO: stderr: ""
  Dec 19 11:44:19.150: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2458\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.26.157\nIPs:               10.233.26.157\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.150:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Dec 19 11:44:19.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2458 describe node ja4hooch7za7-1'
  Dec 19 11:44:19.396: INFO: stderr: ""
  Dec 19 11:44:19.396: INFO: stdout: "Name:               ja4hooch7za7-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ja4hooch7za7-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"fe:fa:9b:79:90:75\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.113\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 19 Dec 2023 09:34:14 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ja4hooch7za7-1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 19 Dec 2023 11:44:09 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 19 Dec 2023 09:39:50 +0000   Tue, 19 Dec 2023 09:39:50 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Tue, 19 Dec 2023 11:42:08 +0000   Tue, 19 Dec 2023 09:39:23 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 19 Dec 2023 11:42:08 +0000   Tue, 19 Dec 2023 09:39:23 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 19 Dec 2023 11:42:08 +0000   Tue, 19 Dec 2023 09:39:23 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 19 Dec 2023 11:42:08 +0000   Tue, 19 Dec 2023 09:47:36 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.113\n  Hostname:    ja4hooch7za7-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8123984Ki\n  pods:               110\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3274320Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 7e22aa40610e4a689a365097b057f160\n  System UUID:                7e22aa40-610e-4a68-9a36-5097b057f160\n  Boot ID:                    125c7960-fae5-4225-a53f-6ffeb173ec68\n  Kernel Version:             6.2.0-39-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.28.2\n  Kubelet Version:            v1.28.4\n  Kube-Proxy Version:         v1.28.4\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-5dd5756b68-784pk                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     87m\n  kube-system                 kube-addon-manager-ja4hooch7za7-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         128m\n  kube-system                 kube-apiserver-ja4hooch7za7-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         130m\n  kube-system                 kube-controller-manager-ja4hooch7za7-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         130m\n  kube-system                 kube-flannel-ds-qkbv6                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         128m\n  kube-system                 kube-proxy-dc2t9                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         129m\n  kube-system                 kube-scheduler-ja4hooch7za7-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         130m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-a8700e759fda44f8-kdr9t    0 (0%)        0 (0%)      0 (0%)           0 (0%)         103m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                755m (47%)  0 (0%)\n  memory             170Mi (5%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Dec 19 11:44:19.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-2458 describe namespace kubectl-2458'
  Dec 19 11:44:19.613: INFO: stderr: ""
  Dec 19 11:44:19.613: INFO: stdout: "Name:         kubectl-2458\nLabels:       e2e-framework=kubectl\n              e2e-run=123e97da-6351-46b9-87b5-5e24e238f561\n              kubernetes.io/metadata.name=kubectl-2458\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Dec 19 11:44:19.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2458" for this suite. @ 12/19/23 11:44:19.624
• [4.493 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 12/19/23 11:44:19.64
  Dec 19 11:44:19.640: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:44:19.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:44:19.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:44:19.694
  STEP: starting the proxy server @ 12/19/23 11:44:19.7
  Dec 19 11:44:19.700: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-5927 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/19/23 11:44:19.82
  Dec 19 11:44:19.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5927" for this suite. @ 12/19/23 11:44:19.847
• [0.220 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 12/19/23 11:44:19.861
  Dec 19 11:44:19.861: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:44:19.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:44:19.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:44:19.899
  STEP: create the rc1 @ 12/19/23 11:44:19.919
  STEP: create the rc2 @ 12/19/23 11:44:19.929
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/19/23 11:44:25.978
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/19/23 11:44:29.668
  STEP: wait for the rc to be deleted @ 12/19/23 11:44:29.848
  Dec 19 11:44:34.994: INFO: 66 pods remaining
  Dec 19 11:44:34.994: INFO: 66 pods has nil DeletionTimestamp
  Dec 19 11:44:34.995: INFO: 
  STEP: Gathering metrics @ 12/19/23 11:44:39.896
  Dec 19 11:44:40.252: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:44:40.252: INFO: Deleting pod "simpletest-rc-to-be-deleted-24xkt" in namespace "gc-7179"
  Dec 19 11:44:40.365: INFO: Deleting pod "simpletest-rc-to-be-deleted-27l48" in namespace "gc-7179"
  Dec 19 11:44:40.478: INFO: Deleting pod "simpletest-rc-to-be-deleted-2f759" in namespace "gc-7179"
  Dec 19 11:44:40.574: INFO: Deleting pod "simpletest-rc-to-be-deleted-2j7g4" in namespace "gc-7179"
  Dec 19 11:44:40.685: INFO: Deleting pod "simpletest-rc-to-be-deleted-2mxbb" in namespace "gc-7179"
  Dec 19 11:44:40.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-2pt9q" in namespace "gc-7179"
  Dec 19 11:44:40.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xfk2" in namespace "gc-7179"
  Dec 19 11:44:41.007: INFO: Deleting pod "simpletest-rc-to-be-deleted-47r5d" in namespace "gc-7179"
  Dec 19 11:44:41.125: INFO: Deleting pod "simpletest-rc-to-be-deleted-4cxh4" in namespace "gc-7179"
  Dec 19 11:44:41.202: INFO: Deleting pod "simpletest-rc-to-be-deleted-4r6sj" in namespace "gc-7179"
  Dec 19 11:44:41.250: INFO: Deleting pod "simpletest-rc-to-be-deleted-4s2gt" in namespace "gc-7179"
  Dec 19 11:44:41.295: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vbgr" in namespace "gc-7179"
  Dec 19 11:44:41.349: INFO: Deleting pod "simpletest-rc-to-be-deleted-55bwq" in namespace "gc-7179"
  Dec 19 11:44:41.398: INFO: Deleting pod "simpletest-rc-to-be-deleted-5b6rb" in namespace "gc-7179"
  Dec 19 11:44:41.452: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bsgm" in namespace "gc-7179"
  Dec 19 11:44:41.558: INFO: Deleting pod "simpletest-rc-to-be-deleted-5j5nn" in namespace "gc-7179"
  Dec 19 11:44:41.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-66bxj" in namespace "gc-7179"
  Dec 19 11:44:41.839: INFO: Deleting pod "simpletest-rc-to-be-deleted-6bs7f" in namespace "gc-7179"
  Dec 19 11:44:41.930: INFO: Deleting pod "simpletest-rc-to-be-deleted-6fqlf" in namespace "gc-7179"
  Dec 19 11:44:42.042: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jrjg" in namespace "gc-7179"
  Dec 19 11:44:42.130: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pkjj" in namespace "gc-7179"
  Dec 19 11:44:42.189: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bxb8" in namespace "gc-7179"
  Dec 19 11:44:42.218: INFO: Deleting pod "simpletest-rc-to-be-deleted-7c6fz" in namespace "gc-7179"
  Dec 19 11:44:42.283: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jpx4" in namespace "gc-7179"
  Dec 19 11:44:42.335: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lt2k" in namespace "gc-7179"
  Dec 19 11:44:42.391: INFO: Deleting pod "simpletest-rc-to-be-deleted-7t5l6" in namespace "gc-7179"
  Dec 19 11:44:42.433: INFO: Deleting pod "simpletest-rc-to-be-deleted-8q492" in namespace "gc-7179"
  Dec 19 11:44:42.522: INFO: Deleting pod "simpletest-rc-to-be-deleted-94l6w" in namespace "gc-7179"
  Dec 19 11:44:42.648: INFO: Deleting pod "simpletest-rc-to-be-deleted-99swp" in namespace "gc-7179"
  Dec 19 11:44:42.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xscw" in namespace "gc-7179"
  Dec 19 11:44:42.779: INFO: Deleting pod "simpletest-rc-to-be-deleted-bbpph" in namespace "gc-7179"
  Dec 19 11:44:42.858: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwpb8" in namespace "gc-7179"
  Dec 19 11:44:42.958: INFO: Deleting pod "simpletest-rc-to-be-deleted-bz8f6" in namespace "gc-7179"
  Dec 19 11:44:43.014: INFO: Deleting pod "simpletest-rc-to-be-deleted-cmvjk" in namespace "gc-7179"
  Dec 19 11:44:43.111: INFO: Deleting pod "simpletest-rc-to-be-deleted-djcsn" in namespace "gc-7179"
  Dec 19 11:44:43.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-dr8fc" in namespace "gc-7179"
  Dec 19 11:44:43.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvcqn" in namespace "gc-7179"
  Dec 19 11:44:43.304: INFO: Deleting pod "simpletest-rc-to-be-deleted-fd8cj" in namespace "gc-7179"
  Dec 19 11:44:43.399: INFO: Deleting pod "simpletest-rc-to-be-deleted-ftzll" in namespace "gc-7179"
  Dec 19 11:44:43.583: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwdsg" in namespace "gc-7179"
  Dec 19 11:44:43.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4sdj" in namespace "gc-7179"
  Dec 19 11:44:44.030: INFO: Deleting pod "simpletest-rc-to-be-deleted-gdt2b" in namespace "gc-7179"
  Dec 19 11:44:44.077: INFO: Deleting pod "simpletest-rc-to-be-deleted-hfnlm" in namespace "gc-7179"
  Dec 19 11:44:44.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-hftvf" in namespace "gc-7179"
  Dec 19 11:44:44.217: INFO: Deleting pod "simpletest-rc-to-be-deleted-hmkj7" in namespace "gc-7179"
  Dec 19 11:44:44.254: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfrdl" in namespace "gc-7179"
  Dec 19 11:44:44.372: INFO: Deleting pod "simpletest-rc-to-be-deleted-jjrjm" in namespace "gc-7179"
  Dec 19 11:44:44.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-k2jvd" in namespace "gc-7179"
  Dec 19 11:44:44.628: INFO: Deleting pod "simpletest-rc-to-be-deleted-l2chv" in namespace "gc-7179"
  Dec 19 11:44:44.682: INFO: Deleting pod "simpletest-rc-to-be-deleted-l2dvq" in namespace "gc-7179"
  Dec 19 11:44:44.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7179" for this suite. @ 12/19/23 11:44:44.746
• [24.903 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 12/19/23 11:44:44.766
  Dec 19 11:44:44.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:44:44.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:44:44.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:44:44.832
  STEP: Setting up server cert @ 12/19/23 11:44:44.9
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:44:46.285
  STEP: Deploying the webhook pod @ 12/19/23 11:44:46.303
  STEP: Wait for the deployment to be ready @ 12/19/23 11:44:46.336
  Dec 19 11:44:46.357: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:44:48.409
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:44:48.43
  Dec 19 11:44:49.431: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 11:44:49.476: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/19/23 11:44:50.015
  STEP: Creating a custom resource that should be denied by the webhook @ 12/19/23 11:44:50.08
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/19/23 11:44:52.22
  STEP: Updating the custom resource with disallowed data should be denied @ 12/19/23 11:44:52.248
  STEP: Deleting the custom resource should be denied @ 12/19/23 11:44:52.296
  STEP: Remove the offending key and value from the custom resource data @ 12/19/23 11:44:52.339
  STEP: Deleting the updated custom resource should be successful @ 12/19/23 11:44:52.404
  Dec 19 11:44:52.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4523" for this suite. @ 12/19/23 11:44:53.497
  STEP: Destroying namespace "webhook-markers-435" for this suite. @ 12/19/23 11:44:53.512
• [8.770 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/19/23 11:44:53.54
  Dec 19 11:44:53.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename watch @ 12/19/23 11:44:53.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:44:53.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:44:53.588
  STEP: getting a starting resourceVersion @ 12/19/23 11:44:53.592
  STEP: starting a background goroutine to produce watch events @ 12/19/23 11:44:53.6
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/19/23 11:44:53.601
  Dec 19 11:44:56.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3843" for this suite. @ 12/19/23 11:44:56.355
• [2.871 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/19/23 11:44:56.412
  Dec 19 11:44:56.412: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 11:44:56.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:44:56.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:44:56.46
  STEP: create the container @ 12/19/23 11:44:56.464
  W1219 11:44:56.481340      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/19/23 11:44:56.482
  STEP: get the container status @ 12/19/23 11:44:59.526
  STEP: the container should be terminated @ 12/19/23 11:44:59.535
  STEP: the termination message should be set @ 12/19/23 11:44:59.535
  Dec 19 11:44:59.535: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/19/23 11:44:59.535
  Dec 19 11:44:59.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9525" for this suite. @ 12/19/23 11:44:59.607
• [3.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 12/19/23 11:44:59.652
  Dec 19 11:44:59.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:44:59.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:44:59.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:44:59.708
  STEP: Setting up server cert @ 12/19/23 11:44:59.76
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:45:00.649
  STEP: Deploying the webhook pod @ 12/19/23 11:45:00.661
  STEP: Wait for the deployment to be ready @ 12/19/23 11:45:00.686
  Dec 19 11:45:00.702: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:45:02.726
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:45:02.745
  Dec 19 11:45:03.746: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 11:45:03.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4468-crds.webhook.example.com via the AdmissionRegistration API @ 12/19/23 11:45:04.299
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/19/23 11:45:04.343
  Dec 19 11:45:06.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8724" for this suite. @ 12/19/23 11:45:07.311
  STEP: Destroying namespace "webhook-markers-6531" for this suite. @ 12/19/23 11:45:07.336
• [7.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 12/19/23 11:45:07.357
  Dec 19 11:45:07.357: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename job @ 12/19/23 11:45:07.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:45:07.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:45:07.413
  STEP: Creating a job @ 12/19/23 11:45:07.418
  STEP: Ensuring job reaches completions @ 12/19/23 11:45:07.429
  Dec 19 11:45:17.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1846" for this suite. @ 12/19/23 11:45:17.453
• [10.114 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 12/19/23 11:45:17.473
  Dec 19 11:45:17.473: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:45:17.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:45:17.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:45:17.526
  STEP: creating a ReplicationController @ 12/19/23 11:45:17.538
  STEP: waiting for RC to be added @ 12/19/23 11:45:17.551
  STEP: waiting for available Replicas @ 12/19/23 11:45:17.552
  STEP: patching ReplicationController @ 12/19/23 11:45:18.376
  STEP: waiting for RC to be modified @ 12/19/23 11:45:18.392
  STEP: patching ReplicationController status @ 12/19/23 11:45:18.393
  STEP: waiting for RC to be modified @ 12/19/23 11:45:18.407
  STEP: waiting for available Replicas @ 12/19/23 11:45:18.407
  STEP: fetching ReplicationController status @ 12/19/23 11:45:18.434
  STEP: patching ReplicationController scale @ 12/19/23 11:45:18.441
  STEP: waiting for RC to be modified @ 12/19/23 11:45:18.456
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/19/23 11:45:18.457
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/19/23 11:45:19.981
  STEP: updating ReplicationController status @ 12/19/23 11:45:19.988
  STEP: waiting for RC to be modified @ 12/19/23 11:45:20
  STEP: listing all ReplicationControllers @ 12/19/23 11:45:20.001
  STEP: checking that ReplicationController has expected values @ 12/19/23 11:45:20.009
  STEP: deleting ReplicationControllers by collection @ 12/19/23 11:45:20.01
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/19/23 11:45:20.024
  E1219 11:45:20.112651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:45:20.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-800" for this suite. @ 12/19/23 11:45:20.123
• [2.662 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 12/19/23 11:45:20.137
  Dec 19 11:45:20.137: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 11:45:20.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:45:20.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:45:20.175
  STEP: creating a collection of services @ 12/19/23 11:45:20.181
  Dec 19 11:45:20.181: INFO: Creating e2e-svc-a-tjrz2
  Dec 19 11:45:20.200: INFO: Creating e2e-svc-b-st72x
  Dec 19 11:45:20.223: INFO: Creating e2e-svc-c-llnf4
  STEP: deleting service collection @ 12/19/23 11:45:20.252
  Dec 19 11:45:20.327: INFO: Collection of services has been deleted
  Dec 19 11:45:20.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9615" for this suite. @ 12/19/23 11:45:20.337
• [0.214 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 12/19/23 11:45:20.352
  Dec 19 11:45:20.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:45:20.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:45:20.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:45:20.393
  STEP: Creating configMap that has name configmap-test-emptyKey-4967fba3-caeb-45d1-8759-f18aea615008 @ 12/19/23 11:45:20.397
  Dec 19 11:45:20.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2821" for this suite. @ 12/19/23 11:45:20.414
• [0.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/19/23 11:45:20.429
  Dec 19 11:45:20.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename init-container @ 12/19/23 11:45:20.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:45:20.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:45:20.475
  STEP: creating the pod @ 12/19/23 11:45:20.479
  Dec 19 11:45:20.480: INFO: PodSpec: initContainers in spec.initContainers
  E1219 11:45:21.113607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:22.114007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:23.114250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:24.114933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:45:24.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9041" for this suite. @ 12/19/23 11:45:24.509
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 12/19/23 11:45:24.535
  Dec 19 11:45:24.535: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:45:24.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:45:24.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:45:24.579
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/19/23 11:45:24.588
  E1219 11:45:25.116039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:26.116772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:27.117871      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:28.119155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:45:28.634
  Dec 19 11:45:28.642: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-9dea3bae-4219-49f1-ae55-58403c5b3da9 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:45:28.681
  Dec 19 11:45:28.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3284" for this suite. @ 12/19/23 11:45:28.719
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 12/19/23 11:45:28.735
  Dec 19 11:45:28.735: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 11:45:28.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:45:28.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:45:28.777
  Dec 19 11:45:28.817: INFO: Waiting up to 1m0s for all nodes to be ready
  E1219 11:45:29.130841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:30.121582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:31.122254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:32.122529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:33.123592      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:34.123475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:35.123866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:36.124248      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:37.124480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:38.124492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:39.125283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:40.125760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:41.125928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:42.126104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:43.127103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:44.127299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:45.127860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:46.128721      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:47.129536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:48.130428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:49.131057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:50.132048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:51.132292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:52.132904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:53.133835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:54.134896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:55.135537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:56.135857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:57.136541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:58.137083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:45:59.137503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:00.138637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:01.138829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:02.139036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:03.140090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:04.140282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:05.141079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:06.141893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:07.143006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:08.146255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:09.145511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:10.146091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:11.146758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:12.148287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:13.148725      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:14.149086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:15.149297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:16.150451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:17.150936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:18.152523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:19.152901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:20.153607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:21.154127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:22.154376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:23.154630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:24.154869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:25.155946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:26.155981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:27.156836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:28.156958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:46:28.880: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/19/23 11:46:28.888
  Dec 19 11:46:28.947: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 19 11:46:28.957: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 19 11:46:29.104: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 19 11:46:29.128: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  E1219 11:46:29.157771      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:46:29.300: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Dec 19 11:46:29.323: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/19/23 11:46:29.324
  E1219 11:46:30.157874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:31.159178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/19/23 11:46:31.374
  E1219 11:46:32.159603      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:33.159950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:34.162621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:35.163285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:46:35.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4240" for this suite. @ 12/19/23 11:46:35.63
• [66.907 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 12/19/23 11:46:35.654
  Dec 19 11:46:35.654: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 11:46:35.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:35.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:35.698
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 11:46:35.713
  E1219 11:46:36.163813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:37.164473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/19/23 11:46:37.755
  E1219 11:46:38.165222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:39.165608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/19/23 11:46:39.789
  E1219 11:46:40.166210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:41.167037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/19/23 11:46:41.841
  Dec 19 11:46:41.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1482" for this suite. @ 12/19/23 11:46:41.888
• [6.253 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 12/19/23 11:46:41.908
  Dec 19 11:46:41.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 11:46:41.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:41.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:42
  STEP: fetching the /apis discovery document @ 12/19/23 11:46:42.01
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/19/23 11:46:42.012
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/19/23 11:46:42.012
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/19/23 11:46:42.012
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/19/23 11:46:42.015
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/19/23 11:46:42.015
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/19/23 11:46:42.017
  Dec 19 11:46:42.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4179" for this suite. @ 12/19/23 11:46:42.035
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 12/19/23 11:46:42.069
  Dec 19 11:46:42.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:46:42.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:42.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:42.15
  STEP: Creating a ResourceQuota @ 12/19/23 11:46:42.164
  E1219 11:46:42.167648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting a ResourceQuota @ 12/19/23 11:46:42.179
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/19/23 11:46:42.189
  STEP: Patching the ResourceQuota @ 12/19/23 11:46:42.217
  STEP: Deleting a Collection of ResourceQuotas @ 12/19/23 11:46:42.236
  STEP: Verifying the deleted ResourceQuota @ 12/19/23 11:46:42.262
  Dec 19 11:46:42.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1300" for this suite. @ 12/19/23 11:46:42.291
• [0.242 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 12/19/23 11:46:42.314
  Dec 19 11:46:42.314: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:46:42.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:42.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:42.405
  STEP: Creating configMap configmap-3133/configmap-test-5a6bb5a3-324e-4072-ac6f-164190c0a8ae @ 12/19/23 11:46:42.412
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:46:42.482
  E1219 11:46:43.168083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:44.168757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:45.168643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:46.169007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:46:46.631
  Dec 19 11:46:46.641: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-configmaps-cf4e4aa6-2f60-4b57-aaf1-5b3d15cb7e5d container env-test: <nil>
  STEP: delete the pod @ 12/19/23 11:46:46.675
  Dec 19 11:46:46.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3133" for this suite. @ 12/19/23 11:46:46.735
• [4.442 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 12/19/23 11:46:46.759
  Dec 19 11:46:46.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:46:46.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:46.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:46.823
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:46:46.831
  E1219 11:46:47.169044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:48.169985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:49.170074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:50.170428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:46:50.879
  Dec 19 11:46:50.888: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-c7c62d43-3683-4a23-be21-a651faa7c559 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:46:50.905
  Dec 19 11:46:50.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7541" for this suite. @ 12/19/23 11:46:50.962
• [4.216 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/19/23 11:46:50.978
  Dec 19 11:46:50.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename conformance-tests @ 12/19/23 11:46:50.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:51.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:51.018
  STEP: Getting node addresses @ 12/19/23 11:46:51.025
  Dec 19 11:46:51.025: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Dec 19 11:46:51.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-578" for this suite. @ 12/19/23 11:46:51.05
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 12/19/23 11:46:51.076
  Dec 19 11:46:51.076: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:46:51.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:51.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:51.117
  STEP: Creating a test headless service @ 12/19/23 11:46:51.123
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2127.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2127.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/19/23 11:46:51.137
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2127.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2127.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/19/23 11:46:51.137
  STEP: creating a pod to probe DNS @ 12/19/23 11:46:51.138
  STEP: submitting the pod to kubernetes @ 12/19/23 11:46:51.138
  E1219 11:46:51.170708      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:52.170804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:53.171512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/19/23 11:46:53.197
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:46:53.215
  Dec 19 11:46:53.273: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-2127/dns-test-11125b5f-c917-497f-b6b9-cebe2f74b52a: the server could not find the requested resource (get pods dns-test-11125b5f-c917-497f-b6b9-cebe2f74b52a)
  Dec 19 11:46:53.273: INFO: Lookups using dns-2127/dns-test-11125b5f-c917-497f-b6b9-cebe2f74b52a failed for: [jessie_hosts@dns-querier-2]

  Dec 19 11:46:53.296: INFO: Pod client logs for webserver: 
  Dec 19 11:46:53.321: INFO: Pod client logs for querier: 
  Dec 19 11:46:53.337: INFO: Pod client logs for jessie-querier: 
  E1219 11:46:54.172564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:55.172486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:56.173704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:57.173992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:46:58.174915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:46:58.363: INFO: DNS probes using dns-2127/dns-test-11125b5f-c917-497f-b6b9-cebe2f74b52a succeeded

  Dec 19 11:46:58.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:46:58.373
  STEP: deleting the test headless service @ 12/19/23 11:46:58.439
  STEP: Destroying namespace "dns-2127" for this suite. @ 12/19/23 11:46:58.465
• [7.401 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/19/23 11:46:58.48
  Dec 19 11:46:58.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:46:58.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:46:58.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:46:58.521
  Dec 19 11:46:58.564: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/19/23 11:46:58.574
  Dec 19 11:46:58.586: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:46:58.586: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/19/23 11:46:58.587
  Dec 19 11:46:58.638: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:46:58.638: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  E1219 11:46:59.176453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:46:59.650: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:46:59.650: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  E1219 11:47:00.176367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:00.648: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:47:00.648: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/19/23 11:47:00.654
  Dec 19 11:47:00.699: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:47:00.699: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1219 11:47:01.177497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:01.715: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:47:01.715: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/19/23 11:47:01.715
  Dec 19 11:47:01.735: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:47:01.735: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  E1219 11:47:02.177902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:02.744: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:47:02.744: INFO: Node ja4hooch7za7-2 is running 0 daemon pod, expected 1
  E1219 11:47:03.178090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:03.757: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:47:03.758: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 11:47:03.773
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1174, will wait for the garbage collector to delete the pods @ 12/19/23 11:47:03.773
  Dec 19 11:47:03.853: INFO: Deleting DaemonSet.extensions daemon-set took: 14.155643ms
  Dec 19 11:47:03.955: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.648458ms
  E1219 11:47:04.179096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:04.962: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:47:04.962: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 11:47:04.969: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37000"},"items":null}

  Dec 19 11:47:04.973: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37000"},"items":null}

  Dec 19 11:47:05.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1174" for this suite. @ 12/19/23 11:47:05.029
• [6.561 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 12/19/23 11:47:05.043
  Dec 19 11:47:05.043: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:47:05.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:05.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:05.08
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 11:47:05.086
  Dec 19 11:47:05.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-7285 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E1219 11:47:05.179727      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:05.283: INFO: stderr: ""
  Dec 19 11:47:05.283: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/19/23 11:47:05.283
  Dec 19 11:47:05.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-7285 delete pods e2e-test-httpd-pod'
  E1219 11:47:06.180144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:06.925: INFO: stderr: ""
  Dec 19 11:47:06.925: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 19 11:47:06.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7285" for this suite. @ 12/19/23 11:47:06.935
• [1.903 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 12/19/23 11:47:06.951
  Dec 19 11:47:06.951: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 11:47:06.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:06.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:06.989
  STEP: Creating service test in namespace statefulset-4381 @ 12/19/23 11:47:06.995
  STEP: Creating stateful set ss in namespace statefulset-4381 @ 12/19/23 11:47:07.005
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4381 @ 12/19/23 11:47:07.022
  Dec 19 11:47:07.033: INFO: Found 0 stateful pods, waiting for 1
  E1219 11:47:07.181401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:08.181794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:09.183132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:10.183028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:11.183245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:12.183274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:13.183571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:14.183712      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:15.183898      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:16.184143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:17.045: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/19/23 11:47:17.045
  Dec 19 11:47:17.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-4381 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1219 11:47:17.184459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:17.342: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:47:17.342: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:47:17.342: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:47:17.348: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1219 11:47:18.184979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:19.185165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:20.185358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:21.185577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:22.185818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:23.186013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:24.186549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:25.186832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:26.186812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:27.187047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:27.357: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:47:27.357: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 11:47:27.395: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Dec 19 11:47:27.395: INFO: ss-0  ja4hooch7za7-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:07 +0000 UTC  }]
  Dec 19 11:47:27.396: INFO: 
  Dec 19 11:47:27.396: INFO: StatefulSet ss has not reached scale 3, at 1
  E1219 11:47:28.187873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:28.413: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.981011663s
  E1219 11:47:29.188518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:29.426: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.969627394s
  E1219 11:47:30.188859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:30.446: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.955909515s
  E1219 11:47:31.188742      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:31.456: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.937172526s
  E1219 11:47:32.189427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:32.469: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.926686134s
  E1219 11:47:33.189284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:33.483: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.913766952s
  E1219 11:47:34.189665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:34.493: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.899996071s
  E1219 11:47:35.190085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:35.508: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.88941467s
  E1219 11:47:36.190039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:36.528: INFO: Verifying statefulset ss doesn't scale past 3 for another 874.612223ms
  E1219 11:47:37.190252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4381 @ 12/19/23 11:47:37.53
  Dec 19 11:47:37.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-4381 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:47:37.875: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:47:37.875: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:47:37.875: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:47:37.876: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-4381 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1219 11:47:38.190405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:38.198: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 19 11:47:38.198: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:47:38.198: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:47:38.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-4381 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:47:38.505: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 19 11:47:38.505: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:47:38.505: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:47:38.515: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E1219 11:47:39.190826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:40.190933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:41.191287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:42.191711      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:43.191854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:44.192315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:45.195434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:46.195667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:47.195648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:48.195857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:48.530: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:47:48.530: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:47:48.530: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/19/23 11:47:48.53
  Dec 19 11:47:48.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-4381 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:47:48.849: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:47:48.850: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:47:48.850: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:47:48.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-4381 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1219 11:47:49.196727      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:49.227: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:47:49.227: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:47:49.227: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:47:49.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=statefulset-4381 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:47:49.570: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:47:49.570: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:47:49.570: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:47:49.570: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 11:47:49.585: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1219 11:47:50.197530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:51.198356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:52.198631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:53.198663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:54.198923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:55.199216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:56.199384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:57.199589      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:58.200064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:47:59.200548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:47:59.618: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:47:59.618: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:47:59.618: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:47:59.666: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Dec 19 11:47:59.667: INFO: ss-0  ja4hooch7za7-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:07 +0000 UTC  }]
  Dec 19 11:47:59.668: INFO: ss-1  ja4hooch7za7-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:27 +0000 UTC  }]
  Dec 19 11:47:59.668: INFO: ss-2  ja4hooch7za7-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:27 +0000 UTC  }]
  Dec 19 11:47:59.669: INFO: 
  Dec 19 11:47:59.669: INFO: StatefulSet ss has not reached scale 0, at 3
  E1219 11:48:00.201643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:00.680: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Dec 19 11:48:00.680: INFO: ss-1  ja4hooch7za7-1  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:27 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:49 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:47:27 +0000 UTC  }]
  Dec 19 11:48:00.680: INFO: 
  Dec 19 11:48:00.681: INFO: StatefulSet ss has not reached scale 0, at 1
  E1219 11:48:01.202850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:01.688: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.972731128s
  E1219 11:48:02.203809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:02.697: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.964390636s
  E1219 11:48:03.204955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:03.704: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.956773726s
  E1219 11:48:04.205494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:04.713: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.948760954s
  E1219 11:48:05.205690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:05.720: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.940857338s
  E1219 11:48:06.206187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:06.727: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.933152346s
  E1219 11:48:07.206597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:07.736: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.925970913s
  E1219 11:48:08.207065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:08.744: INFO: Verifying statefulset ss doesn't scale past 0 for another 917.103757ms
  E1219 11:48:09.207406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4381 @ 12/19/23 11:48:09.745
  Dec 19 11:48:09.751: INFO: Scaling statefulset ss to 0
  Dec 19 11:48:09.772: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:48:09.779: INFO: Deleting all statefulset in ns statefulset-4381
  Dec 19 11:48:09.787: INFO: Scaling statefulset ss to 0
  Dec 19 11:48:09.813: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:48:09.820: INFO: Deleting statefulset ss
  Dec 19 11:48:09.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4381" for this suite. @ 12/19/23 11:48:09.856
• [62.919 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 12/19/23 11:48:09.87
  Dec 19 11:48:09.870: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:48:09.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:09.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:09.909
  STEP: Creating configMap with name cm-test-opt-del-8c903e8f-7920-4647-83df-8f4c5effa07e @ 12/19/23 11:48:09.922
  STEP: Creating configMap with name cm-test-opt-upd-39a7ef2b-b4b2-4858-b2bb-5df79b17152c @ 12/19/23 11:48:09.93
  STEP: Creating the pod @ 12/19/23 11:48:09.943
  E1219 11:48:10.207699      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:11.208078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-8c903e8f-7920-4647-83df-8f4c5effa07e @ 12/19/23 11:48:12.034
  STEP: Updating configmap cm-test-opt-upd-39a7ef2b-b4b2-4858-b2bb-5df79b17152c @ 12/19/23 11:48:12.046
  STEP: Creating configMap with name cm-test-opt-create-68166ab3-4877-4b4b-ac4b-41ed2746ab61 @ 12/19/23 11:48:12.056
  STEP: waiting to observe update in volume @ 12/19/23 11:48:12.064
  E1219 11:48:12.209118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:13.210247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:14.212421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:15.212615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:16.213184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:17.214830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:18.214964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:19.215389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:20.215859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:21.216529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:22.217351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:23.218441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:24.218852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:25.218966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:26.219303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:27.219532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:28.220954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:29.221319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:30.222730      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:31.223082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:32.224471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:33.225068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:34.225790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:35.225650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:36.225788      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:37.226336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:38.226384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:39.227337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:40.227325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:41.227717      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:42.227688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:43.228734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:44.228960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:45.229592      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:46.230258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:47.230282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:48.231414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:49.231544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:50.232029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:51.232175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:52.232351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:53.232873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:54.233819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:55.234217      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:56.234590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:57.235061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:58.235459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:59.236561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:00.244221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:01.241867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:02.242350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:03.243288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:04.244455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:05.245060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:06.246076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:07.246326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:08.247147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:09.247687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:10.248596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:11.248915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:12.249109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:13.249232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:14.249627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:15.250670      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:16.250965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:16.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4352" for this suite. @ 12/19/23 11:49:16.775
• [66.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 12/19/23 11:49:16.795
  Dec 19 11:49:16.796: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 11:49:16.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:16.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:16.848
  E1219 11:49:17.253513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:18.253116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:19.253477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:20.253704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:20.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8826" for this suite. @ 12/19/23 11:49:20.913
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 12/19/23 11:49:20.942
  Dec 19 11:49:20.942: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:49:20.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:20.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:20.986
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:49:20.991
  E1219 11:49:21.253900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:22.254167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:23.254251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:24.255028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:49:25.048
  Dec 19 11:49:25.057: INFO: Trying to get logs from node ja4hooch7za7-3 pod downwardapi-volume-1e16fb86-12dc-445f-8d35-f082fd208158 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:49:25.072
  Dec 19 11:49:25.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2400" for this suite. @ 12/19/23 11:49:25.122
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 12/19/23 11:49:25.142
  Dec 19 11:49:25.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:49:25.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:25.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:25.185
  STEP: Discovering how many secrets are in namespace by default @ 12/19/23 11:49:25.19
  E1219 11:49:25.255580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:26.256664      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:27.257058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:28.258016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:29.259642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/19/23 11:49:30.199
  E1219 11:49:30.259734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:31.260888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:32.261576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:33.262187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:34.263050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/19/23 11:49:35.207
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:49:35.218
  E1219 11:49:35.263765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:36.264832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 12/19/23 11:49:37.229
  STEP: Ensuring resource quota status captures secret creation @ 12/19/23 11:49:37.253
  E1219 11:49:37.265694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:38.266176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 12/19/23 11:49:39.26
  E1219 11:49:39.266860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 12/19/23 11:49:39.272
  E1219 11:49:40.267600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:41.269047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:41.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4446" for this suite. @ 12/19/23 11:49:41.295
• [16.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 12/19/23 11:49:41.318
  Dec 19 11:49:41.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:49:41.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:41.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:41.365
  Dec 19 11:49:41.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-6250 version'
  Dec 19 11:49:41.502: INFO: stderr: ""
  Dec 19 11:49:41.502: INFO: stdout: "Client Version: v1.28.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.4\n"
  Dec 19 11:49:41.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6250" for this suite. @ 12/19/23 11:49:41.511
• [0.202 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 12/19/23 11:49:41.52
  Dec 19 11:49:41.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:49:41.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:41.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:41.557
  E1219 11:49:42.268210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:43.269194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:43.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:49:43.632: INFO: Deleting pod "var-expansion-dbbba235-4511-4024-9c45-b0b66a54dc59" in namespace "var-expansion-4442"
  Dec 19 11:49:43.643: INFO: Wait up to 5m0s for pod "var-expansion-dbbba235-4511-4024-9c45-b0b66a54dc59" to be fully deleted
  E1219 11:49:44.270068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:45.270307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-4442" for this suite. @ 12/19/23 11:49:45.669
• [4.171 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 12/19/23 11:49:45.697
  Dec 19 11:49:45.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 11:49:45.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:45.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:45.758
  STEP: creating service in namespace services-8893 @ 12/19/23 11:49:45.763
  STEP: creating service affinity-nodeport-transition in namespace services-8893 @ 12/19/23 11:49:45.763
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8893 @ 12/19/23 11:49:45.8
  I1219 11:49:45.826660      13 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-8893, replica count: 3
  E1219 11:49:46.270921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:47.271671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:48.273704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1219 11:49:48.880013      13 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:49:48.910: INFO: Creating new exec pod
  E1219 11:49:49.273585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:50.274548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:51.275083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:51.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8893 exec execpod-affinity7rj6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1219 11:49:52.276194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:52.318: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Dec 19 11:49:52.318: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:49:52.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8893 exec execpod-affinity7rj6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.45.220 80'
  Dec 19 11:49:52.623: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.45.220 80\nConnection to 10.233.45.220 80 port [tcp/http] succeeded!\n"
  Dec 19 11:49:52.623: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:49:52.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8893 exec execpod-affinity7rj6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.250 30563'
  Dec 19 11:49:52.893: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.250 30563\nConnection to 192.168.121.250 30563 port [tcp/*] succeeded!\n"
  Dec 19 11:49:52.893: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:49:52.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8893 exec execpod-affinity7rj6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.113 30563'
  Dec 19 11:49:53.138: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.113 30563\nConnection to 192.168.121.113 30563 port [tcp/*] succeeded!\n"
  Dec 19 11:49:53.138: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:49:53.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8893 exec execpod-affinity7rj6v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.113:30563/ ; done'
  E1219 11:49:53.276214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:53.684: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n"
  Dec 19 11:49:53.685: INFO: stdout: "\naffinity-nodeport-transition-tcmsz\naffinity-nodeport-transition-cl6qx\naffinity-nodeport-transition-tcmsz\naffinity-nodeport-transition-tcmsz\naffinity-nodeport-transition-tcmsz\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-cl6qx\naffinity-nodeport-transition-tcmsz\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-cl6qx\naffinity-nodeport-transition-cl6qx\naffinity-nodeport-transition-cl6qx\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-cl6qx\naffinity-nodeport-transition-tcmsz"
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-tcmsz
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-cl6qx
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-tcmsz
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-tcmsz
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-tcmsz
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-cl6qx
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-tcmsz
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-cl6qx
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-cl6qx
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-cl6qx
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-cl6qx
  Dec 19 11:49:53.685: INFO: Received response from host: affinity-nodeport-transition-tcmsz
  Dec 19 11:49:53.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-8893 exec execpod-affinity7rj6v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.113:30563/ ; done'
  Dec 19 11:49:54.216: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.113:30563/\n"
  Dec 19 11:49:54.216: INFO: stdout: "\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll\naffinity-nodeport-transition-w8sll"
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.216: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.217: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.217: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.217: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.217: INFO: Received response from host: affinity-nodeport-transition-w8sll
  Dec 19 11:49:54.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Dec 19 11:49:54.225: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8893, will wait for the garbage collector to delete the pods @ 12/19/23 11:49:54.249
  E1219 11:49:54.277032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:54.319: INFO: Deleting ReplicationController affinity-nodeport-transition took: 13.628054ms
  Dec 19 11:49:54.419: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.374575ms
  E1219 11:49:55.278103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:56.278712      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:57.278935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8893" for this suite. @ 12/19/23 11:49:57.788
• [12.119 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 12/19/23 11:49:57.817
  Dec 19 11:49:57.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:49:57.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:57.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:57.864
  STEP: Setting up server cert @ 12/19/23 11:49:57.915
  E1219 11:49:58.279373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:49:58.873
  STEP: Deploying the webhook pod @ 12/19/23 11:49:58.891
  STEP: Wait for the deployment to be ready @ 12/19/23 11:49:58.911
  Dec 19 11:49:58.928: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1219 11:49:59.280317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:00.280792      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/19/23 11:50:00.947
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:50:00.969
  E1219 11:50:01.281308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:01.969: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/19/23 11:50:02.091
  STEP: Creating a configMap that should be mutated @ 12/19/23 11:50:02.119
  STEP: Deleting the collection of validation webhooks @ 12/19/23 11:50:02.184
  E1219 11:50:02.282078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that should not be mutated @ 12/19/23 11:50:02.315
  Dec 19 11:50:02.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6262" for this suite. @ 12/19/23 11:50:02.447
  STEP: Destroying namespace "webhook-markers-5843" for this suite. @ 12/19/23 11:50:02.469
• [4.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 12/19/23 11:50:02.498
  Dec 19 11:50:02.498: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:50:02.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:02.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:02.564
  STEP: Creating a test headless service @ 12/19/23 11:50:02.569
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 227.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.227_tcp@PTR;sleep 1; done
   @ 12/19/23 11:50:02.646
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6077.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 227.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.227_tcp@PTR;sleep 1; done
   @ 12/19/23 11:50:02.646
  STEP: creating a pod to probe DNS @ 12/19/23 11:50:02.646
  STEP: submitting the pod to kubernetes @ 12/19/23 11:50:02.647
  E1219 11:50:03.281847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:04.282317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/19/23 11:50:04.694
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:50:04.701
  Dec 19 11:50:04.714: INFO: Unable to read wheezy_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.723: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.732: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.740: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.784: INFO: Unable to read jessie_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.795: INFO: Unable to read jessie_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.802: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.809: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:04.836: INFO: Lookups using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b failed for: [wheezy_udp@dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_udp@dns-test-service.dns-6077.svc.cluster.local jessie_tcp@dns-test-service.dns-6077.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local]

  Dec 19 11:50:04.849: INFO: Pod client logs for webserver: 
  Dec 19 11:50:04.862: INFO: Pod client logs for querier: 
  Dec 19 11:50:04.884: INFO: Pod client logs for jessie-querier: 
  E1219 11:50:05.284664      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:06.284948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:07.285731      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:08.286314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:09.287227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:09.892: INFO: Unable to read wheezy_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:09.899: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:09.908: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:09.915: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:09.949: INFO: Unable to read jessie_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:09.958: INFO: Unable to read jessie_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:09.967: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:09.978: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:10.008: INFO: Lookups using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b failed for: [wheezy_udp@dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_udp@dns-test-service.dns-6077.svc.cluster.local jessie_tcp@dns-test-service.dns-6077.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local]

  Dec 19 11:50:10.025: INFO: Pod client logs for webserver: 
  Dec 19 11:50:10.040: INFO: Pod client logs for querier: 
  Dec 19 11:50:10.056: INFO: Pod client logs for jessie-querier: 
  E1219 11:50:10.288843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:11.288499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:12.288609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:13.289153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:14.289480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:14.897: INFO: Unable to read wheezy_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:14.905: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:14.915: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:14.927: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:14.971: INFO: Unable to read jessie_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:14.981: INFO: Unable to read jessie_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:14.998: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:15.009: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:15.042: INFO: Lookups using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b failed for: [wheezy_udp@dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_udp@dns-test-service.dns-6077.svc.cluster.local jessie_tcp@dns-test-service.dns-6077.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local]

  Dec 19 11:50:15.057: INFO: Pod client logs for webserver: 
  Dec 19 11:50:15.072: INFO: Pod client logs for querier: 
  Dec 19 11:50:15.090: INFO: Pod client logs for jessie-querier: 
  E1219 11:50:15.290533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:16.290951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:17.291702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:18.292322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:19.293191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:19.897: INFO: Unable to read wheezy_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:19.906: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:19.916: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:19.926: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:19.980: INFO: Unable to read jessie_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:19.993: INFO: Unable to read jessie_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:20.005: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:20.020: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:20.069: INFO: Lookups using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b failed for: [wheezy_udp@dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_udp@dns-test-service.dns-6077.svc.cluster.local jessie_tcp@dns-test-service.dns-6077.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local]

  Dec 19 11:50:20.088: INFO: Pod client logs for webserver: 
  Dec 19 11:50:20.107: INFO: Pod client logs for querier: 
  Dec 19 11:50:20.123: INFO: Pod client logs for jessie-querier: 
  E1219 11:50:20.293776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:21.294019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:22.294400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:23.295321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:24.296228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:24.894: INFO: Unable to read wheezy_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:24.905: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:24.914: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:24.922: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:24.966: INFO: Unable to read jessie_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:24.974: INFO: Unable to read jessie_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:24.984: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:24.992: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:25.031: INFO: Lookups using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b failed for: [wheezy_udp@dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_udp@dns-test-service.dns-6077.svc.cluster.local jessie_tcp@dns-test-service.dns-6077.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local]

  Dec 19 11:50:25.046: INFO: Pod client logs for webserver: 
  Dec 19 11:50:25.071: INFO: Pod client logs for querier: 
  Dec 19 11:50:25.092: INFO: Pod client logs for jessie-querier: 
  E1219 11:50:25.297126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:26.297254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:27.297473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:28.297536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:29.297651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:29.903: INFO: Unable to read wheezy_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:29.918: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:29.927: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:29.940: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:29.995: INFO: Unable to read jessie_udp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:30.009: INFO: Unable to read jessie_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:30.021: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:30.031: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:30.068: INFO: Lookups using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b failed for: [wheezy_udp@dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@dns-test-service.dns-6077.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_udp@dns-test-service.dns-6077.svc.cluster.local jessie_tcp@dns-test-service.dns-6077.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local]

  Dec 19 11:50:30.096: INFO: Pod client logs for webserver: 
  Dec 19 11:50:30.120: INFO: Pod client logs for querier: 
  Dec 19 11:50:30.141: INFO: Pod client logs for jessie-querier: 
  E1219 11:50:30.299340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:31.300684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:32.300679      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:33.300967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:34.301031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:34.958: INFO: Unable to read jessie_tcp@dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:34.964: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:34.970: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local from pod dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b: the server could not find the requested resource (get pods dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b)
  Dec 19 11:50:35.006: INFO: Lookups using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b failed for: [jessie_tcp@dns-test-service.dns-6077.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6077.svc.cluster.local]

  Dec 19 11:50:35.020: INFO: Pod client logs for webserver: 
  Dec 19 11:50:35.040: INFO: Pod client logs for querier: 
  Dec 19 11:50:35.077: INFO: Pod client logs for jessie-querier: 
  E1219 11:50:35.301886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:36.303220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:37.304033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:38.304739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:39.305683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:40.073: INFO: DNS probes using dns-6077/dns-test-6add8eeb-b860-4445-abf9-b3a5d6ae670b succeeded

  Dec 19 11:50:40.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 12/19/23 11:50:40.094
  STEP: deleting the test service @ 12/19/23 11:50:40.134
  STEP: deleting the test headless service @ 12/19/23 11:50:40.255
  E1219 11:50:40.306743      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-6077" for this suite. @ 12/19/23 11:50:40.338
• [37.866 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 12/19/23 11:50:40.369
  Dec 19 11:50:40.369: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:50:40.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:40.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:40.487
  STEP: Starting the proxy @ 12/19/23 11:50:40.492
  Dec 19 11:50:40.494: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=kubectl-8334 proxy --unix-socket=/tmp/kubectl-proxy-unix1307604487/test'
  STEP: retrieving proxy /api/ output @ 12/19/23 11:50:40.626
  Dec 19 11:50:40.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8334" for this suite. @ 12/19/23 11:50:40.645
• [0.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/19/23 11:50:40.676
  Dec 19 11:50:40.677: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:50:40.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:40.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:40.716
  Dec 19 11:50:40.745: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E1219 11:50:41.306990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:42.307222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:43.307890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:44.308412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:45.308911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:45.756: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 11:50:45.756
  Dec 19 11:50:45.756: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/19/23 11:50:45.785
  Dec 19 11:50:45.810: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2433",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01f8c28d-80c4-4160-8314-b6f68e487365",
      ResourceVersion: (string) (len=5) "38036",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838583445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838583445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:50:45.835: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Dec 19 11:50:45.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2433" for this suite. @ 12/19/23 11:50:45.85
• [5.192 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/19/23 11:50:45.869
  Dec 19 11:50:45.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename containers @ 12/19/23 11:50:45.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:45.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:45.915
  STEP: Creating a pod to test override arguments @ 12/19/23 11:50:45.921
  E1219 11:50:46.309412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:47.309523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:48.309778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:49.309948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:50:49.958
  Dec 19 11:50:49.963: INFO: Trying to get logs from node ja4hooch7za7-3 pod client-containers-89ce494f-ae3c-4e7c-94e0-6585f2152173 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:50:49.975
  Dec 19 11:50:50.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5194" for this suite. @ 12/19/23 11:50:50.014
• [4.155 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 12/19/23 11:50:50.027
  Dec 19 11:50:50.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:50:50.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:50.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:50.066
  STEP: create the deployment @ 12/19/23 11:50:50.07
  W1219 11:50:50.080059      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/19/23 11:50:50.08
  E1219 11:50:50.310929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 12/19/23 11:50:50.601
  STEP: wait for all rs to be garbage collected @ 12/19/23 11:50:50.615
  STEP: expected 0 pods, got 2 pods @ 12/19/23 11:50:50.686
  STEP: Gathering metrics @ 12/19/23 11:50:51.208
  E1219 11:50:51.311487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:51.423: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:50:51.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8234" for this suite. @ 12/19/23 11:50:51.474
• [1.513 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/19/23 11:50:51.54
  Dec 19 11:50:51.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:50:51.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:51.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:51.686
  STEP: Creating simple DaemonSet "daemon-set" @ 12/19/23 11:50:51.849
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 11:50:51.882
  Dec 19 11:50:51.903: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:50:51.903: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  E1219 11:50:52.312640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:52.920: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:50:52.921: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  E1219 11:50:53.312632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:53.931: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:50:53.931: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  E1219 11:50:54.313003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:54.921: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:50:54.921: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/19/23 11:50:54.93
  Dec 19 11:50:54.967: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:50:54.968: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  E1219 11:50:55.314047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:55.997: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:50:55.997: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  E1219 11:50:56.314594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:56.993: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 11:50:56.994: INFO: Node ja4hooch7za7-1 is running 0 daemon pod, expected 1
  E1219 11:50:57.315430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:57.992: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:50:57.993: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 11:50:58.001
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4872, will wait for the garbage collector to delete the pods @ 12/19/23 11:50:58.002
  Dec 19 11:50:58.085: INFO: Deleting DaemonSet.extensions daemon-set took: 21.101053ms
  Dec 19 11:50:58.186: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.012711ms
  E1219 11:50:58.315396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:59.315846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:00.316844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:00.698: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:51:00.698: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 11:51:00.705: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38236"},"items":null}

  Dec 19 11:51:00.711: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38236"},"items":null}

  Dec 19 11:51:00.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4872" for this suite. @ 12/19/23 11:51:00.773
• [9.261 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/19/23 11:51:00.807
  Dec 19 11:51:00.807: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename hostport @ 12/19/23 11:51:00.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:00.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:00.871
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/19/23 11:51:00.9
  E1219 11:51:01.317133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:02.317708      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.72 on the node which pod1 resides and expect scheduled @ 12/19/23 11:51:02.987
  E1219 11:51:03.329036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:04.319854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.72 but use UDP protocol on the node which pod2 resides @ 12/19/23 11:51:05.06
  E1219 11:51:05.330744      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:06.328084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:07.330229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:08.332822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/19/23 11:51:09.175
  Dec 19 11:51:09.175: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.72 http://127.0.0.1:54323/hostname] Namespace:hostport-949 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:51:09.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:51:09.179: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:51:09.179: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-949/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.72+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1219 11:51:09.333644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.72, port: 54323 @ 12/19/23 11:51:09.439
  Dec 19 11:51:09.440: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.72:54323/hostname] Namespace:hostport-949 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:51:09.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:51:09.443: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:51:09.444: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-949/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.72%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.72, port: 54323 UDP @ 12/19/23 11:51:09.558
  Dec 19 11:51:09.558: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.72 54323] Namespace:hostport-949 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:51:09.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:51:09.561: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:51:09.562: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-949/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.72+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1219 11:51:10.334288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:11.335073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:12.335399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:13.336315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:14.338577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:14.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-949" for this suite. @ 12/19/23 11:51:14.705
• [13.916 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 12/19/23 11:51:14.744
  Dec 19 11:51:14.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:51:14.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:14.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:14.789
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/19/23 11:51:14.798
  E1219 11:51:15.338865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:16.339047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:17.339575      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:18.340466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:51:18.853
  Dec 19 11:51:18.860: INFO: Trying to get logs from node ja4hooch7za7-3 pod pod-260cc21c-ef49-4ac6-b94a-07248e869d6f container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:51:18.874
  Dec 19 11:51:18.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5263" for this suite. @ 12/19/23 11:51:18.911
• [4.182 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/19/23 11:51:18.926
  Dec 19 11:51:18.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/19/23 11:51:18.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:18.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:18.975
  STEP: creating @ 12/19/23 11:51:18.982
  STEP: getting @ 12/19/23 11:51:19.023
  STEP: listing in namespace @ 12/19/23 11:51:19.036
  STEP: patching @ 12/19/23 11:51:19.042
  STEP: deleting @ 12/19/23 11:51:19.074
  Dec 19 11:51:19.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3381" for this suite. @ 12/19/23 11:51:19.104
• [0.190 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 12/19/23 11:51:19.118
  Dec 19 11:51:19.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename services @ 12/19/23 11:51:19.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:19.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:19.16
  STEP: creating service nodeport-test with type=NodePort in namespace services-31 @ 12/19/23 11:51:19.165
  STEP: creating replication controller nodeport-test in namespace services-31 @ 12/19/23 11:51:19.195
  I1219 11:51:19.214188      13 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-31, replica count: 2
  E1219 11:51:19.340889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:20.341136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:21.342270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1219 11:51:22.265632      13 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:51:22.266: INFO: Creating new exec pod
  E1219 11:51:22.342910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:23.343038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:24.343696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:25.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-31 exec execpodtk74f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E1219 11:51:25.343573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:25.634: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Dec 19 11:51:25.634: INFO: stdout: "nodeport-test-hjf59"
  Dec 19 11:51:25.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-31 exec execpodtk74f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.63 80'
  Dec 19 11:51:26.009: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.63 80\nConnection to 10.233.61.63 80 port [tcp/http] succeeded!\n"
  Dec 19 11:51:26.009: INFO: stdout: ""
  E1219 11:51:26.344582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:27.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-31 exec execpodtk74f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.63 80'
  Dec 19 11:51:27.304: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.63 80\nConnection to 10.233.61.63 80 port [tcp/http] succeeded!\n"
  Dec 19 11:51:27.304: INFO: stdout: "nodeport-test-hjf59"
  Dec 19 11:51:27.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-31 exec execpodtk74f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.113 30388'
  E1219 11:51:27.345574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:27.629: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.113 30388\nConnection to 192.168.121.113 30388 port [tcp/*] succeeded!\n"
  Dec 19 11:51:27.629: INFO: stdout: ""
  E1219 11:51:28.346331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:28.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-31 exec execpodtk74f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.113 30388'
  Dec 19 11:51:28.951: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.113 30388\nConnection to 192.168.121.113 30388 port [tcp/*] succeeded!\n"
  Dec 19 11:51:28.951: INFO: stdout: ""
  E1219 11:51:29.347218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:29.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-31 exec execpodtk74f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.113 30388'
  Dec 19 11:51:29.928: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.113 30388\nConnection to 192.168.121.113 30388 port [tcp/*] succeeded!\n"
  Dec 19 11:51:29.929: INFO: stdout: "nodeport-test-hjf59"
  Dec 19 11:51:29.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1768768543 --namespace=services-31 exec execpodtk74f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.72 30388'
  Dec 19 11:51:30.223: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.72 30388\nConnection to 192.168.121.72 30388 port [tcp/*] succeeded!\n"
  Dec 19 11:51:30.224: INFO: stdout: "nodeport-test-bgtr8"
  Dec 19 11:51:30.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-31" for this suite. @ 12/19/23 11:51:30.237
• [11.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 12/19/23 11:51:30.292
  Dec 19 11:51:30.292: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 11:51:30.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:30.344
  E1219 11:51:30.347566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:30.35
  Dec 19 11:51:30.355: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  Dec 19 11:51:30.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9066" for this suite. @ 12/19/23 11:51:30.977
• [0.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/19/23 11:51:31.012
  Dec 19 11:51:31.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename containers @ 12/19/23 11:51:31.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:31.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:31.061
  E1219 11:51:31.348349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:32.348596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:33.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5921" for this suite. @ 12/19/23 11:51:33.131
• [2.132 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 12/19/23 11:51:33.143
  Dec 19 11:51:33.143: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:51:33.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:33.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:33.189
  STEP: Setting up server cert @ 12/19/23 11:51:33.24
  E1219 11:51:33.349555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:51:34.067
  STEP: Deploying the webhook pod @ 12/19/23 11:51:34.087
  STEP: Wait for the deployment to be ready @ 12/19/23 11:51:34.122
  Dec 19 11:51:34.143: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1219 11:51:34.350076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:35.350336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/19/23 11:51:36.165
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:51:36.183
  E1219 11:51:36.350417      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:37.183: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 11:51:37.199: INFO: >>> kubeConfig: /tmp/kubeconfig-1768768543
  E1219 11:51:37.351302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6321-crds.webhook.example.com via the AdmissionRegistration API @ 12/19/23 11:51:37.729
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/19/23 11:51:37.78
  E1219 11:51:38.352180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:39.352549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:39.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1219 11:51:40.353580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-8184" for this suite. @ 12/19/23 11:51:40.664
  STEP: Destroying namespace "webhook-markers-4765" for this suite. @ 12/19/23 11:51:40.677
• [7.547 seconds]
------------------------------
SSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Dec 19 11:51:40.698: INFO: Running AfterSuite actions on node 1
  Dec 19 11:51:40.699: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.162 seconds]
------------------------------

Ran 380 of 7389 Specs in 6582.030 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h49m43.075413994s
Test Suite Passed
