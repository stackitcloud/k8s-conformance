  I0327 19:18:20.138090      22 e2e.go:117] Starting e2e run "0467a516-72b3-4db0-a236-cc970def17f2" on Ginkgo node 1
  Mar 27 19:18:20.203: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1711567099 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Mar 27 19:18:20.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:18:20.642: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Mar 27 19:18:20.814: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Mar 27 19:18:20.837: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'kube-flannel' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-arm' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-arm64' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-ppc64le' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-s390x' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'nodelocaldns' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'vsphere-cloud-controller-manager' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'vsphere-csi-node' (0 seconds elapsed)
  Mar 27 19:18:20.837: INFO: e2e test version: v1.28.6
  Mar 27 19:18:20.840: INFO: kube-apiserver version: v1.28.6
  Mar 27 19:18:20.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:18:20.851: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 03/27/24 19:18:21.478
  Mar 27 19:18:21.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:18:21.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:18:21.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:18:21.542
  STEP: Creating projection with secret that has name projected-secret-test-map-3fe85ad1-a0a1-4434-b186-5d1d895ac3d2 @ 03/27/24 19:18:21.551
  STEP: Creating a pod to test consume secrets @ 03/27/24 19:18:21.562
  STEP: Saw pod success @ 03/27/24 19:18:39.696
  Mar 27 19:18:39.706: INFO: Trying to get logs from node env1-test-worker-0 pod pod-projected-secrets-ddeb4520-dd25-4996-a692-d857a61a177d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 19:18:39.751
  Mar 27 19:18:39.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4816" for this suite. @ 03/27/24 19:18:39.871
• [18.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 03/27/24 19:18:39.896
  Mar 27 19:18:39.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replicaset @ 03/27/24 19:18:39.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:18:40.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:18:40.014
  Mar 27 19:18:40.065: INFO: Pod name sample-pod: Found 0 pods out of 1
  Mar 27 19:18:45.084: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/27/24 19:18:45.084
  STEP: Scaling up "test-rs" replicaset  @ 03/27/24 19:18:45.084
  Mar 27 19:18:45.114: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 03/27/24 19:18:45.115
  Mar 27 19:18:45.149: INFO: observed ReplicaSet test-rs in namespace replicaset-5185 with ReadyReplicas 1, AvailableReplicas 1
  Mar 27 19:18:45.206: INFO: observed ReplicaSet test-rs in namespace replicaset-5185 with ReadyReplicas 1, AvailableReplicas 1
  Mar 27 19:18:45.254: INFO: observed ReplicaSet test-rs in namespace replicaset-5185 with ReadyReplicas 1, AvailableReplicas 1
  Mar 27 19:18:45.326: INFO: observed ReplicaSet test-rs in namespace replicaset-5185 with ReadyReplicas 1, AvailableReplicas 1
  Mar 27 19:18:46.626: INFO: observed ReplicaSet test-rs in namespace replicaset-5185 with ReadyReplicas 2, AvailableReplicas 2
  Mar 27 19:18:47.420: INFO: observed Replicaset test-rs in namespace replicaset-5185 with ReadyReplicas 3 found true
  Mar 27 19:18:47.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5185" for this suite. @ 03/27/24 19:18:47.431
• [7.548 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 03/27/24 19:18:47.457
  Mar 27 19:18:47.457: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 19:18:47.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:18:47.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:18:47.503
  STEP: Creating service test in namespace statefulset-519 @ 03/27/24 19:18:47.509
  STEP: Creating a new StatefulSet @ 03/27/24 19:18:47.535
  Mar 27 19:18:47.559: INFO: Found 0 stateful pods, waiting for 3
  Mar 27 19:18:57.570: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 19:18:57.570: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 19:18:57.570: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 19:18:57.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-519 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 27 19:18:57.892: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 19:18:57.892: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 19:18:57.892: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 03/27/24 19:19:07.938
  Mar 27 19:19:07.976: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 03/27/24 19:19:07.976
  STEP: Updating Pods in reverse ordinal order @ 03/27/24 19:19:18.039
  Mar 27 19:19:18.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-519 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 27 19:19:18.377: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 27 19:19:18.378: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 19:19:18.378: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 19:19:28.439: INFO: Waiting for StatefulSet statefulset-519/ss2 to complete update
  STEP: Rolling back to a previous revision @ 03/27/24 19:19:38.466
  Mar 27 19:19:38.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-519 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 27 19:19:38.821: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 19:19:38.821: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 19:19:38.821: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 19:19:48.894: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 03/27/24 19:19:58.948
  Mar 27 19:19:58.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-519 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 27 19:19:59.247: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 27 19:19:59.247: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 19:19:59.247: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 19:20:09.324: INFO: Waiting for StatefulSet statefulset-519/ss2 to complete update
  Mar 27 19:20:19.352: INFO: Deleting all statefulset in ns statefulset-519
  Mar 27 19:20:19.361: INFO: Scaling statefulset ss2 to 0
  Mar 27 19:20:29.411: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 19:20:29.417: INFO: Deleting statefulset ss2
  Mar 27 19:20:29.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-519" for this suite. @ 03/27/24 19:20:29.456
• [102.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 03/27/24 19:20:29.478
  Mar 27 19:20:29.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename lease-test @ 03/27/24 19:20:29.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:29.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:29.545
  Mar 27 19:20:29.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9929" for this suite. @ 03/27/24 19:20:29.72
• [0.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 03/27/24 19:20:29.739
  Mar 27 19:20:29.739: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:20:29.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:29.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:29.78
  STEP: Creating configMap with name projected-configmap-test-volume-08d9a430-5d17-47ca-9044-ad6690014d32 @ 03/27/24 19:20:29.786
  STEP: Creating a pod to test consume configMaps @ 03/27/24 19:20:29.807
  STEP: Saw pod success @ 03/27/24 19:20:33.846
  Mar 27 19:20:33.858: INFO: Trying to get logs from node env1-test-worker-0 pod pod-projected-configmaps-9ad53652-94be-4f5c-a5ec-4ba90d854f79 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:20:33.901
  Mar 27 19:20:33.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3612" for this suite. @ 03/27/24 19:20:33.964
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 03/27/24 19:20:33.992
  Mar 27 19:20:33.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:20:33.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:34.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:34.045
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:20:34.052
  STEP: Saw pod success @ 03/27/24 19:20:38.12
  Mar 27 19:20:38.128: INFO: Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-bd6196fa-8662-4336-8458-fb26d3f5be73 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:20:38.148
  Mar 27 19:20:38.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1327" for this suite. @ 03/27/24 19:20:38.2
• [4.224 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 03/27/24 19:20:38.217
  Mar 27 19:20:38.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename namespaces @ 03/27/24 19:20:38.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:38.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:38.269
  STEP: Read namespace status @ 03/27/24 19:20:38.277
  Mar 27 19:20:38.294: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 03/27/24 19:20:38.294
  Mar 27 19:20:38.320: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 03/27/24 19:20:38.32
  Mar 27 19:20:38.360: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Mar 27 19:20:38.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7679" for this suite. @ 03/27/24 19:20:38.383
• [0.180 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 03/27/24 19:20:38.398
  Mar 27 19:20:38.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 19:20:38.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:38.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:38.45
  STEP: validating api versions @ 03/27/24 19:20:38.458
  Mar 27 19:20:38.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-9474 api-versions'
  Mar 27 19:20:38.628: INFO: stderr: ""
  Mar 27 19:20:38.628: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncns.vmware.com/v1alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nmonitoring.coreos.com/v1\nmonitoring.coreos.com/v1alpha1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\nvelero.io/v1\nvelero.io/v2alpha1\n"
  Mar 27 19:20:38.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9474" for this suite. @ 03/27/24 19:20:38.645
• [0.264 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 03/27/24 19:20:38.663
  Mar 27 19:20:38.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubelet-test @ 03/27/24 19:20:38.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:38.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:38.721
  Mar 27 19:20:40.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9075" for this suite. @ 03/27/24 19:20:40.832
• [2.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 03/27/24 19:20:40.848
  Mar 27 19:20:40.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename namespaces @ 03/27/24 19:20:40.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:40.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:40.906
  STEP: creating a Namespace @ 03/27/24 19:20:40.914
  STEP: patching the Namespace @ 03/27/24 19:20:41.002
  STEP: get the Namespace and ensuring it has the label @ 03/27/24 19:20:41.016
  Mar 27 19:20:41.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6440" for this suite. @ 03/27/24 19:20:41.041
  STEP: Destroying namespace "nspatchtest-5311ca57-f4cf-429b-aa7f-24fd44eb4ec1-6444" for this suite. @ 03/27/24 19:20:41.058
• [0.226 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 03/27/24 19:20:41.077
  Mar 27 19:20:41.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 19:20:41.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:20:41.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:20:41.133
  STEP: Creating pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543 @ 03/27/24 19:20:41.139
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 19:20:57.274
  Mar 27 19:20:57.284: INFO: Initial restart count of pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 is 0
  Mar 27 19:20:57.295: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:20:59.304: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:01.316: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:03.328: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:05.336: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:07.346: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:09.358: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:11.370: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:13.380: INFO: Get pod liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 in namespace container-probe-543
  Mar 27 19:21:13.380: INFO: Restart count of pod container-probe-543/liveness-e7fa22ea-a1d3-43bb-af56-a58cec2d4e53 is now 1 (16.096060715s elapsed)
  Mar 27 19:21:13.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 19:21:13.398
  STEP: Destroying namespace "container-probe-543" for this suite. @ 03/27/24 19:21:13.433
• [32.394 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 03/27/24 19:21:13.472
  Mar 27 19:21:13.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 19:21:13.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:13.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:13.586
  Mar 27 19:21:15.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:21:15.699: INFO: Deleting pod "var-expansion-41ef7aed-ec36-48b3-bfb1-f25eac396cd2" in namespace "var-expansion-3329"
  Mar 27 19:21:15.729: INFO: Wait up to 5m0s for pod "var-expansion-41ef7aed-ec36-48b3-bfb1-f25eac396cd2" to be fully deleted
  STEP: Destroying namespace "var-expansion-3329" for this suite. @ 03/27/24 19:21:17.76
• [4.306 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 03/27/24 19:21:17.778
  Mar 27 19:21:17.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename field-validation @ 03/27/24 19:21:17.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:17.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:17.826
  Mar 27 19:21:17.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  W0327 19:21:25.461248      22 warnings.go:70] unknown field "alpha"
  W0327 19:21:25.461293      22 warnings.go:70] unknown field "beta"
  W0327 19:21:25.461305      22 warnings.go:70] unknown field "delta"
  W0327 19:21:25.461317      22 warnings.go:70] unknown field "epsilon"
  W0327 19:21:25.461335      22 warnings.go:70] unknown field "gamma"
  Mar 27 19:21:26.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4230" for this suite. @ 03/27/24 19:21:26.1
• [8.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 03/27/24 19:21:26.122
  Mar 27 19:21:26.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename discovery @ 03/27/24 19:21:26.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:26.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:26.179
  STEP: Setting up server cert @ 03/27/24 19:21:26.203
  STEP: Requesting APIResourceList from "/api/v1" @ 03/27/24 19:21:28.104
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 03/27/24 19:21:28.107
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 03/27/24 19:21:28.109
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 03/27/24 19:21:28.111
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 03/27/24 19:21:28.113
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 03/27/24 19:21:28.115
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 03/27/24 19:21:28.117
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 03/27/24 19:21:28.119
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 03/27/24 19:21:28.121
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 03/27/24 19:21:28.123
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 03/27/24 19:21:28.125
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 03/27/24 19:21:28.128
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 03/27/24 19:21:28.132
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 03/27/24 19:21:28.135
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 03/27/24 19:21:28.137
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 03/27/24 19:21:28.141
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 03/27/24 19:21:28.143
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 03/27/24 19:21:28.145
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 03/27/24 19:21:28.148
  Mar 27 19:21:28.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8674" for this suite. @ 03/27/24 19:21:28.164
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 03/27/24 19:21:28.183
  Mar 27 19:21:28.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-runtime @ 03/27/24 19:21:28.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:28.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:28.229
  STEP: create the container @ 03/27/24 19:21:28.234
  W0327 19:21:28.254397      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/27/24 19:21:28.254
  STEP: get the container status @ 03/27/24 19:21:31.287
  STEP: the container should be terminated @ 03/27/24 19:21:31.298
  STEP: the termination message should be set @ 03/27/24 19:21:31.298
  Mar 27 19:21:31.298: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 03/27/24 19:21:31.298
  Mar 27 19:21:31.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9555" for this suite. @ 03/27/24 19:21:31.393
• [3.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 03/27/24 19:21:31.421
  Mar 27 19:21:31.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename deployment @ 03/27/24 19:21:31.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:31.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:31.481
  Mar 27 19:21:31.487: INFO: Creating deployment "webserver-deployment"
  Mar 27 19:21:31.511: INFO: Waiting for observed generation 1
  Mar 27 19:21:33.538: INFO: Waiting for all required pods to come up
  Mar 27 19:21:33.547: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 03/27/24 19:21:33.547
  Mar 27 19:21:35.582: INFO: Waiting for deployment "webserver-deployment" to complete
  Mar 27 19:21:35.596: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Mar 27 19:21:35.621: INFO: Updating deployment webserver-deployment
  Mar 27 19:21:35.622: INFO: Waiting for observed generation 2
  Mar 27 19:21:37.650: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Mar 27 19:21:37.657: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Mar 27 19:21:37.665: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Mar 27 19:21:37.686: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Mar 27 19:21:37.686: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Mar 27 19:21:37.697: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Mar 27 19:21:37.710: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Mar 27 19:21:37.710: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Mar 27 19:21:37.731: INFO: Updating deployment webserver-deployment
  Mar 27 19:21:37.731: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Mar 27 19:21:37.751: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Mar 27 19:21:37.760: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Mar 27 19:21:39.805: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30121403-7b08-4778-84bd-c4fc64c7b7e6",
      ResourceVersion: (string) (len=9) "210758546",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      UnavailableReplicas: (int32) 23,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 27 19:21:39.832: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
      ResourceVersion: (string) (len=9) "210758458",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "30121403-7b08-4778-84bd-c4fc64c7b7e6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 30 31 32 31 34  30 33 2d 37 62 30 38 2d  |\"30121403-7b08-|
              00000120  34 37 37 38 2d 38 34 62  64 2d 63 34 66 63 36 34  |4778-84bd-c4fc64|
              00000130  63 37 62 37 65 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c7b7e6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 19:21:39.836: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Mar 27 19:21:39.836: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
      ResourceVersion: (string) (len=9) "210758545",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "30121403-7b08-4778-84bd-c4fc64c7b7e6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 30 31 32 31 34  30 33 2d 37 62 30 38 2d  |\"30121403-7b08-|
              00000120  34 37 37 38 2d 38 34 62  64 2d 63 34 66 63 36 34  |4778-84bd-c4fc64|
              00000130  63 37 62 37 65 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c7b7e6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 19:21:39.855: INFO: Pod "webserver-deployment-557759b7c7-2rklj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2rklj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a61efe34-812e-4115-8c35-78723666bdc0",
      ResourceVersion: (string) (len=9) "210758461",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-68wgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-68wgh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.860: INFO: Pod "webserver-deployment-557759b7c7-2vtxr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2vtxr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dce20188-e128-4942-8aa0-1545ae1be4e0",
      ResourceVersion: (string) (len=9) "210758460",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-btz4r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-btz4r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.864: INFO: Pod "webserver-deployment-557759b7c7-2z5wf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2z5wf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c30a5a26-76b1-4d39-848a-41d4b3b09732",
      ResourceVersion: (string) (len=9) "210758543",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 31 35 5c 22 7d  |10.233.69.115\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p7gzk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p7gzk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1b73414934b0f1566c5c0726118b3171a59da97ec9a31e998e82513ddddd9b44",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.867: INFO: Pod "webserver-deployment-557759b7c7-4m8jw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4m8jw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c02500f-75ee-4fe9-a9f4-326997a07e67",
      ResourceVersion: (string) (len=9) "210758288",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 30 37 5c 22 7d  |10.233.69.107\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hzgjg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hzgjg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164092,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3b6fa070203e2f17b033664756cebd176bbcdfdd1a4165a02367a49128b5034e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.874: INFO: Pod "webserver-deployment-557759b7c7-542rc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-542rc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e43ff0f-950f-40ef-9b6b-c284be66fe8b",
      ResourceVersion: (string) (len=9) "210758278",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  37 2e 31 38 33 5c 22 7d  |10.233.67.183\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ds7n5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ds7n5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.67.183",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.183"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164092,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0c77c59cfed09d12fa6d8fc992ec942b044ad326ccdd523408ede5b36fa08f71",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.877: INFO: Pod "webserver-deployment-557759b7c7-bplbx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bplbx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c138120c-8a26-43c8-aa7a-fb7337d21f7a",
      ResourceVersion: (string) (len=9) "210758410",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g79zq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g79zq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.881: INFO: Pod "webserver-deployment-557759b7c7-btcxn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-btcxn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72a35e89-b0d7-49b8-b134-bc541f633ae8",
      ResourceVersion: (string) (len=9) "210758295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  38 2e 31 32 33 5c 22 7d  |10.233.68.123\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2pfwz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2pfwz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.68.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164093,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://045cabcadf6b049a558c7720c6d09b731a974617d92e3d629b91ec3a9aa51b2e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.885: INFO: Pod "webserver-deployment-557759b7c7-f75c2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f75c2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75548d6b-7650-40af-ad9f-f5d09aed4bfc",
      ResourceVersion: (string) (len=9) "210758495",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9q5d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9q5d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.888: INFO: Pod "webserver-deployment-557759b7c7-jb9ld" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jb9ld",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92c1abda-f50d-46bf-be16-fea66aaf143f",
      ResourceVersion: (string) (len=9) "210758492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79lb6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79lb6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.891: INFO: Pod "webserver-deployment-557759b7c7-ktpvg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ktpvg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "166d97af-b17c-4011-9240-a9ce8b8ec61f",
      ResourceVersion: (string) (len=9) "210758298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  38 2e 31 32 32 5c 22 7d  |10.233.68.122\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpjvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpjvz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.68.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164093,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fcf2fbe62bf9aa42bb0fdf3b8e4ff3f37f08f510fa8083bb8f4bec00f9521650",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.894: INFO: Pod "webserver-deployment-557759b7c7-l4dh8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l4dh8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef8893e9-7bb5-4820-a071-87c1bd1bc390",
      ResourceVersion: (string) (len=9) "210758276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 30 38 5c 22 7d  |10.233.69.108\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jvrlq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jvrlq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164093,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3bf5770555aedc6b3386adab0f393c012bbbb6dabedc48e7e249914365442e5e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.900: INFO: Pod "webserver-deployment-557759b7c7-nwsq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nwsq6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b8e168f-1057-42a9-86e2-d9c5841f727b",
      ResourceVersion: (string) (len=9) "210758463",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v7m59",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v7m59",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.903: INFO: Pod "webserver-deployment-557759b7c7-q52b9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q52b9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "296b84ff-04c6-4653-b78e-1672b28e6151",
      ResourceVersion: (string) (len=9) "210758491",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7qrmk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7qrmk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.905: INFO: Pod "webserver-deployment-557759b7c7-qjbnz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qjbnz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8681891-b1a0-481a-b09c-fa3e9700a1d8",
      ResourceVersion: (string) (len=9) "210758269",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  38 2e 31 32 31 5c 22 7d  |10.233.68.121\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9hzbb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9hzbb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.68.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164092,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2591455a7bf79a4d1bdd156da8a006b391b502bd5c3fdc7ce3dc3c47c1798033",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.908: INFO: Pod "webserver-deployment-557759b7c7-rdjpx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rdjpx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c44cab9-664d-4f86-8005-a9dcbbc4294c",
      ResourceVersion: (string) (len=9) "210758484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s2gdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s2gdp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.912: INFO: Pod "webserver-deployment-557759b7c7-vx5l8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vx5l8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a1d7a87-022c-4501-aeb8-d321c07c9151",
      ResourceVersion: (string) (len=9) "210758449",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7fdx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7fdx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.915: INFO: Pod "webserver-deployment-557759b7c7-x4n6q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x4n6q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f470849a-131e-458b-b82c-7ab8b35c26fe",
      ResourceVersion: (string) (len=9) "210758279",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 30 39 5c 22 7d  |10.233.69.109\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xz8cc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xz8cc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164093,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ac74c986a525228b4baeaa5f67df7bc587ed8d077d38d9741e0304f22968f61c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.918: INFO: Pod "webserver-deployment-557759b7c7-xcczt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xcczt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9033be3e-f7e5-43e8-a321-11884547789e",
      ResourceVersion: (string) (len=9) "210758480",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f88gp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f88gp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.921: INFO: Pod "webserver-deployment-557759b7c7-zlckp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zlckp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a2ba8c8-2b0a-4977-9915-b6bc6b653db9",
      ResourceVersion: (string) (len=9) "210758540",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 31 33 5c 22 7d  |10.233.69.113\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zbs7j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zbs7j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a41408c850d7e76f4fd20f93327b25f8fc7238cec39a743bc2e87124ce951ca8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.924: INFO: Pod "webserver-deployment-557759b7c7-zntv8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zntv8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e42d13e4-999b-4150-b43a-1b4e4db2b30e",
      ResourceVersion: (string) (len=9) "210758285",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c78f4d07-8a28-4c40-a987-3b1cd1a09b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  38 66 34 64 30 37 2d 38  |d\":\"c78f4d07-8|
              00000090  61 32 38 2d 34 63 34 30  2d 61 39 38 37 2d 33 62  |a28-4c40-a987-3b|
              000000a0  31 63 64 31 61 30 39 62  32 62 5c 22 7d 22 3a 7b  |1cd1a09b2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 31 30 5c 22 7d  |10.233.69.110\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pw9dm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pw9dm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847164093,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0705a49e065263099eb361ab1f1832c864b02f62adb7184103de5753599266f9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.928: INFO: Pod "webserver-deployment-9b4f5bf69-8cj2w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8cj2w",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afcdd911-7276-4576-9c42-6b5180a1be57",
      ResourceVersion: (string) (len=9) "210758493",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 33 33 2e 36 39 2e 31  31 31 5c 22 7d 22 3a 7b  |233.69.111\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhjf7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhjf7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.930: INFO: Pod "webserver-deployment-9b4f5bf69-9fjk5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9fjk5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "397fbf88-7faa-4fc4-9818-1e0fff0fc6ed",
      ResourceVersion: (string) (len=9) "210758521",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 33 33 2e 36 38 2e 31  32 34 5c 22 7d 22 3a 7b  |233.68.124\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rh5wm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rh5wm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.68.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.934: INFO: Pod "webserver-deployment-9b4f5bf69-d9bz5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d9bz5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "743e0e7d-cd3d-46cb-b86a-7283b9a98c63",
      ResourceVersion: (string) (len=9) "210758474",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vss72",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vss72",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.937: INFO: Pod "webserver-deployment-9b4f5bf69-hdz4s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hdz4s",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb23b1cd-fc40-42ab-8f34-e3b27a62176d",
      ResourceVersion: (string) (len=9) "210758437",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tszw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tszw8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.940: INFO: Pod "webserver-deployment-9b4f5bf69-ktq94" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ktq94",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8777842e-78d9-419b-8086-43abb1c1a80f",
      ResourceVersion: (string) (len=9) "210758475",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fmr6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fmr6b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.944: INFO: Pod "webserver-deployment-9b4f5bf69-nzmlm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nzmlm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5b16fdc-3986-4f5f-89a2-b556333654a8",
      ResourceVersion: (string) (len=9) "210758486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5tvg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5tvg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.948: INFO: Pod "webserver-deployment-9b4f5bf69-pph4p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pph4p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09a2018f-f05f-43a4-b77c-ac92331782c2",
      ResourceVersion: (string) (len=9) "210758357",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-252pj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-252pj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164096,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.951: INFO: Pod "webserver-deployment-9b4f5bf69-q6wvf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-q6wvf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fe3a11e-9f68-4280-8e33-640036dc39a6",
      ResourceVersion: (string) (len=9) "210758469",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-btsc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-btsc2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.954: INFO: Pod "webserver-deployment-9b4f5bf69-vp6s2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vp6s2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4eba1bb7-39ce-470f-8744-b614c09cdab5",
      ResourceVersion: (string) (len=9) "210758502",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7sdqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7sdqq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.957: INFO: Pod "webserver-deployment-9b4f5bf69-wp9cj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wp9cj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cc3d445-90cb-4968-a3f8-cc91a0daa396",
      ResourceVersion: (string) (len=9) "210758356",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mgqf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mgqf4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164096,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.961: INFO: Pod "webserver-deployment-9b4f5bf69-x7gg8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-x7gg8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc03a6b7-268f-473b-a7ef-6cd4b9413842",
      ResourceVersion: (string) (len=9) "210758506",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 33 33 2e 36 37 2e 31  38 36 5c 22 7d 22 3a 7b  |233.67.186\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7xgmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7xgmc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.67.186",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.186"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.966: INFO: Pod "webserver-deployment-9b4f5bf69-xvcp5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xvcp5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9843023c-bd19-4ba8-a7d6-0cb037473d83",
      ResourceVersion: (string) (len=9) "210758497",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-222j8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-222j8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.971: INFO: Pod "webserver-deployment-9b4f5bf69-zl2nl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zl2nl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9880",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d88a1b42-6ba4-4871-a0fe-c657b082751b",
      ResourceVersion: (string) (len=9) "210758481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "bc4548b4-ce84-4d44-b782-43015b9bfa70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  34 35 34 38 62 34 2d 63  |d\":\"bc4548b4-c|
              00000090  65 38 34 2d 34 64 34 34  2d 62 37 38 32 2d 34 33  |e84-4d44-b782-43|
              000000a0  30 31 35 62 39 62 66 61  37 30 5c 22 7d 22 3a 7b  |015b9bfa70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ndt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ndt4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847164098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847164098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:21:39.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9880" for this suite. @ 03/27/24 19:21:39.991
• [8.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 03/27/24 19:21:40.012
  Mar 27 19:21:40.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename csistoragecapacity @ 03/27/24 19:21:40.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:40.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:40.061
  STEP: getting /apis @ 03/27/24 19:21:40.067
  STEP: getting /apis/storage.k8s.io @ 03/27/24 19:21:40.079
  STEP: getting /apis/storage.k8s.io/v1 @ 03/27/24 19:21:40.081
  STEP: creating @ 03/27/24 19:21:40.083
  STEP: watching @ 03/27/24 19:21:40.116
  Mar 27 19:21:40.116: INFO: starting watch
  STEP: getting @ 03/27/24 19:21:40.132
  STEP: listing in namespace @ 03/27/24 19:21:40.14
  STEP: listing across namespaces @ 03/27/24 19:21:40.147
  STEP: patching @ 03/27/24 19:21:40.153
  STEP: updating @ 03/27/24 19:21:40.199
  Mar 27 19:21:40.217: INFO: waiting for watch events with expected annotations in namespace
  Mar 27 19:21:40.217: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 03/27/24 19:21:40.218
  STEP: deleting a collection @ 03/27/24 19:21:40.267
  Mar 27 19:21:40.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3902" for this suite. @ 03/27/24 19:21:40.344
• [0.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 03/27/24 19:21:40.394
  Mar 27 19:21:40.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 19:21:40.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:40.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:40.456
  STEP: Counting existing ResourceQuota @ 03/27/24 19:21:40.462
  STEP: Creating a ResourceQuota @ 03/27/24 19:21:45.475
  STEP: Ensuring resource quota status is calculated @ 03/27/24 19:21:45.499
  STEP: Creating a ReplicationController @ 03/27/24 19:21:47.507
  STEP: Ensuring resource quota status captures replication controller creation @ 03/27/24 19:21:47.531
  STEP: Deleting a ReplicationController @ 03/27/24 19:21:49.559
  STEP: Ensuring resource quota status released usage @ 03/27/24 19:21:49.606
  Mar 27 19:21:51.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2892" for this suite. @ 03/27/24 19:21:51.635
• [11.264 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 03/27/24 19:21:51.659
  Mar 27 19:21:51.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:21:51.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:51.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:51.744
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 03/27/24 19:21:51.75
  STEP: Saw pod success @ 03/27/24 19:21:55.826
  Mar 27 19:21:55.833: INFO: Trying to get logs from node env1-test-worker-0 pod pod-34c93989-55a3-4488-baf7-790f565785f8 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:21:55.85
  Mar 27 19:21:55.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2279" for this suite. @ 03/27/24 19:21:55.901
• [4.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 03/27/24 19:21:55.922
  Mar 27 19:21:55.922: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-pred @ 03/27/24 19:21:55.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:21:55.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:21:55.977
  Mar 27 19:21:55.983: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 27 19:21:56.010: INFO: Waiting for terminating namespaces to be deleted...
  Mar 27 19:21:56.020: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Mar 27 19:21:56.050: INFO: filebeat-filebeat-k4hfb from filebeat started at 2024-03-27 13:56:12 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.051: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 19:21:56.053: INFO: kube-flannel-r8g5h from kube-system started at 2024-01-09 16:24:44 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.054: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 19:21:56.055: INFO: kube-proxy-dd6db from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.056: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 19:21:56.057: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.057: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 19:21:56.059: INFO: nodelocaldns-9mtv9 from kube-system started at 2024-02-26 17:16:13 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.060: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 19:21:56.061: INFO: vsphere-csi-node-254vc from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 19:21:56.062: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 19:21:56.062: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 19:21:56.063: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 19:21:56.064: INFO: prometheus-kube-prometheus-operator-59885c5d4b-hkhxh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.065: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Mar 27 19:21:56.066: INFO: prometheus-kube-state-metrics-6967744598-dt2rh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.067: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Mar 27 19:21:56.068: INFO: prometheus-prometheus-node-exporter-rmr74 from prometheus started at 2024-03-06 21:46:58 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.068: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 19:21:56.069: INFO: sonobuoy from sonobuoy started at 2024-03-27 19:17:40 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.070: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 27 19:21:56.071: INFO: sonobuoy-e2e-job-951e43e969974e8d from sonobuoy started at 2024-03-27 19:17:41 +0000 UTC (2 container statuses recorded)
  Mar 27 19:21:56.072: INFO: 	Container e2e ready: true, restart count 0
  Mar 27 19:21:56.073: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 19:21:56.074: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-xgb4f from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 19:21:56.074: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 19:21:56.075: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 19:21:56.076: INFO: traefik-ingress-r65nd from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.077: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 19:21:56.078: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Mar 27 19:21:56.111: INFO: filebeat-filebeat-vtxl5 from filebeat started at 2024-03-27 13:56:06 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.111: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 19:21:56.111: INFO: kube-flannel-jxf5s from kube-system started at 2024-01-09 16:24:09 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.111: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 19:21:56.111: INFO: kube-proxy-hkdmw from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.111: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 19:21:56.112: INFO: metrics-server-6b9559b787-jbq7p from kube-system started at 2024-02-26 17:54:21 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.112: INFO: 	Container metrics-server ready: true, restart count 0
  Mar 27 19:21:56.112: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.112: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 19:21:56.112: INFO: nodelocaldns-qntdt from kube-system started at 2024-02-26 17:16:14 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.112: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 19:21:56.112: INFO: vsphere-csi-node-8bf9l from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 19:21:56.112: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 19:21:56.112: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-03-06 21:46:51 +0000 UTC (3 container statuses recorded)
  Mar 27 19:21:56.113: INFO: 	Container config-reloader ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: 	Container prometheus ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: prometheus-prometheus-node-exporter-9zlbg from prometheus started at 2024-03-06 21:46:32 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.113: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-zcz72 from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 19:21:56.113: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 19:21:56.113: INFO: traefik-ingress-4xq5p from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.114: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 19:21:56.114: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  Mar 27 19:21:56.143: INFO: filebeat-filebeat-584kt from filebeat started at 2024-03-05 18:51:56 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.145: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 19:21:56.146: INFO: kube-flannel-hlhld from kube-system started at 2024-01-11 00:55:50 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.146: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 19:21:56.147: INFO: kube-proxy-k2g55 from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.148: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 19:21:56.149: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-03-05 18:33:07 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.150: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 19:21:56.151: INFO: nodelocaldns-d8b8p from kube-system started at 2024-02-26 17:16:09 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.152: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 19:21:56.153: INFO: vsphere-csi-node-tmrkr from kube-system started at 2024-03-27 16:22:46 +0000 UTC (3 container statuses recorded)
  Mar 27 19:21:56.154: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 19:21:56.155: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 19:21:56.156: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 19:21:56.157: INFO: prometheus-prometheus-node-exporter-bkgv5 from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.157: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 19:21:56.158: INFO: thanos-query-755b649898-nqtbb from prometheus started at 2024-03-06 21:48:40 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.158: INFO: 	Container query ready: true, restart count 0
  Mar 27 19:21:56.158: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-669rl from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 19:21:56.158: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 19:21:56.159: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 19:21:56.159: INFO: traefik-ingress-pn7j6 from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.159: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 19:21:56.160: INFO: velero-549955fd6-dt5b6 from velero started at 2024-02-26 18:49:30 +0000 UTC (1 container statuses recorded)
  Mar 27 19:21:56.160: INFO: 	Container velero ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/27/24 19:21:56.16
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/27/24 19:21:58.227
  STEP: Trying to apply a random label on the found node. @ 03/27/24 19:21:58.249
  STEP: verifying the node has the label kubernetes.io/e2e-4a519bb0-60a0-4541-86b5-55f29fcac468 42 @ 03/27/24 19:21:58.28
  STEP: Trying to relaunch the pod, now with labels. @ 03/27/24 19:21:58.29
  STEP: removing the label kubernetes.io/e2e-4a519bb0-60a0-4541-86b5-55f29fcac468 off the node env1-test-worker-0 @ 03/27/24 19:22:00.377
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4a519bb0-60a0-4541-86b5-55f29fcac468 @ 03/27/24 19:22:00.423
  Mar 27 19:22:00.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9890" for this suite. @ 03/27/24 19:22:00.453
• [4.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 03/27/24 19:22:00.479
  Mar 27 19:22:00.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:22:00.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:22:00.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:22:00.587
  STEP: Setting up server cert @ 03/27/24 19:22:00.663
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:22:01.942
  STEP: Deploying the webhook pod @ 03/27/24 19:22:01.964
  STEP: Wait for the deployment to be ready @ 03/27/24 19:22:02.01
  Mar 27 19:22:02.048: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/27/24 19:22:04.076
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:22:04.102
  Mar 27 19:22:05.102: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 27 19:22:05.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4345-crds.webhook.example.com via the AdmissionRegistration API @ 03/27/24 19:22:10.649
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/27/24 19:22:10.692
  Mar 27 19:22:12.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3426" for this suite. @ 03/27/24 19:22:13.533
  STEP: Destroying namespace "webhook-markers-9326" for this suite. @ 03/27/24 19:22:13.546
• [13.097 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 03/27/24 19:22:13.576
  Mar 27 19:22:13.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename taint-single-pod @ 03/27/24 19:22:13.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:22:13.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:22:13.625
  Mar 27 19:22:13.630: INFO: Waiting up to 1m0s for all nodes to be ready
  Mar 27 19:23:13.742: INFO: Waiting for terminating namespaces to be deleted...
  Mar 27 19:23:13.753: INFO: Starting informer...
  STEP: Starting pod... @ 03/27/24 19:23:13.754
  Mar 27 19:23:13.995: INFO: Pod is running on env1-test-worker-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 03/27/24 19:23:13.995
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/27/24 19:23:14.045
  STEP: Waiting short time to make sure Pod is queued for deletion @ 03/27/24 19:23:14.058
  Mar 27 19:23:14.058: INFO: Pod wasn't evicted. Proceeding
  Mar 27 19:23:14.058: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/27/24 19:23:14.1
  STEP: Waiting some time to make sure that toleration time passed. @ 03/27/24 19:23:14.117
  Mar 27 19:24:29.120: INFO: Pod wasn't evicted. Test successful
  Mar 27 19:24:29.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9830" for this suite. @ 03/27/24 19:24:29.138
• [135.582 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 03/27/24 19:24:29.161
  Mar 27 19:24:29.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename daemonsets @ 03/27/24 19:24:29.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:24:29.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:24:29.215
  Mar 27 19:24:29.281: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 03/27/24 19:24:29.293
  Mar 27 19:24:29.330: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:24:29.330: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 03/27/24 19:24:29.33
  Mar 27 19:24:29.418: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:24:29.418: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Mar 27 19:24:30.429: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:24:30.429: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Mar 27 19:24:31.430: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 27 19:24:31.430: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 03/27/24 19:24:31.44
  Mar 27 19:24:31.506: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 27 19:24:31.506: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Mar 27 19:24:32.523: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:24:32.524: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 03/27/24 19:24:32.524
  Mar 27 19:24:32.566: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:24:32.566: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Mar 27 19:24:33.580: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:24:33.580: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Mar 27 19:24:34.578: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 27 19:24:34.578: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/27/24 19:24:34.604
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4174, will wait for the garbage collector to delete the pods @ 03/27/24 19:24:34.604
  Mar 27 19:24:34.684: INFO: Deleting DaemonSet.extensions daemon-set took: 15.226187ms
  Mar 27 19:24:34.785: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.457769ms
  Mar 27 19:24:35.995: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:24:35.995: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 27 19:24:36.010: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210759916"},"items":null}

  Mar 27 19:24:36.021: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210759916"},"items":null}

  Mar 27 19:24:36.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4174" for this suite. @ 03/27/24 19:24:36.12
• [6.979 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 03/27/24 19:24:36.145
  Mar 27 19:24:36.145: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename podtemplate @ 03/27/24 19:24:36.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:24:36.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:24:36.218
  Mar 27 19:24:36.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2846" for this suite. @ 03/27/24 19:24:36.366
• [0.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 03/27/24 19:24:36.398
  Mar 27 19:24:36.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename security-context @ 03/27/24 19:24:36.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:24:36.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:24:36.466
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/27/24 19:24:36.474
  STEP: Saw pod success @ 03/27/24 19:24:40.542
  Mar 27 19:24:40.549: INFO: Trying to get logs from node env1-test-worker-2 pod security-context-1d2d2654-30b5-467a-b4f5-e430bccf5703 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:24:40.585
  Mar 27 19:24:40.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5868" for this suite. @ 03/27/24 19:24:40.651
• [4.272 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 03/27/24 19:24:40.671
  Mar 27 19:24:40.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename watch @ 03/27/24 19:24:40.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:24:40.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:24:40.723
  STEP: creating a watch on configmaps with a certain label @ 03/27/24 19:24:40.731
  STEP: creating a new configmap @ 03/27/24 19:24:40.733
  STEP: modifying the configmap once @ 03/27/24 19:24:40.744
  STEP: changing the label value of the configmap @ 03/27/24 19:24:40.764
  STEP: Expecting to observe a delete notification for the watched object @ 03/27/24 19:24:40.781
  Mar 27 19:24:40.782: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-245  9d34420b-d62c-439c-885d-104485b7b7d9 210759961 0 2024-03-27 19:24:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-27 19:24:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:24:40.783: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-245  9d34420b-d62c-439c-885d-104485b7b7d9 210759962 0 2024-03-27 19:24:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-27 19:24:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:24:40.784: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-245  9d34420b-d62c-439c-885d-104485b7b7d9 210759963 0 2024-03-27 19:24:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-27 19:24:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 03/27/24 19:24:40.784
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 03/27/24 19:24:40.8
  STEP: changing the label value of the configmap back @ 03/27/24 19:24:50.801
  STEP: modifying the configmap a third time @ 03/27/24 19:24:50.822
  STEP: deleting the configmap @ 03/27/24 19:24:50.844
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 03/27/24 19:24:50.857
  Mar 27 19:24:50.857: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-245  9d34420b-d62c-439c-885d-104485b7b7d9 210760031 0 2024-03-27 19:24:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-27 19:24:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:24:50.858: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-245  9d34420b-d62c-439c-885d-104485b7b7d9 210760032 0 2024-03-27 19:24:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-27 19:24:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:24:50.859: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-245  9d34420b-d62c-439c-885d-104485b7b7d9 210760033 0 2024-03-27 19:24:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-27 19:24:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:24:50.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-245" for this suite. @ 03/27/24 19:24:50.875
• [10.217 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 03/27/24 19:24:50.89
  Mar 27 19:24:50.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/27/24 19:24:50.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:24:50.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:24:50.944
  Mar 27 19:24:50.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:25:53.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8707" for this suite. @ 03/27/24 19:25:53.237
• [62.368 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 03/27/24 19:25:53.261
  Mar 27 19:25:53.261: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename gc @ 03/27/24 19:25:53.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:25:53.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:25:53.319
  STEP: create the rc @ 03/27/24 19:25:53.326
  W0327 19:25:53.339111      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 03/27/24 19:25:58.353
  STEP: wait for all pods to be garbage collected @ 03/27/24 19:25:58.378
  STEP: expected 0 pods, got 2 pods @ 03/27/24 19:26:03.391
  STEP: expected 0 pods, got 2 pods @ 03/27/24 19:26:08.4
  STEP: expected 0 pods, got 2 pods @ 03/27/24 19:26:13.395
  STEP: expected 0 pods, got 2 pods @ 03/27/24 19:26:18.402
  STEP: Gathering metrics @ 03/27/24 19:26:23.396
  Mar 27 19:26:23.606: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 27 19:26:23.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2500" for this suite. @ 03/27/24 19:26:23.622
• [30.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 03/27/24 19:26:23.641
  Mar 27 19:26:23.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename job @ 03/27/24 19:26:23.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:26:23.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:26:23.696
  STEP: Creating a job @ 03/27/24 19:26:23.705
  STEP: Ensuring active pods == parallelism @ 03/27/24 19:26:23.72
  STEP: delete a job @ 03/27/24 19:26:25.73
  STEP: deleting Job.batch foo in namespace job-9986, will wait for the garbage collector to delete the pods @ 03/27/24 19:26:25.731
  Mar 27 19:26:25.809: INFO: Deleting Job.batch foo took: 16.63192ms
  Mar 27 19:26:25.909: INFO: Terminating Job.batch foo pods took: 100.890865ms
  STEP: Ensuring job was deleted @ 03/27/24 19:26:57.51
  Mar 27 19:26:57.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9986" for this suite. @ 03/27/24 19:26:57.54
• [33.918 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 03/27/24 19:26:57.563
  Mar 27 19:26:57.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svcaccounts @ 03/27/24 19:26:57.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:26:57.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:26:57.616
  STEP: reading a file in the container @ 03/27/24 19:26:59.706
  Mar 27 19:26:59.707: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8030 pod-service-account-473f01e6-509a-431e-96f8-c75dc2df0246 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 03/27/24 19:27:00.05
  Mar 27 19:27:00.051: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8030 pod-service-account-473f01e6-509a-431e-96f8-c75dc2df0246 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 03/27/24 19:27:00.343
  Mar 27 19:27:00.343: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8030 pod-service-account-473f01e6-509a-431e-96f8-c75dc2df0246 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Mar 27 19:27:00.662: INFO: Got root ca configmap in namespace "svcaccounts-8030"
  Mar 27 19:27:00.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8030" for this suite. @ 03/27/24 19:27:00.693
• [3.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 03/27/24 19:27:00.719
  Mar 27 19:27:00.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename gc @ 03/27/24 19:27:00.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:27:00.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:27:00.762
  Mar 27 19:27:00.838: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"12882c18-c660-479b-b530-c71466b27243", Controller:(*bool)(0xc003d6faca), BlockOwnerDeletion:(*bool)(0xc003d6facb)}}
  Mar 27 19:27:00.866: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"819a2d58-8257-4c30-9ae5-2aeb11e8551a", Controller:(*bool)(0xc003d6ff1a), BlockOwnerDeletion:(*bool)(0xc003d6ff1b)}}
  Mar 27 19:27:00.884: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"7522b1be-f767-42f0-8038-f15b258cf117", Controller:(*bool)(0xc002df4e5a), BlockOwnerDeletion:(*bool)(0xc002df4e5b)}}
  Mar 27 19:27:05.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-832" for this suite. @ 03/27/24 19:27:05.929
• [5.227 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 03/27/24 19:27:05.948
  Mar 27 19:27:05.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename field-validation @ 03/27/24 19:27:05.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:27:06.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:27:06.024
  Mar 27 19:27:06.029: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  W0327 19:27:13.691897      22 warnings.go:70] unknown field "alpha"
  W0327 19:27:13.691956      22 warnings.go:70] unknown field "beta"
  W0327 19:27:13.691968      22 warnings.go:70] unknown field "delta"
  W0327 19:27:13.691979      22 warnings.go:70] unknown field "epsilon"
  W0327 19:27:13.691990      22 warnings.go:70] unknown field "gamma"
  Mar 27 19:27:14.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3399" for this suite. @ 03/27/24 19:27:14.323
• [8.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 03/27/24 19:27:14.348
  Mar 27 19:27:14.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename job @ 03/27/24 19:27:14.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:27:14.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:27:14.416
  STEP: Creating Indexed job @ 03/27/24 19:27:14.426
  STEP: Ensuring job reaches completions @ 03/27/24 19:27:14.444
  STEP: Ensuring pods with index for job exist @ 03/27/24 19:27:24.453
  Mar 27 19:27:24.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3203" for this suite. @ 03/27/24 19:27:24.479
• [10.155 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 03/27/24 19:27:24.505
  Mar 27 19:27:24.505: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:27:24.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:27:24.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:27:24.575
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:27:24.584
  STEP: Saw pod success @ 03/27/24 19:27:28.651
  Mar 27 19:27:28.659: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-d8838df5-01f9-4edf-9f46-ba634a85ef26 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:27:28.702
  Mar 27 19:27:28.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9117" for this suite. @ 03/27/24 19:27:28.75
• [4.264 seconds]
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 03/27/24 19:27:28.77
  Mar 27 19:27:28.770: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename job @ 03/27/24 19:27:28.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:27:28.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:27:28.826
  STEP: Creating a job @ 03/27/24 19:27:28.831
  STEP: Ensuring job reaches completions @ 03/27/24 19:27:28.845
  Mar 27 19:27:38.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8539" for this suite. @ 03/27/24 19:27:38.877
• [10.125 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 03/27/24 19:27:38.896
  Mar 27 19:27:38.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename taint-multiple-pods @ 03/27/24 19:27:38.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:27:38.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:27:38.95
  Mar 27 19:27:38.963: INFO: Waiting up to 1m0s for all nodes to be ready
  Mar 27 19:28:39.064: INFO: Waiting for terminating namespaces to be deleted...
  Mar 27 19:28:39.074: INFO: Starting informer...
  STEP: Starting pods... @ 03/27/24 19:28:39.075
  Mar 27 19:28:39.321: INFO: Pod1 is running on env1-test-worker-2. Tainting Node
  Mar 27 19:28:41.587: INFO: Pod2 is running on env1-test-worker-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 03/27/24 19:28:41.588
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/27/24 19:28:41.624
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 03/27/24 19:28:41.643
  Mar 27 19:28:47.458: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Mar 27 19:29:07.250: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Mar 27 19:29:07.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/27/24 19:29:07.291
  STEP: Destroying namespace "taint-multiple-pods-6064" for this suite. @ 03/27/24 19:29:07.306
• [88.441 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 03/27/24 19:29:07.337
  Mar 27 19:29:07.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename runtimeclass @ 03/27/24 19:29:07.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:29:07.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:29:07.432
  Mar 27 19:29:09.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8550" for this suite. @ 03/27/24 19:29:09.539
• [2.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 03/27/24 19:29:09.567
  Mar 27 19:29:09.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:29:09.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:29:09.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:29:09.657
  STEP: Setting up server cert @ 03/27/24 19:29:09.716
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:29:10.397
  STEP: Deploying the webhook pod @ 03/27/24 19:29:10.441
  STEP: Wait for the deployment to be ready @ 03/27/24 19:29:10.484
  Mar 27 19:29:10.502: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Mar 27 19:29:12.564: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 19, 29, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 19, 29, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 19, 29, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 19, 29, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 03/27/24 19:29:14.589
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:29:14.627
  Mar 27 19:29:15.628: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 03/27/24 19:29:15.656
  STEP: create a namespace for the webhook @ 03/27/24 19:29:15.707
  STEP: create a configmap should be unconditionally rejected by the webhook @ 03/27/24 19:29:15.761
  Mar 27 19:29:15.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2915" for this suite. @ 03/27/24 19:29:16.067
  STEP: Destroying namespace "webhook-markers-5321" for this suite. @ 03/27/24 19:29:16.102
  STEP: Destroying namespace "fail-closed-namespace-6941" for this suite. @ 03/27/24 19:29:16.148
• [6.609 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 03/27/24 19:29:16.176
  Mar 27 19:29:16.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 19:29:16.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:29:16.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:29:16.249
  STEP: set up a multi version CRD @ 03/27/24 19:29:25.772
  Mar 27 19:29:25.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: mark a version not serverd @ 03/27/24 19:29:40.074
  STEP: check the unserved version gets removed @ 03/27/24 19:29:40.127
  STEP: check the other version is not changed @ 03/27/24 19:29:44.1
  Mar 27 19:29:51.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5014" for this suite. @ 03/27/24 19:29:51.262
• [35.095 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 03/27/24 19:29:51.272
  Mar 27 19:29:51.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 19:29:51.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:29:51.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:29:51.314
  STEP: Creating configMap with name configmap-test-upd-491768b6-058b-4413-a3c7-6979b298f0c4 @ 03/27/24 19:29:51.327
  STEP: Creating the pod @ 03/27/24 19:29:51.339
  STEP: Updating configmap configmap-test-upd-491768b6-058b-4413-a3c7-6979b298f0c4 @ 03/27/24 19:29:53.432
  STEP: waiting to observe update in volume @ 03/27/24 19:29:53.447
  Mar 27 19:31:14.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8554" for this suite. @ 03/27/24 19:31:14.411
• [83.161 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 03/27/24 19:31:14.433
  Mar 27 19:31:14.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:31:14.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:31:14.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:31:14.48
  STEP: Setting up server cert @ 03/27/24 19:31:14.542
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:31:15.499
  STEP: Deploying the webhook pod @ 03/27/24 19:31:15.521
  STEP: Wait for the deployment to be ready @ 03/27/24 19:31:15.555
  Mar 27 19:31:15.597: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/27/24 19:31:17.633
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:31:17.66
  Mar 27 19:31:18.661: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 03/27/24 19:31:18.68
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 03/27/24 19:31:18.736
  STEP: Creating a configMap that should not be mutated @ 03/27/24 19:31:18.752
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 03/27/24 19:31:18.796
  STEP: Creating a configMap that should be mutated @ 03/27/24 19:31:18.814
  Mar 27 19:31:18.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8984" for this suite. @ 03/27/24 19:31:19.063
  STEP: Destroying namespace "webhook-markers-6074" for this suite. @ 03/27/24 19:31:19.109
• [4.741 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 03/27/24 19:31:19.191
  Mar 27 19:31:19.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename endpointslice @ 03/27/24 19:31:19.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:31:19.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:31:19.254
  STEP: referencing a single matching pod @ 03/27/24 19:31:24.528
  STEP: referencing matching pods with named port @ 03/27/24 19:31:29.567
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 03/27/24 19:31:34.584
  STEP: recreating EndpointSlices after they've been deleted @ 03/27/24 19:31:39.617
  Mar 27 19:31:39.666: INFO: EndpointSlice for Service endpointslice-2058/example-named-port not found
  Mar 27 19:31:49.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2058" for this suite. @ 03/27/24 19:31:49.706
• [30.530 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 03/27/24 19:31:49.722
  Mar 27 19:31:49.722: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:31:49.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:31:49.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:31:49.768
  STEP: creating service endpoint-test2 in namespace services-2822 @ 03/27/24 19:31:49.776
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2822 to expose endpoints map[] @ 03/27/24 19:31:49.803
  Mar 27 19:31:49.829: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Mar 27 19:31:50.850: INFO: successfully validated that service endpoint-test2 in namespace services-2822 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2822 @ 03/27/24 19:31:50.851
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2822 to expose endpoints map[pod1:[80]] @ 03/27/24 19:31:52.905
  Mar 27 19:31:52.935: INFO: successfully validated that service endpoint-test2 in namespace services-2822 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 03/27/24 19:31:52.935
  Mar 27 19:31:52.935: INFO: Creating new exec pod
  Mar 27 19:31:55.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2822 exec execpodlx6hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Mar 27 19:31:56.319: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Mar 27 19:31:56.319: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:31:56.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2822 exec execpodlx6hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.40.58 80'
  Mar 27 19:31:56.617: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.40.58 80\nConnection to 10.233.40.58 80 port [tcp/http] succeeded!\n"
  Mar 27 19:31:56.617: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2822 @ 03/27/24 19:31:56.617
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2822 to expose endpoints map[pod1:[80] pod2:[80]] @ 03/27/24 19:32:14.742
  Mar 27 19:32:14.772: INFO: successfully validated that service endpoint-test2 in namespace services-2822 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 03/27/24 19:32:14.772
  Mar 27 19:32:15.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2822 exec execpodlx6hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Mar 27 19:32:16.092: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Mar 27 19:32:16.092: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:32:16.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2822 exec execpodlx6hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.40.58 80'
  Mar 27 19:32:16.488: INFO: stderr: "+ nc -v -t -w 2 10.233.40.58 80\n+ echo hostName\nConnection to 10.233.40.58 80 port [tcp/http] succeeded!\n"
  Mar 27 19:32:16.488: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2822 @ 03/27/24 19:32:16.488
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2822 to expose endpoints map[pod2:[80]] @ 03/27/24 19:32:16.713
  Mar 27 19:32:16.849: INFO: successfully validated that service endpoint-test2 in namespace services-2822 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 03/27/24 19:32:16.849
  Mar 27 19:32:17.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2822 exec execpodlx6hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Mar 27 19:32:18.239: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Mar 27 19:32:18.239: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:32:18.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2822 exec execpodlx6hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.40.58 80'
  Mar 27 19:32:18.578: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.40.58 80\nConnection to 10.233.40.58 80 port [tcp/http] succeeded!\n"
  Mar 27 19:32:18.578: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2822 @ 03/27/24 19:32:18.579
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2822 to expose endpoints map[] @ 03/27/24 19:32:18.632
  Mar 27 19:32:18.667: INFO: successfully validated that service endpoint-test2 in namespace services-2822 exposes endpoints map[]
  Mar 27 19:32:18.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2822" for this suite. @ 03/27/24 19:32:18.761
• [29.064 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 03/27/24 19:32:18.787
  Mar 27 19:32:18.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename containers @ 03/27/24 19:32:18.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:18.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:18.843
  STEP: Creating a pod to test override all @ 03/27/24 19:32:18.855
  STEP: Saw pod success @ 03/27/24 19:32:22.919
  Mar 27 19:32:22.927: INFO: Trying to get logs from node env1-test-worker-2 pod client-containers-3cdf115b-91f9-48bb-8a18-321f2dce501e container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:32:22.944
  Mar 27 19:32:22.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9403" for this suite. @ 03/27/24 19:32:23.002
• [4.256 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 03/27/24 19:32:23.044
  Mar 27 19:32:23.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl-logs @ 03/27/24 19:32:23.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:23.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:23.087
  STEP: creating an pod @ 03/27/24 19:32:23.093
  Mar 27 19:32:23.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Mar 27 19:32:23.282: INFO: stderr: ""
  Mar 27 19:32:23.282: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 03/27/24 19:32:23.282
  Mar 27 19:32:23.283: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Mar 27 19:32:25.316: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 03/27/24 19:32:25.317
  Mar 27 19:32:25.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 logs logs-generator logs-generator'
  Mar 27 19:32:25.527: INFO: stderr: ""
  Mar 27 19:32:25.527: INFO: stdout: "I0327 19:32:24.241965       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/7jl 285\nI0327 19:32:24.442558       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/6qkr 330\nI0327 19:32:24.643030       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/7tq 453\nI0327 19:32:24.842498       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/jqqx 305\nI0327 19:32:25.042962       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/4t9 350\nI0327 19:32:25.242667       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/x7th 541\nI0327 19:32:25.443097       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/2g8 215\n"
  STEP: limiting log lines @ 03/27/24 19:32:25.527
  Mar 27 19:32:25.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 logs logs-generator logs-generator --tail=1'
  Mar 27 19:32:25.710: INFO: stderr: ""
  Mar 27 19:32:25.710: INFO: stdout: "I0327 19:32:25.642575       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/vkzb 569\n"
  Mar 27 19:32:25.710: INFO: got output "I0327 19:32:25.642575       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/vkzb 569\n"
  STEP: limiting log bytes @ 03/27/24 19:32:25.71
  Mar 27 19:32:25.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 logs logs-generator logs-generator --limit-bytes=1'
  Mar 27 19:32:25.929: INFO: stderr: ""
  Mar 27 19:32:25.929: INFO: stdout: "I"
  Mar 27 19:32:25.929: INFO: got output "I"
  STEP: exposing timestamps @ 03/27/24 19:32:25.929
  Mar 27 19:32:25.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 logs logs-generator logs-generator --tail=1 --timestamps'
  Mar 27 19:32:26.124: INFO: stderr: ""
  Mar 27 19:32:26.124: INFO: stdout: "2024-03-27T19:32:26.043045157Z I0327 19:32:26.042783       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/86v 475\n"
  Mar 27 19:32:26.124: INFO: got output "2024-03-27T19:32:26.043045157Z I0327 19:32:26.042783       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/86v 475\n"
  STEP: restricting to a time range @ 03/27/24 19:32:26.124
  Mar 27 19:32:28.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 logs logs-generator logs-generator --since=1s'
  Mar 27 19:32:28.810: INFO: stderr: ""
  Mar 27 19:32:28.811: INFO: stdout: "I0327 19:32:27.842111       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/wtph 465\nI0327 19:32:28.042673       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/945 388\nI0327 19:32:28.242161       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/4xr 474\nI0327 19:32:28.442686       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/vgqz 353\nI0327 19:32:28.642105       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/jvx9 310\n"
  Mar 27 19:32:28.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 logs logs-generator logs-generator --since=24h'
  Mar 27 19:32:29.007: INFO: stderr: ""
  Mar 27 19:32:29.007: INFO: stdout: "I0327 19:32:24.241965       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/7jl 285\nI0327 19:32:24.442558       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/6qkr 330\nI0327 19:32:24.643030       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/7tq 453\nI0327 19:32:24.842498       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/jqqx 305\nI0327 19:32:25.042962       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/4t9 350\nI0327 19:32:25.242667       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/x7th 541\nI0327 19:32:25.443097       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/2g8 215\nI0327 19:32:25.642575       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/vkzb 569\nI0327 19:32:25.843130       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/q46 423\nI0327 19:32:26.042783       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/86v 475\nI0327 19:32:26.242151       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/bq2 264\nI0327 19:32:26.442847       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/4nx 402\nI0327 19:32:26.642153       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/455l 506\nI0327 19:32:26.842840       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/db2 325\nI0327 19:32:27.042143       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/xstr 469\nI0327 19:32:27.242822       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/cwq 512\nI0327 19:32:27.442172       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/h2m 514\nI0327 19:32:27.644679       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/phtv 598\nI0327 19:32:27.842111       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/wtph 465\nI0327 19:32:28.042673       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/945 388\nI0327 19:32:28.242161       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/4xr 474\nI0327 19:32:28.442686       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/vgqz 353\nI0327 19:32:28.642105       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/jvx9 310\nI0327 19:32:28.842621       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/tjp 430\n"
  Mar 27 19:32:29.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-logs-3745 delete pod logs-generator'
  Mar 27 19:32:30.267: INFO: stderr: ""
  Mar 27 19:32:30.267: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Mar 27 19:32:30.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3745" for this suite. @ 03/27/24 19:32:30.286
• [7.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 03/27/24 19:32:30.316
  Mar 27 19:32:30.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:32:30.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:30.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:30.367
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2330 @ 03/27/24 19:32:30.375
  STEP: changing the ExternalName service to type=ClusterIP @ 03/27/24 19:32:30.388
  STEP: creating replication controller externalname-service in namespace services-2330 @ 03/27/24 19:32:30.432
  I0327 19:32:30.460862      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-2330, replica count: 2
  I0327 19:32:33.511979      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 19:32:33.512: INFO: Creating new exec pod
  Mar 27 19:32:36.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2330 exec execpodk4dwd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Mar 27 19:32:36.966: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 27 19:32:36.966: INFO: stdout: "externalname-service-59t9c"
  Mar 27 19:32:36.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-2330 exec execpodk4dwd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.92 80'
  Mar 27 19:32:37.337: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.92 80\nConnection to 10.233.27.92 80 port [tcp/http] succeeded!\n"
  Mar 27 19:32:37.337: INFO: stdout: "externalname-service-npvpc"
  Mar 27 19:32:37.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:32:37.350: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-2330" for this suite. @ 03/27/24 19:32:37.406
• [7.124 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 03/27/24 19:32:37.442
  Mar 27 19:32:37.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 19:32:37.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:37.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:37.508
  STEP: creating a ConfigMap @ 03/27/24 19:32:37.516
  STEP: fetching the ConfigMap @ 03/27/24 19:32:37.529
  STEP: patching the ConfigMap @ 03/27/24 19:32:37.54
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 03/27/24 19:32:37.555
  STEP: deleting the ConfigMap by collection with a label selector @ 03/27/24 19:32:37.57
  STEP: listing all ConfigMaps in test namespace @ 03/27/24 19:32:37.609
  Mar 27 19:32:37.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-977" for this suite. @ 03/27/24 19:32:37.633
• [0.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 03/27/24 19:32:37.662
  Mar 27 19:32:37.662: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename security-context-test @ 03/27/24 19:32:37.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:37.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:37.713
  Mar 27 19:32:41.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8782" for this suite. @ 03/27/24 19:32:41.804
• [4.163 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 03/27/24 19:32:41.826
  Mar 27 19:32:41.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename ingress @ 03/27/24 19:32:41.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:41.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:41.865
  STEP: getting /apis @ 03/27/24 19:32:41.872
  STEP: getting /apis/networking.k8s.io @ 03/27/24 19:32:41.887
  STEP: getting /apis/networking.k8s.iov1 @ 03/27/24 19:32:41.89
  STEP: creating @ 03/27/24 19:32:41.893
  STEP: getting @ 03/27/24 19:32:41.937
  STEP: listing @ 03/27/24 19:32:41.947
  STEP: watching @ 03/27/24 19:32:41.956
  Mar 27 19:32:41.956: INFO: starting watch
  STEP: cluster-wide listing @ 03/27/24 19:32:41.962
  STEP: cluster-wide watching @ 03/27/24 19:32:41.973
  Mar 27 19:32:41.974: INFO: starting watch
  STEP: patching @ 03/27/24 19:32:41.977
  STEP: updating @ 03/27/24 19:32:41.993
  Mar 27 19:32:42.016: INFO: waiting for watch events with expected annotations
  Mar 27 19:32:42.016: INFO: saw patched and updated annotations
  STEP: patching /status @ 03/27/24 19:32:42.016
  STEP: updating /status @ 03/27/24 19:32:42.038
  STEP: get /status @ 03/27/24 19:32:42.063
  STEP: deleting @ 03/27/24 19:32:42.079
  STEP: deleting a collection @ 03/27/24 19:32:42.116
  Mar 27 19:32:42.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7136" for this suite. @ 03/27/24 19:32:42.178
• [0.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 03/27/24 19:32:42.209
  Mar 27 19:32:42.209: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:32:42.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:42.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:42.269
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/27/24 19:32:42.278
  STEP: Saw pod success @ 03/27/24 19:32:46.382
  Mar 27 19:32:46.397: INFO: Trying to get logs from node env1-test-worker-2 pod pod-6e6408c4-6eda-465c-9688-870f427e12e1 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:32:46.459
  Mar 27 19:32:46.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-635" for this suite. @ 03/27/24 19:32:46.595
• [4.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 03/27/24 19:32:46.637
  Mar 27 19:32:46.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:32:46.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:46.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:46.706
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:32:46.717
  STEP: Saw pod success @ 03/27/24 19:32:50.795
  Mar 27 19:32:50.806: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-5b32d16a-ca7e-46a9-91fa-10a6a89c28ec container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:32:50.829
  Mar 27 19:32:50.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8582" for this suite. @ 03/27/24 19:32:50.877
• [4.252 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 03/27/24 19:32:50.891
  Mar 27 19:32:50.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename subpath @ 03/27/24 19:32:50.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:32:50.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:32:50.932
  STEP: Setting up data @ 03/27/24 19:32:50.939
  STEP: Creating pod pod-subpath-test-configmap-mgnv @ 03/27/24 19:32:50.97
  STEP: Creating a pod to test atomic-volume-subpath @ 03/27/24 19:32:50.97
  STEP: Saw pod success @ 03/27/24 19:33:15.165
  Mar 27 19:33:15.173: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-configmap-mgnv container test-container-subpath-configmap-mgnv: <nil>
  STEP: delete the pod @ 03/27/24 19:33:15.191
  STEP: Deleting pod pod-subpath-test-configmap-mgnv @ 03/27/24 19:33:15.246
  Mar 27 19:33:15.246: INFO: Deleting pod "pod-subpath-test-configmap-mgnv" in namespace "subpath-892"
  Mar 27 19:33:15.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-892" for this suite. @ 03/27/24 19:33:15.276
• [24.412 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 03/27/24 19:33:15.304
  Mar 27 19:33:15.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename daemonsets @ 03/27/24 19:33:15.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:33:15.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:33:15.372
  Mar 27 19:33:15.436: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/27/24 19:33:15.458
  Mar 27 19:33:15.472: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:15.473: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:15.474: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:15.488: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:33:15.489: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Mar 27 19:33:16.561: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:16.561: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:16.561: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:16.583: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:33:16.583: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Mar 27 19:33:17.502: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:17.503: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:17.503: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:17.517: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 19:33:17.517: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 03/27/24 19:33:17.564
  STEP: Check that daemon pods images are updated. @ 03/27/24 19:33:17.6
  Mar 27 19:33:17.610: INFO: Wrong image for pod: daemon-set-k6h5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:17.610: INFO: Wrong image for pod: daemon-set-nmbbs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:17.610: INFO: Wrong image for pod: daemon-set-x6p2j. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:17.648: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:17.649: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:17.649: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:18.659: INFO: Wrong image for pod: daemon-set-k6h5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:18.660: INFO: Wrong image for pod: daemon-set-nmbbs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:18.660: INFO: Pod daemon-set-xs9x9 is not available
  Mar 27 19:33:18.672: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:18.672: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:18.673: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:19.665: INFO: Wrong image for pod: daemon-set-k6h5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:19.665: INFO: Wrong image for pod: daemon-set-nmbbs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:19.665: INFO: Pod daemon-set-xs9x9 is not available
  Mar 27 19:33:19.684: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:19.684: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:19.684: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:20.662: INFO: Pod daemon-set-454dx is not available
  Mar 27 19:33:20.662: INFO: Wrong image for pod: daemon-set-k6h5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Mar 27 19:33:20.678: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:20.678: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:20.679: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:21.682: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:21.682: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:21.682: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:22.660: INFO: Pod daemon-set-gfq48 is not available
  Mar 27 19:33:22.680: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:22.680: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:22.680: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 03/27/24 19:33:22.68
  Mar 27 19:33:22.692: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:22.692: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:22.692: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:22.701: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 19:33:22.701: INFO: Node env1-test-worker-2 is running 0 daemon pod, expected 1
  Mar 27 19:33:23.716: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:23.716: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:23.716: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 19:33:23.734: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 19:33:23.734: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/27/24 19:33:23.837
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8430, will wait for the garbage collector to delete the pods @ 03/27/24 19:33:23.838
  Mar 27 19:33:23.931: INFO: Deleting DaemonSet.extensions daemon-set took: 34.130253ms
  Mar 27 19:33:24.031: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.395752ms
  Mar 27 19:33:26.740: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 19:33:26.740: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 27 19:33:26.749: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210763220"},"items":null}

  Mar 27 19:33:26.755: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210763220"},"items":null}

  Mar 27 19:33:26.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8430" for this suite. @ 03/27/24 19:33:26.816
• [11.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 03/27/24 19:33:26.855
  Mar 27 19:33:26.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename job @ 03/27/24 19:33:26.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:33:26.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:33:26.939
  STEP: Creating a job @ 03/27/24 19:33:26.946
  STEP: Ensuring active pods == parallelism @ 03/27/24 19:33:26.97
  STEP: Orphaning one of the Job's Pods @ 03/27/24 19:33:28.98
  Mar 27 19:33:29.515: INFO: Successfully updated pod "adopt-release-bxtk6"
  STEP: Checking that the Job readopts the Pod @ 03/27/24 19:33:29.515
  STEP: Removing the labels from the Job's Pod @ 03/27/24 19:33:31.543
  Mar 27 19:33:32.080: INFO: Successfully updated pod "adopt-release-bxtk6"
  STEP: Checking that the Job releases the Pod @ 03/27/24 19:33:32.08
  Mar 27 19:33:34.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5025" for this suite. @ 03/27/24 19:33:34.123
• [7.281 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 03/27/24 19:33:34.138
  Mar 27 19:33:34.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replicaset @ 03/27/24 19:33:34.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:33:34.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:33:34.194
  STEP: Create a ReplicaSet @ 03/27/24 19:33:34.201
  STEP: Verify that the required pods have come up @ 03/27/24 19:33:34.217
  Mar 27 19:33:34.224: INFO: Pod name sample-pod: Found 0 pods out of 3
  Mar 27 19:33:39.242: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 03/27/24 19:33:39.243
  Mar 27 19:33:39.253: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 03/27/24 19:33:39.253
  STEP: DeleteCollection of the ReplicaSets @ 03/27/24 19:33:39.27
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 03/27/24 19:33:39.3
  Mar 27 19:33:39.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9917" for this suite. @ 03/27/24 19:33:39.352
• [5.281 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 03/27/24 19:33:39.419
  Mar 27 19:33:39.419: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:33:39.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:33:39.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:33:39.482
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:33:39.506
  STEP: Saw pod success @ 03/27/24 19:33:43.604
  Mar 27 19:33:43.614: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-46b63ce7-f6e2-4cb3-a708-4d74dad13263 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:33:43.633
  Mar 27 19:33:43.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8644" for this suite. @ 03/27/24 19:33:43.688
• [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 03/27/24 19:33:43.711
  Mar 27 19:33:43.711: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename disruption @ 03/27/24 19:33:43.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:33:43.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:33:43.775
  STEP: Creating a kubernetes client @ 03/27/24 19:33:43.786
  Mar 27 19:33:43.786: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename disruption-2 @ 03/27/24 19:33:43.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:33:43.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:33:43.845
  STEP: Waiting for the pdb to be processed @ 03/27/24 19:33:43.868
  STEP: Waiting for the pdb to be processed @ 03/27/24 19:33:45.912
  STEP: Waiting for the pdb to be processed @ 03/27/24 19:33:45.952
  STEP: listing a collection of PDBs across all namespaces @ 03/27/24 19:33:48.005
  STEP: listing a collection of PDBs in namespace disruption-9844 @ 03/27/24 19:33:48.015
  STEP: deleting a collection of PDBs @ 03/27/24 19:33:48.022
  STEP: Waiting for the PDB collection to be deleted @ 03/27/24 19:33:48.065
  Mar 27 19:33:48.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:33:48.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7962" for this suite. @ 03/27/24 19:33:48.095
  STEP: Destroying namespace "disruption-9844" for this suite. @ 03/27/24 19:33:48.113
• [4.433 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 03/27/24 19:33:48.145
  Mar 27 19:33:48.145: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 19:33:48.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:33:48.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:33:48.244
  STEP: Discovering how many secrets are in namespace by default @ 03/27/24 19:33:48.25
  STEP: Counting existing ResourceQuota @ 03/27/24 19:33:53.264
  STEP: Creating a ResourceQuota @ 03/27/24 19:33:58.271
  STEP: Ensuring resource quota status is calculated @ 03/27/24 19:33:58.281
  STEP: Creating a Secret @ 03/27/24 19:34:00.291
  STEP: Ensuring resource quota status captures secret creation @ 03/27/24 19:34:00.326
  STEP: Deleting a secret @ 03/27/24 19:34:02.336
  STEP: Ensuring resource quota status released usage @ 03/27/24 19:34:02.362
  Mar 27 19:34:04.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1986" for this suite. @ 03/27/24 19:34:04.389
• [16.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 03/27/24 19:34:04.416
  Mar 27 19:34:04.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:34:04.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:34:04.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:34:04.502
  STEP: Creating configMap with name projected-configmap-test-volume-map-c903fd85-7023-406c-a6a8-90ec4e924938 @ 03/27/24 19:34:04.512
  STEP: Creating a pod to test consume configMaps @ 03/27/24 19:34:04.527
  STEP: Saw pod success @ 03/27/24 19:34:08.605
  Mar 27 19:34:08.615: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-7cf3e32d-451b-4302-91ed-729a8d4223b7 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:34:08.637
  Mar 27 19:34:08.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7659" for this suite. @ 03/27/24 19:34:08.706
• [4.306 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 03/27/24 19:34:08.725
  Mar 27 19:34:08.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:34:08.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:34:08.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:34:08.781
  STEP: Creating Pod @ 03/27/24 19:34:08.79
  STEP: Reading file content from the nginx-container @ 03/27/24 19:34:12.868
  Mar 27 19:34:12.869: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6998 PodName:pod-sharedvolume-16913da0-2186-4dfe-bf05-cce943d3619c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:34:12.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:34:12.870: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:34:12.871: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-6998/pods/pod-sharedvolume-16913da0-2186-4dfe-bf05-cce943d3619c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Mar 27 19:34:13.029: INFO: Exec stderr: ""
  Mar 27 19:34:13.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6998" for this suite. @ 03/27/24 19:34:13.044
• [4.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 03/27/24 19:34:13.071
  Mar 27 19:34:13.071: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-runtime @ 03/27/24 19:34:13.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:34:13.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:34:13.122
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 03/27/24 19:34:13.15
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 03/27/24 19:34:33.4
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 03/27/24 19:34:33.407
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 03/27/24 19:34:33.422
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 03/27/24 19:34:33.422
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 03/27/24 19:34:33.482
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 03/27/24 19:34:36.517
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 03/27/24 19:34:37.543
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 03/27/24 19:34:37.557
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 03/27/24 19:34:37.557
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 03/27/24 19:34:37.616
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 03/27/24 19:34:38.639
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 03/27/24 19:34:40.666
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 03/27/24 19:34:40.692
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 03/27/24 19:34:40.692
  Mar 27 19:34:40.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9073" for this suite. @ 03/27/24 19:34:40.78
• [27.735 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 03/27/24 19:34:40.811
  Mar 27 19:34:40.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:34:40.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:34:40.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:34:40.859
  STEP: Creating configMap with name projected-configmap-test-volume-5d9c7cbd-d726-49b7-9a78-e082d89c4c11 @ 03/27/24 19:34:40.866
  STEP: Creating a pod to test consume configMaps @ 03/27/24 19:34:40.875
  STEP: Saw pod success @ 03/27/24 19:34:44.931
  Mar 27 19:34:44.939: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-c463cc93-2ec5-4f94-a773-ae18cebfbf8a container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:34:44.954
  Mar 27 19:34:44.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6407" for this suite. @ 03/27/24 19:34:44.997
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 03/27/24 19:34:45.039
  Mar 27 19:34:45.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename namespaces @ 03/27/24 19:34:45.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:34:45.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:34:45.083
  STEP: Creating a test namespace @ 03/27/24 19:34:45.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:34:45.142
  STEP: Creating a pod in the namespace @ 03/27/24 19:34:45.149
  STEP: Waiting for the pod to have running status @ 03/27/24 19:34:45.174
  STEP: Deleting the namespace @ 03/27/24 19:34:47.208
  STEP: Waiting for the namespace to be removed. @ 03/27/24 19:34:47.239
  STEP: Recreating the namespace @ 03/27/24 19:35:00.246
  STEP: Verifying there are no pods in the namespace @ 03/27/24 19:35:00.279
  Mar 27 19:35:00.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1316" for this suite. @ 03/27/24 19:35:00.296
  STEP: Destroying namespace "nsdeletetest-3556" for this suite. @ 03/27/24 19:35:00.309
  Mar 27 19:35:00.323: INFO: Namespace nsdeletetest-3556 was already deleted
  STEP: Destroying namespace "nsdeletetest-1986" for this suite. @ 03/27/24 19:35:00.323
• [15.298 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 03/27/24 19:35:00.338
  Mar 27 19:35:00.338: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:35:00.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:35:00.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:35:00.377
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4092 @ 03/27/24 19:35:00.385
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/27/24 19:35:00.423
  STEP: creating service externalsvc in namespace services-4092 @ 03/27/24 19:35:00.423
  STEP: creating replication controller externalsvc in namespace services-4092 @ 03/27/24 19:35:00.47
  I0327 19:35:00.494281      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4092, replica count: 2
  I0327 19:35:03.545843      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 03/27/24 19:35:03.561
  Mar 27 19:35:03.610: INFO: Creating new exec pod
  Mar 27 19:35:05.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4092 exec execpodr6pk6 -- /bin/sh -x -c nslookup nodeport-service.services-4092.svc.cluster.local'
  Mar 27 19:35:06.075: INFO: stderr: "+ nslookup nodeport-service.services-4092.svc.cluster.local\n"
  Mar 27 19:35:06.075: INFO: stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nnodeport-service.services-4092.svc.cluster.local\tcanonical name = externalsvc.services-4092.svc.cluster.local.\nName:\texternalsvc.services-4092.svc.cluster.local\nAddress: 10.233.5.19\n\n"
  Mar 27 19:35:06.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-4092, will wait for the garbage collector to delete the pods @ 03/27/24 19:35:06.092
  Mar 27 19:35:06.166: INFO: Deleting ReplicationController externalsvc took: 14.513226ms
  Mar 27 19:35:06.268: INFO: Terminating ReplicationController externalsvc pods took: 102.305907ms
  Mar 27 19:35:09.556: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-4092" for this suite. @ 03/27/24 19:35:09.605
• [9.320 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 03/27/24 19:35:09.662
  Mar 27 19:35:09.662: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:35:09.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:35:09.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:35:09.721
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:35:09.734
  STEP: Saw pod success @ 03/27/24 19:35:13.816
  Mar 27 19:35:13.827: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-4d0de9c0-7dec-424a-9b21-800ffab6bad5 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:35:13.843
  Mar 27 19:35:13.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6576" for this suite. @ 03/27/24 19:35:13.947
• [4.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 03/27/24 19:35:14.005
  Mar 27 19:35:14.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:35:14.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:35:14.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:35:14.086
  Mar 27 19:35:14.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7514" for this suite. @ 03/27/24 19:35:14.142
• [0.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 03/27/24 19:35:14.177
  Mar 27 19:35:14.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-preemption @ 03/27/24 19:35:14.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:35:14.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:35:14.257
  Mar 27 19:35:14.332: INFO: Waiting up to 1m0s for all nodes to be ready
  Mar 27 19:36:14.463: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/27/24 19:36:14.47
  Mar 27 19:36:14.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/27/24 19:36:14.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:36:14.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:36:14.521
  STEP: Finding an available node @ 03/27/24 19:36:14.529
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/27/24 19:36:14.529
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/27/24 19:36:16.59
  Mar 27 19:36:16.629: INFO: found a healthy node: env1-test-worker-2
  Mar 27 19:36:22.897: INFO: pods created so far: [1 1 1]
  Mar 27 19:36:22.897: INFO: length of pods created so far: 3
  Mar 27 19:36:24.929: INFO: pods created so far: [2 2 1]
  Mar 27 19:36:31.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:36:32.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7409" for this suite. @ 03/27/24 19:36:32.195
  STEP: Destroying namespace "sched-preemption-681" for this suite. @ 03/27/24 19:36:32.209
• [78.054 seconds]
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 03/27/24 19:36:32.232
  Mar 27 19:36:32.232: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:36:32.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:36:32.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:36:32.293
  STEP: Creating configMap with name configmap-projected-all-test-volume-953abf20-0cea-48b2-921a-4db4cf65ffa9 @ 03/27/24 19:36:32.3
  STEP: Creating secret with name secret-projected-all-test-volume-4e1d27a0-6b6a-46cf-a980-120b28395d54 @ 03/27/24 19:36:32.318
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 03/27/24 19:36:32.336
  STEP: Saw pod success @ 03/27/24 19:36:36.422
  Mar 27 19:36:36.447: INFO: Trying to get logs from node env1-test-worker-2 pod projected-volume-a72418fc-c174-47f6-ac0f-904410653aec container projected-all-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 19:36:36.486
  Mar 27 19:36:36.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3080" for this suite. @ 03/27/24 19:36:36.578
• [4.366 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 03/27/24 19:36:36.599
  Mar 27 19:36:36.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename subjectreview @ 03/27/24 19:36:36.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:36:36.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:36:36.645
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-884" @ 03/27/24 19:36:36.653
  Mar 27 19:36:36.664: INFO: saUsername: "system:serviceaccount:subjectreview-884:e2e"
  Mar 27 19:36:36.664: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-884"}
  Mar 27 19:36:36.664: INFO: saUID: "3a1f176c-4a6c-444d-9130-3abe8b528f0b"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-884:e2e" @ 03/27/24 19:36:36.664
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-884:e2e" @ 03/27/24 19:36:36.665
  Mar 27 19:36:36.670: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-884:e2e" api 'list' configmaps in "subjectreview-884" namespace @ 03/27/24 19:36:36.67
  Mar 27 19:36:36.674: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-884:e2e" @ 03/27/24 19:36:36.674
  Mar 27 19:36:36.679: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Mar 27 19:36:36.679: INFO: LocalSubjectAccessReview has been verified
  Mar 27 19:36:36.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-884" for this suite. @ 03/27/24 19:36:36.692
• [0.118 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 03/27/24 19:36:36.719
  Mar 27 19:36:36.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename podtemplate @ 03/27/24 19:36:36.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:36:36.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:36:36.828
  STEP: Create set of pod templates @ 03/27/24 19:36:36.835
  Mar 27 19:36:36.846: INFO: created test-podtemplate-1
  Mar 27 19:36:36.862: INFO: created test-podtemplate-2
  Mar 27 19:36:36.878: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 03/27/24 19:36:36.878
  STEP: delete collection of pod templates @ 03/27/24 19:36:36.886
  Mar 27 19:36:36.886: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 03/27/24 19:36:36.942
  Mar 27 19:36:36.942: INFO: requesting list of pod templates to confirm quantity
  Mar 27 19:36:36.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5121" for this suite. @ 03/27/24 19:36:36.964
• [0.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 03/27/24 19:36:36.987
  Mar 27 19:36:36.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 19:36:36.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:36:37.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:36:37.038
  STEP: creating the pod @ 03/27/24 19:36:37.043
  STEP: submitting the pod to kubernetes @ 03/27/24 19:36:37.043
  W0327 19:36:37.062901      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 03/27/24 19:36:39.096
  STEP: updating the pod @ 03/27/24 19:36:39.108
  Mar 27 19:36:39.643: INFO: Successfully updated pod "pod-update-activedeadlineseconds-c360c94c-3c91-4ba8-8e72-490bb21f21b9"
  Mar 27 19:36:43.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8046" for this suite. @ 03/27/24 19:36:43.729
• [6.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 03/27/24 19:36:43.752
  Mar 27 19:36:43.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:36:43.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:36:43.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:36:43.837
  STEP: Setting up server cert @ 03/27/24 19:36:43.913
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:36:44.906
  STEP: Deploying the webhook pod @ 03/27/24 19:36:44.924
  STEP: Wait for the deployment to be ready @ 03/27/24 19:36:44.962
  Mar 27 19:36:45.005: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/27/24 19:36:47.036
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:36:47.087
  Mar 27 19:36:48.088: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 27 19:36:48.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2342-crds.webhook.example.com via the AdmissionRegistration API @ 03/27/24 19:36:53.631
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/27/24 19:36:53.681
  Mar 27 19:36:55.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2986" for this suite. @ 03/27/24 19:36:56.591
  STEP: Destroying namespace "webhook-markers-3575" for this suite. @ 03/27/24 19:36:56.616
• [12.882 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 03/27/24 19:36:56.636
  Mar 27 19:36:56.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename proxy @ 03/27/24 19:36:56.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:36:56.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:36:56.723
  STEP: starting an echo server on multiple ports @ 03/27/24 19:36:56.754
  STEP: creating replication controller proxy-service-8m68j in namespace proxy-4831 @ 03/27/24 19:36:56.754
  I0327 19:36:56.774349      22 runners.go:197] Created replication controller with name: proxy-service-8m68j, namespace: proxy-4831, replica count: 1
  I0327 19:36:57.825510      22 runners.go:197] proxy-service-8m68j Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0327 19:36:58.826029      22 runners.go:197] proxy-service-8m68j Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0327 19:36:59.826444      22 runners.go:197] proxy-service-8m68j Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 19:36:59.834: INFO: setup took 3.102170826s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 03/27/24 19:36:59.834
  Mar 27 19:36:59.867: INFO: (0) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 31.505349ms)
  Mar 27 19:36:59.867: INFO: (0) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 32.896874ms)
  Mar 27 19:36:59.867: INFO: (0) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 33.32366ms)
  Mar 27 19:36:59.881: INFO: (0) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 46.764098ms)
  Mar 27 19:36:59.882: INFO: (0) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 47.344204ms)
  Mar 27 19:36:59.882: INFO: (0) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 47.337693ms)
  Mar 27 19:36:59.882: INFO: (0) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 47.735288ms)
  Mar 27 19:36:59.884: INFO: (0) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 49.124781ms)
  Mar 27 19:36:59.886: INFO: (0) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 51.526731ms)
  Mar 27 19:36:59.887: INFO: (0) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 51.595789ms)
  Mar 27 19:36:59.887: INFO: (0) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 52.744293ms)
  Mar 27 19:36:59.888: INFO: (0) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 52.444219ms)
  Mar 27 19:36:59.889: INFO: (0) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 53.851452ms)
  Mar 27 19:36:59.891: INFO: (0) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 56.625551ms)
  Mar 27 19:36:59.896: INFO: (0) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 61.547608ms)
  Mar 27 19:36:59.898: INFO: (0) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 63.397971ms)
  Mar 27 19:36:59.916: INFO: (1) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 17.681928ms)
  Mar 27 19:36:59.924: INFO: (1) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 24.415992ms)
  Mar 27 19:36:59.924: INFO: (1) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 25.252106ms)
  Mar 27 19:36:59.924: INFO: (1) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 25.866784ms)
  Mar 27 19:36:59.924: INFO: (1) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 25.298337ms)
  Mar 27 19:36:59.927: INFO: (1) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 27.890357ms)
  Mar 27 19:36:59.928: INFO: (1) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 29.408685ms)
  Mar 27 19:36:59.929: INFO: (1) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 29.577425ms)
  Mar 27 19:36:59.929: INFO: (1) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 30.344059ms)
  Mar 27 19:36:59.930: INFO: (1) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 30.335572ms)
  Mar 27 19:36:59.930: INFO: (1) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 30.858715ms)
  Mar 27 19:36:59.934: INFO: (1) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 34.834732ms)
  Mar 27 19:36:59.936: INFO: (1) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 37.000713ms)
  Mar 27 19:36:59.937: INFO: (1) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 38.089383ms)
  Mar 27 19:36:59.942: INFO: (1) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 42.608313ms)
  Mar 27 19:36:59.942: INFO: (1) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 43.454348ms)
  Mar 27 19:36:59.956: INFO: (2) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 12.965391ms)
  Mar 27 19:36:59.959: INFO: (2) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 16.191861ms)
  Mar 27 19:36:59.964: INFO: (2) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 19.695439ms)
  Mar 27 19:36:59.964: INFO: (2) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 20.668264ms)
  Mar 27 19:36:59.968: INFO: (2) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 23.689082ms)
  Mar 27 19:36:59.971: INFO: (2) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 26.255636ms)
  Mar 27 19:36:59.972: INFO: (2) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 28.368215ms)
  Mar 27 19:36:59.973: INFO: (2) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 29.842897ms)
  Mar 27 19:36:59.973: INFO: (2) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 29.524302ms)
  Mar 27 19:36:59.974: INFO: (2) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 29.126351ms)
  Mar 27 19:36:59.983: INFO: (2) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 38.179543ms)
  Mar 27 19:36:59.984: INFO: (2) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 41.316745ms)
  Mar 27 19:36:59.996: INFO: (2) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 51.18709ms)
  Mar 27 19:36:59.996: INFO: (2) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 51.048881ms)
  Mar 27 19:37:00.000: INFO: (2) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 55.997948ms)
  Mar 27 19:37:00.001: INFO: (2) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 58.255166ms)
  Mar 27 19:37:00.020: INFO: (3) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 18.924169ms)
  Mar 27 19:37:00.034: INFO: (3) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 31.308874ms)
  Mar 27 19:37:00.041: INFO: (3) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 38.384337ms)
  Mar 27 19:37:00.042: INFO: (3) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 39.412778ms)
  Mar 27 19:37:00.044: INFO: (3) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 41.673464ms)
  Mar 27 19:37:00.044: INFO: (3) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 41.760448ms)
  Mar 27 19:37:00.044: INFO: (3) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 41.575665ms)
  Mar 27 19:37:00.049: INFO: (3) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 46.622962ms)
  Mar 27 19:37:00.049: INFO: (3) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 47.049087ms)
  Mar 27 19:37:00.049: INFO: (3) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 47.522402ms)
  Mar 27 19:37:00.049: INFO: (3) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 47.49437ms)
  Mar 27 19:37:00.049: INFO: (3) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 47.632981ms)
  Mar 27 19:37:00.051: INFO: (3) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 48.71496ms)
  Mar 27 19:37:00.052: INFO: (3) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 49.790469ms)
  Mar 27 19:37:00.058: INFO: (3) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 55.427327ms)
  Mar 27 19:37:00.063: INFO: (3) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 61.387311ms)
  Mar 27 19:37:00.086: INFO: (4) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 22.197242ms)
  Mar 27 19:37:00.087: INFO: (4) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 22.571392ms)
  Mar 27 19:37:00.089: INFO: (4) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 24.765062ms)
  Mar 27 19:37:00.089: INFO: (4) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 24.907873ms)
  Mar 27 19:37:00.093: INFO: (4) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 28.209486ms)
  Mar 27 19:37:00.098: INFO: (4) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 33.803618ms)
  Mar 27 19:37:00.099: INFO: (4) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 34.706957ms)
  Mar 27 19:37:00.101: INFO: (4) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 36.227436ms)
  Mar 27 19:37:00.101: INFO: (4) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 37.117437ms)
  Mar 27 19:37:00.106: INFO: (4) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 41.282864ms)
  Mar 27 19:37:00.108: INFO: (4) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 43.431796ms)
  Mar 27 19:37:00.115: INFO: (4) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 50.860305ms)
  Mar 27 19:37:00.115: INFO: (4) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 50.830961ms)
  Mar 27 19:37:00.115: INFO: (4) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 50.925146ms)
  Mar 27 19:37:00.115: INFO: (4) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 51.030737ms)
  Mar 27 19:37:00.121: INFO: (4) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 57.002071ms)
  Mar 27 19:37:00.137: INFO: (5) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 15.264833ms)
  Mar 27 19:37:00.144: INFO: (5) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 22.419519ms)
  Mar 27 19:37:00.146: INFO: (5) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 24.19282ms)
  Mar 27 19:37:00.147: INFO: (5) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 24.568656ms)
  Mar 27 19:37:00.151: INFO: (5) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 28.386881ms)
  Mar 27 19:37:00.151: INFO: (5) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 28.676125ms)
  Mar 27 19:37:00.152: INFO: (5) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 30.516224ms)
  Mar 27 19:37:00.153: INFO: (5) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 30.931597ms)
  Mar 27 19:37:00.154: INFO: (5) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 31.53023ms)
  Mar 27 19:37:00.155: INFO: (5) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 32.919114ms)
  Mar 27 19:37:00.159: INFO: (5) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 36.986658ms)
  Mar 27 19:37:00.160: INFO: (5) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 37.482054ms)
  Mar 27 19:37:00.161: INFO: (5) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 38.727327ms)
  Mar 27 19:37:00.161: INFO: (5) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 39.32427ms)
  Mar 27 19:37:00.162: INFO: (5) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 39.552025ms)
  Mar 27 19:37:00.164: INFO: (5) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 42.548085ms)
  Mar 27 19:37:00.185: INFO: (6) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 20.658104ms)
  Mar 27 19:37:00.185: INFO: (6) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 20.219548ms)
  Mar 27 19:37:00.185: INFO: (6) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 20.127553ms)
  Mar 27 19:37:00.201: INFO: (6) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 35.791095ms)
  Mar 27 19:37:00.201: INFO: (6) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 36.195852ms)
  Mar 27 19:37:00.201: INFO: (6) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 36.143111ms)
  Mar 27 19:37:00.201: INFO: (6) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 35.962896ms)
  Mar 27 19:37:00.202: INFO: (6) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 36.974839ms)
  Mar 27 19:37:00.202: INFO: (6) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 36.815071ms)
  Mar 27 19:37:00.202: INFO: (6) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 37.072114ms)
  Mar 27 19:37:00.202: INFO: (6) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 37.543688ms)
  Mar 27 19:37:00.202: INFO: (6) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 37.363074ms)
  Mar 27 19:37:00.202: INFO: (6) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 37.13525ms)
  Mar 27 19:37:00.205: INFO: (6) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 39.527069ms)
  Mar 27 19:37:00.205: INFO: (6) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 39.542413ms)
  Mar 27 19:37:00.206: INFO: (6) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 41.652452ms)
  Mar 27 19:37:00.226: INFO: (7) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 19.621221ms)
  Mar 27 19:37:00.228: INFO: (7) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 20.761459ms)
  Mar 27 19:37:00.228: INFO: (7) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 20.733494ms)
  Mar 27 19:37:00.231: INFO: (7) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 23.980021ms)
  Mar 27 19:37:00.232: INFO: (7) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 25.020407ms)
  Mar 27 19:37:00.234: INFO: (7) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 25.950789ms)
  Mar 27 19:37:00.236: INFO: (7) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 28.703655ms)
  Mar 27 19:37:00.237: INFO: (7) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 29.973783ms)
  Mar 27 19:37:00.237: INFO: (7) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 30.386216ms)
  Mar 27 19:37:00.238: INFO: (7) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 30.454836ms)
  Mar 27 19:37:00.240: INFO: (7) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 33.073311ms)
  Mar 27 19:37:00.243: INFO: (7) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 36.037297ms)
  Mar 27 19:37:00.245: INFO: (7) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 37.536748ms)
  Mar 27 19:37:00.245: INFO: (7) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 37.663583ms)
  Mar 27 19:37:00.246: INFO: (7) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 38.306692ms)
  Mar 27 19:37:00.247: INFO: (7) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 39.546458ms)
  Mar 27 19:37:00.268: INFO: (8) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 21.505544ms)
  Mar 27 19:37:00.274: INFO: (8) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 26.410206ms)
  Mar 27 19:37:00.275: INFO: (8) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 28.259573ms)
  Mar 27 19:37:00.276: INFO: (8) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 28.365639ms)
  Mar 27 19:37:00.283: INFO: (8) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 35.143179ms)
  Mar 27 19:37:00.283: INFO: (8) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 35.207257ms)
  Mar 27 19:37:00.283: INFO: (8) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 35.668035ms)
  Mar 27 19:37:00.285: INFO: (8) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 37.89375ms)
  Mar 27 19:37:00.286: INFO: (8) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 38.547245ms)
  Mar 27 19:37:00.286: INFO: (8) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 38.825707ms)
  Mar 27 19:37:00.289: INFO: (8) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 41.500359ms)
  Mar 27 19:37:00.290: INFO: (8) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 42.431752ms)
  Mar 27 19:37:00.291: INFO: (8) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 43.17429ms)
  Mar 27 19:37:00.291: INFO: (8) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 43.216389ms)
  Mar 27 19:37:00.293: INFO: (8) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 45.181627ms)
  Mar 27 19:37:00.294: INFO: (8) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 46.243053ms)
  Mar 27 19:37:00.308: INFO: (9) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 13.919497ms)
  Mar 27 19:37:00.310: INFO: (9) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 16.005335ms)
  Mar 27 19:37:00.315: INFO: (9) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 19.340249ms)
  Mar 27 19:37:00.315: INFO: (9) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 19.919773ms)
  Mar 27 19:37:00.315: INFO: (9) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 20.343743ms)
  Mar 27 19:37:00.324: INFO: (9) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 28.912173ms)
  Mar 27 19:37:00.324: INFO: (9) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 29.202298ms)
  Mar 27 19:37:00.324: INFO: (9) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 29.298474ms)
  Mar 27 19:37:00.324: INFO: (9) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 29.742558ms)
  Mar 27 19:37:00.328: INFO: (9) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 32.085218ms)
  Mar 27 19:37:00.328: INFO: (9) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 32.31253ms)
  Mar 27 19:37:00.328: INFO: (9) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 33.343579ms)
  Mar 27 19:37:00.330: INFO: (9) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 34.869043ms)
  Mar 27 19:37:00.336: INFO: (9) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 41.779931ms)
  Mar 27 19:37:00.337: INFO: (9) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 42.831557ms)
  Mar 27 19:37:00.338: INFO: (9) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 43.762626ms)
  Mar 27 19:37:00.362: INFO: (10) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 23.221674ms)
  Mar 27 19:37:00.363: INFO: (10) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 23.76721ms)
  Mar 27 19:37:00.364: INFO: (10) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 25.075721ms)
  Mar 27 19:37:00.364: INFO: (10) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 24.445818ms)
  Mar 27 19:37:00.365: INFO: (10) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 26.114013ms)
  Mar 27 19:37:00.368: INFO: (10) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 29.342994ms)
  Mar 27 19:37:00.370: INFO: (10) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 31.151934ms)
  Mar 27 19:37:00.370: INFO: (10) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 31.406305ms)
  Mar 27 19:37:00.371: INFO: (10) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 31.679179ms)
  Mar 27 19:37:00.376: INFO: (10) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 37.015518ms)
  Mar 27 19:37:00.376: INFO: (10) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 37.298292ms)
  Mar 27 19:37:00.377: INFO: (10) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 37.289091ms)
  Mar 27 19:37:00.377: INFO: (10) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 38.174322ms)
  Mar 27 19:37:00.378: INFO: (10) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 39.119207ms)
  Mar 27 19:37:00.379: INFO: (10) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 39.161976ms)
  Mar 27 19:37:00.383: INFO: (10) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 44.435374ms)
  Mar 27 19:37:00.405: INFO: (11) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 18.371741ms)
  Mar 27 19:37:00.414: INFO: (11) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 28.805462ms)
  Mar 27 19:37:00.415: INFO: (11) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 28.185816ms)
  Mar 27 19:37:00.417: INFO: (11) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 30.688938ms)
  Mar 27 19:37:00.417: INFO: (11) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 33.958912ms)
  Mar 27 19:37:00.418: INFO: (11) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 32.102328ms)
  Mar 27 19:37:00.419: INFO: (11) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 32.447617ms)
  Mar 27 19:37:00.419: INFO: (11) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 35.111588ms)
  Mar 27 19:37:00.424: INFO: (11) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 36.898838ms)
  Mar 27 19:37:00.424: INFO: (11) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 36.149791ms)
  Mar 27 19:37:00.424: INFO: (11) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 36.879172ms)
  Mar 27 19:37:00.425: INFO: (11) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 39.808766ms)
  Mar 27 19:37:00.428: INFO: (11) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 44.184931ms)
  Mar 27 19:37:00.429: INFO: (11) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 44.305702ms)
  Mar 27 19:37:00.430: INFO: (11) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 45.640621ms)
  Mar 27 19:37:00.437: INFO: (11) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 51.386767ms)
  Mar 27 19:37:00.457: INFO: (12) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 19.47924ms)
  Mar 27 19:37:00.466: INFO: (12) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 28.278021ms)
  Mar 27 19:37:00.466: INFO: (12) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 28.61394ms)
  Mar 27 19:37:00.466: INFO: (12) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 27.928198ms)
  Mar 27 19:37:00.466: INFO: (12) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 28.161912ms)
  Mar 27 19:37:00.466: INFO: (12) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 28.067975ms)
  Mar 27 19:37:00.473: INFO: (12) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 35.421092ms)
  Mar 27 19:37:00.474: INFO: (12) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 35.786184ms)
  Mar 27 19:37:00.475: INFO: (12) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 37.299896ms)
  Mar 27 19:37:00.484: INFO: (12) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 46.383601ms)
  Mar 27 19:37:00.485: INFO: (12) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 47.405664ms)
  Mar 27 19:37:00.486: INFO: (12) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 48.368015ms)
  Mar 27 19:37:00.489: INFO: (12) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 50.562506ms)
  Mar 27 19:37:00.489: INFO: (12) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 51.71423ms)
  Mar 27 19:37:00.490: INFO: (12) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 51.635757ms)
  Mar 27 19:37:00.494: INFO: (12) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 56.931998ms)
  Mar 27 19:37:00.513: INFO: (13) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 16.810276ms)
  Mar 27 19:37:00.513: INFO: (13) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 18.095594ms)
  Mar 27 19:37:00.513: INFO: (13) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 18.729313ms)
  Mar 27 19:37:00.513: INFO: (13) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 18.384703ms)
  Mar 27 19:37:00.520: INFO: (13) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 24.593503ms)
  Mar 27 19:37:00.521: INFO: (13) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 24.938862ms)
  Mar 27 19:37:00.521: INFO: (13) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 25.988843ms)
  Mar 27 19:37:00.527: INFO: (13) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 31.077812ms)
  Mar 27 19:37:00.534: INFO: (13) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 39.105051ms)
  Mar 27 19:37:00.538: INFO: (13) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 43.003457ms)
  Mar 27 19:37:00.541: INFO: (13) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 44.820451ms)
  Mar 27 19:37:00.542: INFO: (13) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 46.379544ms)
  Mar 27 19:37:00.543: INFO: (13) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 47.394017ms)
  Mar 27 19:37:00.543: INFO: (13) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 47.963355ms)
  Mar 27 19:37:00.543: INFO: (13) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 47.250339ms)
  Mar 27 19:37:00.550: INFO: (13) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 53.983061ms)
  Mar 27 19:37:00.570: INFO: (14) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 19.757184ms)
  Mar 27 19:37:00.582: INFO: (14) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 31.047805ms)
  Mar 27 19:37:00.582: INFO: (14) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 31.91766ms)
  Mar 27 19:37:00.582: INFO: (14) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 31.85317ms)
  Mar 27 19:37:00.582: INFO: (14) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 31.865749ms)
  Mar 27 19:37:00.582: INFO: (14) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 31.816757ms)
  Mar 27 19:37:00.582: INFO: (14) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 31.872719ms)
  Mar 27 19:37:00.583: INFO: (14) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 32.520356ms)
  Mar 27 19:37:00.583: INFO: (14) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 32.688711ms)
  Mar 27 19:37:00.583: INFO: (14) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 33.740343ms)
  Mar 27 19:37:00.592: INFO: (14) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 41.848207ms)
  Mar 27 19:37:00.593: INFO: (14) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 42.739952ms)
  Mar 27 19:37:00.595: INFO: (14) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 45.12201ms)
  Mar 27 19:37:00.597: INFO: (14) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 46.355861ms)
  Mar 27 19:37:00.597: INFO: (14) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 47.220315ms)
  Mar 27 19:37:00.597: INFO: (14) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 47.392336ms)
  Mar 27 19:37:00.618: INFO: (15) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 19.790907ms)
  Mar 27 19:37:00.617: INFO: (15) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 19.884916ms)
  Mar 27 19:37:00.618: INFO: (15) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 20.056448ms)
  Mar 27 19:37:00.619: INFO: (15) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 21.13248ms)
  Mar 27 19:37:00.621: INFO: (15) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 23.764249ms)
  Mar 27 19:37:00.623: INFO: (15) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 24.74737ms)
  Mar 27 19:37:00.623: INFO: (15) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 25.198652ms)
  Mar 27 19:37:00.624: INFO: (15) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 26.286279ms)
  Mar 27 19:37:00.628: INFO: (15) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 30.170209ms)
  Mar 27 19:37:00.635: INFO: (15) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 36.895604ms)
  Mar 27 19:37:00.635: INFO: (15) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 37.348091ms)
  Mar 27 19:37:00.636: INFO: (15) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 38.323001ms)
  Mar 27 19:37:00.637: INFO: (15) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 39.537138ms)
  Mar 27 19:37:00.638: INFO: (15) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 39.973144ms)
  Mar 27 19:37:00.640: INFO: (15) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 41.666103ms)
  Mar 27 19:37:00.642: INFO: (15) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 43.585723ms)
  Mar 27 19:37:00.665: INFO: (16) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 23.319532ms)
  Mar 27 19:37:00.666: INFO: (16) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 23.258882ms)
  Mar 27 19:37:00.668: INFO: (16) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 26.479056ms)
  Mar 27 19:37:00.669: INFO: (16) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 26.797087ms)
  Mar 27 19:37:00.669: INFO: (16) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 26.658934ms)
  Mar 27 19:37:00.673: INFO: (16) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 30.376747ms)
  Mar 27 19:37:00.673: INFO: (16) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 30.449691ms)
  Mar 27 19:37:00.673: INFO: (16) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 30.51745ms)
  Mar 27 19:37:00.674: INFO: (16) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 31.949287ms)
  Mar 27 19:37:00.680: INFO: (16) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 37.081171ms)
  Mar 27 19:37:00.680: INFO: (16) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 37.311624ms)
  Mar 27 19:37:00.684: INFO: (16) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 41.42175ms)
  Mar 27 19:37:00.686: INFO: (16) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 43.125196ms)
  Mar 27 19:37:00.687: INFO: (16) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 44.959576ms)
  Mar 27 19:37:00.690: INFO: (16) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 46.760069ms)
  Mar 27 19:37:00.694: INFO: (16) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 51.185535ms)
  Mar 27 19:37:00.716: INFO: (17) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 21.597113ms)
  Mar 27 19:37:00.727: INFO: (17) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 32.760324ms)
  Mar 27 19:37:00.730: INFO: (17) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 35.313527ms)
  Mar 27 19:37:00.733: INFO: (17) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 38.691038ms)
  Mar 27 19:37:00.737: INFO: (17) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 42.717801ms)
  Mar 27 19:37:00.737: INFO: (17) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 42.707508ms)
  Mar 27 19:37:00.740: INFO: (17) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 44.824365ms)
  Mar 27 19:37:00.742: INFO: (17) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 47.299827ms)
  Mar 27 19:37:00.746: INFO: (17) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 50.812635ms)
  Mar 27 19:37:00.746: INFO: (17) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 50.994823ms)
  Mar 27 19:37:00.746: INFO: (17) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 51.156134ms)
  Mar 27 19:37:00.747: INFO: (17) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 51.913411ms)
  Mar 27 19:37:00.747: INFO: (17) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 52.201271ms)
  Mar 27 19:37:00.748: INFO: (17) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 53.87967ms)
  Mar 27 19:37:00.780: INFO: (17) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 84.889645ms)
  Mar 27 19:37:00.780: INFO: (17) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 85.19582ms)
  Mar 27 19:37:00.809: INFO: (18) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 29.057796ms)
  Mar 27 19:37:00.813: INFO: (18) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 32.283914ms)
  Mar 27 19:37:00.813: INFO: (18) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 32.344161ms)
  Mar 27 19:37:00.813: INFO: (18) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 32.328149ms)
  Mar 27 19:37:00.814: INFO: (18) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 32.949393ms)
  Mar 27 19:37:00.814: INFO: (18) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 33.070861ms)
  Mar 27 19:37:00.829: INFO: (18) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 48.566061ms)
  Mar 27 19:37:00.829: INFO: (18) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 48.498525ms)
  Mar 27 19:37:00.830: INFO: (18) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 48.785934ms)
  Mar 27 19:37:00.830: INFO: (18) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 48.621856ms)
  Mar 27 19:37:00.831: INFO: (18) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 49.888605ms)
  Mar 27 19:37:00.831: INFO: (18) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 49.894346ms)
  Mar 27 19:37:00.831: INFO: (18) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 50.797158ms)
  Mar 27 19:37:00.837: INFO: (18) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 55.598347ms)
  Mar 27 19:37:00.837: INFO: (18) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 56.667351ms)
  Mar 27 19:37:00.838: INFO: (18) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 57.245889ms)
  Mar 27 19:37:00.853: INFO: (19) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 14.597523ms)
  Mar 27 19:37:00.853: INFO: (19) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 14.830082ms)
  Mar 27 19:37:00.856: INFO: (19) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:443/proxy/tlsrewritem... (200; 15.615376ms)
  Mar 27 19:37:00.857: INFO: (19) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname1/proxy/: foo (200; 18.987025ms)
  Mar 27 19:37:00.861: INFO: (19) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:160/proxy/: foo (200; 21.816273ms)
  Mar 27 19:37:00.862: INFO: (19) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:460/proxy/: tls baz (200; 22.653026ms)
  Mar 27 19:37:00.862: INFO: (19) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">test<... (200; 23.600149ms)
  Mar 27 19:37:00.864: INFO: (19) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname1/proxy/: tls baz (200; 25.665157ms)
  Mar 27 19:37:00.866: INFO: (19) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname1/proxy/: foo (200; 26.386067ms)
  Mar 27 19:37:00.868: INFO: (19) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:1080/proxy/rewriteme">... (200; 29.146575ms)
  Mar 27 19:37:00.870: INFO: (19) /api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/: <a href="/api/v1/namespaces/proxy-4831/pods/proxy-service-8m68j-gxmxw/proxy/rewriteme">test</a> (200; 30.908245ms)
  Mar 27 19:37:00.871: INFO: (19) /api/v1/namespaces/proxy-4831/pods/http:proxy-service-8m68j-gxmxw:162/proxy/: bar (200; 31.250933ms)
  Mar 27 19:37:00.876: INFO: (19) /api/v1/namespaces/proxy-4831/services/https:proxy-service-8m68j:tlsportname2/proxy/: tls qux (200; 35.898111ms)
  Mar 27 19:37:00.876: INFO: (19) /api/v1/namespaces/proxy-4831/services/proxy-service-8m68j:portname2/proxy/: bar (200; 36.26511ms)
  Mar 27 19:37:00.877: INFO: (19) /api/v1/namespaces/proxy-4831/pods/https:proxy-service-8m68j-gxmxw:462/proxy/: tls qux (200; 37.604236ms)
  Mar 27 19:37:00.881: INFO: (19) /api/v1/namespaces/proxy-4831/services/http:proxy-service-8m68j:portname2/proxy/: bar (200; 42.422562ms)
  Mar 27 19:37:00.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-8m68j in namespace proxy-4831, will wait for the garbage collector to delete the pods @ 03/27/24 19:37:00.897
  Mar 27 19:37:00.988: INFO: Deleting ReplicationController proxy-service-8m68j took: 22.620173ms
  Mar 27 19:37:01.089: INFO: Terminating ReplicationController proxy-service-8m68j pods took: 100.940787ms
  STEP: Destroying namespace "proxy-4831" for this suite. @ 03/27/24 19:37:02.09
• [5.481 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 03/27/24 19:37:02.118
  Mar 27 19:37:02.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 19:37:02.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:02.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:02.195
  Mar 27 19:37:04.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:37:04.265: INFO: Deleting pod "var-expansion-2f493f92-ec41-456c-9cae-053d58d9380c" in namespace "var-expansion-9342"
  Mar 27 19:37:04.279: INFO: Wait up to 5m0s for pod "var-expansion-2f493f92-ec41-456c-9cae-053d58d9380c" to be fully deleted
  STEP: Destroying namespace "var-expansion-9342" for this suite. @ 03/27/24 19:37:06.297
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 03/27/24 19:37:06.318
  Mar 27 19:37:06.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 19:37:06.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:06.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:06.399
  STEP: Counting existing ResourceQuota @ 03/27/24 19:37:06.406
  STEP: Creating a ResourceQuota @ 03/27/24 19:37:11.419
  STEP: Ensuring resource quota status is calculated @ 03/27/24 19:37:11.437
  STEP: Creating a Service @ 03/27/24 19:37:13.446
  STEP: Creating a NodePort Service @ 03/27/24 19:37:13.497
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 03/27/24 19:37:13.605
  STEP: Ensuring resource quota status captures service creation @ 03/27/24 19:37:13.673
  STEP: Deleting Services @ 03/27/24 19:37:15.695
  STEP: Ensuring resource quota status released usage @ 03/27/24 19:37:15.851
  Mar 27 19:37:17.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7898" for this suite. @ 03/27/24 19:37:17.876
• [11.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 03/27/24 19:37:17.895
  Mar 27 19:37:17.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 19:37:17.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:17.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:17.942
  STEP: creating a replication controller @ 03/27/24 19:37:17.95
  Mar 27 19:37:17.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 create -f -'
  Mar 27 19:37:19.253: INFO: stderr: ""
  Mar 27 19:37:19.253: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/27/24 19:37:19.253
  Mar 27 19:37:19.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 27 19:37:19.467: INFO: stderr: ""
  Mar 27 19:37:19.467: INFO: stdout: "update-demo-nautilus-2knjx update-demo-nautilus-tvm4z "
  Mar 27 19:37:19.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods update-demo-nautilus-2knjx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:37:19.643: INFO: stderr: ""
  Mar 27 19:37:19.643: INFO: stdout: ""
  Mar 27 19:37:19.643: INFO: update-demo-nautilus-2knjx is created but not running
  Mar 27 19:37:24.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 27 19:37:24.851: INFO: stderr: ""
  Mar 27 19:37:24.851: INFO: stdout: "update-demo-nautilus-2knjx update-demo-nautilus-tvm4z "
  Mar 27 19:37:24.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods update-demo-nautilus-2knjx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:37:25.017: INFO: stderr: ""
  Mar 27 19:37:25.017: INFO: stdout: "true"
  Mar 27 19:37:25.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods update-demo-nautilus-2knjx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 27 19:37:25.187: INFO: stderr: ""
  Mar 27 19:37:25.187: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Mar 27 19:37:25.187: INFO: validating pod update-demo-nautilus-2knjx
  Mar 27 19:37:25.205: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 27 19:37:25.206: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 27 19:37:25.206: INFO: update-demo-nautilus-2knjx is verified up and running
  Mar 27 19:37:25.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods update-demo-nautilus-tvm4z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:37:25.361: INFO: stderr: ""
  Mar 27 19:37:25.361: INFO: stdout: "true"
  Mar 27 19:37:25.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods update-demo-nautilus-tvm4z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 27 19:37:25.556: INFO: stderr: ""
  Mar 27 19:37:25.556: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Mar 27 19:37:25.556: INFO: validating pod update-demo-nautilus-tvm4z
  Mar 27 19:37:25.577: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 27 19:37:25.577: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 27 19:37:25.577: INFO: update-demo-nautilus-tvm4z is verified up and running
  STEP: using delete to clean up resources @ 03/27/24 19:37:25.577
  Mar 27 19:37:25.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 delete --grace-period=0 --force -f -'
  Mar 27 19:37:25.766: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 19:37:25.766: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Mar 27 19:37:25.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get rc,svc -l name=update-demo --no-headers'
  Mar 27 19:37:25.957: INFO: stderr: "No resources found in kubectl-7085 namespace.\n"
  Mar 27 19:37:25.957: INFO: stdout: ""
  Mar 27 19:37:25.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-7085 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Mar 27 19:37:26.123: INFO: stderr: ""
  Mar 27 19:37:26.123: INFO: stdout: ""
  Mar 27 19:37:26.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7085" for this suite. @ 03/27/24 19:37:26.14
• [8.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 03/27/24 19:37:26.16
  Mar 27 19:37:26.160: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename certificates @ 03/27/24 19:37:26.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:26.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:26.219
  STEP: getting /apis @ 03/27/24 19:37:27.653
  STEP: getting /apis/certificates.k8s.io @ 03/27/24 19:37:27.664
  STEP: getting /apis/certificates.k8s.io/v1 @ 03/27/24 19:37:27.666
  STEP: creating @ 03/27/24 19:37:27.668
  STEP: getting @ 03/27/24 19:37:27.707
  STEP: listing @ 03/27/24 19:37:27.714
  STEP: watching @ 03/27/24 19:37:27.72
  Mar 27 19:37:27.720: INFO: starting watch
  STEP: patching @ 03/27/24 19:37:27.723
  STEP: updating @ 03/27/24 19:37:27.737
  Mar 27 19:37:27.753: INFO: waiting for watch events with expected annotations
  Mar 27 19:37:27.753: INFO: saw patched and updated annotations
  STEP: getting /approval @ 03/27/24 19:37:27.753
  STEP: patching /approval @ 03/27/24 19:37:27.76
  STEP: updating /approval @ 03/27/24 19:37:27.787
  STEP: getting /status @ 03/27/24 19:37:27.802
  STEP: patching /status @ 03/27/24 19:37:27.81
  STEP: updating /status @ 03/27/24 19:37:27.83
  STEP: deleting @ 03/27/24 19:37:27.858
  STEP: deleting a collection @ 03/27/24 19:37:27.905
  Mar 27 19:37:27.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9204" for this suite. @ 03/27/24 19:37:27.959
• [1.815 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 03/27/24 19:37:27.976
  Mar 27 19:37:27.976: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename subpath @ 03/27/24 19:37:27.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:28.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:28.024
  STEP: Setting up data @ 03/27/24 19:37:28.029
  STEP: Creating pod pod-subpath-test-projected-qwx8 @ 03/27/24 19:37:28.05
  STEP: Creating a pod to test atomic-volume-subpath @ 03/27/24 19:37:28.05
  STEP: Saw pod success @ 03/27/24 19:37:52.225
  Mar 27 19:37:52.233: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-projected-qwx8 container test-container-subpath-projected-qwx8: <nil>
  STEP: delete the pod @ 03/27/24 19:37:52.261
  STEP: Deleting pod pod-subpath-test-projected-qwx8 @ 03/27/24 19:37:52.305
  Mar 27 19:37:52.305: INFO: Deleting pod "pod-subpath-test-projected-qwx8" in namespace "subpath-7084"
  Mar 27 19:37:52.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7084" for this suite. @ 03/27/24 19:37:52.33
• [24.375 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 03/27/24 19:37:52.353
  Mar 27 19:37:52.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 19:37:52.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:52.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:52.408
  STEP: Creating configMap with name configmap-test-upd-3ebabfc8-8507-4b82-9654-94303f5c748a @ 03/27/24 19:37:52.43
  STEP: Creating the pod @ 03/27/24 19:37:52.442
  STEP: Waiting for pod with text data @ 03/27/24 19:37:54.486
  STEP: Waiting for pod with binary data @ 03/27/24 19:37:54.505
  Mar 27 19:37:54.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8371" for this suite. @ 03/27/24 19:37:54.538
• [2.206 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 03/27/24 19:37:54.56
  Mar 27 19:37:54.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:37:54.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:54.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:54.607
  STEP: Creating projection with secret that has name projected-secret-test-24bb8b80-48aa-4c0c-bf84-6319fa01ca08 @ 03/27/24 19:37:54.615
  STEP: Creating a pod to test consume secrets @ 03/27/24 19:37:54.628
  STEP: Saw pod success @ 03/27/24 19:37:58.686
  Mar 27 19:37:58.707: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-98c01fd8-1907-445f-9e1b-e2a049006bc3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 19:37:58.83
  Mar 27 19:37:58.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8448" for this suite. @ 03/27/24 19:37:59.03
• [4.516 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 03/27/24 19:37:59.082
  Mar 27 19:37:59.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 19:37:59.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:37:59.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:37:59.163
  STEP: creating a Pod with a static label @ 03/27/24 19:37:59.253
  STEP: watching for Pod to be ready @ 03/27/24 19:37:59.271
  Mar 27 19:37:59.278: INFO: observed Pod pod-test in namespace pods-530 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Mar 27 19:37:59.288: INFO: observed Pod pod-test in namespace pods-530 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:37:59 +0000 UTC  }]
  Mar 27 19:37:59.348: INFO: observed Pod pod-test in namespace pods-530 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:37:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:37:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:37:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:37:59 +0000 UTC  }]
  Mar 27 19:38:01.251: INFO: Found Pod pod-test in namespace pods-530 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:37:59 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:38:01 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:38:01 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 19:37:59 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 03/27/24 19:38:01.26
  STEP: getting the Pod and ensuring that it's patched @ 03/27/24 19:38:01.288
  STEP: replacing the Pod's status Ready condition to False @ 03/27/24 19:38:01.298
  STEP: check the Pod again to ensure its Ready conditions are False @ 03/27/24 19:38:01.334
  STEP: deleting the Pod via a Collection with a LabelSelector @ 03/27/24 19:38:01.334
  STEP: watching for the Pod to be deleted @ 03/27/24 19:38:01.36
  Mar 27 19:38:01.365: INFO: observed event type MODIFIED
  Mar 27 19:38:03.261: INFO: observed event type MODIFIED
  Mar 27 19:38:03.636: INFO: observed event type MODIFIED
  Mar 27 19:38:04.266: INFO: observed event type MODIFIED
  Mar 27 19:38:04.297: INFO: observed event type MODIFIED
  Mar 27 19:38:04.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-530" for this suite. @ 03/27/24 19:38:04.35
• [5.293 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 03/27/24 19:38:04.378
  Mar 27 19:38:04.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename watch @ 03/27/24 19:38:04.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:38:04.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:38:04.429
  STEP: creating a watch on configmaps with label A @ 03/27/24 19:38:04.435
  STEP: creating a watch on configmaps with label B @ 03/27/24 19:38:04.437
  STEP: creating a watch on configmaps with label A or B @ 03/27/24 19:38:04.443
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 03/27/24 19:38:04.449
  Mar 27 19:38:04.463: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765489 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:38:04.463: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765489 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 03/27/24 19:38:04.464
  Mar 27 19:38:04.488: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765491 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:38:04.489: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765491 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 03/27/24 19:38:04.49
  Mar 27 19:38:04.512: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765492 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:38:04.512: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765492 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 03/27/24 19:38:04.513
  Mar 27 19:38:04.527: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765493 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:38:04.527: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8971  844aa994-194f-492b-a38d-ff5b7d9a3dbe 210765493 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 03/27/24 19:38:04.528
  Mar 27 19:38:04.540: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8971  ed101724-fb49-4d2d-aff0-45fda9c029a7 210765494 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:38:04.541: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8971  ed101724-fb49-4d2d-aff0-45fda9c029a7 210765494 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 03/27/24 19:38:14.543
  Mar 27 19:38:14.563: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8971  ed101724-fb49-4d2d-aff0-45fda9c029a7 210765543 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:38:14.563: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8971  ed101724-fb49-4d2d-aff0-45fda9c029a7 210765543 0 2024-03-27 19:38:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-27 19:38:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:38:24.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8971" for this suite. @ 03/27/24 19:38:24.585
• [20.224 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 03/27/24 19:38:24.603
  Mar 27 19:38:24.603: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:38:24.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:38:24.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:38:24.653
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:38:24.659
  STEP: Saw pod success @ 03/27/24 19:38:28.712
  Mar 27 19:38:28.723: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-fa7e09ad-6b34-457e-af6c-f4d945aa3d61 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:38:28.74
  Mar 27 19:38:28.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3445" for this suite. @ 03/27/24 19:38:28.796
• [4.215 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 03/27/24 19:38:28.825
  Mar 27 19:38:28.825: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 19:38:28.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:38:28.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:38:28.891
  Mar 27 19:39:28.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2563" for this suite. @ 03/27/24 19:39:28.943
• [60.132 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 03/27/24 19:39:28.958
  Mar 27 19:39:28.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 19:39:28.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:39:29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:39:29.007
  STEP: Creating configMap with name configmap-test-volume-map-fdf17b61-fe83-4bc9-b9ad-d5850219ab5d @ 03/27/24 19:39:29.013
  STEP: Creating a pod to test consume configMaps @ 03/27/24 19:39:29.02
  STEP: Saw pod success @ 03/27/24 19:39:33.078
  Mar 27 19:39:33.085: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-fcd2b6d4-15b6-484b-b84f-90befb299812 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:39:33.101
  Mar 27 19:39:33.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9042" for this suite. @ 03/27/24 19:39:33.161
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 03/27/24 19:39:33.187
  Mar 27 19:39:33.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:39:33.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:39:33.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:39:33.229
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/27/24 19:39:33.237
  STEP: Saw pod success @ 03/27/24 19:39:37.297
  Mar 27 19:39:37.306: INFO: Trying to get logs from node env1-test-worker-2 pod pod-83bb7113-ae0f-427b-bc3d-da6f7fff48b0 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:39:37.33
  Mar 27 19:39:37.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4749" for this suite. @ 03/27/24 19:39:37.391
• [4.225 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 03/27/24 19:39:37.413
  Mar 27 19:39:37.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename watch @ 03/27/24 19:39:37.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:39:37.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:39:37.513
  STEP: creating a new configmap @ 03/27/24 19:39:37.521
  STEP: modifying the configmap once @ 03/27/24 19:39:37.564
  STEP: modifying the configmap a second time @ 03/27/24 19:39:37.591
  STEP: deleting the configmap @ 03/27/24 19:39:37.611
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 03/27/24 19:39:37.628
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 03/27/24 19:39:37.631
  Mar 27 19:39:37.632: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9631  d5fac34c-04e2-4317-b86e-e1d1886f41cf 210765941 0 2024-03-27 19:39:37 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-03-27 19:39:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:39:37.632: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9631  d5fac34c-04e2-4317-b86e-e1d1886f41cf 210765942 0 2024-03-27 19:39:37 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-03-27 19:39:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 19:39:37.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9631" for this suite. @ 03/27/24 19:39:37.65
• [0.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 03/27/24 19:39:37.676
  Mar 27 19:39:37.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:39:37.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:39:37.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:39:37.728
  STEP: Creating a pod to test emptydir volume type on node default medium @ 03/27/24 19:39:37.735
  STEP: Saw pod success @ 03/27/24 19:39:41.793
  Mar 27 19:39:41.803: INFO: Trying to get logs from node env1-test-worker-2 pod pod-fc0322f8-11a4-40ac-bbf9-94fb1c02ad29 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:39:41.819
  Mar 27 19:39:41.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9079" for this suite. @ 03/27/24 19:39:41.875
• [4.212 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 03/27/24 19:39:41.892
  Mar 27 19:39:41.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename subpath @ 03/27/24 19:39:41.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:39:41.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:39:41.94
  STEP: Setting up data @ 03/27/24 19:39:41.947
  STEP: Creating pod pod-subpath-test-secret-qwk5 @ 03/27/24 19:39:41.978
  STEP: Creating a pod to test atomic-volume-subpath @ 03/27/24 19:39:41.978
  STEP: Saw pod success @ 03/27/24 19:40:06.16
  Mar 27 19:40:06.168: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-secret-qwk5 container test-container-subpath-secret-qwk5: <nil>
  STEP: delete the pod @ 03/27/24 19:40:06.185
  STEP: Deleting pod pod-subpath-test-secret-qwk5 @ 03/27/24 19:40:06.222
  Mar 27 19:40:06.223: INFO: Deleting pod "pod-subpath-test-secret-qwk5" in namespace "subpath-2448"
  Mar 27 19:40:06.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2448" for this suite. @ 03/27/24 19:40:06.253
• [24.389 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 03/27/24 19:40:06.285
  Mar 27 19:40:06.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename cronjob @ 03/27/24 19:40:06.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:40:06.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:40:06.393
  STEP: Creating a ReplaceConcurrent cronjob @ 03/27/24 19:40:06.401
  STEP: Ensuring a job is scheduled @ 03/27/24 19:40:06.466
  STEP: Ensuring exactly one is scheduled @ 03/27/24 19:41:00.48
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/27/24 19:41:00.487
  STEP: Ensuring the job is replaced with a new one @ 03/27/24 19:41:00.499
  STEP: Removing cronjob @ 03/27/24 19:42:00.508
  Mar 27 19:42:00.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9958" for this suite. @ 03/27/24 19:42:00.538
• [114.278 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 03/27/24 19:42:00.563
  Mar 27 19:42:00.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename deployment @ 03/27/24 19:42:00.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:00.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:00.631
  Mar 27 19:42:00.666: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Mar 27 19:42:05.677: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/27/24 19:42:05.677
  Mar 27 19:42:05.677: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 03/27/24 19:42:05.71
  Mar 27 19:42:05.744: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5191",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3d9ca3c-658e-4055-be06-3128171e8240",
      ResourceVersion: (string) (len=9) "210766599",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847165325,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 27 19:42:05.772: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Mar 27 19:42:05.773: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Mar 27 19:42:05.774: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5191",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0156bef-8fed-451e-85c4-746fb2b4a41e",
      ResourceVersion: (string) (len=9) "210766601",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847165320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d3d9ca3c-658e-4055-be06-3128171e8240",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 33 64 39 63 61 33  |"uid\":\"d3d9ca3|
              00000040  63 2d 36 35 38 65 2d 34  30 35 35 2d 62 65 30 36  |c-658e-4055-be06|
              00000050  2d 33 31 32 38 31 37 31  65 38 32 34 30 5c 22 7d  |-3128171e8240\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 19:42:05.820: INFO: Pod "test-cleanup-controller-b72lb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-b72lb",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5191",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "634e0415-2b35-40d8-b6af-a379ffd3e06b",
      ResourceVersion: (string) (len=9) "210766588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847165320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "f0156bef-8fed-451e-85c4-746fb2b4a41e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  66 30 31 35 36 62 65 66  |uid\":\"f0156bef|
              00000080  2d 38 66 65 64 2d 34 35  31 65 2d 38 35 63 34 2d  |-8fed-451e-85c4-|
              00000090  37 34 36 66 62 32 62 34  61 34 31 65 5c 22 7d 22  |746fb2b4a41e\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 39 36 5c 22 7d  |10.233.69.196\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q4mzz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q4mzz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847165320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847165320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847165321,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://eb3bf705519fed7752e6642e6b7e1201e53611b3e2ec6d8a4480a2192b9961c4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 19:42:05.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5191" for this suite. @ 03/27/24 19:42:05.863
• [5.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 03/27/24 19:42:05.907
  Mar 27 19:42:05.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replication-controller @ 03/27/24 19:42:05.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:06.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:06.015
  STEP: creating a ReplicationController @ 03/27/24 19:42:06.029
  STEP: waiting for RC to be added @ 03/27/24 19:42:06.044
  STEP: waiting for available Replicas @ 03/27/24 19:42:06.044
  STEP: patching ReplicationController @ 03/27/24 19:42:07.367
  STEP: waiting for RC to be modified @ 03/27/24 19:42:07.386
  STEP: patching ReplicationController status @ 03/27/24 19:42:07.386
  STEP: waiting for RC to be modified @ 03/27/24 19:42:07.399
  STEP: waiting for available Replicas @ 03/27/24 19:42:07.401
  STEP: fetching ReplicationController status @ 03/27/24 19:42:07.411
  STEP: patching ReplicationController scale @ 03/27/24 19:42:07.42
  STEP: waiting for RC to be modified @ 03/27/24 19:42:07.435
  STEP: waiting for ReplicationController's scale to be the max amount @ 03/27/24 19:42:07.437
  STEP: fetching ReplicationController; ensuring that it's patched @ 03/27/24 19:42:09.272
  STEP: updating ReplicationController status @ 03/27/24 19:42:09.282
  STEP: waiting for RC to be modified @ 03/27/24 19:42:09.304
  STEP: listing all ReplicationControllers @ 03/27/24 19:42:09.304
  STEP: checking that ReplicationController has expected values @ 03/27/24 19:42:09.321
  STEP: deleting ReplicationControllers by collection @ 03/27/24 19:42:09.322
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 03/27/24 19:42:09.348
  Mar 27 19:42:09.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 19:42:09.478584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1241" for this suite. @ 03/27/24 19:42:09.49
• [3.600 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 03/27/24 19:42:09.508
  Mar 27 19:42:09.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename init-container @ 03/27/24 19:42:09.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:09.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:09.584
  STEP: creating the pod @ 03/27/24 19:42:09.595
  Mar 27 19:42:09.595: INFO: PodSpec: initContainers in spec.initContainers
  E0327 19:42:10.479376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:11.480151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:12.480380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:42:13.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8768" for this suite. @ 03/27/24 19:42:13.442
• [3.962 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 03/27/24 19:42:13.473
  Mar 27 19:42:13.473: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:42:13.475
  E0327 19:42:13.480532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:13.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:13.533
  STEP: Creating secret with name s-test-opt-del-dc08958e-8652-4542-907f-4011a7153cc3 @ 03/27/24 19:42:13.561
  STEP: Creating secret with name s-test-opt-upd-b4aa2a37-2028-4f16-9c0b-d4b08b3471a8 @ 03/27/24 19:42:13.578
  STEP: Creating the pod @ 03/27/24 19:42:13.599
  E0327 19:42:14.481441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:15.482221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-dc08958e-8652-4542-907f-4011a7153cc3 @ 03/27/24 19:42:15.773
  STEP: Updating secret s-test-opt-upd-b4aa2a37-2028-4f16-9c0b-d4b08b3471a8 @ 03/27/24 19:42:15.8
  STEP: Creating secret with name s-test-opt-create-ed182834-d683-46ed-bd19-26f4f4df6e75 @ 03/27/24 19:42:15.817
  STEP: waiting to observe update in volume @ 03/27/24 19:42:15.834
  E0327 19:42:16.482379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:17.482754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:42:17.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7758" for this suite. @ 03/27/24 19:42:17.928
• [4.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 03/27/24 19:42:17.953
  Mar 27 19:42:17.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:42:17.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:17.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:18.004
  STEP: Creating a pod to test downward api env vars @ 03/27/24 19:42:18.009
  E0327 19:42:18.483271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:19.484066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:20.485210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:21.485860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:42:22.061
  Mar 27 19:42:22.070: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-390acc68-27ce-4c52-af5b-59ecd83d94a6 container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 19:42:22.096
  Mar 27 19:42:22.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1418" for this suite. @ 03/27/24 19:42:22.164
• [4.226 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 03/27/24 19:42:22.181
  Mar 27 19:42:22.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:42:22.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:22.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:22.24
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/27/24 19:42:22.247
  E0327 19:42:22.486613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:23.487464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:24.487691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:25.487825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:42:26.305
  Mar 27 19:42:26.314: INFO: Trying to get logs from node env1-test-worker-2 pod pod-a21595e6-11fb-4ae1-9c5d-784d4c860a62 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:42:26.349
  Mar 27 19:42:26.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7964" for this suite. @ 03/27/24 19:42:26.441
• [4.289 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 03/27/24 19:42:26.471
  Mar 27 19:42:26.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 19:42:26.473
  E0327 19:42:26.489114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:26.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:26.564
  STEP: Creating a test headless service @ 03/27/24 19:42:26.571
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1080.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1080.svc.cluster.local;sleep 1; done
   @ 03/27/24 19:42:26.582
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1080.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1080.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1080.svc.cluster.local;sleep 1; done
   @ 03/27/24 19:42:26.582
  STEP: creating a pod to probe DNS @ 03/27/24 19:42:26.582
  STEP: submitting the pod to kubernetes @ 03/27/24 19:42:26.582
  E0327 19:42:27.489715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:28.489792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 19:42:28.667
  STEP: looking for the results for each expected name from probers @ 03/27/24 19:42:28.675
  Mar 27 19:42:28.686: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.693: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.701: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.711: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.718: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.728: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.738: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.746: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1080.svc.cluster.local from pod dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da: the server could not find the requested resource (get pods dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da)
  Mar 27 19:42:28.746: INFO: Lookups using dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1080.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1080.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1080.svc.cluster.local jessie_udp@dns-test-service-2.dns-1080.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1080.svc.cluster.local]

  Mar 27 19:42:28.761: INFO: Pod client logs for webserver: 
  Mar 27 19:42:28.777: INFO: Pod client logs for querier: 
  Mar 27 19:42:28.792: INFO: Pod client logs for jessie-querier: 
  E0327 19:42:29.489877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:30.489986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:31.490149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:32.490343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:33.491626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:42:33.888: INFO: DNS probes using dns-1080/dns-test-48e94404-4ad9-4da8-a0c5-4cd63de796da succeeded

  Mar 27 19:42:33.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 19:42:33.919
  STEP: deleting the test headless service @ 03/27/24 19:42:33.986
  STEP: Destroying namespace "dns-1080" for this suite. @ 03/27/24 19:42:34.056
• [7.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 03/27/24 19:42:34.104
  Mar 27 19:42:34.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:42:34.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:34.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:34.163
  STEP: Creating the pod @ 03/27/24 19:42:34.17
  E0327 19:42:34.491418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:35.491399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:36.491634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:42:36.799: INFO: Successfully updated pod "annotationupdatef7f01634-d77a-413b-be5b-0160f78c43f2"
  E0327 19:42:37.492257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:38.492844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:42:38.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6221" for this suite. @ 03/27/24 19:42:38.85
• [4.765 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 03/27/24 19:42:38.872
  Mar 27 19:42:38.872: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:42:38.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:38.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:38.918
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:42:38.924
  E0327 19:42:39.492954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:40.493336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:41.494448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:42.495509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:42:42.975
  Mar 27 19:42:42.982: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-eb5f1701-3b99-430c-8581-0d2a2c2e12dd container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:42:42.999
  Mar 27 19:42:43.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5694" for this suite. @ 03/27/24 19:42:43.049
• [4.191 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 03/27/24 19:42:43.065
  Mar 27 19:42:43.065: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/27/24 19:42:43.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:43.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:43.116
  Mar 27 19:42:43.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 19:42:43.495722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:44.496937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:45.497118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:46.497632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:47.498194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:48.498420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:42:48.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7708" for this suite. @ 03/27/24 19:42:48.753
• [5.724 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 03/27/24 19:42:48.791
  Mar 27 19:42:48.791: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 19:42:48.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:48.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:48.847
  STEP: Creating projection with secret that has name secret-emptykey-test-0d525086-7536-4982-bc20-151af7b95cd4 @ 03/27/24 19:42:48.858
  Mar 27 19:42:48.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-820" for this suite. @ 03/27/24 19:42:48.884
• [0.112 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 03/27/24 19:42:48.904
  Mar 27 19:42:48.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename namespaces @ 03/27/24 19:42:48.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:48.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:48.966
  STEP: Updating Namespace "namespaces-1185" @ 03/27/24 19:42:48.974
  Mar 27 19:42:48.996: INFO: Namespace "namespaces-1185" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"0467a516-72b3-4db0-a236-cc970def17f2", "kubernetes.io/metadata.name":"namespaces-1185", "namespaces-1185":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Mar 27 19:42:48.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1185" for this suite. @ 03/27/24 19:42:49.01
• [0.132 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 03/27/24 19:42:49.036
  Mar 27 19:42:49.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:42:49.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:49.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:49.084
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:42:49.092
  E0327 19:42:49.499320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:50.499986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:51.500231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:52.500803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:42:53.162
  Mar 27 19:42:53.169: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-ee41bc57-43df-4b62-a36b-98728e06ca0f container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:42:53.209
  Mar 27 19:42:53.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9632" for this suite. @ 03/27/24 19:42:53.258
• [4.243 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 03/27/24 19:42:53.28
  Mar 27 19:42:53.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 19:42:53.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:42:53.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:42:53.329
  Mar 27 19:42:53.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 19:42:53.501658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:54.502721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:55.502869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:56.504026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:57.504247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:58.504788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:42:59.505486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:00.506631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:01.507188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/27/24 19:43:02.105
  Mar 27 19:43:02.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-5417 --namespace=crd-publish-openapi-5417 create -f -'
  E0327 19:43:02.510960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:03.511526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:43:04.345: INFO: stderr: ""
  Mar 27 19:43:04.345: INFO: stdout: "e2e-test-crd-publish-openapi-2624-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Mar 27 19:43:04.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-5417 --namespace=crd-publish-openapi-5417 delete e2e-test-crd-publish-openapi-2624-crds test-cr'
  E0327 19:43:04.512487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:43:04.579: INFO: stderr: ""
  Mar 27 19:43:04.579: INFO: stdout: "e2e-test-crd-publish-openapi-2624-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Mar 27 19:43:04.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-5417 --namespace=crd-publish-openapi-5417 apply -f -'
  E0327 19:43:05.513459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:06.514537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:43:06.632: INFO: stderr: ""
  Mar 27 19:43:06.632: INFO: stdout: "e2e-test-crd-publish-openapi-2624-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Mar 27 19:43:06.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-5417 --namespace=crd-publish-openapi-5417 delete e2e-test-crd-publish-openapi-2624-crds test-cr'
  Mar 27 19:43:06.813: INFO: stderr: ""
  Mar 27 19:43:06.813: INFO: stdout: "e2e-test-crd-publish-openapi-2624-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/27/24 19:43:06.813
  Mar 27 19:43:06.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-5417 explain e2e-test-crd-publish-openapi-2624-crds'
  E0327 19:43:07.515526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:43:08.376: INFO: stderr: ""
  Mar 27 19:43:08.376: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2624-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0327 19:43:08.515815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:09.516375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:10.516643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:11.517332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:12.518174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:43:12.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5417" for this suite. @ 03/27/24 19:43:12.628
• [19.364 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 03/27/24 19:43:12.645
  Mar 27 19:43:12.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:43:12.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:43:12.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:43:12.686
  STEP: Creating configMap with name projected-configmap-test-volume-ba4c3fad-3c61-4eef-a6ee-30beeae790ce @ 03/27/24 19:43:12.692
  STEP: Creating a pod to test consume configMaps @ 03/27/24 19:43:12.703
  E0327 19:43:13.518865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:14.519062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:15.520489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:16.520934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:43:16.764
  Mar 27 19:43:16.773: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-07fb46d2-889b-4080-8fbb-04b8125173e0 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:43:16.802
  Mar 27 19:43:16.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6972" for this suite. @ 03/27/24 19:43:16.875
• [4.269 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 03/27/24 19:43:16.916
  Mar 27 19:43:16.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename gc @ 03/27/24 19:43:16.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:43:16.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:43:16.997
  STEP: create the rc @ 03/27/24 19:43:17.016
  W0327 19:43:17.042692      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0327 19:43:17.521553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:18.521616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:19.525444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:20.525624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:21.526616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:22.526842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/27/24 19:43:23.048
  STEP: wait for the rc to be deleted @ 03/27/24 19:43:23.067
  E0327 19:43:23.527497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:24.527703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:25.528675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:26.529229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:27.529780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 03/27/24 19:43:28.074
  E0327 19:43:28.531371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:29.531583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:30.531968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:31.532629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:32.532380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:33.532488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:34.533054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:35.533247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:36.533984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:37.534948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:38.535965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:39.536247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:40.536330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:41.537278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:42.537636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:43.537860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:44.538051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:45.538795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:46.539482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:47.539865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:48.540251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:49.540547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:50.541207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:51.541439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:52.543462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:53.543605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:54.544033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:55.544379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:56.544501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:43:57.544628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/27/24 19:43:58.106
  Mar 27 19:43:58.317: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 27 19:43:58.318: INFO: Deleting pod "simpletest.rc-222ll" in namespace "gc-4796"
  Mar 27 19:43:58.374: INFO: Deleting pod "simpletest.rc-2fpgl" in namespace "gc-4796"
  Mar 27 19:43:58.401: INFO: Deleting pod "simpletest.rc-2t8rr" in namespace "gc-4796"
  Mar 27 19:43:58.426: INFO: Deleting pod "simpletest.rc-4f7zp" in namespace "gc-4796"
  Mar 27 19:43:58.507: INFO: Deleting pod "simpletest.rc-4lxjx" in namespace "gc-4796"
  E0327 19:43:58.545642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:43:58.553: INFO: Deleting pod "simpletest.rc-4sfxw" in namespace "gc-4796"
  Mar 27 19:43:58.585: INFO: Deleting pod "simpletest.rc-5t86m" in namespace "gc-4796"
  Mar 27 19:43:58.624: INFO: Deleting pod "simpletest.rc-5tdwl" in namespace "gc-4796"
  Mar 27 19:43:58.662: INFO: Deleting pod "simpletest.rc-5vp7w" in namespace "gc-4796"
  Mar 27 19:43:58.704: INFO: Deleting pod "simpletest.rc-5zlnb" in namespace "gc-4796"
  Mar 27 19:43:58.741: INFO: Deleting pod "simpletest.rc-66fgx" in namespace "gc-4796"
  Mar 27 19:43:58.788: INFO: Deleting pod "simpletest.rc-6khxq" in namespace "gc-4796"
  Mar 27 19:43:58.832: INFO: Deleting pod "simpletest.rc-6skdg" in namespace "gc-4796"
  Mar 27 19:43:58.861: INFO: Deleting pod "simpletest.rc-6z55b" in namespace "gc-4796"
  Mar 27 19:43:58.910: INFO: Deleting pod "simpletest.rc-78wc5" in namespace "gc-4796"
  Mar 27 19:43:58.959: INFO: Deleting pod "simpletest.rc-7jcfm" in namespace "gc-4796"
  Mar 27 19:43:58.996: INFO: Deleting pod "simpletest.rc-7k6kp" in namespace "gc-4796"
  Mar 27 19:43:59.028: INFO: Deleting pod "simpletest.rc-7sstt" in namespace "gc-4796"
  Mar 27 19:43:59.087: INFO: Deleting pod "simpletest.rc-7wkdb" in namespace "gc-4796"
  Mar 27 19:43:59.122: INFO: Deleting pod "simpletest.rc-84t28" in namespace "gc-4796"
  Mar 27 19:43:59.175: INFO: Deleting pod "simpletest.rc-859d5" in namespace "gc-4796"
  Mar 27 19:43:59.218: INFO: Deleting pod "simpletest.rc-877pc" in namespace "gc-4796"
  Mar 27 19:43:59.280: INFO: Deleting pod "simpletest.rc-8ncmn" in namespace "gc-4796"
  Mar 27 19:43:59.328: INFO: Deleting pod "simpletest.rc-9lltg" in namespace "gc-4796"
  Mar 27 19:43:59.415: INFO: Deleting pod "simpletest.rc-bckcd" in namespace "gc-4796"
  Mar 27 19:43:59.464: INFO: Deleting pod "simpletest.rc-bg99z" in namespace "gc-4796"
  Mar 27 19:43:59.498: INFO: Deleting pod "simpletest.rc-bj9rr" in namespace "gc-4796"
  Mar 27 19:43:59.535: INFO: Deleting pod "simpletest.rc-btqd6" in namespace "gc-4796"
  E0327 19:43:59.546189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:43:59.572: INFO: Deleting pod "simpletest.rc-c22hg" in namespace "gc-4796"
  Mar 27 19:43:59.598: INFO: Deleting pod "simpletest.rc-c2hn5" in namespace "gc-4796"
  Mar 27 19:43:59.632: INFO: Deleting pod "simpletest.rc-ckbpm" in namespace "gc-4796"
  Mar 27 19:43:59.675: INFO: Deleting pod "simpletest.rc-csxs5" in namespace "gc-4796"
  Mar 27 19:43:59.702: INFO: Deleting pod "simpletest.rc-ctlbc" in namespace "gc-4796"
  Mar 27 19:43:59.725: INFO: Deleting pod "simpletest.rc-d4hrn" in namespace "gc-4796"
  Mar 27 19:43:59.753: INFO: Deleting pod "simpletest.rc-d8xcd" in namespace "gc-4796"
  Mar 27 19:43:59.831: INFO: Deleting pod "simpletest.rc-ds7hz" in namespace "gc-4796"
  Mar 27 19:43:59.873: INFO: Deleting pod "simpletest.rc-dwv5n" in namespace "gc-4796"
  Mar 27 19:43:59.888: INFO: Deleting pod "simpletest.rc-fb6rx" in namespace "gc-4796"
  Mar 27 19:43:59.921: INFO: Deleting pod "simpletest.rc-fks65" in namespace "gc-4796"
  Mar 27 19:43:59.970: INFO: Deleting pod "simpletest.rc-ftgm2" in namespace "gc-4796"
  Mar 27 19:44:00.023: INFO: Deleting pod "simpletest.rc-fv6c4" in namespace "gc-4796"
  Mar 27 19:44:00.069: INFO: Deleting pod "simpletest.rc-fvbjs" in namespace "gc-4796"
  Mar 27 19:44:00.101: INFO: Deleting pod "simpletest.rc-g2dlq" in namespace "gc-4796"
  Mar 27 19:44:00.134: INFO: Deleting pod "simpletest.rc-g2j79" in namespace "gc-4796"
  Mar 27 19:44:00.168: INFO: Deleting pod "simpletest.rc-gjxqw" in namespace "gc-4796"
  Mar 27 19:44:00.209: INFO: Deleting pod "simpletest.rc-gss2f" in namespace "gc-4796"
  Mar 27 19:44:00.244: INFO: Deleting pod "simpletest.rc-hct25" in namespace "gc-4796"
  Mar 27 19:44:00.273: INFO: Deleting pod "simpletest.rc-hj7xr" in namespace "gc-4796"
  Mar 27 19:44:00.313: INFO: Deleting pod "simpletest.rc-jhb99" in namespace "gc-4796"
  Mar 27 19:44:00.340: INFO: Deleting pod "simpletest.rc-jswmz" in namespace "gc-4796"
  Mar 27 19:44:00.377: INFO: Deleting pod "simpletest.rc-jzmmq" in namespace "gc-4796"
  Mar 27 19:44:00.402: INFO: Deleting pod "simpletest.rc-khmwq" in namespace "gc-4796"
  Mar 27 19:44:00.437: INFO: Deleting pod "simpletest.rc-kpr89" in namespace "gc-4796"
  Mar 27 19:44:00.479: INFO: Deleting pod "simpletest.rc-kq5hk" in namespace "gc-4796"
  Mar 27 19:44:00.532: INFO: Deleting pod "simpletest.rc-lhh9r" in namespace "gc-4796"
  E0327 19:44:00.546928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:44:00.568: INFO: Deleting pod "simpletest.rc-lqqhh" in namespace "gc-4796"
  Mar 27 19:44:00.601: INFO: Deleting pod "simpletest.rc-mm4v6" in namespace "gc-4796"
  Mar 27 19:44:00.638: INFO: Deleting pod "simpletest.rc-mmwhd" in namespace "gc-4796"
  Mar 27 19:44:00.663: INFO: Deleting pod "simpletest.rc-mvz2p" in namespace "gc-4796"
  Mar 27 19:44:00.714: INFO: Deleting pod "simpletest.rc-mw8j7" in namespace "gc-4796"
  Mar 27 19:44:00.752: INFO: Deleting pod "simpletest.rc-mzctd" in namespace "gc-4796"
  Mar 27 19:44:00.796: INFO: Deleting pod "simpletest.rc-n74bt" in namespace "gc-4796"
  Mar 27 19:44:00.826: INFO: Deleting pod "simpletest.rc-nbll9" in namespace "gc-4796"
  Mar 27 19:44:00.846: INFO: Deleting pod "simpletest.rc-nkdjg" in namespace "gc-4796"
  Mar 27 19:44:00.892: INFO: Deleting pod "simpletest.rc-nmlmm" in namespace "gc-4796"
  Mar 27 19:44:00.927: INFO: Deleting pod "simpletest.rc-np2t5" in namespace "gc-4796"
  Mar 27 19:44:00.950: INFO: Deleting pod "simpletest.rc-pcl8c" in namespace "gc-4796"
  Mar 27 19:44:00.976: INFO: Deleting pod "simpletest.rc-pd8rp" in namespace "gc-4796"
  Mar 27 19:44:01.009: INFO: Deleting pod "simpletest.rc-q669h" in namespace "gc-4796"
  Mar 27 19:44:01.040: INFO: Deleting pod "simpletest.rc-qgds8" in namespace "gc-4796"
  Mar 27 19:44:01.065: INFO: Deleting pod "simpletest.rc-qlcc7" in namespace "gc-4796"
  Mar 27 19:44:01.100: INFO: Deleting pod "simpletest.rc-qt8tf" in namespace "gc-4796"
  Mar 27 19:44:01.134: INFO: Deleting pod "simpletest.rc-qwlsb" in namespace "gc-4796"
  Mar 27 19:44:01.159: INFO: Deleting pod "simpletest.rc-rs6k9" in namespace "gc-4796"
  Mar 27 19:44:01.190: INFO: Deleting pod "simpletest.rc-s5ltz" in namespace "gc-4796"
  Mar 27 19:44:01.219: INFO: Deleting pod "simpletest.rc-s6x6h" in namespace "gc-4796"
  Mar 27 19:44:01.249: INFO: Deleting pod "simpletest.rc-sbr5c" in namespace "gc-4796"
  Mar 27 19:44:01.290: INFO: Deleting pod "simpletest.rc-sgj74" in namespace "gc-4796"
  Mar 27 19:44:01.336: INFO: Deleting pod "simpletest.rc-sn6zh" in namespace "gc-4796"
  Mar 27 19:44:01.370: INFO: Deleting pod "simpletest.rc-tbnw9" in namespace "gc-4796"
  Mar 27 19:44:01.397: INFO: Deleting pod "simpletest.rc-tdkdr" in namespace "gc-4796"
  Mar 27 19:44:01.448: INFO: Deleting pod "simpletest.rc-tdtc9" in namespace "gc-4796"
  Mar 27 19:44:01.476: INFO: Deleting pod "simpletest.rc-tsvgq" in namespace "gc-4796"
  Mar 27 19:44:01.514: INFO: Deleting pod "simpletest.rc-txtnr" in namespace "gc-4796"
  E0327 19:44:01.547740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:44:01.560: INFO: Deleting pod "simpletest.rc-v52vg" in namespace "gc-4796"
  Mar 27 19:44:01.600: INFO: Deleting pod "simpletest.rc-v5qvh" in namespace "gc-4796"
  Mar 27 19:44:01.622: INFO: Deleting pod "simpletest.rc-v9cjn" in namespace "gc-4796"
  Mar 27 19:44:01.670: INFO: Deleting pod "simpletest.rc-vz6q9" in namespace "gc-4796"
  Mar 27 19:44:01.695: INFO: Deleting pod "simpletest.rc-w6qsc" in namespace "gc-4796"
  Mar 27 19:44:01.722: INFO: Deleting pod "simpletest.rc-wb6n2" in namespace "gc-4796"
  Mar 27 19:44:01.767: INFO: Deleting pod "simpletest.rc-ws2ts" in namespace "gc-4796"
  Mar 27 19:44:01.794: INFO: Deleting pod "simpletest.rc-wxx2b" in namespace "gc-4796"
  Mar 27 19:44:01.878: INFO: Deleting pod "simpletest.rc-xdzcw" in namespace "gc-4796"
  Mar 27 19:44:01.945: INFO: Deleting pod "simpletest.rc-xk7c6" in namespace "gc-4796"
  Mar 27 19:44:02.037: INFO: Deleting pod "simpletest.rc-xvdf9" in namespace "gc-4796"
  Mar 27 19:44:02.112: INFO: Deleting pod "simpletest.rc-z422k" in namespace "gc-4796"
  Mar 27 19:44:02.156: INFO: Deleting pod "simpletest.rc-z47pz" in namespace "gc-4796"
  Mar 27 19:44:02.198: INFO: Deleting pod "simpletest.rc-zxf4v" in namespace "gc-4796"
  Mar 27 19:44:02.231: INFO: Deleting pod "simpletest.rc-zzhnn" in namespace "gc-4796"
  Mar 27 19:44:02.300: INFO: Deleting pod "simpletest.rc-zzwcv" in namespace "gc-4796"
  Mar 27 19:44:02.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4796" for this suite. @ 03/27/24 19:44:02.375
• [45.493 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 03/27/24 19:44:02.41
  Mar 27 19:44:02.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:44:02.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:44:02.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:44:02.499
  E0327 19:44:02.548612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 03/27/24 19:44:02.598
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:44:03.367
  STEP: Deploying the webhook pod @ 03/27/24 19:44:03.377
  STEP: Wait for the deployment to be ready @ 03/27/24 19:44:03.396
  Mar 27 19:44:03.431: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 19:44:03.548153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:04.548906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:44:05.458: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 19, 44, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 19, 44, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 19, 44, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 19, 44, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 19:44:05.549667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:06.550886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:44:07.471
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:44:07.514
  E0327 19:44:07.551068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:44:08.515: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/27/24 19:44:08.536
  E0327 19:44:08.551835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a pod that should be denied by the webhook @ 03/27/24 19:44:08.586
  STEP: create a pod that causes the webhook to hang @ 03/27/24 19:44:08.617
  E0327 19:44:09.552666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:10.553077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:11.553731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:12.553997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:13.554901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:14.555252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:15.556012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:16.556188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:17.557080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:18.557506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 03/27/24 19:44:18.646
  STEP: create a configmap that should be admitted by the webhook @ 03/27/24 19:44:18.716
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/27/24 19:44:18.747
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/27/24 19:44:18.768
  STEP: create a namespace that bypass the webhook @ 03/27/24 19:44:18.781
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 03/27/24 19:44:18.824
  Mar 27 19:44:18.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-756" for this suite. @ 03/27/24 19:44:19.063
  STEP: Destroying namespace "webhook-markers-705" for this suite. @ 03/27/24 19:44:19.086
  STEP: Destroying namespace "exempted-namespace-7503" for this suite. @ 03/27/24 19:44:19.111
• [16.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 03/27/24 19:44:19.155
  Mar 27 19:44:19.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svcaccounts @ 03/27/24 19:44:19.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:44:19.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:44:19.209
  Mar 27 19:44:19.270: INFO: created pod
  E0327 19:44:19.558590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:20.558769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:21.559724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:22.559837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:44:23.313
  E0327 19:44:23.560996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:24.561833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:25.562742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:26.562993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:27.563394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:28.564445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:29.565007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:30.565284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:31.565840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:32.566147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:33.566276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:34.566502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:35.566717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:36.567550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:37.567787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:38.568137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:39.568365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:40.569327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:41.569748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:42.569940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:43.570607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:44.570738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:45.570999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:46.571163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:47.571422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:48.571745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:49.571916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:50.572910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:51.573446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:52.573668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:44:53.314: INFO: polling logs
  Mar 27 19:44:53.384: INFO: Pod logs: 
  I0327 19:44:20.141204       1 log.go:194] OK: Got token
  I0327 19:44:20.141377       1 log.go:194] validating with in-cluster discovery
  I0327 19:44:20.142075       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0327 19:44:20.142139       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8303:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000250190), NotBefore:(*jwt.NumericDate)(0xc000250278), IssuedAt:(*jwt.NumericDate)(0xc0002501a0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8303", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1de8ebbd-644f-4223-8368-c38a1f45d344"}}}
  I0327 19:44:20.168946       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0327 19:44:20.188222       1 log.go:194] OK: Validated signature on JWT
  I0327 19:44:20.188729       1 log.go:194] OK: Got valid claims from token!
  I0327 19:44:20.188962       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8303:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00048b340), NotBefore:(*jwt.NumericDate)(0xc00048b368), IssuedAt:(*jwt.NumericDate)(0xc00048b348), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8303", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1de8ebbd-644f-4223-8368-c38a1f45d344"}}}

  Mar 27 19:44:53.384: INFO: completed pod
  Mar 27 19:44:53.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8303" for this suite. @ 03/27/24 19:44:53.416
• [34.283 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 03/27/24 19:44:53.439
  Mar 27 19:44:53.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:44:53.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:44:53.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:44:53.49
  STEP: creating service in namespace services-4707 @ 03/27/24 19:44:53.536
  STEP: creating service affinity-nodeport in namespace services-4707 @ 03/27/24 19:44:53.537
  E0327 19:44:53.574918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-nodeport in namespace services-4707 @ 03/27/24 19:44:53.582
  I0327 19:44:53.660529      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4707, replica count: 3
  E0327 19:44:54.575064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:55.575909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:56.576142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 19:44:56.711824      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 19:44:56.745: INFO: Creating new exec pod
  E0327 19:44:57.576554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:58.576853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:44:59.577805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:44:59.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4707 exec execpod-affinityv4xc9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Mar 27 19:45:00.228: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Mar 27 19:45:00.228: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:45:00.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4707 exec execpod-affinityv4xc9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.5.252 80'
  E0327 19:45:00.579046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:45:00.623: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.5.252 80\nConnection to 10.233.5.252 80 port [tcp/http] succeeded!\n"
  Mar 27 19:45:00.623: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:45:00.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4707 exec execpod-affinityv4xc9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.201 30885'
  Mar 27 19:45:00.937: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.201 30885\nConnection to 10.61.1.201 30885 port [tcp/*] succeeded!\n"
  Mar 27 19:45:00.937: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:45:00.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4707 exec execpod-affinityv4xc9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 30885'
  Mar 27 19:45:01.284: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 30885\nConnection to 10.61.1.200 30885 port [tcp/*] succeeded!\n"
  Mar 27 19:45:01.284: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:45:01.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4707 exec execpod-affinityv4xc9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:30885/ ; done'
  E0327 19:45:01.580075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:45:01.862: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30885/\n"
  Mar 27 19:45:01.862: INFO: stdout: "\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f\naffinity-nodeport-mql5f"
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Received response from host: affinity-nodeport-mql5f
  Mar 27 19:45:01.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:45:01.881: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4707, will wait for the garbage collector to delete the pods @ 03/27/24 19:45:01.914
  Mar 27 19:45:02.020: INFO: Deleting ReplicationController affinity-nodeport took: 40.708621ms
  Mar 27 19:45:02.121: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.875078ms
  E0327 19:45:02.580949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:03.582075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:04.582682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4707" for this suite. @ 03/27/24 19:45:05.294
• [11.870 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 03/27/24 19:45:05.311
  Mar 27 19:45:05.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename endpointslice @ 03/27/24 19:45:05.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:45:05.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:45:05.364
  STEP: getting /apis @ 03/27/24 19:45:05.37
  STEP: getting /apis/discovery.k8s.io @ 03/27/24 19:45:05.382
  STEP: getting /apis/discovery.k8s.iov1 @ 03/27/24 19:45:05.387
  STEP: creating @ 03/27/24 19:45:05.389
  STEP: getting @ 03/27/24 19:45:05.421
  STEP: listing @ 03/27/24 19:45:05.428
  STEP: watching @ 03/27/24 19:45:05.436
  Mar 27 19:45:05.436: INFO: starting watch
  STEP: cluster-wide listing @ 03/27/24 19:45:05.44
  STEP: cluster-wide watching @ 03/27/24 19:45:05.449
  Mar 27 19:45:05.449: INFO: starting watch
  STEP: patching @ 03/27/24 19:45:05.452
  STEP: updating @ 03/27/24 19:45:05.462
  Mar 27 19:45:05.486: INFO: waiting for watch events with expected annotations
  Mar 27 19:45:05.486: INFO: saw patched and updated annotations
  STEP: deleting @ 03/27/24 19:45:05.486
  STEP: deleting a collection @ 03/27/24 19:45:05.517
  Mar 27 19:45:05.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6602" for this suite. @ 03/27/24 19:45:05.579
  E0327 19:45:05.583214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 03/27/24 19:45:05.607
  Mar 27 19:45:05.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 19:45:05.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:45:05.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:45:05.661
  STEP: Creating service test in namespace statefulset-5406 @ 03/27/24 19:45:05.667
  STEP: Creating statefulset ss in namespace statefulset-5406 @ 03/27/24 19:45:05.676
  Mar 27 19:45:05.712: INFO: Found 0 stateful pods, waiting for 1
  E0327 19:45:06.583605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:07.583725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:08.584620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:09.584964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:10.585078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:11.585761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:12.585676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:13.585712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:14.586570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:15.587267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:45:15.724: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 03/27/24 19:45:15.741
  STEP: updating a scale subresource @ 03/27/24 19:45:15.749
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/27/24 19:45:15.79
  STEP: Patch a scale subresource @ 03/27/24 19:45:15.804
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/27/24 19:45:15.825
  Mar 27 19:45:15.838: INFO: Deleting all statefulset in ns statefulset-5406
  Mar 27 19:45:15.848: INFO: Scaling statefulset ss to 0
  E0327 19:45:16.588259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:17.588913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:18.589155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:19.589873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:20.590562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:21.591146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:22.591954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:23.593045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:24.593733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:25.594838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:45:25.928: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 19:45:25.936: INFO: Deleting statefulset ss
  Mar 27 19:45:25.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5406" for this suite. @ 03/27/24 19:45:26.007
• [20.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 03/27/24 19:45:26.037
  Mar 27 19:45:26.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:45:26.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:45:26.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:45:26.087
  STEP: Setting up server cert @ 03/27/24 19:45:26.134
  E0327 19:45:26.594971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:27.595580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:45:27.969
  STEP: Deploying the webhook pod @ 03/27/24 19:45:27.987
  STEP: Wait for the deployment to be ready @ 03/27/24 19:45:28.02
  Mar 27 19:45:28.059: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 19:45:28.596617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:29.596977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:45:30.081
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:45:30.102
  E0327 19:45:30.597507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:45:31.102: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/27/24 19:45:31.118
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/27/24 19:45:31.153
  STEP: Creating a dummy validating-webhook-configuration object @ 03/27/24 19:45:31.187
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 03/27/24 19:45:31.206
  STEP: Creating a dummy mutating-webhook-configuration object @ 03/27/24 19:45:31.223
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 03/27/24 19:45:31.244
  Mar 27 19:45:31.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7457" for this suite. @ 03/27/24 19:45:31.494
  STEP: Destroying namespace "webhook-markers-1792" for this suite. @ 03/27/24 19:45:31.517
• [5.496 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 03/27/24 19:45:31.535
  Mar 27 19:45:31.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 19:45:31.543
  E0327 19:45:31.599229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:45:31.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:45:31.618
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 03/27/24 19:45:31.635
  Mar 27 19:45:31.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 19:45:32.600360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:33.601248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:34.601700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:35.602253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:36.603274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:37.603685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:38.604082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:39.604945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:40.605441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:45:41.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 19:45:41.605693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:42.606406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:43.606793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:44.607505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:45.607801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:46.608458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:47.609511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:48.610212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:49.610796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:50.611416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:51.612392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:52.613000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:53.613882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:54.614956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:55.615700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:56.616335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:57.616799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:58.617574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:45:59.618196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:00.619144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:01.620583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:02.621123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:46:03.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4594" for this suite. @ 03/27/24 19:46:03.087
• [31.565 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 03/27/24 19:46:03.101
  Mar 27 19:46:03.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename endpointslicemirroring @ 03/27/24 19:46:03.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:03.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:03.152
  STEP: mirroring a new custom Endpoint @ 03/27/24 19:46:03.185
  Mar 27 19:46:03.208: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0327 19:46:03.621173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:04.621955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 03/27/24 19:46:05.219
  STEP: mirroring deletion of a custom Endpoint @ 03/27/24 19:46:05.243
  Mar 27 19:46:05.297: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0327 19:46:05.622094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:06.622319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:46:07.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3882" for this suite. @ 03/27/24 19:46:07.313
• [4.229 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 03/27/24 19:46:07.331
  Mar 27 19:46:07.331: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:46:07.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:07.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:07.367
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/27/24 19:46:07.37
  E0327 19:46:07.623009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:08.623628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:09.623984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:10.625627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:46:11.412
  Mar 27 19:46:11.420: INFO: Trying to get logs from node env1-test-worker-2 pod pod-a1b81f24-0032-49c3-b472-d01fb7696392 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:46:11.459
  Mar 27 19:46:11.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4631" for this suite. @ 03/27/24 19:46:11.508
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 03/27/24 19:46:11.536
  Mar 27 19:46:11.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:46:11.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:11.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:11.595
  STEP: creating service in namespace services-7452 @ 03/27/24 19:46:11.602
  STEP: creating service affinity-clusterip in namespace services-7452 @ 03/27/24 19:46:11.602
  E0327 19:46:11.627065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip in namespace services-7452 @ 03/27/24 19:46:11.627
  I0327 19:46:11.662452      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7452, replica count: 3
  E0327 19:46:12.628053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:13.627978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:14.628256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 19:46:14.715959      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 19:46:14.737: INFO: Creating new exec pod
  E0327 19:46:15.629157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:16.629799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:17.630131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:46:17.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7452 exec execpod-affinitysrkmz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Mar 27 19:46:18.098: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Mar 27 19:46:18.098: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:46:18.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7452 exec execpod-affinitysrkmz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.36.38 80'
  Mar 27 19:46:18.376: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.36.38 80\nConnection to 10.233.36.38 80 port [tcp/http] succeeded!\n"
  Mar 27 19:46:18.376: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:46:18.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7452 exec execpod-affinitysrkmz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.36.38:80/ ; done'
  E0327 19:46:18.631269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:46:18.893: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.36.38:80/\n"
  Mar 27 19:46:18.893: INFO: stdout: "\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl\naffinity-clusterip-dl8kl"
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Received response from host: affinity-clusterip-dl8kl
  Mar 27 19:46:18.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:46:18.905: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7452, will wait for the garbage collector to delete the pods @ 03/27/24 19:46:18.933
  Mar 27 19:46:19.017: INFO: Deleting ReplicationController affinity-clusterip took: 20.730252ms
  Mar 27 19:46:19.118: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.927021ms
  E0327 19:46:19.631849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:20.632460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:21.632938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7452" for this suite. @ 03/27/24 19:46:22.568
• [11.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 03/27/24 19:46:22.599
  Mar 27 19:46:22.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:46:22.603
  E0327 19:46:22.634265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:22.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:22.652
  STEP: Creating a pod to test downward api env vars @ 03/27/24 19:46:22.659
  E0327 19:46:23.634245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:24.634632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:25.635073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:26.635361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:46:26.74
  Mar 27 19:46:26.749: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-355ad305-1639-47c8-8170-8986b080079d container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 19:46:26.769
  Mar 27 19:46:26.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5527" for this suite. @ 03/27/24 19:46:26.854
• [4.279 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 03/27/24 19:46:26.884
  Mar 27 19:46:26.884: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename endpointslice @ 03/27/24 19:46:26.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:26.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:26.941
  Mar 27 19:46:26.970: INFO: Endpoints addresses: [10.61.1.197 10.61.1.198 10.61.1.199] , ports: [6443]
  Mar 27 19:46:26.970: INFO: EndpointSlices addresses: [10.61.1.197 10.61.1.198 10.61.1.199] , ports: [6443]
  Mar 27 19:46:26.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2484" for this suite. @ 03/27/24 19:46:26.984
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 03/27/24 19:46:27.006
  Mar 27 19:46:27.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/27/24 19:46:27.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:27.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:27.06
  STEP: create the container to handle the HTTPGet hook request. @ 03/27/24 19:46:27.084
  E0327 19:46:27.635516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:28.635773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/27/24 19:46:29.195
  E0327 19:46:29.636525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:30.637562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 03/27/24 19:46:31.249
  E0327 19:46:31.637937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:32.638375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 03/27/24 19:46:33.288
  Mar 27 19:46:33.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4855" for this suite. @ 03/27/24 19:46:33.381
• [6.395 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 03/27/24 19:46:33.403
  Mar 27 19:46:33.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:46:33.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:33.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:33.528
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/27/24 19:46:33.541
  E0327 19:46:33.639490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:34.640557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:35.641731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:36.641689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:46:37.635
  E0327 19:46:37.642531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:46:37.672: INFO: Trying to get logs from node env1-test-worker-2 pod pod-64316599-f6c9-4da8-b16a-25fe67ea4442 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:46:37.698
  Mar 27 19:46:37.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-651" for this suite. @ 03/27/24 19:46:37.798
• [4.416 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 03/27/24 19:46:37.821
  Mar 27 19:46:37.821: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replication-controller @ 03/27/24 19:46:37.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:37.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:37.913
  Mar 27 19:46:37.922: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0327 19:46:38.642821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 03/27/24 19:46:38.949
  STEP: Checking rc "condition-test" has the desired failure condition set @ 03/27/24 19:46:38.962
  E0327 19:46:39.643199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 03/27/24 19:46:39.984
  Mar 27 19:46:40.015: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 03/27/24 19:46:40.015
  E0327 19:46:40.643329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:46:41.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9145" for this suite. @ 03/27/24 19:46:41.055
• [3.251 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 03/27/24 19:46:41.072
  Mar 27 19:46:41.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pod-network-test @ 03/27/24 19:46:41.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:46:41.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:46:41.118
  STEP: Performing setup for networking test in namespace pod-network-test-5868 @ 03/27/24 19:46:41.125
  STEP: creating a selector @ 03/27/24 19:46:41.125
  STEP: Creating the service pods in kubernetes @ 03/27/24 19:46:41.125
  Mar 27 19:46:41.125: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0327 19:46:41.643585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:42.644646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:43.644820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:44.645700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:45.646712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:46.646964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:47.647601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:48.648131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:49.648386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:50.648475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:51.648676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:52.649131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:53.649261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:54.649759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:55.650852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:56.651391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:57.651985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:58.652940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:46:59.653191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:00.654106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:01.654278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:02.654501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/27/24 19:47:03.396
  E0327 19:47:03.655123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:04.655863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:05.496: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 27 19:47:05.496: INFO: Going to poll 10.233.67.242 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Mar 27 19:47:05.503: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.67.242:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5868 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:47:05.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:47:05.505: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:47:05.505: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5868/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.67.242%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0327 19:47:05.656207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:05.711: INFO: Found all 1 expected endpoints: [netserver-0]
  Mar 27 19:47:05.711: INFO: Going to poll 10.233.68.178 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Mar 27 19:47:05.720: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.68.178:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5868 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:47:05.720: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:47:05.722: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:47:05.722: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5868/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.68.178%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Mar 27 19:47:05.871: INFO: Found all 1 expected endpoints: [netserver-1]
  Mar 27 19:47:05.871: INFO: Going to poll 10.233.69.253 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Mar 27 19:47:05.879: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.69.253:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5868 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:47:05.879: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:47:05.880: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:47:05.880: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5868/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.69.253%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Mar 27 19:47:06.032: INFO: Found all 1 expected endpoints: [netserver-2]
  Mar 27 19:47:06.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5868" for this suite. @ 03/27/24 19:47:06.047
• [24.997 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 03/27/24 19:47:06.071
  Mar 27 19:47:06.071: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename containers @ 03/27/24 19:47:06.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:06.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:06.132
  STEP: Creating a pod to test override command @ 03/27/24 19:47:06.138
  E0327 19:47:06.657094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:07.657670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:08.657799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:09.658433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:47:10.193
  Mar 27 19:47:10.203: INFO: Trying to get logs from node env1-test-worker-2 pod client-containers-7d304e22-de82-47c8-9cbd-ea7702f1ba4f container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:47:10.225
  Mar 27 19:47:10.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3882" for this suite. @ 03/27/24 19:47:10.312
• [4.265 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 03/27/24 19:47:10.339
  Mar 27 19:47:10.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-runtime @ 03/27/24 19:47:10.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:10.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:10.414
  STEP: create the container @ 03/27/24 19:47:10.42
  W0327 19:47:10.455521      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/27/24 19:47:10.455
  E0327 19:47:10.658533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:11.659313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:12.659626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:13.660308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/27/24 19:47:14.508
  STEP: the container should be terminated @ 03/27/24 19:47:14.518
  STEP: the termination message should be set @ 03/27/24 19:47:14.518
  Mar 27 19:47:14.518: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 03/27/24 19:47:14.518
  Mar 27 19:47:14.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-796" for this suite. @ 03/27/24 19:47:14.573
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 03/27/24 19:47:14.607
  Mar 27 19:47:14.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename discovery @ 03/27/24 19:47:14.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:14.655
  E0327 19:47:14.661051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:14.662
  STEP: Setting up server cert @ 03/27/24 19:47:14.673
  E0327 19:47:15.662035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:15.957: INFO: Checking APIGroup: apiregistration.k8s.io
  Mar 27 19:47:15.960: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Mar 27 19:47:15.960: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Mar 27 19:47:15.960: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Mar 27 19:47:15.960: INFO: Checking APIGroup: apps
  Mar 27 19:47:15.962: INFO: PreferredVersion.GroupVersion: apps/v1
  Mar 27 19:47:15.962: INFO: Versions found [{apps/v1 v1}]
  Mar 27 19:47:15.962: INFO: apps/v1 matches apps/v1
  Mar 27 19:47:15.962: INFO: Checking APIGroup: events.k8s.io
  Mar 27 19:47:15.964: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Mar 27 19:47:15.964: INFO: Versions found [{events.k8s.io/v1 v1}]
  Mar 27 19:47:15.964: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Mar 27 19:47:15.964: INFO: Checking APIGroup: authentication.k8s.io
  Mar 27 19:47:15.967: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Mar 27 19:47:15.967: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Mar 27 19:47:15.967: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Mar 27 19:47:15.967: INFO: Checking APIGroup: authorization.k8s.io
  Mar 27 19:47:15.969: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Mar 27 19:47:15.969: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Mar 27 19:47:15.969: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Mar 27 19:47:15.969: INFO: Checking APIGroup: autoscaling
  Mar 27 19:47:15.971: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Mar 27 19:47:15.971: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Mar 27 19:47:15.971: INFO: autoscaling/v2 matches autoscaling/v2
  Mar 27 19:47:15.971: INFO: Checking APIGroup: batch
  Mar 27 19:47:15.973: INFO: PreferredVersion.GroupVersion: batch/v1
  Mar 27 19:47:15.974: INFO: Versions found [{batch/v1 v1}]
  Mar 27 19:47:15.974: INFO: batch/v1 matches batch/v1
  Mar 27 19:47:15.974: INFO: Checking APIGroup: certificates.k8s.io
  Mar 27 19:47:15.976: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Mar 27 19:47:15.976: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Mar 27 19:47:15.976: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Mar 27 19:47:15.976: INFO: Checking APIGroup: networking.k8s.io
  Mar 27 19:47:15.978: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Mar 27 19:47:15.978: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Mar 27 19:47:15.978: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Mar 27 19:47:15.978: INFO: Checking APIGroup: policy
  Mar 27 19:47:15.980: INFO: PreferredVersion.GroupVersion: policy/v1
  Mar 27 19:47:15.980: INFO: Versions found [{policy/v1 v1}]
  Mar 27 19:47:15.980: INFO: policy/v1 matches policy/v1
  Mar 27 19:47:15.980: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Mar 27 19:47:15.982: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Mar 27 19:47:15.982: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Mar 27 19:47:15.982: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Mar 27 19:47:15.982: INFO: Checking APIGroup: storage.k8s.io
  Mar 27 19:47:15.987: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Mar 27 19:47:15.987: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Mar 27 19:47:15.987: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Mar 27 19:47:15.987: INFO: Checking APIGroup: admissionregistration.k8s.io
  Mar 27 19:47:15.989: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Mar 27 19:47:15.989: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Mar 27 19:47:15.989: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Mar 27 19:47:15.990: INFO: Checking APIGroup: apiextensions.k8s.io
  Mar 27 19:47:15.992: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Mar 27 19:47:15.992: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Mar 27 19:47:15.992: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Mar 27 19:47:15.992: INFO: Checking APIGroup: scheduling.k8s.io
  Mar 27 19:47:15.994: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Mar 27 19:47:15.994: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Mar 27 19:47:15.994: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Mar 27 19:47:15.994: INFO: Checking APIGroup: coordination.k8s.io
  Mar 27 19:47:15.997: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Mar 27 19:47:15.997: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Mar 27 19:47:15.997: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Mar 27 19:47:15.997: INFO: Checking APIGroup: node.k8s.io
  Mar 27 19:47:16.000: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Mar 27 19:47:16.000: INFO: Versions found [{node.k8s.io/v1 v1}]
  Mar 27 19:47:16.000: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Mar 27 19:47:16.000: INFO: Checking APIGroup: discovery.k8s.io
  Mar 27 19:47:16.003: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Mar 27 19:47:16.003: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Mar 27 19:47:16.003: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Mar 27 19:47:16.003: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Mar 27 19:47:16.006: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Mar 27 19:47:16.006: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Mar 27 19:47:16.006: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Mar 27 19:47:16.006: INFO: Checking APIGroup: monitoring.coreos.com
  Mar 27 19:47:16.009: INFO: PreferredVersion.GroupVersion: monitoring.coreos.com/v1
  Mar 27 19:47:16.009: INFO: Versions found [{monitoring.coreos.com/v1 v1} {monitoring.coreos.com/v1alpha1 v1alpha1}]
  Mar 27 19:47:16.009: INFO: monitoring.coreos.com/v1 matches monitoring.coreos.com/v1
  Mar 27 19:47:16.009: INFO: Checking APIGroup: velero.io
  Mar 27 19:47:16.011: INFO: PreferredVersion.GroupVersion: velero.io/v1
  Mar 27 19:47:16.011: INFO: Versions found [{velero.io/v1 v1} {velero.io/v2alpha1 v2alpha1}]
  Mar 27 19:47:16.011: INFO: velero.io/v1 matches velero.io/v1
  Mar 27 19:47:16.011: INFO: Checking APIGroup: cns.vmware.com
  Mar 27 19:47:16.013: INFO: PreferredVersion.GroupVersion: cns.vmware.com/v1alpha1
  Mar 27 19:47:16.013: INFO: Versions found [{cns.vmware.com/v1alpha1 v1alpha1}]
  Mar 27 19:47:16.013: INFO: cns.vmware.com/v1alpha1 matches cns.vmware.com/v1alpha1
  Mar 27 19:47:16.013: INFO: Checking APIGroup: traefik.containo.us
  Mar 27 19:47:16.016: INFO: PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  Mar 27 19:47:16.017: INFO: Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  Mar 27 19:47:16.017: INFO: traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  Mar 27 19:47:16.017: INFO: Checking APIGroup: traefik.io
  Mar 27 19:47:16.019: INFO: PreferredVersion.GroupVersion: traefik.io/v1alpha1
  Mar 27 19:47:16.019: INFO: Versions found [{traefik.io/v1alpha1 v1alpha1}]
  Mar 27 19:47:16.019: INFO: traefik.io/v1alpha1 matches traefik.io/v1alpha1
  Mar 27 19:47:16.019: INFO: Checking APIGroup: metrics.k8s.io
  Mar 27 19:47:16.022: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Mar 27 19:47:16.022: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Mar 27 19:47:16.022: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Mar 27 19:47:16.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6079" for this suite. @ 03/27/24 19:47:16.041
• [1.463 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 03/27/24 19:47:16.07
  Mar 27 19:47:16.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:47:16.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:16.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:16.142
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:47:16.147
  E0327 19:47:16.662308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:17.662898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:18.663768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:19.664247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:47:20.214
  Mar 27 19:47:20.227: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-de2beaf6-cbc2-4f1c-9aff-bd9b4b6d4357 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:47:20.249
  Mar 27 19:47:20.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2003" for this suite. @ 03/27/24 19:47:20.322
• [4.272 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 03/27/24 19:47:20.343
  Mar 27 19:47:20.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/27/24 19:47:20.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:20.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:20.404
  Mar 27 19:47:20.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 19:47:20.665280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:21.665702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:22.665716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:23.667497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:24.667582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:25.668437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:26.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6999" for this suite. @ 03/27/24 19:47:26.519
• [6.212 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 03/27/24 19:47:26.556
  Mar 27 19:47:26.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sysctl @ 03/27/24 19:47:26.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:26.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:26.629
  STEP: Creating a pod with one valid and two invalid sysctls @ 03/27/24 19:47:26.641
  Mar 27 19:47:26.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 19:47:26.668797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sysctl-6566" for this suite. @ 03/27/24 19:47:26.683
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 03/27/24 19:47:26.721
  Mar 27 19:47:26.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 19:47:26.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:26.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:26.781
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 03/27/24 19:47:26.79
  Mar 27 19:47:26.807: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7657  e1cd6b66-70c0-4106-9c8b-685cfadb40ea 210770930 0 2024-03-27 19:47:26 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-03-27 19:47:26 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jv9j6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jv9j6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0327 19:47:27.668938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:28.669808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 03/27/24 19:47:28.827
  Mar 27 19:47:28.827: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7657 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:47:28.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:47:28.828: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:47:28.828: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-7657/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 03/27/24 19:47:29.003
  Mar 27 19:47:29.003: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7657 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:47:29.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:47:29.006: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:47:29.006: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-7657/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Mar 27 19:47:29.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:47:29.195: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-7657" for this suite. @ 03/27/24 19:47:29.218
• [2.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 03/27/24 19:47:29.241
  Mar 27 19:47:29.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 19:47:29.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:29.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:29.29
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/27/24 19:47:29.303
  Mar 27 19:47:29.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-9428 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Mar 27 19:47:29.535: INFO: stderr: ""
  Mar 27 19:47:29.535: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/27/24 19:47:29.535
  Mar 27 19:47:29.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-9428 delete pods e2e-test-httpd-pod'
  E0327 19:47:29.670477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:30.670717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:31.519: INFO: stderr: ""
  Mar 27 19:47:31.519: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Mar 27 19:47:31.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9428" for this suite. @ 03/27/24 19:47:31.538
• [2.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 03/27/24 19:47:31.559
  Mar 27 19:47:31.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename gc @ 03/27/24 19:47:31.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:31.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:31.619
  STEP: create the rc1 @ 03/27/24 19:47:31.642
  STEP: create the rc2 @ 03/27/24 19:47:31.658
  E0327 19:47:31.671046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:32.671836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:33.672842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:34.673313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:35.674232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:36.678179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:37.678236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 03/27/24 19:47:37.687
  STEP: delete the rc simpletest-rc-to-be-deleted @ 03/27/24 19:47:38.482
  STEP: wait for the rc to be deleted @ 03/27/24 19:47:38.513
  E0327 19:47:38.678404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:39.678792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:40.680037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:41.680759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:42.681190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:43.590: INFO: 75 pods remaining
  Mar 27 19:47:43.590: INFO: 75 pods has nil DeletionTimestamp
  Mar 27 19:47:43.590: INFO: 
  E0327 19:47:43.682278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:44.685662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:45.686521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:46.686832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:47.687435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/27/24 19:47:48.558
  E0327 19:47:48.688524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:48.784: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 27 19:47:48.789: INFO: Deleting pod "simpletest-rc-to-be-deleted-228wp" in namespace "gc-1957"
  Mar 27 19:47:48.832: INFO: Deleting pod "simpletest-rc-to-be-deleted-2gjj7" in namespace "gc-1957"
  Mar 27 19:47:48.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lj48" in namespace "gc-1957"
  Mar 27 19:47:48.897: INFO: Deleting pod "simpletest-rc-to-be-deleted-2q4rq" in namespace "gc-1957"
  Mar 27 19:47:48.968: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rn9j" in namespace "gc-1957"
  Mar 27 19:47:48.998: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vlpk" in namespace "gc-1957"
  Mar 27 19:47:49.062: INFO: Deleting pod "simpletest-rc-to-be-deleted-47wdg" in namespace "gc-1957"
  Mar 27 19:47:49.134: INFO: Deleting pod "simpletest-rc-to-be-deleted-4gt94" in namespace "gc-1957"
  Mar 27 19:47:49.202: INFO: Deleting pod "simpletest-rc-to-be-deleted-4m6m6" in namespace "gc-1957"
  Mar 27 19:47:49.278: INFO: Deleting pod "simpletest-rc-to-be-deleted-4mfbh" in namespace "gc-1957"
  Mar 27 19:47:49.333: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tg7c" in namespace "gc-1957"
  Mar 27 19:47:49.420: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zztx" in namespace "gc-1957"
  Mar 27 19:47:49.485: INFO: Deleting pod "simpletest-rc-to-be-deleted-58msq" in namespace "gc-1957"
  Mar 27 19:47:49.530: INFO: Deleting pod "simpletest-rc-to-be-deleted-5gzlb" in namespace "gc-1957"
  Mar 27 19:47:49.576: INFO: Deleting pod "simpletest-rc-to-be-deleted-5n5j5" in namespace "gc-1957"
  Mar 27 19:47:49.629: INFO: Deleting pod "simpletest-rc-to-be-deleted-5nqt6" in namespace "gc-1957"
  Mar 27 19:47:49.688: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rq7c" in namespace "gc-1957"
  E0327 19:47:49.688958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:49.745: INFO: Deleting pod "simpletest-rc-to-be-deleted-5z8t9" in namespace "gc-1957"
  Mar 27 19:47:49.821: INFO: Deleting pod "simpletest-rc-to-be-deleted-67rsc" in namespace "gc-1957"
  Mar 27 19:47:49.852: INFO: Deleting pod "simpletest-rc-to-be-deleted-6g8fz" in namespace "gc-1957"
  Mar 27 19:47:49.915: INFO: Deleting pod "simpletest-rc-to-be-deleted-7sn8t" in namespace "gc-1957"
  Mar 27 19:47:49.988: INFO: Deleting pod "simpletest-rc-to-be-deleted-7szcd" in namespace "gc-1957"
  Mar 27 19:47:50.046: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ztqd" in namespace "gc-1957"
  Mar 27 19:47:50.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-8qmdp" in namespace "gc-1957"
  Mar 27 19:47:50.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bdph" in namespace "gc-1957"
  Mar 27 19:47:50.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-9nwqx" in namespace "gc-1957"
  Mar 27 19:47:50.204: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wxqd" in namespace "gc-1957"
  Mar 27 19:47:50.225: INFO: Deleting pod "simpletest-rc-to-be-deleted-blhr4" in namespace "gc-1957"
  Mar 27 19:47:50.262: INFO: Deleting pod "simpletest-rc-to-be-deleted-cf9l4" in namespace "gc-1957"
  Mar 27 19:47:50.318: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgpqj" in namespace "gc-1957"
  Mar 27 19:47:50.355: INFO: Deleting pod "simpletest-rc-to-be-deleted-clz22" in namespace "gc-1957"
  Mar 27 19:47:50.404: INFO: Deleting pod "simpletest-rc-to-be-deleted-crtqk" in namespace "gc-1957"
  Mar 27 19:47:50.453: INFO: Deleting pod "simpletest-rc-to-be-deleted-crxgs" in namespace "gc-1957"
  Mar 27 19:47:50.480: INFO: Deleting pod "simpletest-rc-to-be-deleted-cxvpg" in namespace "gc-1957"
  Mar 27 19:47:50.508: INFO: Deleting pod "simpletest-rc-to-be-deleted-czm2j" in namespace "gc-1957"
  Mar 27 19:47:50.543: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzrzv" in namespace "gc-1957"
  Mar 27 19:47:50.572: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdkph" in namespace "gc-1957"
  Mar 27 19:47:50.598: INFO: Deleting pod "simpletest-rc-to-be-deleted-fl4hg" in namespace "gc-1957"
  Mar 27 19:47:50.642: INFO: Deleting pod "simpletest-rc-to-be-deleted-fr47w" in namespace "gc-1957"
  Mar 27 19:47:50.662: INFO: Deleting pod "simpletest-rc-to-be-deleted-fvh7z" in namespace "gc-1957"
  E0327 19:47:50.689339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:50.691: INFO: Deleting pod "simpletest-rc-to-be-deleted-g7hxh" in namespace "gc-1957"
  Mar 27 19:47:50.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-g8qb5" in namespace "gc-1957"
  Mar 27 19:47:50.766: INFO: Deleting pod "simpletest-rc-to-be-deleted-gg2v4" in namespace "gc-1957"
  Mar 27 19:47:50.810: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkhh6" in namespace "gc-1957"
  Mar 27 19:47:50.843: INFO: Deleting pod "simpletest-rc-to-be-deleted-gslcp" in namespace "gc-1957"
  Mar 27 19:47:50.872: INFO: Deleting pod "simpletest-rc-to-be-deleted-gthl7" in namespace "gc-1957"
  Mar 27 19:47:50.911: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtxgw" in namespace "gc-1957"
  Mar 27 19:47:50.930: INFO: Deleting pod "simpletest-rc-to-be-deleted-hs9z7" in namespace "gc-1957"
  Mar 27 19:47:50.959: INFO: Deleting pod "simpletest-rc-to-be-deleted-j45d2" in namespace "gc-1957"
  Mar 27 19:47:50.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-k78k8" in namespace "gc-1957"
  Mar 27 19:47:51.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1957" for this suite. @ 03/27/24 19:47:51.023
• [19.479 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 03/27/24 19:47:51.045
  Mar 27 19:47:51.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 19:47:51.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:51.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:51.091
  STEP: Creating secret with name secret-test-map-2ccf5c08-9a59-4571-bc7b-32dd5fb4ee4c @ 03/27/24 19:47:51.095
  STEP: Creating a pod to test consume secrets @ 03/27/24 19:47:51.107
  E0327 19:47:51.689627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:52.690011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:53.691578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:54.691688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:47:55.162
  Mar 27 19:47:55.170: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-8cd15571-01cf-4d70-b06e-93a57e41123e container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 19:47:55.193
  Mar 27 19:47:55.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4525" for this suite. @ 03/27/24 19:47:55.242
• [4.217 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 03/27/24 19:47:55.262
  Mar 27 19:47:55.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 19:47:55.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:47:55.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:47:55.311
  STEP: creating Agnhost RC @ 03/27/24 19:47:55.316
  Mar 27 19:47:55.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1625 create -f -'
  E0327 19:47:55.691717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:56.692278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:47:57.693183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:57.832: INFO: stderr: ""
  Mar 27 19:47:57.832: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/27/24 19:47:57.832
  E0327 19:47:58.694047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:58.841: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 19:47:58.841: INFO: Found 0 / 1
  E0327 19:47:59.694731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:47:59.843: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 19:47:59.843: INFO: Found 1 / 1
  Mar 27 19:47:59.843: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 03/27/24 19:47:59.843
  Mar 27 19:47:59.851: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 19:47:59.851: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 27 19:47:59.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1625 patch pod agnhost-primary-hjbmd -p {"metadata":{"annotations":{"x":"y"}}}'
  Mar 27 19:48:00.072: INFO: stderr: ""
  Mar 27 19:48:00.072: INFO: stdout: "pod/agnhost-primary-hjbmd patched\n"
  STEP: checking annotations @ 03/27/24 19:48:00.072
  Mar 27 19:48:00.084: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 19:48:00.084: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 27 19:48:00.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1625" for this suite. @ 03/27/24 19:48:00.099
• [4.871 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 03/27/24 19:48:00.135
  Mar 27 19:48:00.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 19:48:00.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:00.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:00.212
  STEP: creating a replication controller @ 03/27/24 19:48:00.22
  Mar 27 19:48:00.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 create -f -'
  E0327 19:48:00.696541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:01.696249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:02.277: INFO: stderr: ""
  Mar 27 19:48:02.278: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/27/24 19:48:02.278
  Mar 27 19:48:02.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 27 19:48:02.452: INFO: stderr: ""
  Mar 27 19:48:02.452: INFO: stdout: "update-demo-nautilus-7nk8b update-demo-nautilus-ls8xf "
  Mar 27 19:48:02.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-7nk8b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:48:02.645: INFO: stderr: ""
  Mar 27 19:48:02.646: INFO: stdout: ""
  Mar 27 19:48:02.646: INFO: update-demo-nautilus-7nk8b is created but not running
  E0327 19:48:02.696632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:03.697267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:04.698233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:05.699159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:06.699628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:07.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0327 19:48:07.700402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:07.856: INFO: stderr: ""
  Mar 27 19:48:07.856: INFO: stdout: "update-demo-nautilus-7nk8b update-demo-nautilus-ls8xf "
  Mar 27 19:48:07.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-7nk8b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:48:07.996: INFO: stderr: ""
  Mar 27 19:48:07.996: INFO: stdout: "true"
  Mar 27 19:48:07.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-7nk8b -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 27 19:48:08.174: INFO: stderr: ""
  Mar 27 19:48:08.174: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Mar 27 19:48:08.174: INFO: validating pod update-demo-nautilus-7nk8b
  Mar 27 19:48:08.187: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 27 19:48:08.187: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 27 19:48:08.187: INFO: update-demo-nautilus-7nk8b is verified up and running
  Mar 27 19:48:08.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-ls8xf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:48:08.377: INFO: stderr: ""
  Mar 27 19:48:08.377: INFO: stdout: "true"
  Mar 27 19:48:08.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-ls8xf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 27 19:48:08.574: INFO: stderr: ""
  Mar 27 19:48:08.574: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Mar 27 19:48:08.574: INFO: validating pod update-demo-nautilus-ls8xf
  Mar 27 19:48:08.585: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 27 19:48:08.585: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 27 19:48:08.585: INFO: update-demo-nautilus-ls8xf is verified up and running
  STEP: scaling down the replication controller @ 03/27/24 19:48:08.585
  Mar 27 19:48:08.589: INFO: scanned /root for discovery docs: <nil>
  Mar 27 19:48:08.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0327 19:48:08.700772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:09.701567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:09.891: INFO: stderr: ""
  Mar 27 19:48:09.891: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/27/24 19:48:09.891
  Mar 27 19:48:09.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 27 19:48:10.053: INFO: stderr: ""
  Mar 27 19:48:10.053: INFO: stdout: "update-demo-nautilus-ls8xf "
  Mar 27 19:48:10.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-ls8xf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:48:10.252: INFO: stderr: ""
  Mar 27 19:48:10.252: INFO: stdout: "true"
  Mar 27 19:48:10.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-ls8xf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 27 19:48:10.446: INFO: stderr: ""
  Mar 27 19:48:10.446: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Mar 27 19:48:10.446: INFO: validating pod update-demo-nautilus-ls8xf
  Mar 27 19:48:10.454: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 27 19:48:10.454: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 27 19:48:10.454: INFO: update-demo-nautilus-ls8xf is verified up and running
  STEP: scaling up the replication controller @ 03/27/24 19:48:10.454
  Mar 27 19:48:10.457: INFO: scanned /root for discovery docs: <nil>
  Mar 27 19:48:10.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0327 19:48:10.701637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:11.684: INFO: stderr: ""
  Mar 27 19:48:11.684: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/27/24 19:48:11.684
  Mar 27 19:48:11.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0327 19:48:11.701825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:11.859: INFO: stderr: ""
  Mar 27 19:48:11.859: INFO: stdout: "update-demo-nautilus-9k8ll update-demo-nautilus-ls8xf "
  Mar 27 19:48:11.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-9k8ll -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:48:12.031: INFO: stderr: ""
  Mar 27 19:48:12.031: INFO: stdout: ""
  Mar 27 19:48:12.031: INFO: update-demo-nautilus-9k8ll is created but not running
  E0327 19:48:12.702500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:13.703455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:14.703575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:15.704364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:16.704591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:17.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 27 19:48:17.245: INFO: stderr: ""
  Mar 27 19:48:17.245: INFO: stdout: "update-demo-nautilus-9k8ll update-demo-nautilus-ls8xf "
  Mar 27 19:48:17.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-9k8ll -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 27 19:48:17.444: INFO: stderr: ""
  Mar 27 19:48:17.444: INFO: stdout: "true"
  Mar 27 19:48:17.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-9k8ll -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 27 19:48:17.595: INFO: stderr: ""
  Mar 27 19:48:17.595: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Mar 27 19:48:17.595: INFO: validating pod update-demo-nautilus-9k8ll
  Mar 27 19:48:17.606: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 27 19:48:17.606: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 27 19:48:17.606: INFO: update-demo-nautilus-9k8ll is verified up and running
  Mar 27 19:48:17.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-ls8xf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0327 19:48:17.705491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:17.740: INFO: stderr: ""
  Mar 27 19:48:17.740: INFO: stdout: "true"
  Mar 27 19:48:17.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods update-demo-nautilus-ls8xf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 27 19:48:17.869: INFO: stderr: ""
  Mar 27 19:48:17.869: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Mar 27 19:48:17.869: INFO: validating pod update-demo-nautilus-ls8xf
  Mar 27 19:48:17.876: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 27 19:48:17.876: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 27 19:48:17.876: INFO: update-demo-nautilus-ls8xf is verified up and running
  STEP: using delete to clean up resources @ 03/27/24 19:48:17.876
  Mar 27 19:48:17.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 delete --grace-period=0 --force -f -'
  Mar 27 19:48:18.033: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 19:48:18.033: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Mar 27 19:48:18.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get rc,svc -l name=update-demo --no-headers'
  Mar 27 19:48:18.243: INFO: stderr: "No resources found in kubectl-1442 namespace.\n"
  Mar 27 19:48:18.243: INFO: stdout: ""
  Mar 27 19:48:18.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-1442 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Mar 27 19:48:18.428: INFO: stderr: ""
  Mar 27 19:48:18.428: INFO: stdout: ""
  Mar 27 19:48:18.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1442" for this suite. @ 03/27/24 19:48:18.443
• [18.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 03/27/24 19:48:18.489
  Mar 27 19:48:18.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename runtimeclass @ 03/27/24 19:48:18.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:18.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:18.546
  Mar 27 19:48:18.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9880" for this suite. @ 03/27/24 19:48:18.654
• [0.188 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 03/27/24 19:48:18.681
  Mar 27 19:48:18.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:48:18.684
  E0327 19:48:18.706044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:18.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:18.742
  STEP: Setting up server cert @ 03/27/24 19:48:18.858
  E0327 19:48:19.706100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:20.706998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:48:20.78
  STEP: Deploying the webhook pod @ 03/27/24 19:48:20.799
  STEP: Wait for the deployment to be ready @ 03/27/24 19:48:20.829
  Mar 27 19:48:20.846: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0327 19:48:21.707174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:22.707679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:48:22.872
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:48:22.891
  E0327 19:48:23.708077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:23.892: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/27/24 19:48:23.917
  STEP: create a pod @ 03/27/24 19:48:23.966
  E0327 19:48:24.708278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:25.709395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 03/27/24 19:48:26.042
  Mar 27 19:48:26.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=webhook-8288 attach --namespace=webhook-8288 to-be-attached-pod -i -c=container1'
  Mar 27 19:48:26.239: INFO: rc: 1
  Mar 27 19:48:26.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8288" for this suite. @ 03/27/24 19:48:26.458
  STEP: Destroying namespace "webhook-markers-8835" for this suite. @ 03/27/24 19:48:26.485
• [7.861 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 03/27/24 19:48:26.544
  Mar 27 19:48:26.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 19:48:26.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:26.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:26.661
  STEP: Creating a test headless service @ 03/27/24 19:48:26.668
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3756.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3756.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 03/27/24 19:48:26.686
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3756.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3756.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 03/27/24 19:48:26.686
  STEP: creating a pod to probe DNS @ 03/27/24 19:48:26.687
  STEP: submitting the pod to kubernetes @ 03/27/24 19:48:26.687
  E0327 19:48:26.709712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:27.710185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:28.710514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 19:48:28.765
  STEP: looking for the results for each expected name from probers @ 03/27/24 19:48:28.774
  Mar 27 19:48:28.817: INFO: DNS probes using dns-3756/dns-test-11e313c4-14f3-4fc9-96d7-592018089178 succeeded

  Mar 27 19:48:28.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 19:48:28.831
  STEP: deleting the test headless service @ 03/27/24 19:48:28.88
  STEP: Destroying namespace "dns-3756" for this suite. @ 03/27/24 19:48:28.923
• [2.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 03/27/24 19:48:28.952
  Mar 27 19:48:28.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sysctl @ 03/27/24 19:48:28.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:28.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:29.004
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 03/27/24 19:48:29.01
  STEP: Watching for error events or started pod @ 03/27/24 19:48:29.031
  E0327 19:48:29.711503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:30.711633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 03/27/24 19:48:31.046
  E0327 19:48:31.712135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:32.712590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 03/27/24 19:48:33.081
  STEP: Getting logs from the pod @ 03/27/24 19:48:33.081
  STEP: Checking that the sysctl is actually updated @ 03/27/24 19:48:33.103
  Mar 27 19:48:33.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4863" for this suite. @ 03/27/24 19:48:33.12
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 03/27/24 19:48:33.169
  Mar 27 19:48:33.169: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 19:48:33.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:33.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:33.248
  STEP: Creating configMap with name configmap-test-volume-map-e756a0e0-d0c7-4a86-affb-b94ca718ff9c @ 03/27/24 19:48:33.253
  STEP: Creating a pod to test consume configMaps @ 03/27/24 19:48:33.275
  E0327 19:48:33.717958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:34.718691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:35.718855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:36.719580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:48:37.375
  Mar 27 19:48:37.383: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-f8a0b443-84ba-4172-af8b-f866c007bb9f container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 19:48:37.402
  Mar 27 19:48:37.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8310" for this suite. @ 03/27/24 19:48:37.451
• [4.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 03/27/24 19:48:37.477
  Mar 27 19:48:37.477: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 19:48:37.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:37.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:37.531
  STEP: Creating a pod to test substitution in container's command @ 03/27/24 19:48:37.538
  E0327 19:48:37.720237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:38.720957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:39.721861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:40.722183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:48:41.598
  Mar 27 19:48:41.618: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-137e0551-0239-42ad-8b3b-1964edd31818 container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 19:48:41.637
  Mar 27 19:48:41.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1610" for this suite. @ 03/27/24 19:48:41.69
• [4.237 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 03/27/24 19:48:41.716
  Mar 27 19:48:41.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename conformance-tests @ 03/27/24 19:48:41.718
  E0327 19:48:41.722595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:41.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:41.772
  STEP: Getting node addresses @ 03/27/24 19:48:41.779
  Mar 27 19:48:41.779: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Mar 27 19:48:41.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4752" for this suite. @ 03/27/24 19:48:41.809
• [0.108 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 03/27/24 19:48:41.824
  Mar 27 19:48:41.824: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:48:41.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:41.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:41.879
  STEP: Setting up server cert @ 03/27/24 19:48:41.938
  E0327 19:48:42.722900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:48:43.198
  STEP: Deploying the webhook pod @ 03/27/24 19:48:43.212
  STEP: Wait for the deployment to be ready @ 03/27/24 19:48:43.242
  Mar 27 19:48:43.273: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 19:48:43.723927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:44.724944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:48:45.299
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:48:45.316
  E0327 19:48:45.726077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:46.317: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 03/27/24 19:48:46.344
  Mar 27 19:48:46.407: INFO: Waiting for webhook configuration to be ready...
  STEP: create a configmap that should be updated by the webhook @ 03/27/24 19:48:46.537
  Mar 27 19:48:46.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 19:48:46.727233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-2997" for this suite. @ 03/27/24 19:48:46.904
  STEP: Destroying namespace "webhook-markers-5249" for this suite. @ 03/27/24 19:48:46.953
• [5.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 03/27/24 19:48:47.016
  Mar 27 19:48:47.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename proxy @ 03/27/24 19:48:47.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:47.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:47.116
  Mar 27 19:48:47.125: INFO: Creating pod...
  E0327 19:48:47.727151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:48.727954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:49.214: INFO: Creating service...
  Mar 27 19:48:49.234: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/pods/agnhost/proxy/some/path/with/DELETE
  Mar 27 19:48:49.257: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 27 19:48:49.257: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/pods/agnhost/proxy/some/path/with/GET
  Mar 27 19:48:49.265: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Mar 27 19:48:49.265: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/pods/agnhost/proxy/some/path/with/HEAD
  Mar 27 19:48:49.272: INFO: http.Client request:HEAD | StatusCode:200
  Mar 27 19:48:49.272: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/pods/agnhost/proxy/some/path/with/OPTIONS
  Mar 27 19:48:49.282: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 27 19:48:49.282: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/pods/agnhost/proxy/some/path/with/PATCH
  Mar 27 19:48:49.296: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 27 19:48:49.296: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/pods/agnhost/proxy/some/path/with/POST
  Mar 27 19:48:49.309: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 27 19:48:49.309: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/pods/agnhost/proxy/some/path/with/PUT
  Mar 27 19:48:49.321: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 27 19:48:49.321: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/services/test-service/proxy/some/path/with/DELETE
  Mar 27 19:48:49.333: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 27 19:48:49.333: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/services/test-service/proxy/some/path/with/GET
  Mar 27 19:48:49.347: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Mar 27 19:48:49.347: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/services/test-service/proxy/some/path/with/HEAD
  Mar 27 19:48:49.361: INFO: http.Client request:HEAD | StatusCode:200
  Mar 27 19:48:49.361: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/services/test-service/proxy/some/path/with/OPTIONS
  Mar 27 19:48:49.380: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 27 19:48:49.380: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/services/test-service/proxy/some/path/with/PATCH
  Mar 27 19:48:49.394: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 27 19:48:49.394: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/services/test-service/proxy/some/path/with/POST
  Mar 27 19:48:49.409: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 27 19:48:49.409: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1818/services/test-service/proxy/some/path/with/PUT
  Mar 27 19:48:49.428: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 27 19:48:49.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1818" for this suite. @ 03/27/24 19:48:49.447
• [2.465 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 03/27/24 19:48:49.485
  Mar 27 19:48:49.485: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:48:49.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:49.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:49.567
  STEP: Setting up server cert @ 03/27/24 19:48:49.642
  E0327 19:48:49.728452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:48:50.151
  STEP: Deploying the webhook pod @ 03/27/24 19:48:50.165
  STEP: Wait for the deployment to be ready @ 03/27/24 19:48:50.198
  Mar 27 19:48:50.216: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 19:48:50.728709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:51.729088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:48:52.247
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:48:52.292
  E0327 19:48:52.729888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:53.293: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 03/27/24 19:48:53.306
  STEP: Creating a custom resource definition that should be denied by the webhook @ 03/27/24 19:48:53.341
  Mar 27 19:48:53.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:48:53.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2322" for this suite. @ 03/27/24 19:48:53.488
  STEP: Destroying namespace "webhook-markers-9221" for this suite. @ 03/27/24 19:48:53.5
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 03/27/24 19:48:53.542
  Mar 27 19:48:53.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 19:48:53.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:48:53.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:48:53.609
  STEP: Creating pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448 @ 03/27/24 19:48:53.617
  E0327 19:48:53.733718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:54.734692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 19:48:55.658
  Mar 27 19:48:55.664: INFO: Initial restart count of pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb is 0
  Mar 27 19:48:55.671: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:48:55.735376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:56.735349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:57.680: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:48:57.735904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:48:58.736067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:48:59.697: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:48:59.737080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:00.737726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:01.707: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:01.738554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:02.739026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:03.718: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:03.739161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:04.739521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:05.727: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:05.739834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:06.740872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:07.736: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:07.742214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:08.742911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:09.742927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:09.748: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:10.743586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:11.744293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:11.761: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:12.744282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:13.745480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:13.772: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:14.745802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:15.746106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:15.784: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:16.746337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:17.747226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:17.794: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:18.748215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:19.749319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:19.803: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:20.750311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:21.750847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:21.813: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:22.751091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:23.751825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:23.823: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:24.752737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:25.753651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:25.836: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:26.754150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:27.754937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:27.846: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:28.755212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:29.755989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:29.859: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:30.756202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:31.756560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:31.872: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:32.757421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:33.758562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:33.881: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:34.758847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:35.759096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:35.891: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:36.759367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:37.760001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:37.901: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:38.760637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:39.761413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:39.911: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:40.761490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:41.762595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:41.922: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:42.763169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:43.763878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:43.934: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:44.764039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:45.764964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:45.946: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:46.765201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:47.765552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:47.954: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:48.766470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:49.766357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:49.976: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:50.766132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:51.766792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:51.985: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:52.766955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:53.767216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:53.995: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:54.767509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:55.768518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:56.017: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:56.768726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:57.768990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:49:58.034: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:49:58.769649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:49:59.770250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:00.046: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:00.771387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:01.771467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:02.054: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:02.772353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:03.772779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:04.067: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:04.772937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:05.773031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:06.076: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:06.773128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:07.773337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:08.086: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:08.773617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:09.773948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:10.094: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:10.774449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:11.774993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:12.104: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:12.775373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:13.775641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:14.114: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:14.775866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:15.776803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:16.122: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:16.777443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:17.777665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:18.133: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:18.777996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:19.778954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:20.141: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:20.779905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:21.780470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:22.151: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:22.781640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:23.782737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:24.167: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:24.782750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:25.783691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:26.181: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:26.783908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:27.784351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:28.188: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:28.785461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:29.786165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:30.201: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:30.786835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:31.787336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:32.211: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:32.788143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:33.788911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:34.227: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:34.789191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:35.790356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:36.242: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:36.791002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:37.791270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:38.253: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:38.792203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:39.792683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:40.266: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:40.793047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:41.793612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:42.278: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:42.793816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:43.794501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:44.287: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:44.795664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:45.795872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:46.297: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:46.796639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:47.797032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:48.308: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:48.797913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:49.798925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:50.320: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:50.799345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:51.800092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:52.330: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:52.801124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:53.801728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:54.345: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:54.801878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:55.803097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:56.363: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:56.803174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:57.803408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:50:58.376: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:50:58.803638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:50:59.804280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:00.384: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:00.804461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:01.805004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:02.393: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:02.805077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:03.805741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:04.405: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:04.806479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:05.807292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:06.417: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:06.808233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:07.809243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:08.427: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:08.809773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:09.809896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:10.441: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:10.811077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:11.811675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:12.450: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:12.811680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:13.811930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:14.459: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:14.812764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:15.813595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:16.478: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:16.814156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:17.814244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:18.485: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:18.815331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:19.815923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:20.495: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:20.816720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:21.817411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:22.505: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:22.818054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:23.818251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:24.516: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:24.818492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:25.818709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:26.530: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:26.819085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:27.819179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:28.540: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:28.819381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:29.820310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:30.549: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:30.820497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:31.821539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:32.558: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:32.821681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:33.822580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:34.570: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:34.822717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:35.823590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:36.583: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:36.824136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:37.824694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:38.592: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:38.825843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:39.826842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:40.604: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:40.827976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:41.829017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:42.613: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:42.829569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:43.830615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:44.627: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:44.831398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:45.831586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:46.636: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:46.831628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:47.832363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:48.647: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:48.834061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:49.834632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:50.657: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:50.834553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:51.835060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:52.667: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:52.835258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:53.835753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:54.679: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:54.836737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:55.837563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:56.689: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:56.838477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:57.839216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:51:58.698: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:51:58.840057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:51:59.840551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:00.709: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:00.840638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:01.841240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:02.718: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:02.841661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:03.841641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:04.729: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:04.842074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:05.842544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:06.744: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:06.842712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:07.843184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:08.754: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:08.844022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:09.845082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:10.764: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:10.846063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:11.846772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:12.774: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:12.847642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:13.848352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:14.785: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:14.849105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:15.849320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:16.797: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:16.850108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:17.850436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:18.812: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:18.851437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:19.852409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:20.823: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:20.853049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:21.853446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:22.834: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:22.854041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:23.854556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:24.844: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:24.854874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:25.855348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:26.851: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:26.856124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:27.856777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:28.856870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:28.860: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:29.857540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:30.857802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:30.869: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:31.858379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:32.858832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:32.880: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:33.859367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:34.859806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:34.894: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:35.860222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:36.860719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:36.906: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:37.861490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:38.861560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:38.918: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:39.862103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:40.863461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:40.930: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:41.863714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:42.864221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:42.938: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:43.865198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:44.865988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:44.951: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:45.866236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:46.866827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:46.965: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:47.867350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:48.867558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:48.975: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:49.868619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:50.869195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:50.985: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:51.869691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:52.869932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:52.996: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:53.870592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:54.871117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:55.007: INFO: Get pod test-webserver-1a1a3028-a12a-49fb-b9f0-922d7b880bfb in namespace container-probe-4448
  E0327 19:52:55.872430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:56.872723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:52:57.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 19:52:57.032
  STEP: Destroying namespace "container-probe-4448" for this suite. @ 03/27/24 19:52:57.076
• [243.570 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 03/27/24 19:52:57.114
  Mar 27 19:52:57.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pod-network-test @ 03/27/24 19:52:57.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:52:57.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:52:57.179
  STEP: Performing setup for networking test in namespace pod-network-test-5620 @ 03/27/24 19:52:57.186
  STEP: creating a selector @ 03/27/24 19:52:57.186
  STEP: Creating the service pods in kubernetes @ 03/27/24 19:52:57.186
  Mar 27 19:52:57.187: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0327 19:52:57.873738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:58.874683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:52:59.875000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:00.875151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:01.876218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:02.876797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:03.877124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:04.877331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:05.877632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:06.877871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:07.878577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:08.878579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:09.879485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:10.879611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:11.880589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:12.880799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:13.881672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:14.881953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:15.883037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:16.883658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:17.884832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:18.885543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/27/24 19:53:19.507
  E0327 19:53:19.886069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:20.886281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:21.608: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 27 19:53:21.608: INFO: Going to poll 10.233.67.22 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Mar 27 19:53:21.631: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.67.22 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5620 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:53:21.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:53:21.633: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:53:21.633: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5620/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.67.22+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0327 19:53:21.887219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:22.791: INFO: Found all 1 expected endpoints: [netserver-0]
  Mar 27 19:53:22.791: INFO: Going to poll 10.233.68.214 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Mar 27 19:53:22.804: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.68.214 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5620 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:53:22.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:53:22.805: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:53:22.805: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5620/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.68.214+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0327 19:53:22.888122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:23.888613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:23.944: INFO: Found all 1 expected endpoints: [netserver-1]
  Mar 27 19:53:23.944: INFO: Going to poll 10.233.69.55 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Mar 27 19:53:23.957: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.69.55 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5620 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:53:23.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:53:23.959: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:53:23.959: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5620/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.69.55+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0327 19:53:24.888946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:25.138: INFO: Found all 1 expected endpoints: [netserver-2]
  Mar 27 19:53:25.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5620" for this suite. @ 03/27/24 19:53:25.159
• [28.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 03/27/24 19:53:25.183
  Mar 27 19:53:25.183: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svcaccounts @ 03/27/24 19:53:25.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:25.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:25.237
  Mar 27 19:53:25.288: INFO: created pod pod-service-account-defaultsa
  Mar 27 19:53:25.288: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Mar 27 19:53:25.301: INFO: created pod pod-service-account-mountsa
  Mar 27 19:53:25.301: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Mar 27 19:53:25.327: INFO: created pod pod-service-account-nomountsa
  Mar 27 19:53:25.327: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Mar 27 19:53:25.356: INFO: created pod pod-service-account-defaultsa-mountspec
  Mar 27 19:53:25.357: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Mar 27 19:53:25.377: INFO: created pod pod-service-account-mountsa-mountspec
  Mar 27 19:53:25.377: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Mar 27 19:53:25.390: INFO: created pod pod-service-account-nomountsa-mountspec
  Mar 27 19:53:25.390: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Mar 27 19:53:25.444: INFO: created pod pod-service-account-defaultsa-nomountspec
  Mar 27 19:53:25.444: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Mar 27 19:53:25.467: INFO: created pod pod-service-account-mountsa-nomountspec
  Mar 27 19:53:25.467: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Mar 27 19:53:25.491: INFO: created pod pod-service-account-nomountsa-nomountspec
  Mar 27 19:53:25.491: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Mar 27 19:53:25.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-207" for this suite. @ 03/27/24 19:53:25.519
• [0.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 03/27/24 19:53:25.575
  Mar 27 19:53:25.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 19:53:25.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:25.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:25.657
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/27/24 19:53:25.668
  E0327 19:53:25.889272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:26.890461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:27.890427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:28.890952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:53:29.722
  Mar 27 19:53:29.732: INFO: Trying to get logs from node env1-test-worker-1 pod pod-849cdf10-b086-418b-af8a-4b47c09a43f4 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 19:53:29.773
  Mar 27 19:53:29.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8072" for this suite. @ 03/27/24 19:53:29.819
• [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 03/27/24 19:53:29.836
  Mar 27 19:53:29.836: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 19:53:29.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:29.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:29.886
  E0327 19:53:29.891119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name secret-test-81e24734-6d48-4278-87df-e23b9766ebd4 @ 03/27/24 19:53:29.893
  STEP: Creating a pod to test consume secrets @ 03/27/24 19:53:29.902
  E0327 19:53:30.891427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:31.891934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:32.892089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:33.893137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:53:33.967
  Mar 27 19:53:33.978: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-aedee3a7-f7be-4181-9bf1-c2281d47f1d3 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 19:53:34.027
  Mar 27 19:53:34.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-450" for this suite. @ 03/27/24 19:53:34.103
• [4.284 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 03/27/24 19:53:34.121
  Mar 27 19:53:34.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 19:53:34.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:34.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:34.215
  STEP: Creating configMap configmap-5113/configmap-test-3f87f87d-e885-4304-a0cd-45d1dec173ee @ 03/27/24 19:53:34.222
  STEP: Creating a pod to test consume configMaps @ 03/27/24 19:53:34.244
  E0327 19:53:34.893558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:35.894335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:36.894679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:37.895571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:53:38.343
  Mar 27 19:53:38.360: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-04c56d6f-6d8a-40ee-a4c1-26df3344c58a container env-test: <nil>
  STEP: delete the pod @ 03/27/24 19:53:38.384
  Mar 27 19:53:38.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5113" for this suite. @ 03/27/24 19:53:38.493
• [4.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 03/27/24 19:53:38.52
  Mar 27 19:53:38.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/27/24 19:53:38.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:38.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:38.607
  STEP: create the container to handle the HTTPGet hook request. @ 03/27/24 19:53:38.628
  E0327 19:53:38.896221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:39.896353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:40.896350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:41.896841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/27/24 19:53:42.731
  E0327 19:53:42.897343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:43.897604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 03/27/24 19:53:44.775
  E0327 19:53:44.898303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:45.898813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 03/27/24 19:53:46.826
  Mar 27 19:53:46.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 19:53:46.899662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-lifecycle-hook-1335" for this suite. @ 03/27/24 19:53:46.922
• [8.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 03/27/24 19:53:46.97
  Mar 27 19:53:46.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename init-container @ 03/27/24 19:53:46.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:47.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:47.04
  STEP: creating the pod @ 03/27/24 19:53:47.048
  Mar 27 19:53:47.048: INFO: PodSpec: initContainers in spec.initContainers
  E0327 19:53:47.900648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:48.901020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:49.901054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:50.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3592" for this suite. @ 03/27/24 19:53:50.57
• [3.625 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 03/27/24 19:53:50.596
  Mar 27 19:53:50.596: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:53:50.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:50.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:50.657
  STEP: Creating projection with secret that has name projected-secret-test-6766ac86-beac-4b0a-ab0c-135816d1f965 @ 03/27/24 19:53:50.663
  STEP: Creating a pod to test consume secrets @ 03/27/24 19:53:50.677
  E0327 19:53:50.901344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:51.902453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:52.902394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:53:53.902739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:53:54.749
  Mar 27 19:53:54.759: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-08911523-50a2-40af-a429-0cb2cf31949b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 19:53:54.782
  Mar 27 19:53:54.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7095" for this suite. @ 03/27/24 19:53:54.852
• [4.270 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 03/27/24 19:53:54.866
  Mar 27 19:53:54.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename tables @ 03/27/24 19:53:54.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:54.903
  E0327 19:53:54.903680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:54.911
  Mar 27 19:53:54.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3714" for this suite. @ 03/27/24 19:53:54.937
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 03/27/24 19:53:54.962
  Mar 27 19:53:54.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svc-latency @ 03/27/24 19:53:54.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:53:54.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:53:55.003
  Mar 27 19:53:55.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1930 @ 03/27/24 19:53:55.012
  I0327 19:53:55.031873      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1930, replica count: 1
  E0327 19:53:55.903933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 19:53:56.082697      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0327 19:53:56.904936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 19:53:57.083639      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 19:53:57.215: INFO: Created: latency-svc-r8r9s
  Mar 27 19:53:57.247: INFO: Got endpoints: latency-svc-r8r9s [62.519831ms]
  Mar 27 19:53:57.280: INFO: Created: latency-svc-b4z46
  Mar 27 19:53:57.292: INFO: Got endpoints: latency-svc-b4z46 [43.946969ms]
  Mar 27 19:53:57.500: INFO: Created: latency-svc-t6kvg
  Mar 27 19:53:57.508: INFO: Created: latency-svc-48vx4
  Mar 27 19:53:57.509: INFO: Created: latency-svc-9txds
  Mar 27 19:53:57.509: INFO: Created: latency-svc-z45xf
  Mar 27 19:53:57.513: INFO: Created: latency-svc-r69dw
  Mar 27 19:53:57.518: INFO: Created: latency-svc-qw9mp
  Mar 27 19:53:57.519: INFO: Created: latency-svc-7rd95
  Mar 27 19:53:57.519: INFO: Created: latency-svc-gx2w2
  Mar 27 19:53:57.519: INFO: Created: latency-svc-xwtfq
  Mar 27 19:53:57.532: INFO: Created: latency-svc-h8wxr
  Mar 27 19:53:57.538: INFO: Created: latency-svc-kxpwf
  Mar 27 19:53:57.539: INFO: Created: latency-svc-dgfld
  Mar 27 19:53:57.548: INFO: Got endpoints: latency-svc-t6kvg [300.776108ms]
  Mar 27 19:53:57.553: INFO: Created: latency-svc-kdbd9
  Mar 27 19:53:57.556: INFO: Created: latency-svc-qnt44
  Mar 27 19:53:57.556: INFO: Created: latency-svc-g6xhv
  Mar 27 19:53:57.561: INFO: Got endpoints: latency-svc-r69dw [268.145255ms]
  Mar 27 19:53:57.613: INFO: Got endpoints: latency-svc-qnt44 [363.451713ms]
  Mar 27 19:53:57.621: INFO: Got endpoints: latency-svc-kxpwf [373.967456ms]
  Mar 27 19:53:57.634: INFO: Got endpoints: latency-svc-dgfld [384.689561ms]
  Mar 27 19:53:57.644: INFO: Got endpoints: latency-svc-kdbd9 [395.241942ms]
  Mar 27 19:53:57.644: INFO: Got endpoints: latency-svc-7rd95 [394.891556ms]
  Mar 27 19:53:57.650: INFO: Got endpoints: latency-svc-qw9mp [400.296402ms]
  Mar 27 19:53:57.656: INFO: Created: latency-svc-7l5k8
  Mar 27 19:53:57.688: INFO: Got endpoints: latency-svc-z45xf [440.354155ms]
  Mar 27 19:53:57.691: INFO: Got endpoints: latency-svc-48vx4 [443.755394ms]
  Mar 27 19:53:57.705: INFO: Got endpoints: latency-svc-9txds [455.97609ms]
  Mar 27 19:53:57.736: INFO: Got endpoints: latency-svc-gx2w2 [485.596234ms]
  Mar 27 19:53:57.741: INFO: Created: latency-svc-76smg
  Mar 27 19:53:57.751: INFO: Got endpoints: latency-svc-xwtfq [503.105449ms]
  Mar 27 19:53:57.751: INFO: Got endpoints: latency-svc-h8wxr [502.310339ms]
  Mar 27 19:53:57.759: INFO: Got endpoints: latency-svc-7l5k8 [210.692639ms]
  Mar 27 19:53:57.759: INFO: Got endpoints: latency-svc-g6xhv [510.260602ms]
  Mar 27 19:53:57.768: INFO: Got endpoints: latency-svc-76smg [207.052625ms]
  Mar 27 19:53:57.779: INFO: Created: latency-svc-rr9k9
  Mar 27 19:53:57.792: INFO: Got endpoints: latency-svc-rr9k9 [178.759115ms]
  Mar 27 19:53:57.802: INFO: Created: latency-svc-qp8kj
  Mar 27 19:53:57.815: INFO: Got endpoints: latency-svc-qp8kj [193.370427ms]
  Mar 27 19:53:57.833: INFO: Created: latency-svc-fn2xd
  Mar 27 19:53:57.853: INFO: Got endpoints: latency-svc-fn2xd [219.685948ms]
  Mar 27 19:53:57.871: INFO: Created: latency-svc-f7nkp
  Mar 27 19:53:57.890: INFO: Got endpoints: latency-svc-f7nkp [245.917653ms]
  E0327 19:53:57.904846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:57.905: INFO: Created: latency-svc-9sgcm
  Mar 27 19:53:57.919: INFO: Got endpoints: latency-svc-9sgcm [274.7433ms]
  Mar 27 19:53:57.932: INFO: Created: latency-svc-6dn84
  Mar 27 19:53:57.968: INFO: Got endpoints: latency-svc-6dn84 [318.080013ms]
  Mar 27 19:53:57.979: INFO: Created: latency-svc-5wxvw
  Mar 27 19:53:58.000: INFO: Got endpoints: latency-svc-5wxvw [311.70182ms]
  Mar 27 19:53:58.008: INFO: Created: latency-svc-c9s52
  Mar 27 19:53:58.030: INFO: Created: latency-svc-tdv7s
  Mar 27 19:53:58.036: INFO: Got endpoints: latency-svc-c9s52 [344.656545ms]
  Mar 27 19:53:58.042: INFO: Got endpoints: latency-svc-tdv7s [337.74219ms]
  Mar 27 19:53:58.058: INFO: Created: latency-svc-7m7b6
  Mar 27 19:53:58.068: INFO: Got endpoints: latency-svc-7m7b6 [332.310044ms]
  Mar 27 19:53:58.075: INFO: Created: latency-svc-sv5jp
  Mar 27 19:53:58.087: INFO: Got endpoints: latency-svc-sv5jp [336.583374ms]
  Mar 27 19:53:58.096: INFO: Created: latency-svc-ncrf9
  Mar 27 19:53:58.115: INFO: Got endpoints: latency-svc-ncrf9 [364.600009ms]
  Mar 27 19:53:58.122: INFO: Created: latency-svc-7dqtq
  Mar 27 19:53:58.132: INFO: Got endpoints: latency-svc-7dqtq [372.637604ms]
  Mar 27 19:53:58.161: INFO: Created: latency-svc-mbdv2
  Mar 27 19:53:58.163: INFO: Got endpoints: latency-svc-mbdv2 [403.416487ms]
  Mar 27 19:53:58.167: INFO: Created: latency-svc-ql2fq
  Mar 27 19:53:58.191: INFO: Created: latency-svc-lq627
  Mar 27 19:53:58.205: INFO: Got endpoints: latency-svc-ql2fq [436.701666ms]
  Mar 27 19:53:58.212: INFO: Created: latency-svc-tlqcl
  Mar 27 19:53:58.230: INFO: Got endpoints: latency-svc-lq627 [437.672563ms]
  Mar 27 19:53:58.235: INFO: Created: latency-svc-xkjf9
  Mar 27 19:53:58.243: INFO: Got endpoints: latency-svc-tlqcl [428.045094ms]
  Mar 27 19:53:58.249: INFO: Created: latency-svc-r4nht
  Mar 27 19:53:58.263: INFO: Got endpoints: latency-svc-xkjf9 [408.137507ms]
  Mar 27 19:53:58.274: INFO: Got endpoints: latency-svc-r4nht [383.640234ms]
  Mar 27 19:53:58.279: INFO: Created: latency-svc-7r4js
  Mar 27 19:53:58.286: INFO: Created: latency-svc-7c9vg
  Mar 27 19:53:58.296: INFO: Got endpoints: latency-svc-7r4js [374.847244ms]
  Mar 27 19:53:58.304: INFO: Got endpoints: latency-svc-7c9vg [335.666045ms]
  Mar 27 19:53:58.307: INFO: Created: latency-svc-r6tl6
  Mar 27 19:53:58.323: INFO: Got endpoints: latency-svc-r6tl6 [322.849204ms]
  Mar 27 19:53:58.330: INFO: Created: latency-svc-c8wbc
  Mar 27 19:53:58.346: INFO: Created: latency-svc-f8m99
  Mar 27 19:53:58.354: INFO: Got endpoints: latency-svc-c8wbc [317.724051ms]
  Mar 27 19:53:58.367: INFO: Got endpoints: latency-svc-f8m99 [324.224875ms]
  Mar 27 19:53:58.384: INFO: Created: latency-svc-ksh9n
  Mar 27 19:53:58.396: INFO: Got endpoints: latency-svc-ksh9n [327.542381ms]
  Mar 27 19:53:58.411: INFO: Created: latency-svc-vmmk4
  Mar 27 19:53:58.421: INFO: Created: latency-svc-94q84
  Mar 27 19:53:58.423: INFO: Got endpoints: latency-svc-vmmk4 [335.845793ms]
  Mar 27 19:53:58.435: INFO: Got endpoints: latency-svc-94q84 [319.541565ms]
  Mar 27 19:53:58.451: INFO: Created: latency-svc-d7wd7
  Mar 27 19:53:58.467: INFO: Got endpoints: latency-svc-d7wd7 [335.620981ms]
  Mar 27 19:53:58.482: INFO: Created: latency-svc-hdlt8
  Mar 27 19:53:58.492: INFO: Got endpoints: latency-svc-hdlt8 [329.588359ms]
  Mar 27 19:53:58.505: INFO: Created: latency-svc-wxvzs
  Mar 27 19:53:58.541: INFO: Got endpoints: latency-svc-wxvzs [335.596394ms]
  Mar 27 19:53:58.573: INFO: Created: latency-svc-65gbg
  Mar 27 19:53:58.601: INFO: Got endpoints: latency-svc-65gbg [366.477262ms]
  Mar 27 19:53:58.605: INFO: Created: latency-svc-2r5vg
  Mar 27 19:53:58.624: INFO: Got endpoints: latency-svc-2r5vg [381.206315ms]
  Mar 27 19:53:58.651: INFO: Created: latency-svc-zvvvg
  Mar 27 19:53:58.652: INFO: Got endpoints: latency-svc-zvvvg [389.076113ms]
  Mar 27 19:53:58.668: INFO: Created: latency-svc-8qwvb
  Mar 27 19:53:58.683: INFO: Got endpoints: latency-svc-8qwvb [408.215719ms]
  Mar 27 19:53:58.690: INFO: Created: latency-svc-cvw7s
  Mar 27 19:53:58.700: INFO: Got endpoints: latency-svc-cvw7s [403.432104ms]
  Mar 27 19:53:58.715: INFO: Created: latency-svc-q7tj4
  Mar 27 19:53:58.715: INFO: Got endpoints: latency-svc-q7tj4 [411.123143ms]
  Mar 27 19:53:58.720: INFO: Created: latency-svc-h4vdn
  Mar 27 19:53:58.734: INFO: Created: latency-svc-wl89d
  Mar 27 19:53:58.744: INFO: Got endpoints: latency-svc-h4vdn [420.702707ms]
  Mar 27 19:53:58.755: INFO: Created: latency-svc-nz42l
  Mar 27 19:53:58.764: INFO: Got endpoints: latency-svc-wl89d [410.513233ms]
  Mar 27 19:53:58.768: INFO: Created: latency-svc-6bm9s
  Mar 27 19:53:58.788: INFO: Created: latency-svc-lbt7m
  Mar 27 19:53:58.808: INFO: Created: latency-svc-cptvg
  Mar 27 19:53:58.817: INFO: Created: latency-svc-zx6gf
  Mar 27 19:53:58.820: INFO: Got endpoints: latency-svc-nz42l [453.266073ms]
  Mar 27 19:53:58.841: INFO: Created: latency-svc-lx65d
  Mar 27 19:53:58.879: INFO: Got endpoints: latency-svc-6bm9s [481.569012ms]
  Mar 27 19:53:58.891: INFO: Created: latency-svc-gx8nr
  Mar 27 19:53:58.895: INFO: Created: latency-svc-m7hnl
  E0327 19:53:58.906191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:58.917: INFO: Created: latency-svc-xff5n
  Mar 27 19:53:58.923: INFO: Got endpoints: latency-svc-lbt7m [499.875986ms]
  Mar 27 19:53:58.942: INFO: Created: latency-svc-rmrgx
  Mar 27 19:53:58.952: INFO: Created: latency-svc-44567
  Mar 27 19:53:58.971: INFO: Got endpoints: latency-svc-cptvg [535.764069ms]
  Mar 27 19:53:58.972: INFO: Created: latency-svc-nkrrp
  Mar 27 19:53:59.002: INFO: Created: latency-svc-zbjdq
  Mar 27 19:53:59.008: INFO: Created: latency-svc-g59v9
  Mar 27 19:53:59.027: INFO: Got endpoints: latency-svc-zx6gf [559.287653ms]
  Mar 27 19:53:59.028: INFO: Created: latency-svc-kp576
  Mar 27 19:53:59.048: INFO: Created: latency-svc-xwt7j
  Mar 27 19:53:59.056: INFO: Created: latency-svc-f22px
  Mar 27 19:53:59.070: INFO: Created: latency-svc-qxlb2
  Mar 27 19:53:59.074: INFO: Got endpoints: latency-svc-lx65d [581.266339ms]
  Mar 27 19:53:59.082: INFO: Created: latency-svc-j6c9m
  Mar 27 19:53:59.095: INFO: Created: latency-svc-pjkkn
  Mar 27 19:53:59.107: INFO: Created: latency-svc-kzxw8
  Mar 27 19:53:59.117: INFO: Got endpoints: latency-svc-gx8nr [575.813379ms]
  Mar 27 19:53:59.146: INFO: Created: latency-svc-j4dbk
  Mar 27 19:53:59.177: INFO: Got endpoints: latency-svc-m7hnl [575.765973ms]
  Mar 27 19:53:59.205: INFO: Created: latency-svc-97tcg
  Mar 27 19:53:59.217: INFO: Got endpoints: latency-svc-xff5n [592.861875ms]
  Mar 27 19:53:59.251: INFO: Created: latency-svc-n667k
  Mar 27 19:53:59.267: INFO: Got endpoints: latency-svc-rmrgx [614.016257ms]
  Mar 27 19:53:59.289: INFO: Created: latency-svc-76dp2
  Mar 27 19:53:59.321: INFO: Got endpoints: latency-svc-44567 [638.530573ms]
  Mar 27 19:53:59.344: INFO: Created: latency-svc-p7pjw
  Mar 27 19:53:59.363: INFO: Got endpoints: latency-svc-nkrrp [663.039011ms]
  Mar 27 19:53:59.383: INFO: Created: latency-svc-rgsfb
  Mar 27 19:53:59.416: INFO: Got endpoints: latency-svc-zbjdq [700.76393ms]
  Mar 27 19:53:59.439: INFO: Created: latency-svc-274ls
  Mar 27 19:53:59.468: INFO: Got endpoints: latency-svc-g59v9 [723.669182ms]
  Mar 27 19:53:59.490: INFO: Created: latency-svc-8j8kv
  Mar 27 19:53:59.520: INFO: Got endpoints: latency-svc-kp576 [753.472579ms]
  Mar 27 19:53:59.549: INFO: Created: latency-svc-pmnxb
  Mar 27 19:53:59.572: INFO: Got endpoints: latency-svc-xwt7j [751.236864ms]
  Mar 27 19:53:59.593: INFO: Created: latency-svc-8dq79
  Mar 27 19:53:59.615: INFO: Got endpoints: latency-svc-f22px [735.825652ms]
  Mar 27 19:53:59.637: INFO: Created: latency-svc-b5686
  Mar 27 19:53:59.670: INFO: Got endpoints: latency-svc-qxlb2 [746.493181ms]
  Mar 27 19:53:59.696: INFO: Created: latency-svc-w97h4
  Mar 27 19:53:59.727: INFO: Got endpoints: latency-svc-j6c9m [755.594735ms]
  Mar 27 19:53:59.752: INFO: Created: latency-svc-b8n8j
  Mar 27 19:53:59.765: INFO: Got endpoints: latency-svc-pjkkn [738.326656ms]
  Mar 27 19:53:59.804: INFO: Created: latency-svc-c2dp7
  Mar 27 19:53:59.820: INFO: Got endpoints: latency-svc-kzxw8 [746.102577ms]
  Mar 27 19:53:59.843: INFO: Created: latency-svc-vfq9k
  Mar 27 19:53:59.866: INFO: Got endpoints: latency-svc-j4dbk [748.638247ms]
  Mar 27 19:53:59.888: INFO: Created: latency-svc-c5wdt
  E0327 19:53:59.906379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:53:59.913: INFO: Got endpoints: latency-svc-97tcg [735.588895ms]
  Mar 27 19:53:59.933: INFO: Created: latency-svc-r9vxn
  Mar 27 19:53:59.971: INFO: Got endpoints: latency-svc-n667k [751.740149ms]
  Mar 27 19:53:59.990: INFO: Created: latency-svc-j4pjd
  Mar 27 19:54:00.015: INFO: Got endpoints: latency-svc-76dp2 [748.172198ms]
  Mar 27 19:54:00.072: INFO: Got endpoints: latency-svc-p7pjw [751.107263ms]
  Mar 27 19:54:00.075: INFO: Created: latency-svc-skh56
  Mar 27 19:54:00.105: INFO: Created: latency-svc-q77f8
  Mar 27 19:54:00.122: INFO: Got endpoints: latency-svc-rgsfb [759.124382ms]
  Mar 27 19:54:00.152: INFO: Created: latency-svc-nrrbb
  Mar 27 19:54:00.181: INFO: Got endpoints: latency-svc-274ls [764.909254ms]
  Mar 27 19:54:00.205: INFO: Created: latency-svc-kcbsv
  Mar 27 19:54:00.225: INFO: Got endpoints: latency-svc-8j8kv [757.561788ms]
  Mar 27 19:54:00.252: INFO: Created: latency-svc-k5rzr
  Mar 27 19:54:00.275: INFO: Got endpoints: latency-svc-pmnxb [755.264609ms]
  Mar 27 19:54:00.304: INFO: Created: latency-svc-8g5tv
  Mar 27 19:54:00.319: INFO: Got endpoints: latency-svc-8dq79 [747.293178ms]
  Mar 27 19:54:00.355: INFO: Created: latency-svc-wx5sh
  Mar 27 19:54:00.375: INFO: Got endpoints: latency-svc-b5686 [759.137311ms]
  Mar 27 19:54:00.397: INFO: Created: latency-svc-dqpfw
  Mar 27 19:54:00.418: INFO: Got endpoints: latency-svc-w97h4 [747.918261ms]
  Mar 27 19:54:00.436: INFO: Created: latency-svc-vwkqq
  Mar 27 19:54:00.470: INFO: Got endpoints: latency-svc-b8n8j [742.86967ms]
  Mar 27 19:54:00.508: INFO: Created: latency-svc-n6bjd
  Mar 27 19:54:00.527: INFO: Got endpoints: latency-svc-c2dp7 [761.685295ms]
  Mar 27 19:54:00.554: INFO: Created: latency-svc-qps65
  Mar 27 19:54:00.576: INFO: Got endpoints: latency-svc-vfq9k [755.379616ms]
  Mar 27 19:54:00.628: INFO: Got endpoints: latency-svc-c5wdt [762.239645ms]
  Mar 27 19:54:00.630: INFO: Created: latency-svc-dwkx8
  Mar 27 19:54:00.660: INFO: Created: latency-svc-gk6qj
  Mar 27 19:54:00.679: INFO: Got endpoints: latency-svc-r9vxn [765.746047ms]
  Mar 27 19:54:00.714: INFO: Created: latency-svc-vskd2
  Mar 27 19:54:00.736: INFO: Got endpoints: latency-svc-j4pjd [764.255803ms]
  Mar 27 19:54:00.767: INFO: Got endpoints: latency-svc-skh56 [751.858175ms]
  Mar 27 19:54:00.772: INFO: Created: latency-svc-l5qtv
  Mar 27 19:54:00.805: INFO: Created: latency-svc-ffbfz
  Mar 27 19:54:00.817: INFO: Got endpoints: latency-svc-q77f8 [744.957433ms]
  Mar 27 19:54:00.833: INFO: Created: latency-svc-2hj7j
  Mar 27 19:54:00.864: INFO: Got endpoints: latency-svc-nrrbb [741.020278ms]
  Mar 27 19:54:00.886: INFO: Created: latency-svc-qq569
  E0327 19:54:00.907615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:00.916: INFO: Got endpoints: latency-svc-kcbsv [734.071767ms]
  Mar 27 19:54:00.943: INFO: Created: latency-svc-vwgxw
  Mar 27 19:54:00.968: INFO: Got endpoints: latency-svc-k5rzr [741.981681ms]
  Mar 27 19:54:01.017: INFO: Created: latency-svc-2cc29
  Mar 27 19:54:01.019: INFO: Got endpoints: latency-svc-8g5tv [743.754246ms]
  Mar 27 19:54:01.053: INFO: Created: latency-svc-qdhlp
  Mar 27 19:54:01.065: INFO: Got endpoints: latency-svc-wx5sh [744.325136ms]
  Mar 27 19:54:01.101: INFO: Created: latency-svc-57l4t
  Mar 27 19:54:01.126: INFO: Got endpoints: latency-svc-dqpfw [751.471516ms]
  Mar 27 19:54:01.155: INFO: Created: latency-svc-25nh2
  Mar 27 19:54:01.180: INFO: Got endpoints: latency-svc-vwkqq [761.80232ms]
  Mar 27 19:54:01.208: INFO: Created: latency-svc-2rvtx
  Mar 27 19:54:01.218: INFO: Got endpoints: latency-svc-n6bjd [748.014388ms]
  Mar 27 19:54:01.246: INFO: Created: latency-svc-hbs27
  Mar 27 19:54:01.282: INFO: Got endpoints: latency-svc-qps65 [755.003343ms]
  Mar 27 19:54:01.305: INFO: Created: latency-svc-24lx8
  Mar 27 19:54:01.319: INFO: Got endpoints: latency-svc-dwkx8 [743.262021ms]
  Mar 27 19:54:01.343: INFO: Created: latency-svc-pg2cq
  Mar 27 19:54:01.374: INFO: Got endpoints: latency-svc-gk6qj [745.880811ms]
  Mar 27 19:54:01.416: INFO: Created: latency-svc-xck8p
  Mar 27 19:54:01.423: INFO: Got endpoints: latency-svc-vskd2 [743.705934ms]
  Mar 27 19:54:01.463: INFO: Created: latency-svc-sl62l
  Mar 27 19:54:01.472: INFO: Got endpoints: latency-svc-l5qtv [736.248599ms]
  Mar 27 19:54:01.500: INFO: Created: latency-svc-5z8mc
  Mar 27 19:54:01.527: INFO: Got endpoints: latency-svc-ffbfz [760.47479ms]
  Mar 27 19:54:01.574: INFO: Got endpoints: latency-svc-2hj7j [756.841987ms]
  Mar 27 19:54:01.575: INFO: Created: latency-svc-mf774
  Mar 27 19:54:01.624: INFO: Got endpoints: latency-svc-qq569 [759.403524ms]
  Mar 27 19:54:01.625: INFO: Created: latency-svc-mr4xk
  Mar 27 19:54:01.666: INFO: Got endpoints: latency-svc-vwgxw [750.428442ms]
  Mar 27 19:54:01.668: INFO: Created: latency-svc-4htpn
  Mar 27 19:54:01.700: INFO: Created: latency-svc-sv5s5
  Mar 27 19:54:01.714: INFO: Got endpoints: latency-svc-2cc29 [746.674383ms]
  Mar 27 19:54:01.738: INFO: Created: latency-svc-wk6tk
  Mar 27 19:54:01.772: INFO: Got endpoints: latency-svc-qdhlp [752.348465ms]
  Mar 27 19:54:01.797: INFO: Created: latency-svc-v6pqb
  Mar 27 19:54:01.823: INFO: Got endpoints: latency-svc-57l4t [758.068304ms]
  Mar 27 19:54:01.860: INFO: Created: latency-svc-sjspv
  Mar 27 19:54:01.870: INFO: Got endpoints: latency-svc-25nh2 [743.294021ms]
  Mar 27 19:54:01.890: INFO: Created: latency-svc-hczz6
  E0327 19:54:01.907513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:01.918: INFO: Got endpoints: latency-svc-2rvtx [738.109585ms]
  Mar 27 19:54:01.943: INFO: Created: latency-svc-r58r2
  Mar 27 19:54:01.978: INFO: Got endpoints: latency-svc-hbs27 [759.058772ms]
  Mar 27 19:54:02.006: INFO: Created: latency-svc-xbzjp
  Mar 27 19:54:02.016: INFO: Got endpoints: latency-svc-24lx8 [733.808093ms]
  Mar 27 19:54:02.058: INFO: Created: latency-svc-776rt
  Mar 27 19:54:02.068: INFO: Got endpoints: latency-svc-pg2cq [747.440758ms]
  Mar 27 19:54:02.085: INFO: Created: latency-svc-gvpjw
  Mar 27 19:54:02.117: INFO: Got endpoints: latency-svc-xck8p [743.283524ms]
  Mar 27 19:54:02.143: INFO: Created: latency-svc-zfbm7
  Mar 27 19:54:02.175: INFO: Got endpoints: latency-svc-sl62l [752.054379ms]
  Mar 27 19:54:02.195: INFO: Created: latency-svc-6mb2k
  Mar 27 19:54:02.214: INFO: Got endpoints: latency-svc-5z8mc [741.640584ms]
  Mar 27 19:54:02.238: INFO: Created: latency-svc-9ndgq
  Mar 27 19:54:02.264: INFO: Got endpoints: latency-svc-mf774 [736.714303ms]
  Mar 27 19:54:02.286: INFO: Created: latency-svc-p59ch
  Mar 27 19:54:02.323: INFO: Got endpoints: latency-svc-mr4xk [747.924054ms]
  Mar 27 19:54:02.346: INFO: Created: latency-svc-qmghf
  Mar 27 19:54:02.370: INFO: Got endpoints: latency-svc-4htpn [746.570851ms]
  Mar 27 19:54:02.399: INFO: Created: latency-svc-7dttq
  Mar 27 19:54:02.425: INFO: Got endpoints: latency-svc-sv5s5 [758.658053ms]
  Mar 27 19:54:02.444: INFO: Created: latency-svc-5kwfp
  Mar 27 19:54:02.466: INFO: Got endpoints: latency-svc-wk6tk [751.755557ms]
  Mar 27 19:54:02.480: INFO: Created: latency-svc-bmg6c
  Mar 27 19:54:02.514: INFO: Got endpoints: latency-svc-v6pqb [741.492382ms]
  Mar 27 19:54:02.544: INFO: Created: latency-svc-mts8s
  Mar 27 19:54:02.565: INFO: Got endpoints: latency-svc-sjspv [741.971478ms]
  Mar 27 19:54:02.590: INFO: Created: latency-svc-wlb95
  Mar 27 19:54:02.620: INFO: Got endpoints: latency-svc-hczz6 [750.013718ms]
  Mar 27 19:54:02.637: INFO: Created: latency-svc-mtlbn
  Mar 27 19:54:02.669: INFO: Got endpoints: latency-svc-r58r2 [750.772399ms]
  Mar 27 19:54:02.690: INFO: Created: latency-svc-2w7mm
  Mar 27 19:54:02.712: INFO: Got endpoints: latency-svc-xbzjp [733.614985ms]
  Mar 27 19:54:02.734: INFO: Created: latency-svc-l7w7x
  Mar 27 19:54:02.770: INFO: Got endpoints: latency-svc-776rt [734.883102ms]
  Mar 27 19:54:02.790: INFO: Created: latency-svc-pmdwc
  Mar 27 19:54:02.814: INFO: Got endpoints: latency-svc-gvpjw [745.931947ms]
  Mar 27 19:54:02.843: INFO: Created: latency-svc-ql69f
  Mar 27 19:54:02.870: INFO: Got endpoints: latency-svc-zfbm7 [752.735607ms]
  Mar 27 19:54:02.895: INFO: Created: latency-svc-vchw2
  E0327 19:54:02.908303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:02.917: INFO: Got endpoints: latency-svc-6mb2k [741.353893ms]
  Mar 27 19:54:02.951: INFO: Created: latency-svc-q4p9w
  Mar 27 19:54:02.965: INFO: Got endpoints: latency-svc-9ndgq [751.479881ms]
  Mar 27 19:54:02.996: INFO: Created: latency-svc-wvqvt
  Mar 27 19:54:03.016: INFO: Got endpoints: latency-svc-p59ch [751.422784ms]
  Mar 27 19:54:03.037: INFO: Created: latency-svc-cp6bt
  Mar 27 19:54:03.070: INFO: Got endpoints: latency-svc-qmghf [746.871261ms]
  Mar 27 19:54:03.090: INFO: Created: latency-svc-hkjfd
  Mar 27 19:54:03.116: INFO: Got endpoints: latency-svc-7dttq [745.308031ms]
  Mar 27 19:54:03.134: INFO: Created: latency-svc-qfsnh
  Mar 27 19:54:03.165: INFO: Got endpoints: latency-svc-5kwfp [739.233351ms]
  Mar 27 19:54:03.187: INFO: Created: latency-svc-wb7ns
  Mar 27 19:54:03.216: INFO: Got endpoints: latency-svc-bmg6c [750.232582ms]
  Mar 27 19:54:03.235: INFO: Created: latency-svc-f4db7
  Mar 27 19:54:03.269: INFO: Got endpoints: latency-svc-mts8s [754.957148ms]
  Mar 27 19:54:03.292: INFO: Created: latency-svc-84xrw
  Mar 27 19:54:03.315: INFO: Got endpoints: latency-svc-wlb95 [749.909106ms]
  Mar 27 19:54:03.336: INFO: Created: latency-svc-hlvdc
  Mar 27 19:54:03.365: INFO: Got endpoints: latency-svc-mtlbn [743.897687ms]
  Mar 27 19:54:03.387: INFO: Created: latency-svc-w5nt2
  Mar 27 19:54:03.414: INFO: Got endpoints: latency-svc-2w7mm [744.087375ms]
  Mar 27 19:54:03.442: INFO: Created: latency-svc-9c9w8
  Mar 27 19:54:03.463: INFO: Got endpoints: latency-svc-l7w7x [750.624956ms]
  Mar 27 19:54:03.481: INFO: Created: latency-svc-stgv2
  Mar 27 19:54:03.522: INFO: Got endpoints: latency-svc-pmdwc [752.032825ms]
  Mar 27 19:54:03.545: INFO: Created: latency-svc-cmcb8
  Mar 27 19:54:03.570: INFO: Got endpoints: latency-svc-ql69f [755.775888ms]
  Mar 27 19:54:03.591: INFO: Created: latency-svc-mfbfd
  Mar 27 19:54:03.621: INFO: Got endpoints: latency-svc-vchw2 [750.362436ms]
  Mar 27 19:54:03.642: INFO: Created: latency-svc-vzz4w
  Mar 27 19:54:03.668: INFO: Got endpoints: latency-svc-q4p9w [750.816722ms]
  Mar 27 19:54:03.690: INFO: Created: latency-svc-2pdb7
  Mar 27 19:54:03.714: INFO: Got endpoints: latency-svc-wvqvt [748.420537ms]
  Mar 27 19:54:03.737: INFO: Created: latency-svc-4fkkn
  Mar 27 19:54:03.794: INFO: Got endpoints: latency-svc-cp6bt [778.453732ms]
  Mar 27 19:54:03.818: INFO: Got endpoints: latency-svc-hkjfd [747.837701ms]
  Mar 27 19:54:03.820: INFO: Created: latency-svc-rmxgh
  Mar 27 19:54:03.839: INFO: Created: latency-svc-dbw79
  Mar 27 19:54:03.863: INFO: Got endpoints: latency-svc-qfsnh [747.506784ms]
  Mar 27 19:54:03.881: INFO: Created: latency-svc-ntrbp
  E0327 19:54:03.909623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:03.915: INFO: Got endpoints: latency-svc-wb7ns [749.923081ms]
  Mar 27 19:54:03.942: INFO: Created: latency-svc-h9wjv
  Mar 27 19:54:03.967: INFO: Got endpoints: latency-svc-f4db7 [750.727683ms]
  Mar 27 19:54:03.984: INFO: Created: latency-svc-vbc2l
  Mar 27 19:54:04.015: INFO: Got endpoints: latency-svc-84xrw [746.204805ms]
  Mar 27 19:54:04.040: INFO: Created: latency-svc-dkf4b
  Mar 27 19:54:04.071: INFO: Got endpoints: latency-svc-hlvdc [755.46141ms]
  Mar 27 19:54:04.098: INFO: Created: latency-svc-dzqrp
  Mar 27 19:54:04.117: INFO: Got endpoints: latency-svc-w5nt2 [751.813958ms]
  Mar 27 19:54:04.168: INFO: Got endpoints: latency-svc-9c9w8 [753.483378ms]
  Mar 27 19:54:04.179: INFO: Created: latency-svc-t9x2z
  Mar 27 19:54:04.199: INFO: Created: latency-svc-c6gjd
  Mar 27 19:54:04.216: INFO: Got endpoints: latency-svc-stgv2 [753.049177ms]
  Mar 27 19:54:04.244: INFO: Created: latency-svc-ttwxl
  Mar 27 19:54:04.272: INFO: Got endpoints: latency-svc-cmcb8 [749.608923ms]
  Mar 27 19:54:04.288: INFO: Created: latency-svc-hsgtw
  Mar 27 19:54:04.315: INFO: Got endpoints: latency-svc-mfbfd [743.802334ms]
  Mar 27 19:54:04.336: INFO: Created: latency-svc-gs7xv
  Mar 27 19:54:04.369: INFO: Got endpoints: latency-svc-vzz4w [747.752284ms]
  Mar 27 19:54:04.397: INFO: Created: latency-svc-cnvh4
  Mar 27 19:54:04.415: INFO: Got endpoints: latency-svc-2pdb7 [746.449242ms]
  Mar 27 19:54:04.437: INFO: Created: latency-svc-66xb6
  Mar 27 19:54:04.466: INFO: Got endpoints: latency-svc-4fkkn [751.472668ms]
  Mar 27 19:54:04.484: INFO: Created: latency-svc-hp7k4
  Mar 27 19:54:04.513: INFO: Got endpoints: latency-svc-rmxgh [718.111119ms]
  Mar 27 19:54:04.534: INFO: Created: latency-svc-xtb5p
  Mar 27 19:54:04.566: INFO: Got endpoints: latency-svc-dbw79 [746.16806ms]
  Mar 27 19:54:04.587: INFO: Created: latency-svc-vrlfs
  Mar 27 19:54:04.618: INFO: Got endpoints: latency-svc-ntrbp [754.674882ms]
  Mar 27 19:54:04.635: INFO: Created: latency-svc-sqhtg
  Mar 27 19:54:04.667: INFO: Got endpoints: latency-svc-h9wjv [752.024003ms]
  Mar 27 19:54:04.686: INFO: Created: latency-svc-7tttr
  Mar 27 19:54:04.712: INFO: Got endpoints: latency-svc-vbc2l [744.437496ms]
  Mar 27 19:54:04.730: INFO: Created: latency-svc-qht7g
  Mar 27 19:54:04.770: INFO: Got endpoints: latency-svc-dkf4b [755.174052ms]
  Mar 27 19:54:04.788: INFO: Created: latency-svc-fsjz7
  Mar 27 19:54:04.814: INFO: Got endpoints: latency-svc-dzqrp [742.958961ms]
  Mar 27 19:54:04.834: INFO: Created: latency-svc-sl7gc
  Mar 27 19:54:04.870: INFO: Got endpoints: latency-svc-t9x2z [752.392399ms]
  Mar 27 19:54:04.887: INFO: Created: latency-svc-ltgcb
  E0327 19:54:04.910505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:04.918: INFO: Got endpoints: latency-svc-c6gjd [750.022486ms]
  Mar 27 19:54:04.950: INFO: Created: latency-svc-kts9p
  Mar 27 19:54:04.962: INFO: Got endpoints: latency-svc-ttwxl [745.08275ms]
  Mar 27 19:54:05.000: INFO: Created: latency-svc-hbm7g
  Mar 27 19:54:05.027: INFO: Got endpoints: latency-svc-hsgtw [755.208748ms]
  Mar 27 19:54:05.063: INFO: Created: latency-svc-wjxcw
  Mar 27 19:54:05.083: INFO: Got endpoints: latency-svc-gs7xv [768.538607ms]
  Mar 27 19:54:05.107: INFO: Created: latency-svc-6q8xv
  Mar 27 19:54:05.122: INFO: Got endpoints: latency-svc-cnvh4 [753.425684ms]
  Mar 27 19:54:05.164: INFO: Created: latency-svc-crrgh
  Mar 27 19:54:05.173: INFO: Got endpoints: latency-svc-66xb6 [758.126782ms]
  Mar 27 19:54:05.217: INFO: Created: latency-svc-2k7tz
  Mar 27 19:54:05.222: INFO: Got endpoints: latency-svc-hp7k4 [755.874724ms]
  Mar 27 19:54:05.245: INFO: Created: latency-svc-snvzq
  Mar 27 19:54:05.270: INFO: Got endpoints: latency-svc-xtb5p [757.358513ms]
  Mar 27 19:54:05.317: INFO: Got endpoints: latency-svc-vrlfs [751.498203ms]
  Mar 27 19:54:05.380: INFO: Got endpoints: latency-svc-sqhtg [762.439874ms]
  Mar 27 19:54:05.414: INFO: Got endpoints: latency-svc-7tttr [747.260722ms]
  Mar 27 19:54:05.469: INFO: Got endpoints: latency-svc-qht7g [757.2843ms]
  Mar 27 19:54:05.515: INFO: Got endpoints: latency-svc-fsjz7 [744.937906ms]
  Mar 27 19:54:05.569: INFO: Got endpoints: latency-svc-sl7gc [754.703544ms]
  Mar 27 19:54:05.618: INFO: Got endpoints: latency-svc-ltgcb [748.454954ms]
  Mar 27 19:54:05.668: INFO: Got endpoints: latency-svc-kts9p [750.115146ms]
  Mar 27 19:54:05.714: INFO: Got endpoints: latency-svc-hbm7g [752.168267ms]
  Mar 27 19:54:05.767: INFO: Got endpoints: latency-svc-wjxcw [739.659818ms]
  Mar 27 19:54:05.821: INFO: Got endpoints: latency-svc-6q8xv [737.929728ms]
  Mar 27 19:54:05.864: INFO: Got endpoints: latency-svc-crrgh [742.040268ms]
  E0327 19:54:05.911844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:05.919: INFO: Got endpoints: latency-svc-2k7tz [745.209825ms]
  Mar 27 19:54:05.980: INFO: Got endpoints: latency-svc-snvzq [757.983ms]
  Mar 27 19:54:05.980: INFO: Latencies: [43.946969ms 178.759115ms 193.370427ms 207.052625ms 210.692639ms 219.685948ms 245.917653ms 268.145255ms 274.7433ms 300.776108ms 311.70182ms 317.724051ms 318.080013ms 319.541565ms 322.849204ms 324.224875ms 327.542381ms 329.588359ms 332.310044ms 335.596394ms 335.620981ms 335.666045ms 335.845793ms 336.583374ms 337.74219ms 344.656545ms 363.451713ms 364.600009ms 366.477262ms 372.637604ms 373.967456ms 374.847244ms 381.206315ms 383.640234ms 384.689561ms 389.076113ms 394.891556ms 395.241942ms 400.296402ms 403.416487ms 403.432104ms 408.137507ms 408.215719ms 410.513233ms 411.123143ms 420.702707ms 428.045094ms 436.701666ms 437.672563ms 440.354155ms 443.755394ms 453.266073ms 455.97609ms 481.569012ms 485.596234ms 499.875986ms 502.310339ms 503.105449ms 510.260602ms 535.764069ms 559.287653ms 575.765973ms 575.813379ms 581.266339ms 592.861875ms 614.016257ms 638.530573ms 663.039011ms 700.76393ms 718.111119ms 723.669182ms 733.614985ms 733.808093ms 734.071767ms 734.883102ms 735.588895ms 735.825652ms 736.248599ms 736.714303ms 737.929728ms 738.109585ms 738.326656ms 739.233351ms 739.659818ms 741.020278ms 741.353893ms 741.492382ms 741.640584ms 741.971478ms 741.981681ms 742.040268ms 742.86967ms 742.958961ms 743.262021ms 743.283524ms 743.294021ms 743.705934ms 743.754246ms 743.802334ms 743.897687ms 744.087375ms 744.325136ms 744.437496ms 744.937906ms 744.957433ms 745.08275ms 745.209825ms 745.308031ms 745.880811ms 745.931947ms 746.102577ms 746.16806ms 746.204805ms 746.449242ms 746.493181ms 746.570851ms 746.674383ms 746.871261ms 747.260722ms 747.293178ms 747.440758ms 747.506784ms 747.752284ms 747.837701ms 747.918261ms 747.924054ms 748.014388ms 748.172198ms 748.420537ms 748.454954ms 748.638247ms 749.608923ms 749.909106ms 749.923081ms 750.013718ms 750.022486ms 750.115146ms 750.232582ms 750.362436ms 750.428442ms 750.624956ms 750.727683ms 750.772399ms 750.816722ms 751.107263ms 751.236864ms 751.422784ms 751.471516ms 751.472668ms 751.479881ms 751.498203ms 751.740149ms 751.755557ms 751.813958ms 751.858175ms 752.024003ms 752.032825ms 752.054379ms 752.168267ms 752.348465ms 752.392399ms 752.735607ms 753.049177ms 753.425684ms 753.472579ms 753.483378ms 754.674882ms 754.703544ms 754.957148ms 755.003343ms 755.174052ms 755.208748ms 755.264609ms 755.379616ms 755.46141ms 755.594735ms 755.775888ms 755.874724ms 756.841987ms 757.2843ms 757.358513ms 757.561788ms 757.983ms 758.068304ms 758.126782ms 758.658053ms 759.058772ms 759.124382ms 759.137311ms 759.403524ms 760.47479ms 761.685295ms 761.80232ms 762.239645ms 762.439874ms 764.255803ms 764.909254ms 765.746047ms 768.538607ms 778.453732ms]
  Mar 27 19:54:05.980: INFO: 50 %ile: 744.087375ms
  Mar 27 19:54:05.980: INFO: 90 %ile: 757.358513ms
  Mar 27 19:54:05.980: INFO: 99 %ile: 768.538607ms
  Mar 27 19:54:05.980: INFO: Total sample count: 200
  Mar 27 19:54:05.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1930" for this suite. @ 03/27/24 19:54:06
• [11.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 03/27/24 19:54:06.02
  Mar 27 19:54:06.020: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 03/27/24 19:54:06.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:06.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:06.065
  STEP: Setting up the test @ 03/27/24 19:54:06.072
  STEP: Creating hostNetwork=false pod @ 03/27/24 19:54:06.072
  E0327 19:54:06.912001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:07.912342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 03/27/24 19:54:08.123
  E0327 19:54:08.912817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:09.913799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 03/27/24 19:54:10.158
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 03/27/24 19:54:10.158
  Mar 27 19:54:10.158: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:10.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:10.159: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:10.160: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 27 19:54:10.304: INFO: Exec stderr: ""
  Mar 27 19:54:10.305: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:10.305: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:10.307: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:10.307: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 27 19:54:10.444: INFO: Exec stderr: ""
  Mar 27 19:54:10.444: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:10.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:10.446: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:10.447: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 27 19:54:10.572: INFO: Exec stderr: ""
  Mar 27 19:54:10.572: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:10.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:10.575: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:10.575: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 27 19:54:10.729: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 03/27/24 19:54:10.729
  Mar 27 19:54:10.729: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:10.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:10.731: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:10.731: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Mar 27 19:54:10.857: INFO: Exec stderr: ""
  Mar 27 19:54:10.857: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:10.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:10.859: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:10.859: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0327 19:54:10.914232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:10.991: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 03/27/24 19:54:10.991
  Mar 27 19:54:10.991: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:10.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:10.992: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:10.992: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 27 19:54:11.135: INFO: Exec stderr: ""
  Mar 27 19:54:11.135: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:11.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:11.137: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:11.137: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 27 19:54:11.262: INFO: Exec stderr: ""
  Mar 27 19:54:11.263: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:11.263: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:11.265: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:11.265: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 27 19:54:11.506: INFO: Exec stderr: ""
  Mar 27 19:54:11.506: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1167 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:54:11.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:54:11.508: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:54:11.508: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1167/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 27 19:54:11.727: INFO: Exec stderr: ""
  Mar 27 19:54:11.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1167" for this suite. @ 03/27/24 19:54:11.816
• [5.875 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 03/27/24 19:54:11.896
  Mar 27 19:54:11.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubelet-test @ 03/27/24 19:54:11.899
  E0327 19:54:11.915514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:11.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:11.965
  Mar 27 19:54:12.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1269" for this suite. @ 03/27/24 19:54:12.05
• [0.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 03/27/24 19:54:12.087
  Mar 27 19:54:12.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 19:54:12.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:12.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:12.163
  STEP: starting the proxy server @ 03/27/24 19:54:12.169
  Mar 27 19:54:12.170: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5811 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 03/27/24 19:54:12.315
  Mar 27 19:54:12.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5811" for this suite. @ 03/27/24 19:54:12.376
• [0.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 03/27/24 19:54:12.404
  Mar 27 19:54:12.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 19:54:12.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:12.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:12.492
  STEP: creating pod @ 03/27/24 19:54:12.499
  E0327 19:54:12.915624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:13.915840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:14.577: INFO: Pod pod-hostip-b409eae5-fed6-4ae9-a27a-ebfb7f54c845 has hostIP: 10.61.1.202
  Mar 27 19:54:14.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9465" for this suite. @ 03/27/24 19:54:14.591
• [2.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 03/27/24 19:54:14.611
  Mar 27 19:54:14.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 19:54:14.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:14.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:14.67
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:54:14.675
  E0327 19:54:14.917452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:15.918348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:16.918455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:17.918567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:54:18.729
  Mar 27 19:54:18.736: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-e88050af-6c03-4801-96da-9898f406926a container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:54:18.75
  Mar 27 19:54:18.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-359" for this suite. @ 03/27/24 19:54:18.788
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 03/27/24 19:54:18.804
  Mar 27 19:54:18.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 19:54:18.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:18.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:18.905
  STEP: Creating configMap that has name configmap-test-emptyKey-0ea6bd7a-8660-49f0-b149-944fc4fc5bc8 @ 03/27/24 19:54:18.911
  Mar 27 19:54:18.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 19:54:18.918811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-5675" for this suite. @ 03/27/24 19:54:18.93
• [0.137 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 03/27/24 19:54:18.942
  Mar 27 19:54:18.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 19:54:18.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:19.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:19.011
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/27/24 19:54:19.017
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/27/24 19:54:19.017
  STEP: creating a pod to probe DNS @ 03/27/24 19:54:19.017
  STEP: submitting the pod to kubernetes @ 03/27/24 19:54:19.017
  E0327 19:54:19.919773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:20.920993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:21.922108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:22.922911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 19:54:23.074
  STEP: looking for the results for each expected name from probers @ 03/27/24 19:54:23.083
  Mar 27 19:54:23.114: INFO: DNS probes using dns-352/dns-test-0b92eeb5-55ee-4e1d-8f89-c2058048c22e succeeded

  Mar 27 19:54:23.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 19:54:23.125
  STEP: Destroying namespace "dns-352" for this suite. @ 03/27/24 19:54:23.152
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 03/27/24 19:54:23.165
  Mar 27 19:54:23.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 19:54:23.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:23.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:23.219
  STEP: creating the pod @ 03/27/24 19:54:23.224
  STEP: submitting the pod to kubernetes @ 03/27/24 19:54:23.224
  E0327 19:54:23.923956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:24.924060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 03/27/24 19:54:25.259
  STEP: updating the pod @ 03/27/24 19:54:25.265
  Mar 27 19:54:25.797: INFO: Successfully updated pod "pod-update-5fd8585d-a873-41ea-ac20-f4e3725f2f9f"
  STEP: verifying the updated pod is in kubernetes @ 03/27/24 19:54:25.808
  Mar 27 19:54:25.826: INFO: Pod update OK
  Mar 27 19:54:25.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2868" for this suite. @ 03/27/24 19:54:25.846
• [2.709 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 03/27/24 19:54:25.876
  Mar 27 19:54:25.877: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename security-context-test @ 03/27/24 19:54:25.879
  E0327 19:54:25.924812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:25.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:25.932
  E0327 19:54:26.925208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:27.925875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:28.926939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:29.927485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:30.019: INFO: Got logs for pod "busybox-privileged-false-3a5a61ff-29ea-40e8-a0db-9a9374256c59": "ip: RTNETLINK answers: Operation not permitted\n"
  Mar 27 19:54:30.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6908" for this suite. @ 03/27/24 19:54:30.039
• [4.186 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 03/27/24 19:54:30.062
  Mar 27 19:54:30.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/27/24 19:54:30.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:30.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:30.114
  STEP: create the container to handle the HTTPGet hook request. @ 03/27/24 19:54:30.137
  E0327 19:54:30.928700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:31.928667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/27/24 19:54:32.18
  E0327 19:54:32.928862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:33.929028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/27/24 19:54:34.222
  STEP: delete the pod with lifecycle hook @ 03/27/24 19:54:34.242
  E0327 19:54:34.929538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:35.929856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:36.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9187" for this suite. @ 03/27/24 19:54:36.295
• [6.260 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 03/27/24 19:54:36.33
  Mar 27 19:54:36.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:54:36.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:36.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:36.417
  STEP: Creating a pod to test downward api env vars @ 03/27/24 19:54:36.423
  E0327 19:54:36.929873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:37.929942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:38.931228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:39.931998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:54:40.514
  Mar 27 19:54:40.522: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-11a2082f-4a4e-4007-8912-03b5c9fb8369 container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 19:54:40.55
  Mar 27 19:54:40.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4610" for this suite. @ 03/27/24 19:54:40.598
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 03/27/24 19:54:40.627
  Mar 27 19:54:40.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename events @ 03/27/24 19:54:40.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:40.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:40.674
  STEP: Create set of events @ 03/27/24 19:54:40.68
  STEP: get a list of Events with a label in the current namespace @ 03/27/24 19:54:40.726
  STEP: delete a list of events @ 03/27/24 19:54:40.732
  Mar 27 19:54:40.732: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 03/27/24 19:54:40.803
  Mar 27 19:54:40.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9494" for this suite. @ 03/27/24 19:54:40.83
• [0.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 03/27/24 19:54:40.854
  Mar 27 19:54:40.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 19:54:40.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:40.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:40.894
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/27/24 19:54:40.9
  Mar 27 19:54:40.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4518 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0327 19:54:40.933186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:41.105: INFO: stderr: ""
  Mar 27 19:54:41.105: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 03/27/24 19:54:41.105
  E0327 19:54:41.934540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:42.935053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:43.935855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:44.936029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:45.936134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/27/24 19:54:46.157
  Mar 27 19:54:46.157: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4518 get pod e2e-test-httpd-pod -o json'
  Mar 27 19:54:46.359: INFO: stderr: ""
  Mar 27 19:54:46.359: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-03-27T19:54:41Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4518\",\n        \"resourceVersion\": \"210777556\",\n        \"uid\": \"894b5a3f-25f8-44d0-a1eb-d263bd574960\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-rjjb5\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"env1-test-worker-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-rjjb5\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-27T19:54:41Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-27T19:54:42Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-27T19:54:42Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-27T19:54:41Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://4cae4df0525239201d974ae74fb795936838f0283b4e80f02c3f51bd5d88e490\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-03-27T19:54:42Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.61.1.202\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.69.77\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.69.77\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-03-27T19:54:41Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 03/27/24 19:54:46.36
  Mar 27 19:54:46.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4518 replace -f -'
  E0327 19:54:46.936711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:47.937525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:48.937629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:49.239: INFO: stderr: ""
  Mar 27 19:54:49.239: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 03/27/24 19:54:49.239
  Mar 27 19:54:49.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4518 delete pods e2e-test-httpd-pod'
  E0327 19:54:49.937866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:50.938285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:50.966: INFO: stderr: ""
  Mar 27 19:54:50.966: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Mar 27 19:54:50.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4518" for this suite. @ 03/27/24 19:54:50.983
• [10.148 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 03/27/24 19:54:51.003
  Mar 27 19:54:51.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/27/24 19:54:51.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:51.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:51.05
  E0327 19:54:51.939353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:52.939688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:54:53.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 03/27/24 19:54:53.142
  STEP: Cleaning up the configmap @ 03/27/24 19:54:53.157
  STEP: Cleaning up the pod @ 03/27/24 19:54:53.172
  STEP: Destroying namespace "emptydir-wrapper-8908" for this suite. @ 03/27/24 19:54:53.195
• [2.206 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 03/27/24 19:54:53.212
  Mar 27 19:54:53.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 19:54:53.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:53.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:53.27
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 19:54:53.282
  E0327 19:54:53.939800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:54.939969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:55.940118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:56.940221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:54:57.328
  Mar 27 19:54:57.339: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-9e449963-0f49-40fd-8a3c-83645b8230c1 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 19:54:57.362
  Mar 27 19:54:57.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2787" for this suite. @ 03/27/24 19:54:57.413
• [4.225 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 03/27/24 19:54:57.438
  Mar 27 19:54:57.438: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:54:57.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:54:57.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:54:57.491
  STEP: creating service in namespace services-7173 @ 03/27/24 19:54:57.497
  STEP: creating service affinity-nodeport-transition in namespace services-7173 @ 03/27/24 19:54:57.498
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7173 @ 03/27/24 19:54:57.527
  I0327 19:54:57.540728      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-7173, replica count: 3
  E0327 19:54:57.940573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:58.940762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:54:59.941275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 19:55:00.593599      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 19:55:00.620: INFO: Creating new exec pod
  E0327 19:55:00.941319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:01.941736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:02.942636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:55:03.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7173 exec execpod-affinitypjkkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0327 19:55:03.943307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:55:03.968: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Mar 27 19:55:03.968: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:55:03.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7173 exec execpod-affinitypjkkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.104 80'
  Mar 27 19:55:04.285: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.104 80\nConnection to 10.233.7.104 80 port [tcp/http] succeeded!\n"
  Mar 27 19:55:04.285: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:55:04.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7173 exec execpod-affinitypjkkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 32713'
  Mar 27 19:55:04.590: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.202 32713\nConnection to 10.61.1.202 32713 port [tcp/*] succeeded!\n"
  Mar 27 19:55:04.591: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:55:04.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7173 exec execpod-affinitypjkkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 32713'
  Mar 27 19:55:04.922: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 32713\nConnection to 10.61.1.200 32713 port [tcp/*] succeeded!\n"
  Mar 27 19:55:04.923: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 19:55:04.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7173 exec execpod-affinitypjkkm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:32713/ ; done'
  E0327 19:55:04.943778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:55:05.563: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n"
  Mar 27 19:55:05.563: INFO: stdout: "\naffinity-nodeport-transition-7spfg\naffinity-nodeport-transition-9zwcs\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-7spfg\naffinity-nodeport-transition-9zwcs\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-7spfg\naffinity-nodeport-transition-9zwcs\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-7spfg\naffinity-nodeport-transition-9zwcs\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-7spfg\naffinity-nodeport-transition-9zwcs\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-7spfg"
  Mar 27 19:55:05.563: INFO: Received response from host: affinity-nodeport-transition-7spfg
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-9zwcs
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-7spfg
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-9zwcs
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-7spfg
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-9zwcs
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-7spfg
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-9zwcs
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-7spfg
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-9zwcs
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:05.564: INFO: Received response from host: affinity-nodeport-transition-7spfg
  Mar 27 19:55:05.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-7173 exec execpod-affinitypjkkm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:32713/ ; done'
  E0327 19:55:05.944119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:55:06.075: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:32713/\n"
  Mar 27 19:55:06.076: INFO: stdout: "\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv\naffinity-nodeport-transition-znctv"
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.076: INFO: Received response from host: affinity-nodeport-transition-znctv
  Mar 27 19:55:06.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 19:55:06.091: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7173, will wait for the garbage collector to delete the pods @ 03/27/24 19:55:06.12
  Mar 27 19:55:06.198: INFO: Deleting ReplicationController affinity-nodeport-transition took: 13.125861ms
  Mar 27 19:55:06.299: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.836325ms
  E0327 19:55:06.944514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:07.945001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:08.945433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7173" for this suite. @ 03/27/24 19:55:09.766
• [12.341 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 03/27/24 19:55:09.78
  Mar 27 19:55:09.780: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename namespaces @ 03/27/24 19:55:09.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:55:09.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:55:09.848
  STEP: Creating namespace "e2e-ns-zhsfr" @ 03/27/24 19:55:09.855
  Mar 27 19:55:09.887: INFO: Namespace "e2e-ns-zhsfr-7392" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-zhsfr-7392" @ 03/27/24 19:55:09.887
  Mar 27 19:55:09.915: INFO: Namespace "e2e-ns-zhsfr-7392" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-zhsfr-7392" @ 03/27/24 19:55:09.915
  Mar 27 19:55:09.937: INFO: Namespace "e2e-ns-zhsfr-7392" has []v1.FinalizerName{"kubernetes"}
  Mar 27 19:55:09.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 19:55:09.946073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "namespaces-2988" for this suite. @ 03/27/24 19:55:09.952
  STEP: Destroying namespace "e2e-ns-zhsfr-7392" for this suite. @ 03/27/24 19:55:09.982
• [0.232 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 03/27/24 19:55:10.012
  Mar 27 19:55:10.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-preemption @ 03/27/24 19:55:10.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:55:10.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:55:10.062
  Mar 27 19:55:10.096: INFO: Waiting up to 1m0s for all nodes to be ready
  E0327 19:55:10.946403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:11.947393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:12.948250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:13.949523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:14.949757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:15.949916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:16.950122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:17.950376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:18.951097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:19.952146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:20.952930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:21.953444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:22.953892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:23.954442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:24.954715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:25.955050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:26.955116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:27.955274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:28.955765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:29.956287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:30.956739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:31.957686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:32.957682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:33.958092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:34.958229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:35.959101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:36.959329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:37.959570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:38.960065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:39.960393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:40.960530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:41.960831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:42.961688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:43.962583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:44.962811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:45.963028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:46.963450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:47.963989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:48.964540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:49.965267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:50.965786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:51.966466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:52.966844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:53.969554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:54.969620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:55.970426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:56.970991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:57.971520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:58.971822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:55:59.972338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:00.972842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:01.973101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:02.973885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:03.975008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:04.975275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:05.975382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:06.975591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:07.976376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:08.976521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:09.977813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:56:10.210: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/27/24 19:56:10.218
  Mar 27 19:56:10.286: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Mar 27 19:56:10.317: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Mar 27 19:56:10.439: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Mar 27 19:56:10.461: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Mar 27 19:56:10.534: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Mar 27 19:56:10.558: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/27/24 19:56:10.558
  E0327 19:56:10.978930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:11.979296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 03/27/24 19:56:12.638
  E0327 19:56:12.980779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:13.980953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:14.981091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:15.981278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:56:16.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2615" for this suite. @ 03/27/24 19:56:16.923
• [66.934 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 03/27/24 19:56:16.947
  Mar 27 19:56:16.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-webhook @ 03/27/24 19:56:16.95
  E0327 19:56:16.981679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:56:17.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:56:17.026
  STEP: Setting up server cert @ 03/27/24 19:56:17.032
  E0327 19:56:17.982642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/27/24 19:56:18.03
  STEP: Deploying the custom resource conversion webhook pod @ 03/27/24 19:56:18.044
  STEP: Wait for the deployment to be ready @ 03/27/24 19:56:18.067
  Mar 27 19:56:18.082: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0327 19:56:18.983000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:19.983437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:56:20.11
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:56:20.142
  E0327 19:56:20.983993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:56:21.143: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Mar 27 19:56:21.164: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 19:56:21.984585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:22.984761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:23.985436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:24.986499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:25.987902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:26.988608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:27.988938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 03/27/24 19:56:28.866
  STEP: Create a v2 custom resource @ 03/27/24 19:56:28.912
  E0327 19:56:28.989851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: List CRs in v1 @ 03/27/24 19:56:29.023
  STEP: List CRs in v2 @ 03/27/24 19:56:29.034
  Mar 27 19:56:29.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7386" for this suite. @ 03/27/24 19:56:29.697
• [12.767 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 03/27/24 19:56:29.718
  Mar 27 19:56:29.718: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 19:56:29.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:56:29.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:56:29.773
  STEP: Counting existing ResourceQuota @ 03/27/24 19:56:29.79
  E0327 19:56:29.989665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:30.990443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:31.990719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:32.991911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:33.992096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/27/24 19:56:34.8
  STEP: Ensuring resource quota status is calculated @ 03/27/24 19:56:34.813
  E0327 19:56:34.992306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:35.993025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 03/27/24 19:56:36.823
  STEP: Ensuring resource quota status captures replicaset creation @ 03/27/24 19:56:36.857
  E0327 19:56:36.993327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:37.993994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 03/27/24 19:56:38.865
  STEP: Ensuring resource quota status released usage @ 03/27/24 19:56:38.876
  E0327 19:56:38.994879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:39.996010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:56:40.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2215" for this suite. @ 03/27/24 19:56:40.9
• [11.201 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 03/27/24 19:56:40.919
  Mar 27 19:56:40.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename events @ 03/27/24 19:56:40.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:56:40.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:56:40.975
  STEP: creating a test event @ 03/27/24 19:56:40.98
  E0327 19:56:40.996597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing all events in all namespaces @ 03/27/24 19:56:40.998
  STEP: patching the test event @ 03/27/24 19:56:41.014
  STEP: fetching the test event @ 03/27/24 19:56:41.031
  STEP: updating the test event @ 03/27/24 19:56:41.039
  STEP: getting the test event @ 03/27/24 19:56:41.06
  STEP: deleting the test event @ 03/27/24 19:56:41.066
  STEP: listing all events in all namespaces @ 03/27/24 19:56:41.083
  Mar 27 19:56:41.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9211" for this suite. @ 03/27/24 19:56:41.122
• [0.220 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 03/27/24 19:56:41.14
  Mar 27 19:56:41.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replicaset @ 03/27/24 19:56:41.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:56:41.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:56:41.191
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 03/27/24 19:56:41.199
  E0327 19:56:41.997211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:42.998420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 03/27/24 19:56:43.268
  STEP: Then the orphan pod is adopted @ 03/27/24 19:56:43.28
  E0327 19:56:43.999246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 03/27/24 19:56:44.296
  Mar 27 19:56:44.304: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/27/24 19:56:44.33
  E0327 19:56:44.999722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:56:45.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5899" for this suite. @ 03/27/24 19:56:45.366
• [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 03/27/24 19:56:45.387
  Mar 27 19:56:45.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 19:56:45.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:56:45.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:56:45.434
  STEP: fetching services @ 03/27/24 19:56:45.441
  Mar 27 19:56:45.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5133" for this suite. @ 03/27/24 19:56:45.475
• [0.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 03/27/24 19:56:45.496
  Mar 27 19:56:45.496: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pod-network-test @ 03/27/24 19:56:45.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:56:45.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:56:45.549
  STEP: Performing setup for networking test in namespace pod-network-test-7872 @ 03/27/24 19:56:45.554
  STEP: creating a selector @ 03/27/24 19:56:45.554
  STEP: Creating the service pods in kubernetes @ 03/27/24 19:56:45.554
  Mar 27 19:56:45.554: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0327 19:56:45.999885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:47.000573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:48.001750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:49.002509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:50.003362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:51.004317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:52.004591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:53.005210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:54.005578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:55.006350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:56.006923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:57.007172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:58.008240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:56:59.008437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:00.008534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:01.008968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:02.009654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:03.009503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:04.010401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:05.010601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:06.012214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:07.012702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/27/24 19:57:07.85
  E0327 19:57:08.013342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:09.013997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:09.886: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 27 19:57:09.886: INFO: Breadth first check of 10.233.67.28 on host 10.61.1.200...
  Mar 27 19:57:09.894: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.69.88:9080/dial?request=hostname&protocol=udp&host=10.233.67.28&port=8081&tries=1'] Namespace:pod-network-test-7872 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:57:09.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:57:09.896: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:57:09.897: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7872/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.69.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.67.28%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0327 19:57:10.014420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:10.059: INFO: Waiting for responses: map[]
  Mar 27 19:57:10.059: INFO: reached 10.233.67.28 after 0/1 tries
  Mar 27 19:57:10.059: INFO: Breadth first check of 10.233.68.220 on host 10.61.1.201...
  Mar 27 19:57:10.068: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.69.88:9080/dial?request=hostname&protocol=udp&host=10.233.68.220&port=8081&tries=1'] Namespace:pod-network-test-7872 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:57:10.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:57:10.069: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:57:10.070: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7872/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.69.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.68.220%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 27 19:57:10.218: INFO: Waiting for responses: map[]
  Mar 27 19:57:10.218: INFO: reached 10.233.68.220 after 0/1 tries
  Mar 27 19:57:10.218: INFO: Breadth first check of 10.233.69.87 on host 10.61.1.202...
  Mar 27 19:57:10.230: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.69.88:9080/dial?request=hostname&protocol=udp&host=10.233.69.87&port=8081&tries=1'] Namespace:pod-network-test-7872 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 19:57:10.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 19:57:10.231: INFO: ExecWithOptions: Clientset creation
  Mar 27 19:57:10.231: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7872/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.69.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.69.87%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 27 19:57:10.393: INFO: Waiting for responses: map[]
  Mar 27 19:57:10.394: INFO: reached 10.233.69.87 after 0/1 tries
  Mar 27 19:57:10.394: INFO: Going to retry 0 out of 3 pods....
  Mar 27 19:57:10.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7872" for this suite. @ 03/27/24 19:57:10.406
• [24.925 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 03/27/24 19:57:10.424
  Mar 27 19:57:10.425: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 19:57:10.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:57:10.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:57:10.476
  STEP: Creating pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143 @ 03/27/24 19:57:10.481
  E0327 19:57:11.015014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:12.016127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 19:57:12.52
  Mar 27 19:57:12.528: INFO: Initial restart count of pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 is 0
  Mar 27 19:57:12.535: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:13.016745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:14.016844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:14.544: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:15.017041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:16.017249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:16.560: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:17.017771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:18.018762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:18.572: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:19.019544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:20.020614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:20.580: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:21.021098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:22.021077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:22.588: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:23.021450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:24.022206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:24.597: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:25.022896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:26.023113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:26.606: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:27.023168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:28.024617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:28.617: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:29.024988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:30.025398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:30.626: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:31.026170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:32.026743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:32.635: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:33.027436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:34.028071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:34.645: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:35.028314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:36.029018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:36.655: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:37.029296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:38.029967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:38.668: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:39.031024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:40.031767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:40.679: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:41.031760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:42.032111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:42.689: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:43.032946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:44.033408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:44.699: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:45.034174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:46.034944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:46.710: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:47.035423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:48.036240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:48.720: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:49.036472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:50.036973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:50.729: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:51.037317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:52.037740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:52.738: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:53.038599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:54.039201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:54.748: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:55.039521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:56.039732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:56.758: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:57.040069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:57:58.040213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:57:58.768: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:57:59.041095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:00.041520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:00.778: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:01.042461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:02.042899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:02.785: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:03.043906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:04.044680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:04.795: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:05.045718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:06.045825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:06.805: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:07.047005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:08.047647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:08.816: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:09.047756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:10.048635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:10.824: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:11.048895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:12.049405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:12.837: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:13.049531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:14.049827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:14.847: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:15.050005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:16.050529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:16.860: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:17.050533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:18.051293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:18.871: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:19.051308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:20.051648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:20.879: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:21.052160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:22.052392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:22.888: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:23.052669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:24.052942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:24.899: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:25.053087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:26.053195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:26.910: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  E0327 19:58:27.054313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:28.054542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:28.919: INFO: Get pod test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 in namespace container-probe-3143
  Mar 27 19:58:28.919: INFO: Restart count of pod container-probe-3143/test-grpc-f20ccd23-a37a-4609-9292-0dd759662cd6 is now 1 (1m16.39139503s elapsed)
  Mar 27 19:58:28.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 19:58:28.932
  STEP: Destroying namespace "container-probe-3143" for this suite. @ 03/27/24 19:58:28.966
• [78.568 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 03/27/24 19:58:28.992
  Mar 27 19:58:28.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:58:28.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:58:29.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:58:29.039
  E0327 19:58:29.055286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 03/27/24 19:58:29.101
  E0327 19:58:30.056098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:58:30.88
  STEP: Deploying the webhook pod @ 03/27/24 19:58:30.902
  STEP: Wait for the deployment to be ready @ 03/27/24 19:58:30.926
  Mar 27 19:58:30.954: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 19:58:31.056872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:32.057624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:58:32.994
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:58:33.014
  E0327 19:58:33.057912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:34.015: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 03/27/24 19:58:34.033
  E0327 19:58:34.058195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/27/24 19:58:34.078
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 03/27/24 19:58:34.102
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/27/24 19:58:34.134
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 03/27/24 19:58:34.21
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/27/24 19:58:34.228
  Mar 27 19:58:34.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-407" for this suite. @ 03/27/24 19:58:34.559
  STEP: Destroying namespace "webhook-markers-3733" for this suite. @ 03/27/24 19:58:34.588
• [5.625 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 03/27/24 19:58:34.62
  Mar 27 19:58:34.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 19:58:34.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:58:34.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:58:34.702
  STEP: Setting up server cert @ 03/27/24 19:58:34.778
  E0327 19:58:35.058309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 19:58:35.826
  STEP: Deploying the webhook pod @ 03/27/24 19:58:35.837
  STEP: Wait for the deployment to be ready @ 03/27/24 19:58:35.856
  Mar 27 19:58:35.874: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0327 19:58:36.061659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:37.062083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 19:58:37.903
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 19:58:37.925
  E0327 19:58:38.063493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:38.927: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 03/27/24 19:58:38.945
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/27/24 19:58:38.945
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 03/27/24 19:58:38.98
  E0327 19:58:39.063575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 03/27/24 19:58:40.012
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/27/24 19:58:40.013
  E0327 19:58:40.064663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:41.065494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 03/27/24 19:58:41.098
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/27/24 19:58:41.098
  E0327 19:58:42.065696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:43.066791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:44.067524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:45.068117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:46.068805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 03/27/24 19:58:46.187
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/27/24 19:58:46.188
  E0327 19:58:47.068920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:48.069325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:49.069959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:50.070576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:51.071677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:51.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2608" for this suite. @ 03/27/24 19:58:51.516
  STEP: Destroying namespace "webhook-markers-9874" for this suite. @ 03/27/24 19:58:51.598
• [17.026 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 03/27/24 19:58:51.654
  Mar 27 19:58:51.654: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 19:58:51.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:58:51.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:58:51.759
  STEP: Creating a pod to test env composition @ 03/27/24 19:58:51.774
  E0327 19:58:52.072738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:53.073217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:54.073603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:55.074032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 19:58:55.851
  Mar 27 19:58:55.858: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-e40d11bd-dd36-402d-822f-60fde0937a90 container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 19:58:55.902
  Mar 27 19:58:55.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5426" for this suite. @ 03/27/24 19:58:55.95
• [4.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 03/27/24 19:58:55.971
  Mar 27 19:58:55.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename containers @ 03/27/24 19:58:55.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:58:56.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:58:56.072
  E0327 19:58:56.074082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:57.074425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:58:58.074704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 19:58:58.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4229" for this suite. @ 03/27/24 19:58:58.145
• [2.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 03/27/24 19:58:58.164
  Mar 27 19:58:58.164: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename cronjob @ 03/27/24 19:58:58.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 19:58:58.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 19:58:58.216
  STEP: Creating a cronjob @ 03/27/24 19:58:58.223
  STEP: Ensuring more than one job is running at a time @ 03/27/24 19:58:58.242
  E0327 19:58:59.075058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:00.075950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:01.076832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:02.077596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:03.077926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:04.078410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:05.078613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:06.078892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:07.078909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:08.079139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:09.079264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:10.079743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:11.080855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:12.081303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:13.082476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:14.082668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:15.083062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:16.083353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:17.083200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:18.083921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:19.085062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:20.085345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:21.085634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:22.086281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:23.086614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:24.087431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:25.087710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:26.088819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:27.089019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:28.089621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:29.089925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:30.090410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:31.090704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:32.090990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:33.091267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:34.091429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:35.091697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:36.092622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:37.092884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:38.093462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:39.093801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:40.094015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:41.094691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:42.095013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:43.095882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:44.096266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:45.096944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:46.097230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:47.098390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:48.099059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:49.099815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:50.100718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:51.101411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:52.101694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:53.102000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:54.102022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:55.102882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:56.103113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:57.103529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:58.103600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 19:59:59.104021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:00.104296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 03/27/24 20:00:00.251
  STEP: Removing cronjob @ 03/27/24 20:00:00.258
  Mar 27 20:00:00.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8030" for this suite. @ 03/27/24 20:00:00.307
• [62.181 seconds]
------------------------------
SS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 03/27/24 20:00:00.346
  Mar 27 20:00:00.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename controllerrevisions @ 03/27/24 20:00:00.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:00.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:00.453
  STEP: Creating DaemonSet "e2e-n8l86-daemon-set" @ 03/27/24 20:00:00.526
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/27/24 20:00:00.541
  Mar 27 20:00:00.560: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:00.560: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:00.560: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:00.567: INFO: Number of nodes with available pods controlled by daemonset e2e-n8l86-daemon-set: 0
  Mar 27 20:00:00.567: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:00:01.104801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:01.579: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:01.580: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:01.580: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:01.591: INFO: Number of nodes with available pods controlled by daemonset e2e-n8l86-daemon-set: 0
  Mar 27 20:00:01.592: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:00:02.105016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:02.575: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:02.576: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:02.576: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:00:02.583: INFO: Number of nodes with available pods controlled by daemonset e2e-n8l86-daemon-set: 3
  Mar 27 20:00:02.583: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-n8l86-daemon-set
  STEP: Confirm DaemonSet "e2e-n8l86-daemon-set" successfully created with "daemonset-name=e2e-n8l86-daemon-set" label @ 03/27/24 20:00:02.591
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-n8l86-daemon-set" @ 03/27/24 20:00:02.607
  Mar 27 20:00:02.622: INFO: Located ControllerRevision: "e2e-n8l86-daemon-set-5cbf854975"
  STEP: Patching ControllerRevision "e2e-n8l86-daemon-set-5cbf854975" @ 03/27/24 20:00:02.628
  Mar 27 20:00:02.643: INFO: e2e-n8l86-daemon-set-5cbf854975 has been patched
  STEP: Create a new ControllerRevision @ 03/27/24 20:00:02.643
  Mar 27 20:00:02.652: INFO: Created ControllerRevision: e2e-n8l86-daemon-set-6b49875855
  STEP: Confirm that there are two ControllerRevisions @ 03/27/24 20:00:02.653
  Mar 27 20:00:02.653: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 27 20:00:02.661: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-n8l86-daemon-set-5cbf854975" @ 03/27/24 20:00:02.661
  STEP: Confirm that there is only one ControllerRevision @ 03/27/24 20:00:02.671
  Mar 27 20:00:02.671: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 27 20:00:02.676: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-n8l86-daemon-set-6b49875855" @ 03/27/24 20:00:02.681
  Mar 27 20:00:02.698: INFO: e2e-n8l86-daemon-set-6b49875855 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 03/27/24 20:00:02.698
  W0327 20:00:02.721890      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 03/27/24 20:00:02.722
  Mar 27 20:00:02.722: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0327 20:00:03.106117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:03.733: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 27 20:00:03.741: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-n8l86-daemon-set-6b49875855=updated" @ 03/27/24 20:00:03.741
  STEP: Confirm that there is only one ControllerRevision @ 03/27/24 20:00:03.759
  Mar 27 20:00:03.759: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 27 20:00:03.766: INFO: Found 1 ControllerRevisions
  Mar 27 20:00:03.772: INFO: ControllerRevision "e2e-n8l86-daemon-set-cc85fdfb6" has revision 3
  STEP: Deleting DaemonSet "e2e-n8l86-daemon-set" @ 03/27/24 20:00:03.777
  STEP: deleting DaemonSet.extensions e2e-n8l86-daemon-set in namespace controllerrevisions-5527, will wait for the garbage collector to delete the pods @ 03/27/24 20:00:03.777
  Mar 27 20:00:03.847: INFO: Deleting DaemonSet.extensions e2e-n8l86-daemon-set took: 13.479598ms
  Mar 27 20:00:03.947: INFO: Terminating DaemonSet.extensions e2e-n8l86-daemon-set pods took: 100.537959ms
  E0327 20:00:04.106844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:05.107004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:06.107471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:06.158: INFO: Number of nodes with available pods controlled by daemonset e2e-n8l86-daemon-set: 0
  Mar 27 20:00:06.158: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-n8l86-daemon-set
  Mar 27 20:00:06.163: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210779661"},"items":null}

  Mar 27 20:00:06.169: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210779662"},"items":null}

  Mar 27 20:00:06.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5527" for this suite. @ 03/27/24 20:00:06.213
• [5.881 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 03/27/24 20:00:06.227
  Mar 27 20:00:06.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename security-context-test @ 03/27/24 20:00:06.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:06.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:06.279
  E0327 20:00:07.108393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:08.109260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:09.109457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:10.110185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:11.110549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:12.110943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:12.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9956" for this suite. @ 03/27/24 20:00:12.38
• [6.167 seconds]
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 03/27/24 20:00:12.395
  Mar 27 20:00:12.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename runtimeclass @ 03/27/24 20:00:12.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:12.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:12.444
  STEP: getting /apis @ 03/27/24 20:00:12.45
  STEP: getting /apis/node.k8s.io @ 03/27/24 20:00:12.461
  STEP: getting /apis/node.k8s.io/v1 @ 03/27/24 20:00:12.465
  STEP: creating @ 03/27/24 20:00:12.467
  STEP: watching @ 03/27/24 20:00:12.502
  Mar 27 20:00:12.502: INFO: starting watch
  STEP: getting @ 03/27/24 20:00:12.526
  STEP: listing @ 03/27/24 20:00:12.533
  STEP: patching @ 03/27/24 20:00:12.542
  STEP: updating @ 03/27/24 20:00:12.554
  Mar 27 20:00:12.566: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 03/27/24 20:00:12.566
  STEP: deleting a collection @ 03/27/24 20:00:12.593
  Mar 27 20:00:12.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9887" for this suite. @ 03/27/24 20:00:12.635
• [0.253 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 03/27/24 20:00:12.652
  Mar 27 20:00:12.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 20:00:12.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:12.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:12.703
  STEP: Creating a pod to test downward api env vars @ 03/27/24 20:00:12.707
  E0327 20:00:13.111723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:14.112221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:15.112405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:16.112571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:00:16.765
  Mar 27 20:00:16.773: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-96873634-39d6-4978-bec0-c4a37fd976ec container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 20:00:16.792
  Mar 27 20:00:16.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5213" for this suite. @ 03/27/24 20:00:16.862
• [4.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 03/27/24 20:00:16.882
  Mar 27 20:00:16.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-runtime @ 03/27/24 20:00:16.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:16.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:16.954
  STEP: create the container @ 03/27/24 20:00:16.96
  W0327 20:00:16.979749      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 03/27/24 20:00:16.98
  E0327 20:00:17.113029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:18.113398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:19.113971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:20.114953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/27/24 20:00:21.029
  STEP: the container should be terminated @ 03/27/24 20:00:21.037
  STEP: the termination message should be set @ 03/27/24 20:00:21.037
  Mar 27 20:00:21.037: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/27/24 20:00:21.037
  Mar 27 20:00:21.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9481" for this suite. @ 03/27/24 20:00:21.082
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 03/27/24 20:00:21.1
  Mar 27 20:00:21.100: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 20:00:21.102
  E0327 20:00:21.115828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:21.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:21.146
  STEP: Creating configMap with name configmap-test-volume-94dfd3bf-f8c9-4775-8023-21ee82eab700 @ 03/27/24 20:00:21.151
  STEP: Creating a pod to test consume configMaps @ 03/27/24 20:00:21.159
  E0327 20:00:22.116630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:23.116782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:24.116901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:25.117545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:00:25.204
  Mar 27 20:00:25.210: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-b0bf6c3c-ac4e-46cd-a053-423a3faf7393 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 20:00:25.223
  Mar 27 20:00:25.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8344" for this suite. @ 03/27/24 20:00:25.29
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 03/27/24 20:00:25.312
  Mar 27 20:00:25.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 20:00:25.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:25.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:25.363
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/27/24 20:00:25.369
  E0327 20:00:26.117822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:27.117984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:28.118990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:29.119593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:00:29.425
  Mar 27 20:00:29.431: INFO: Trying to get logs from node env1-test-worker-2 pod pod-5672c524-2d8c-43c9-afb0-0714126ee6b2 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 20:00:29.445
  Mar 27 20:00:29.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6502" for this suite. @ 03/27/24 20:00:29.512
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 03/27/24 20:00:29.535
  Mar 27 20:00:29.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename proxy @ 03/27/24 20:00:29.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:29.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:29.616
  Mar 27 20:00:29.622: INFO: Creating pod...
  E0327 20:00:30.120299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:31.121420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:31.663: INFO: Creating service...
  Mar 27 20:00:31.679: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/pods/agnhost/proxy?method=DELETE
  Mar 27 20:00:31.688: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 27 20:00:31.688: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/pods/agnhost/proxy?method=OPTIONS
  Mar 27 20:00:31.704: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 27 20:00:31.706: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/pods/agnhost/proxy?method=PATCH
  Mar 27 20:00:31.716: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 27 20:00:31.717: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/pods/agnhost/proxy?method=POST
  Mar 27 20:00:31.725: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 27 20:00:31.725: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/pods/agnhost/proxy?method=PUT
  Mar 27 20:00:31.736: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 27 20:00:31.736: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/services/e2e-proxy-test-service/proxy?method=DELETE
  Mar 27 20:00:31.752: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 27 20:00:31.753: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Mar 27 20:00:31.779: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 27 20:00:31.779: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/services/e2e-proxy-test-service/proxy?method=PATCH
  Mar 27 20:00:31.796: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 27 20:00:31.797: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/services/e2e-proxy-test-service/proxy?method=POST
  Mar 27 20:00:31.818: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 27 20:00:31.818: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/services/e2e-proxy-test-service/proxy?method=PUT
  Mar 27 20:00:31.830: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 27 20:00:31.830: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/pods/agnhost/proxy?method=GET
  Mar 27 20:00:31.838: INFO: http.Client request:GET StatusCode:301
  Mar 27 20:00:31.839: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/services/e2e-proxy-test-service/proxy?method=GET
  Mar 27 20:00:31.857: INFO: http.Client request:GET StatusCode:301
  Mar 27 20:00:31.857: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/pods/agnhost/proxy?method=HEAD
  Mar 27 20:00:31.871: INFO: http.Client request:HEAD StatusCode:301
  Mar 27 20:00:31.871: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2395/services/e2e-proxy-test-service/proxy?method=HEAD
  Mar 27 20:00:31.882: INFO: http.Client request:HEAD StatusCode:301
  Mar 27 20:00:31.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2395" for this suite. @ 03/27/24 20:00:31.898
• [2.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 03/27/24 20:00:31.963
  Mar 27 20:00:31.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubelet-test @ 03/27/24 20:00:31.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:32.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:32.013
  E0327 20:00:32.121964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:33.122984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:34.123147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:35.123420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:36.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7534" for this suite. @ 03/27/24 20:00:36.079
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 03/27/24 20:00:36.104
  Mar 27 20:00:36.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 20:00:36.105
  E0327 20:00:36.124098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:36.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:36.146
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5782 @ 03/27/24 20:00:36.158
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/27/24 20:00:36.186
  STEP: creating service externalsvc in namespace services-5782 @ 03/27/24 20:00:36.186
  STEP: creating replication controller externalsvc in namespace services-5782 @ 03/27/24 20:00:36.217
  I0327 20:00:36.244569      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5782, replica count: 2
  E0327 20:00:37.124391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:38.125531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:39.125741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 20:00:39.298221      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 03/27/24 20:00:39.306
  Mar 27 20:00:39.340: INFO: Creating new exec pod
  E0327 20:00:40.126682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:41.126814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:41.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-5782 exec execpodnfq6f -- /bin/sh -x -c nslookup clusterip-service.services-5782.svc.cluster.local'
  Mar 27 20:00:41.821: INFO: stderr: "+ nslookup clusterip-service.services-5782.svc.cluster.local\n"
  Mar 27 20:00:41.821: INFO: stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nclusterip-service.services-5782.svc.cluster.local\tcanonical name = externalsvc.services-5782.svc.cluster.local.\nName:\texternalsvc.services-5782.svc.cluster.local\nAddress: 10.233.6.33\n\n"
  Mar 27 20:00:41.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5782, will wait for the garbage collector to delete the pods @ 03/27/24 20:00:41.834
  Mar 27 20:00:41.916: INFO: Deleting ReplicationController externalsvc took: 21.450547ms
  Mar 27 20:00:42.017: INFO: Terminating ReplicationController externalsvc pods took: 100.978546ms
  E0327 20:00:42.127248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:43.128363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:44.129202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:45.130387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:45.378: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-5782" for this suite. @ 03/27/24 20:00:45.458
• [9.417 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 03/27/24 20:00:45.524
  Mar 27 20:00:45.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replicaset @ 03/27/24 20:00:45.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:45.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:45.665
  Mar 27 20:00:45.673: INFO: Creating ReplicaSet my-hostname-basic-3d6dd28b-6683-46bf-af5f-65c6edbf1419
  Mar 27 20:00:45.697: INFO: Pod name my-hostname-basic-3d6dd28b-6683-46bf-af5f-65c6edbf1419: Found 0 pods out of 1
  E0327 20:00:46.130933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:47.131941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:48.132446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:49.133197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:50.133461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:00:50.708: INFO: Pod name my-hostname-basic-3d6dd28b-6683-46bf-af5f-65c6edbf1419: Found 1 pods out of 1
  Mar 27 20:00:50.708: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-3d6dd28b-6683-46bf-af5f-65c6edbf1419" is running
  Mar 27 20:00:50.716: INFO: Pod "my-hostname-basic-3d6dd28b-6683-46bf-af5f-65c6edbf1419-fbhzj" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:00:45 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:00:46 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:00:46 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:00:45 +0000 UTC Reason: Message:}])
  Mar 27 20:00:50.717: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/27/24 20:00:50.718
  Mar 27 20:00:50.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3355" for this suite. @ 03/27/24 20:00:50.777
• [5.283 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 03/27/24 20:00:50.808
  Mar 27 20:00:50.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 20:00:50.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:00:50.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:00:50.859
  Mar 27 20:00:50.863: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:00:51.134071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:52.134307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:53.134555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:54.135044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:55.136151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:56.136094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:57.137005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:58.138170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:00:59.138768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:00.139052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/27/24 20:01:00.321
  Mar 27 20:01:00.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-1433 --namespace=crd-publish-openapi-1433 create -f -'
  E0327 20:01:01.140245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:02.140412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:02.759: INFO: stderr: ""
  Mar 27 20:01:02.760: INFO: stdout: "e2e-test-crd-publish-openapi-8425-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Mar 27 20:01:02.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-1433 --namespace=crd-publish-openapi-1433 delete e2e-test-crd-publish-openapi-8425-crds test-cr'
  Mar 27 20:01:02.987: INFO: stderr: ""
  Mar 27 20:01:02.988: INFO: stdout: "e2e-test-crd-publish-openapi-8425-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Mar 27 20:01:02.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-1433 --namespace=crd-publish-openapi-1433 apply -f -'
  E0327 20:01:03.141150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:04.141592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:04.664: INFO: stderr: ""
  Mar 27 20:01:04.664: INFO: stdout: "e2e-test-crd-publish-openapi-8425-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Mar 27 20:01:04.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-1433 --namespace=crd-publish-openapi-1433 delete e2e-test-crd-publish-openapi-8425-crds test-cr'
  Mar 27 20:01:04.800: INFO: stderr: ""
  Mar 27 20:01:04.800: INFO: stdout: "e2e-test-crd-publish-openapi-8425-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 03/27/24 20:01:04.8
  Mar 27 20:01:04.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-1433 explain e2e-test-crd-publish-openapi-8425-crds'
  E0327 20:01:05.142456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:06.143193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:06.871: INFO: stderr: ""
  Mar 27 20:01:06.871: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8425-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0327 20:01:07.144010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:08.145172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:09.145064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:10.145184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:11.148195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:11.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1433" for this suite. @ 03/27/24 20:01:11.213
• [20.423 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 03/27/24 20:01:11.247
  Mar 27 20:01:11.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:01:11.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:01:11.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:01:11.29
  STEP: create deployment with httpd image @ 03/27/24 20:01:11.295
  Mar 27 20:01:11.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-2857 create -f -'
  E0327 20:01:12.148984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:13.149917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:13.493: INFO: stderr: ""
  Mar 27 20:01:13.493: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 03/27/24 20:01:13.493
  Mar 27 20:01:13.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-2857 diff -f -'
  E0327 20:01:14.150716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:15.022: INFO: rc: 1
  Mar 27 20:01:15.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-2857 delete -f -'
  E0327 20:01:15.151235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:15.222: INFO: stderr: ""
  Mar 27 20:01:15.222: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Mar 27 20:01:15.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2857" for this suite. @ 03/27/24 20:01:15.241
• [4.010 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 03/27/24 20:01:15.257
  Mar 27 20:01:15.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename init-container @ 03/27/24 20:01:15.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:01:15.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:01:15.302
  STEP: creating the pod @ 03/27/24 20:01:15.309
  Mar 27 20:01:15.309: INFO: PodSpec: initContainers in spec.initContainers
  E0327 20:01:16.151430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:17.151646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:18.151989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:19.152278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:20.153423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:20.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7638" for this suite. @ 03/27/24 20:01:20.456
• [5.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 03/27/24 20:01:20.49
  Mar 27 20:01:20.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 20:01:20.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:01:20.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:01:20.57
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/27/24 20:01:20.577
  E0327 20:01:21.154282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:22.155197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:23.155863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:24.156414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:01:24.65
  Mar 27 20:01:24.656: INFO: Trying to get logs from node env1-test-worker-2 pod pod-2521d10d-ca16-440f-b9ae-4c0f3579b8c4 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 20:01:24.692
  Mar 27 20:01:24.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4513" for this suite. @ 03/27/24 20:01:24.736
• [4.260 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 03/27/24 20:01:24.752
  Mar 27 20:01:24.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 20:01:24.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:01:24.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:01:24.797
  STEP: Creating pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643 @ 03/27/24 20:01:24.802
  E0327 20:01:25.157188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:26.158006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 20:01:26.848
  Mar 27 20:01:26.855: INFO: Initial restart count of pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 is 0
  Mar 27 20:01:26.864: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:27.158468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:28.158994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:28.876: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:29.159150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:30.159924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:30.887: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:31.160637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:32.160947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:32.895: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:33.161122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:34.161591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:34.906: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:35.162430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:36.162940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:36.916: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:37.164053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:38.164562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:38.925: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:39.164686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:40.165635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:40.936: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:41.166833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:42.166954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:42.944: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:43.167840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:44.168083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:44.954: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:45.168411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:46.169219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:46.962: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:47.170243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:48.170464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:48.972: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:49.170582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:50.170837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:50.985: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:51.171825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:52.172439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:52.993: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:53.172950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:54.173319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:55.005: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:55.173732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:56.173461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:57.015: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:57.174146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:01:58.174586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:01:59.025: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:01:59.175859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:00.176984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:01.038: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:01.177876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:02.178793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:03.047: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:03.178822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:04.179215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:05.057: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:05.180113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:06.180212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:07.068: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:07.180978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:08.181189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:09.077: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:09.181773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:10.182236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:11.087: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:11.182901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:12.183430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:13.097: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:13.184245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:14.185850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:15.107: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  E0327 20:02:15.186250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:16.186735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:17.118: INFO: Get pod busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 in namespace container-probe-4643
  Mar 27 20:02:17.118: INFO: Restart count of pod container-probe-4643/busybox-1d6427e9-79c5-4019-a48e-70822c623aa9 is now 1 (50.263306439s elapsed)
  Mar 27 20:02:17.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 20:02:17.133
  STEP: Destroying namespace "container-probe-4643" for this suite. @ 03/27/24 20:02:17.168
  E0327 20:02:17.187717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [52.441 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 03/27/24 20:02:17.194
  Mar 27 20:02:17.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 20:02:17.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:02:17.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:02:17.247
  Mar 27 20:02:17.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: creating the pod @ 03/27/24 20:02:17.254
  STEP: submitting the pod to kubernetes @ 03/27/24 20:02:17.254
  E0327 20:02:18.187937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:19.188965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:19.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8645" for this suite. @ 03/27/24 20:02:19.394
• [2.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 03/27/24 20:02:19.424
  Mar 27 20:02:19.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:02:19.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:02:19.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:02:19.476
  STEP: Creating secret with name s-test-opt-del-ddbe8803-5585-4a47-834e-5473e4b048ec @ 03/27/24 20:02:19.501
  STEP: Creating secret with name s-test-opt-upd-44dfc982-d57c-427f-8055-7ca1421172b9 @ 03/27/24 20:02:19.531
  STEP: Creating the pod @ 03/27/24 20:02:19.548
  E0327 20:02:20.189452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:21.189737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-ddbe8803-5585-4a47-834e-5473e4b048ec @ 03/27/24 20:02:21.729
  STEP: Updating secret s-test-opt-upd-44dfc982-d57c-427f-8055-7ca1421172b9 @ 03/27/24 20:02:21.75
  STEP: Creating secret with name s-test-opt-create-d060d300-af19-44ef-8cbe-173b0cf1ae9b @ 03/27/24 20:02:21.764
  STEP: waiting to observe update in volume @ 03/27/24 20:02:21.782
  E0327 20:02:22.190766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:23.191508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:02:23.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5154" for this suite. @ 03/27/24 20:02:23.895
• [4.486 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 03/27/24 20:02:23.91
  Mar 27 20:02:23.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:02:23.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:02:23.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:02:23.966
  STEP: Creating configMap with name cm-test-opt-del-439a68b2-75fb-476d-aab0-7e3ace1ab621 @ 03/27/24 20:02:23.985
  STEP: Creating configMap with name cm-test-opt-upd-b0f60c72-dba4-4253-9acf-d4bb236d979e @ 03/27/24 20:02:23.995
  STEP: Creating the pod @ 03/27/24 20:02:24.011
  E0327 20:02:24.192164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:25.192309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-439a68b2-75fb-476d-aab0-7e3ace1ab621 @ 03/27/24 20:02:26.113
  STEP: Updating configmap cm-test-opt-upd-b0f60c72-dba4-4253-9acf-d4bb236d979e @ 03/27/24 20:02:26.132
  STEP: Creating configMap with name cm-test-opt-create-f19249c4-6f8a-4ef4-9a12-49b86fef4a0b @ 03/27/24 20:02:26.14
  STEP: waiting to observe update in volume @ 03/27/24 20:02:26.148
  E0327 20:02:26.192410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:27.193515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:28.193546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:29.193613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:30.193988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:31.195019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:32.195604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:33.196586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:34.197231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:35.198175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:36.198931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:37.199797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:38.199847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:39.200558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:40.201637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:41.201689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:42.202356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:43.202621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:44.203439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:45.204352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:46.205200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:47.206362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:48.207087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:49.207671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:50.208646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:51.209561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:52.209748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:53.210365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:54.210692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:55.211685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:56.212061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:57.212165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:58.213155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:02:59.213627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:00.214177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:01.214417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:02.214811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:03.215085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:04.215259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:05.216356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:06.217058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:07.217647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:08.218434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:09.218609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:10.219325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:11.219451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:12.220409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:13.220593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:14.221069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:15.221613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:16.221715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:17.222937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:18.223497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:19.223752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:20.223947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:21.224552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:22.225431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:23.226324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:24.227106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:25.227928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:26.228843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:27.229022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:28.229896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:29.230113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:30.230276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:31.231054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:32.231699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:33.232176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:34.232786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:35.233575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:36.234247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:37.234486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:38.234801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:39.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7442" for this suite. @ 03/27/24 20:03:39.145
• [75.253 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 03/27/24 20:03:39.164
  Mar 27 20:03:39.164: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename aggregator @ 03/27/24 20:03:39.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:03:39.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:03:39.219
  Mar 27 20:03:39.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Registering the sample API server. @ 03/27/24 20:03:39.227
  E0327 20:03:39.235043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:39.840: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Mar 27 20:03:39.938: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0327 20:03:40.235893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:41.236201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:42.130: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:42.237388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:43.237489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:44.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:44.238431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:45.239129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:46.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:46.239811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:47.240338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:48.139: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:48.241048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:49.242293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:50.139: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:50.243295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:51.244218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:52.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:52.245628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:53.246519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:54.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:54.246639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:55.247525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:56.141: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:56.249383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:57.249006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:03:58.139: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:03:58.249671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:03:59.250763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:00.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:00.251363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:01.251853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:02.139: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:02.251914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:03.252042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:04.138: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:04.253077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:05.253917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:06.141: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:06.254439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:07.254663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:08.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:08.255676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:09.256022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:10.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:10.257298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:11.257943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:12.141: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:12.258722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:13.259386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:14.138: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:14.260133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:15.261265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:16.143: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:16.261651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:17.261957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:18.148: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:18.263088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:19.264373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:20.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:20.265339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:21.266925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:22.142: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:22.267548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:23.268154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:24.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:24.268410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:25.268669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:26.137: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:26.269683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:27.269944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:28.142: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:28.269935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:29.271018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:30.138: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:30.271759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:31.272038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:32.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:32.272490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:33.272866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:34.139: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:34.273224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:35.274065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:36.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:36.274900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:37.275187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:38.138: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 3, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 3, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:04:38.275925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:39.276085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:40.276512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:04:40.301: INFO: Waited 140.580078ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 03/27/24 20:04:40.406
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 03/27/24 20:04:40.414
  STEP: List APIServices @ 03/27/24 20:04:40.429
  Mar 27 20:04:40.444: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 03/27/24 20:04:40.444
  Mar 27 20:04:40.486: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 03/27/24 20:04:40.486
  Mar 27 20:04:40.514: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.March, 27, 20, 4, 40, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 03/27/24 20:04:40.514
  Mar 27 20:04:40.531: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-03-27 20:04:40 +0000 UTC Passed all checks passed}
  Mar 27 20:04:40.531: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 27 20:04:40.531: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 03/27/24 20:04:40.531
  Mar 27 20:04:40.558: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1319490331" @ 03/27/24 20:04:40.558
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 03/27/24 20:04:40.584
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 03/27/24 20:04:40.598
  STEP: Patch APIService Status @ 03/27/24 20:04:40.604
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 03/27/24 20:04:40.622
  Mar 27 20:04:40.632: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-03-27 20:04:40 +0000 UTC Passed all checks passed}
  Mar 27 20:04:40.632: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 27 20:04:40.632: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Mar 27 20:04:40.632: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 03/27/24 20:04:40.632
  STEP: Confirm that the generated APIService has been deleted @ 03/27/24 20:04:40.648
  Mar 27 20:04:40.648: INFO: Requesting list of APIServices to confirm quantity
  Mar 27 20:04:40.663: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Mar 27 20:04:40.663: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Mar 27 20:04:40.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-801" for this suite. @ 03/27/24 20:04:41.022
• [61.875 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 03/27/24 20:04:41.041
  Mar 27 20:04:41.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 20:04:41.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:04:41.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:04:41.124
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 03/27/24 20:04:41.133
  Mar 27 20:04:41.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:04:41.277503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:42.278213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:43.278664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:44.278638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:45.279438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:46.280016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:47.280980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:48.281347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:49.282519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:50.283264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:51.284600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:52.285282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:53.286413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:54.287564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:55.288612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:56.290192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:57.290163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:58.290335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:04:59.291098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:00.291887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 03/27/24 20:05:00.934
  Mar 27 20:05:00.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:05:01.292740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:02.292958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:03.293182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:04.293800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:05.294794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:06.295830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:07.296745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:08.297175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:09.297799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:05:10.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:05:10.298131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:11.298211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:12.299236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:13.299806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:14.300011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:15.300949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:16.301987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:17.302869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:18.303037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:19.303656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:20.303604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:21.304298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:22.304310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:23.304908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:24.304833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:25.309617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:26.310497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:27.311352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:28.312439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:29.313026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:30.314017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:31.314615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:05:31.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5338" for this suite. @ 03/27/24 20:05:31.525
• [50.502 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 03/27/24 20:05:31.549
  Mar 27 20:05:31.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename init-container @ 03/27/24 20:05:31.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:05:31.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:05:31.607
  STEP: creating the pod @ 03/27/24 20:05:31.614
  Mar 27 20:05:31.614: INFO: PodSpec: initContainers in spec.initContainers
  E0327 20:05:32.315387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:33.315962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:34.316180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:35.316682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:36.317034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:37.317294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:38.317571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:39.318296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:40.319276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:41.319531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:42.320301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:43.321294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:44.321459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:45.321547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:46.321758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:47.321955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:48.322318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:49.322711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:50.322909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:51.323034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:52.323807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:53.324098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:54.324355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:55.324796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:56.325143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:57.325512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:58.326056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:05:59.326354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:00.327080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:01.328323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:02.328508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:03.329072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:04.329473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:05.330390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:06.330859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:07.331054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:08.331525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:09.331790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:10.333011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:11.333610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:12.333796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:13.334320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:14.334901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:15.335030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:15.672: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-80db644a-e48a-4c9c-9517-f1415d3d4b07", GenerateName:"", Namespace:"init-container-4907", SelfLink:"", UID:"258cbd5a-68dd-40ae-9094-42e0e102cc08", ResourceVersion:"210781821", Generation:0, CreationTimestamp:time.Date(2024, time.March, 27, 20, 5, 31, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"614148508"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.March, 27, 20, 5, 31, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bdce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.March, 27, 20, 6, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bdd10), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-rbht5", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004b643c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rbht5", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rbht5", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rbht5", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002cbd3d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"env1-test-worker-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004ff6ee0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002cbd470)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002cbd490)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002cbd498), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002cbd49c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001219190), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 27, 20, 5, 31, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 27, 20, 5, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 27, 20, 5, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 27, 20, 5, 31, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.61.1.202", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.69.115", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.69.115"}}, StartTime:time.Date(2024, time.March, 27, 20, 5, 31, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004ff6fc0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004ff7030)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://122c503c8d3151a3c3c6200e17077574d0d9b416cdab35926ab0a023576b1958", Started:(*bool)(0xc002cbd56a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004b64440), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc002cbd57f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004b64420), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc002cbd52f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Mar 27 20:06:15.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4907" for this suite. @ 03/27/24 20:06:15.695
• [44.162 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 03/27/24 20:06:15.713
  Mar 27 20:06:15.714: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 20:06:15.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:06:15.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:06:15.77
  STEP: Creating pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869 @ 03/27/24 20:06:15.777
  E0327 20:06:16.335692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:17.336399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 20:06:17.818
  Mar 27 20:06:17.823: INFO: Initial restart count of pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 is 0
  Mar 27 20:06:17.831: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:18.337202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:19.337713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:19.841: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:20.338784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:21.339179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:21.850: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:22.339980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:23.340566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:23.862: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:24.340710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:25.340735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:25.869: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:26.341769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:27.342434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:27.902: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:28.343083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:29.343253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:29.913: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:30.343976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:31.344599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:31.924: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:32.345662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:33.346778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:33.934: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:34.347859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:35.347834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:35.947: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:36.348776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:37.348314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:37.963: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  Mar 27 20:06:37.963: INFO: Restart count of pod container-probe-869/liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 is now 1 (20.140543157s elapsed)
  E0327 20:06:38.349252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:39.349800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:39.980: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:40.350430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:41.350964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:41.988: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:42.352027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:43.352807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:43.998: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:44.353728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:45.353949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:46.008: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:46.354141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:47.354515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:48.026: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:48.355248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:49.355393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:50.034: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:50.355976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:51.356272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:52.044: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:52.357649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:53.358080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:54.053: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:54.358743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:55.359009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:56.061: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:06:56.360007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:57.360936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:06:58.068: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  Mar 27 20:06:58.068: INFO: Restart count of pod container-probe-869/liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 is now 2 (40.245363563s elapsed)
  E0327 20:06:58.361524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:06:59.362481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:00.078: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:00.363026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:01.363773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:02.088: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:02.364178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:03.364790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:04.107: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:04.365649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:05.365847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:06.118: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:06.366415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:07.367529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:08.128: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:08.368378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:09.368708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:10.139: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:10.369555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:11.370308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:12.151: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:12.370575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:13.371660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:14.162: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:14.372434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:15.373291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:16.173: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:16.373651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:17.374353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:18.183: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  Mar 27 20:07:18.183: INFO: Restart count of pod container-probe-869/liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 is now 3 (1m0.360468929s elapsed)
  E0327 20:07:18.375366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:19.376054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:20.195: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:20.377201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:21.377895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:22.204: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:22.378782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:23.379326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:24.216: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:24.380318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:25.381185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:26.227: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:26.381669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:27.383158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:28.238: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:28.383426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:29.383737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:30.248: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:30.383986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:31.384860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:32.258: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:32.385608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:33.386036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:34.267: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:34.386545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:35.386670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:36.284: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:36.387379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:37.387626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:38.294: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  Mar 27 20:07:38.295: INFO: Restart count of pod container-probe-869/liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 is now 4 (1m20.47200893s elapsed)
  E0327 20:07:38.388281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:39.388278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:40.306: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:40.388527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:41.389188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:42.316: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:42.389865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:43.390781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:44.325: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:44.391114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:45.391396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:46.349: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:46.392002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:47.392657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:48.358: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:48.393168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:49.393675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:50.369: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:50.394463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:51.395036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:52.377: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:52.395203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:53.395871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:54.386: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:54.395746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:55.396675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:56.396615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:56.400: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:57.396999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:07:58.397601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:07:58.409: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:07:59.397944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:00.398063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:00.419: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:01.398397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:02.399118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:02.428: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:03.399582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:04.399720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:04.437: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:05.400513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:06.400806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:06.453: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:07.401252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:08.401875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:08.465: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:09.402232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:10.403773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:10.475: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:11.403577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:12.404109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:12.497: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:13.404409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:14.404999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:14.508: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:15.406151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:16.406885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:16.541: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:17.407108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:18.407608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:18.550: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:19.407768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:20.408185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:20.559: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:21.408502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:22.408772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:22.569: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:23.409049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:24.409605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:24.579: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:25.410575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:26.411162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:26.590: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:27.411306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:28.411797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:28.599: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:29.413247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:30.413547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:30.612: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:31.413585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:32.414134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:32.620: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:33.414521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:34.415017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:34.630: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:35.415572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:36.415953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:36.639: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:37.416593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:38.417591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:38.647: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:39.417875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:40.417981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:40.657: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:41.418278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:42.418836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:42.665: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:43.419953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:44.420538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:44.675: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:45.421731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:46.422829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:46.687: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:47.423138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:48.423384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:48.695: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  E0327 20:08:49.423535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:50.423766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:50.706: INFO: Get pod liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 in namespace container-probe-869
  Mar 27 20:08:50.706: INFO: Restart count of pod container-probe-869/liveness-25b3f95c-3115-4a6e-b753-3a4c8c63bf86 is now 5 (2m32.883263462s elapsed)
  Mar 27 20:08:50.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 20:08:50.726
  STEP: Destroying namespace "container-probe-869" for this suite. @ 03/27/24 20:08:50.757
• [155.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 03/27/24 20:08:50.774
  Mar 27 20:08:50.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename daemonsets @ 03/27/24 20:08:50.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:08:50.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:08:50.873
  STEP: Creating simple DaemonSet "daemon-set" @ 03/27/24 20:08:50.929
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/27/24 20:08:50.941
  Mar 27 20:08:50.951: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:50.952: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:50.953: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:50.982: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:08:50.983: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:08:51.424035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:51.998: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:51.998: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:51.998: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:52.006: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:08:52.006: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:08:52.424205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:52.998: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:52.998: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:52.998: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:53.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 20:08:53.007: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 03/27/24 20:08:53.014
  Mar 27 20:08:53.065: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:53.066: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:53.066: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:53.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:08:53.076: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:08:53.425533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:54.088: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:54.089: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:54.089: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:54.097: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:08:54.097: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:08:54.425657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:55.090: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:55.090: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:55.090: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:55.101: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:08:55.101: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:08:55.426024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:56.096: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:56.096: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:56.096: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:56.104: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:08:56.104: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:08:56.426241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:57.093: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:57.093: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:57.094: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:08:57.102: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 20:08:57.102: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/27/24 20:08:57.111
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4673, will wait for the garbage collector to delete the pods @ 03/27/24 20:08:57.111
  Mar 27 20:08:57.189: INFO: Deleting DaemonSet.extensions daemon-set took: 16.173451ms
  Mar 27 20:08:57.291: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.621331ms
  E0327 20:08:57.426779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:08:58.427594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:08:59.001: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:08:59.001: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 27 20:08:59.008: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210782547"},"items":null}

  Mar 27 20:08:59.014: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210782547"},"items":null}

  Mar 27 20:08:59.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4673" for this suite. @ 03/27/24 20:08:59.064
• [8.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 03/27/24 20:08:59.092
  Mar 27 20:08:59.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename disruption @ 03/27/24 20:08:59.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:08:59.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:08:59.146
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:08:59.163
  E0327 20:08:59.428026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:00.429065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 03/27/24 20:09:01.18
  STEP: Waiting for all pods to be running @ 03/27/24 20:09:01.201
  Mar 27 20:09:01.217: INFO: running pods: 0 < 1
  E0327 20:09:01.430094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:02.430342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 03/27/24 20:09:03.231
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:09:03.262
  STEP: Patching PodDisruptionBudget status @ 03/27/24 20:09:03.288
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:09:03.321
  Mar 27 20:09:03.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5534" for this suite. @ 03/27/24 20:09:03.357
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 03/27/24 20:09:03.379
  Mar 27 20:09:03.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename disruption @ 03/27/24 20:09:03.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:09:03.426
  E0327 20:09:03.430822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:09:03.437
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:09:03.471
  STEP: Waiting for all pods to be running @ 03/27/24 20:09:03.568
  Mar 27 20:09:03.582: INFO: running pods: 0 < 3
  E0327 20:09:04.431306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:05.431735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:09:05.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4609" for this suite. @ 03/27/24 20:09:05.622
• [2.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 03/27/24 20:09:05.648
  Mar 27 20:09:05.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:09:05.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:09:05.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:09:05.697
  STEP: Creating secret with name projected-secret-test-7ed1dd34-08f0-4116-ba8e-3ef10a871454 @ 03/27/24 20:09:05.706
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:09:05.716
  E0327 20:09:06.432256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:07.432380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:08.433592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:09.433685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:09:09.775
  Mar 27 20:09:09.785: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-1d4e2a26-0c4a-4e3d-a497-694da2c5d583 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:09:09.844
  Mar 27 20:09:09.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-599" for this suite. @ 03/27/24 20:09:09.918
• [4.308 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 03/27/24 20:09:09.957
  Mar 27 20:09:09.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replication-controller @ 03/27/24 20:09:09.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:09:10.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:09:10.042
  STEP: Given a ReplicationController is created @ 03/27/24 20:09:10.051
  STEP: When the matched label of one of its pods change @ 03/27/24 20:09:10.068
  Mar 27 20:09:10.082: INFO: Pod name pod-release: Found 0 pods out of 1
  E0327 20:09:10.434353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:11.434635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:12.434807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:13.435044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:14.435628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:09:15.091: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/27/24 20:09:15.114
  E0327 20:09:15.437982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:09:16.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8360" for this suite. @ 03/27/24 20:09:16.164
• [6.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 03/27/24 20:09:16.192
  Mar 27 20:09:16.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 20:09:16.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:09:16.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:09:16.265
  STEP: Creating a ResourceQuota with best effort scope @ 03/27/24 20:09:16.271
  STEP: Ensuring ResourceQuota status is calculated @ 03/27/24 20:09:16.287
  E0327 20:09:16.437930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:17.439037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 03/27/24 20:09:18.301
  STEP: Ensuring ResourceQuota status is calculated @ 03/27/24 20:09:18.313
  E0327 20:09:18.439718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:19.439784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 03/27/24 20:09:20.323
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 03/27/24 20:09:20.355
  E0327 20:09:20.440420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:21.440546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 03/27/24 20:09:22.365
  E0327 20:09:22.440746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:23.440918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/27/24 20:09:24.374
  STEP: Ensuring resource quota status released the pod usage @ 03/27/24 20:09:24.403
  E0327 20:09:24.442107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:25.443105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 03/27/24 20:09:26.412
  E0327 20:09:26.443200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 03/27/24 20:09:26.457
  E0327 20:09:27.443978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:28.444365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 03/27/24 20:09:28.468
  E0327 20:09:29.444518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:30.446724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/27/24 20:09:30.477
  STEP: Ensuring resource quota status released the pod usage @ 03/27/24 20:09:30.525
  E0327 20:09:31.445767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:32.446453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:09:32.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2699" for this suite. @ 03/27/24 20:09:32.569
• [16.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 03/27/24 20:09:32.587
  Mar 27 20:09:32.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 20:09:32.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:09:32.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:09:32.642
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/27/24 20:09:32.65
  E0327 20:09:33.447730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:34.448615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:35.448669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:36.448878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:09:36.713
  Mar 27 20:09:36.729: INFO: Trying to get logs from node env1-test-worker-2 pod pod-17b08e21-7d8c-4167-b98e-176acbb632c7 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 20:09:36.75
  Mar 27 20:09:36.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7855" for this suite. @ 03/27/24 20:09:36.809
• [4.242 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 03/27/24 20:09:36.834
  Mar 27 20:09:36.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 20:09:36.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:09:36.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:09:36.893
  E0327 20:09:37.449809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:38.449978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:39.450089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:40.450188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:41.450927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:42.451134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:43.452109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:44.452410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:45.452674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:46.452731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:47.453874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:48.454073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:49.455361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:50.455408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:51.455377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:52.455624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:53.458275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:54.457426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:55.457832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:56.458785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:57.459209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:09:58.459707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:09:59.074: INFO: Container started at 2024-03-27 20:09:37 +0000 UTC, pod became ready at 2024-03-27 20:09:57 +0000 UTC
  Mar 27 20:09:59.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7361" for this suite. @ 03/27/24 20:09:59.089
• [22.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 03/27/24 20:09:59.125
  Mar 27 20:09:59.125: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:09:59.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:09:59.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:09:59.181
  STEP: Creating secret with name secret-test-map-7ec3a739-3534-479b-b21c-9659b27f652e @ 03/27/24 20:09:59.188
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:09:59.198
  E0327 20:09:59.461925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:00.462893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:01.463852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:02.464974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:10:03.249
  Mar 27 20:10:03.255: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-4a26ab0b-4b2b-466e-bbd5-44cb1c9813f0 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:10:03.274
  Mar 27 20:10:03.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4719" for this suite. @ 03/27/24 20:10:03.315
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 03/27/24 20:10:03.335
  Mar 27 20:10:03.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 20:10:03.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:03.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:03.384
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/27/24 20:10:03.39
  E0327 20:10:03.466169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:04.467055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:05.467695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:06.468264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:10:07.451
  Mar 27 20:10:07.456: INFO: Trying to get logs from node env1-test-worker-2 pod pod-df134ec0-4059-4ecf-9336-3b0e82f8b3c8 container test-container: <nil>
  E0327 20:10:07.469296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/27/24 20:10:07.47
  Mar 27 20:10:07.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5265" for this suite. @ 03/27/24 20:10:07.514
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 03/27/24 20:10:07.532
  Mar 27 20:10:07.532: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/27/24 20:10:07.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:07.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:07.575
  STEP: creating a target pod @ 03/27/24 20:10:07.582
  E0327 20:10:08.470022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:09.470035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 03/27/24 20:10:09.635
  E0327 20:10:10.470267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:11.470767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 03/27/24 20:10:11.695
  Mar 27 20:10:11.695: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3167 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:10:11.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:10:11.696: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:10:11.696: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-3167/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Mar 27 20:10:11.870: INFO: Exec stderr: ""
  Mar 27 20:10:11.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3167" for this suite. @ 03/27/24 20:10:11.904
• [4.390 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 03/27/24 20:10:11.923
  Mar 27 20:10:11.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename job @ 03/27/24 20:10:11.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:12.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:12.022
  STEP: Creating a job @ 03/27/24 20:10:12.028
  STEP: Ensure pods equal to parallelism count is attached to the job @ 03/27/24 20:10:12.048
  E0327 20:10:12.471716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:13.472725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 03/27/24 20:10:14.063
  STEP: updating /status @ 03/27/24 20:10:14.088
  STEP: get /status @ 03/27/24 20:10:14.109
  Mar 27 20:10:14.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1631" for this suite. @ 03/27/24 20:10:14.134
• [2.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 03/27/24 20:10:14.158
  Mar 27 20:10:14.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename deployment @ 03/27/24 20:10:14.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:14.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:14.206
  STEP: creating a Deployment @ 03/27/24 20:10:14.232
  STEP: waiting for Deployment to be created @ 03/27/24 20:10:14.254
  STEP: waiting for all Replicas to be Ready @ 03/27/24 20:10:14.257
  Mar 27 20:10:14.260: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 27 20:10:14.260: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 27 20:10:14.353: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 27 20:10:14.353: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 27 20:10:14.396: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 27 20:10:14.396: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0327 20:10:14.473254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:14.520: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 27 20:10:14.520: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0327 20:10:15.474293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:15.853: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Mar 27 20:10:15.853: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Mar 27 20:10:16.007: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 03/27/24 20:10:16.007
  Mar 27 20:10:16.042: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 03/27/24 20:10:16.042
  Mar 27 20:10:16.046: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.046: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.046: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.046: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.046: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 0
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.047: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.068: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.068: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.127: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.127: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:16.201: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:16.201: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:16.260: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:16.261: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  E0327 20:10:16.474826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:17.475005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:18.086: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:18.086: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:18.169: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  STEP: listing Deployments @ 03/27/24 20:10:18.17
  Mar 27 20:10:18.181: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 03/27/24 20:10:18.181
  Mar 27 20:10:18.217: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 03/27/24 20:10:18.217
  Mar 27 20:10:18.230: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:18.254: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:18.287: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:18.332: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:18.368: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:18.412: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0327 20:10:18.475340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:19.475909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:19.895: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:20.092: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:20.196: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 27 20:10:20.358: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0327 20:10:20.476596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:21.476842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:21.911: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 03/27/24 20:10:21.988
  STEP: fetching the DeploymentStatus @ 03/27/24 20:10:22.011
  Mar 27 20:10:22.028: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:22.028: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:22.028: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:22.029: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:22.029: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:22.029: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 1
  Mar 27 20:10:22.030: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:22.030: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 3
  Mar 27 20:10:22.030: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:22.031: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 2
  Mar 27 20:10:22.031: INFO: observed Deployment test-deployment in namespace deployment-8896 with ReadyReplicas 3
  STEP: deleting the Deployment @ 03/27/24 20:10:22.032
  Mar 27 20:10:22.053: INFO: observed event type MODIFIED
  Mar 27 20:10:22.054: INFO: observed event type MODIFIED
  Mar 27 20:10:22.054: INFO: observed event type MODIFIED
  Mar 27 20:10:22.054: INFO: observed event type MODIFIED
  Mar 27 20:10:22.054: INFO: observed event type MODIFIED
  Mar 27 20:10:22.055: INFO: observed event type MODIFIED
  Mar 27 20:10:22.055: INFO: observed event type MODIFIED
  Mar 27 20:10:22.056: INFO: observed event type MODIFIED
  Mar 27 20:10:22.056: INFO: observed event type MODIFIED
  Mar 27 20:10:22.057: INFO: observed event type MODIFIED
  Mar 27 20:10:22.057: INFO: observed event type MODIFIED
  Mar 27 20:10:22.057: INFO: observed event type MODIFIED
  Mar 27 20:10:22.057: INFO: observed event type MODIFIED
  Mar 27 20:10:22.058: INFO: observed event type MODIFIED
  Mar 27 20:10:22.071: INFO: Log out all the ReplicaSets if there is no deployment created
  Mar 27 20:10:22.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8896" for this suite. @ 03/27/24 20:10:22.098
• [7.968 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 03/27/24 20:10:22.128
  Mar 27 20:10:22.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 20:10:22.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:22.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:22.183
  STEP: creating an Endpoint @ 03/27/24 20:10:22.207
  STEP: waiting for available Endpoint @ 03/27/24 20:10:22.229
  STEP: listing all Endpoints @ 03/27/24 20:10:22.234
  STEP: updating the Endpoint @ 03/27/24 20:10:22.245
  STEP: fetching the Endpoint @ 03/27/24 20:10:22.265
  STEP: patching the Endpoint @ 03/27/24 20:10:22.279
  STEP: fetching the Endpoint @ 03/27/24 20:10:22.306
  STEP: deleting the Endpoint by Collection @ 03/27/24 20:10:22.317
  STEP: waiting for Endpoint deletion @ 03/27/24 20:10:22.357
  STEP: fetching the Endpoint @ 03/27/24 20:10:22.365
  Mar 27 20:10:22.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4761" for this suite. @ 03/27/24 20:10:22.414
• [0.308 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 03/27/24 20:10:22.44
  Mar 27 20:10:22.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:10:22.442
  E0327 20:10:22.482832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:22.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:22.494
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 20:10:22.503
  E0327 20:10:23.483313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:24.483628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:25.483873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:26.484120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:10:26.586
  Mar 27 20:10:26.594: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-1b31ee24-a952-470a-b02c-2fbe7d9edcec container client-container: <nil>
  STEP: delete the pod @ 03/27/24 20:10:26.615
  Mar 27 20:10:26.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2602" for this suite. @ 03/27/24 20:10:26.667
• [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 03/27/24 20:10:26.688
  Mar 27 20:10:26.688: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replication-controller @ 03/27/24 20:10:26.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:26.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:26.74
  STEP: Creating ReplicationController "e2e-rc-9g7g6" @ 03/27/24 20:10:26.745
  Mar 27 20:10:26.761: INFO: Get Replication Controller "e2e-rc-9g7g6" to confirm replicas
  E0327 20:10:27.484603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:27.772: INFO: Get Replication Controller "e2e-rc-9g7g6" to confirm replicas
  Mar 27 20:10:27.784: INFO: Found 1 replicas for "e2e-rc-9g7g6" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-9g7g6" @ 03/27/24 20:10:27.784
  STEP: Updating a scale subresource @ 03/27/24 20:10:27.795
  STEP: Verifying replicas where modified for replication controller "e2e-rc-9g7g6" @ 03/27/24 20:10:27.824
  Mar 27 20:10:27.824: INFO: Get Replication Controller "e2e-rc-9g7g6" to confirm replicas
  E0327 20:10:28.484915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:28.863: INFO: Get Replication Controller "e2e-rc-9g7g6" to confirm replicas
  Mar 27 20:10:28.871: INFO: Found 2 replicas for "e2e-rc-9g7g6" replication controller
  Mar 27 20:10:28.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8246" for this suite. @ 03/27/24 20:10:28.884
• [2.214 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 03/27/24 20:10:28.909
  Mar 27 20:10:28.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replication-controller @ 03/27/24 20:10:28.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:28.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:28.983
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 03/27/24 20:10:28.988
  E0327 20:10:29.484978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:30.485435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 03/27/24 20:10:31.038
  STEP: Then the orphan pod is adopted @ 03/27/24 20:10:31.048
  E0327 20:10:31.485696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:32.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2411" for this suite. @ 03/27/24 20:10:32.084
• [3.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 03/27/24 20:10:32.114
  Mar 27 20:10:32.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 20:10:32.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:32.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:32.174
  Mar 27 20:10:32.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:10:32.486225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:33.486843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:34.487235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:35.488273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:36.489324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:37.489774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:38.490627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:39.490760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:40.491773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:41.492672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/27/24 20:10:41.766
  Mar 27 20:10:41.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-6981 --namespace=crd-publish-openapi-6981 create -f -'
  E0327 20:10:42.493900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:43.493945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:44.230: INFO: stderr: ""
  Mar 27 20:10:44.230: INFO: stdout: "e2e-test-crd-publish-openapi-4937-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Mar 27 20:10:44.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-6981 --namespace=crd-publish-openapi-6981 delete e2e-test-crd-publish-openapi-4937-crds test-cr'
  Mar 27 20:10:44.471: INFO: stderr: ""
  Mar 27 20:10:44.471: INFO: stdout: "e2e-test-crd-publish-openapi-4937-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Mar 27 20:10:44.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-6981 --namespace=crd-publish-openapi-6981 apply -f -'
  E0327 20:10:44.494779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:45.495347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:46.495604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:46.908: INFO: stderr: ""
  Mar 27 20:10:46.908: INFO: stdout: "e2e-test-crd-publish-openapi-4937-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Mar 27 20:10:46.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-6981 --namespace=crd-publish-openapi-6981 delete e2e-test-crd-publish-openapi-4937-crds test-cr'
  Mar 27 20:10:47.143: INFO: stderr: ""
  Mar 27 20:10:47.144: INFO: stdout: "e2e-test-crd-publish-openapi-4937-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/27/24 20:10:47.144
  Mar 27 20:10:47.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-6981 explain e2e-test-crd-publish-openapi-4937-crds'
  E0327 20:10:47.496374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:48.496534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:48.843: INFO: stderr: ""
  Mar 27 20:10:48.843: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4937-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0327 20:10:49.497607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:50.498232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:51.499243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:52.500097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:53.501011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:10:53.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6981" for this suite. @ 03/27/24 20:10:53.805
• [21.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 03/27/24 20:10:53.826
  Mar 27 20:10:53.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svcaccounts @ 03/27/24 20:10:53.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:53.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:53.866
  STEP: Creating a pod to test service account token:  @ 03/27/24 20:10:53.874
  E0327 20:10:54.502027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:55.502623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:56.503562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:57.504209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:10:57.928
  Mar 27 20:10:57.935: INFO: Trying to get logs from node env1-test-worker-2 pod test-pod-5622de44-3c9c-4312-acfd-c25455ea58f5 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 20:10:57.983
  Mar 27 20:10:58.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6970" for this suite. @ 03/27/24 20:10:58.036
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 03/27/24 20:10:58.057
  Mar 27 20:10:58.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 20:10:58.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:10:58.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:10:58.105
  STEP: Creating pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301 @ 03/27/24 20:10:58.111
  E0327 20:10:58.504366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:10:59.505904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 20:11:00.153
  Mar 27 20:11:00.186: INFO: Initial restart count of pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa is 0
  Mar 27 20:11:00.200: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:00.506638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:01.507177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:02.215: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:02.507555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:03.507781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:04.224: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:04.508743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:05.509144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:06.237: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:06.509426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:07.509979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:08.247: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:08.510916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:09.510975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:10.258: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:10.511804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:11.511687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:12.269: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:12.512284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:13.512653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:14.279: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:14.512884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:15.513297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:16.288: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:16.513575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:17.514384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:18.298: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:18.514804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:19.514966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:20.307: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:20.515105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:21.515423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:22.319: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:22.517686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:23.517227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:24.331: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:24.517437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:25.517425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:26.341: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:26.518556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:27.519039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:28.350: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:28.519956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:29.520152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:30.364: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:30.520815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:31.521550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:32.375: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:32.522126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:33.522782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:34.385: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:34.523856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:35.524940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:36.413: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:36.526141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:37.526324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:38.428: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:38.526838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:39.527126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:40.440: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:40.527645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:41.528938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:42.453: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:42.529739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:43.530517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:44.464: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:44.531379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:45.531607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:46.524: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:46.532184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:47.532976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:48.533410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:48.537: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:49.533812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:50.534638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:50.545: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:51.534770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:52.534950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:52.557: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:53.535369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:54.535560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:54.570: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:55.536464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:56.537070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:56.579: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:57.537268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:11:58.537823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:11:58.588: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:11:59.538742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:00.539857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:00.599: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:01.540162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:02.540660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:02.608: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:03.540879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:04.541320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:04.617: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:05.541655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:06.541895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:06.624: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:07.542566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:08.543079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:08.632: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:09.544139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:10.544864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:10.641: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:11.545069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:12.545694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:12.653: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:13.546632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:14.546813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:14.663: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:15.547478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:16.548305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:16.674: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:17.548828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:18.549000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:18.682: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:19.549160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:20.549579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:20.693: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:21.549767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:22.550866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:22.703: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:23.551100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:24.551732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:24.712: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:25.552496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:26.552865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:26.722: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:27.553298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:28.553934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:28.730: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:29.554612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:30.554863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:30.739: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:31.555193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:32.556275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:32.749: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:33.556384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:34.557129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:34.758: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:35.557605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:36.557744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:36.771: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:37.557721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:38.557998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:38.784: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:39.558874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:40.559126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:40.794: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:41.559519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:42.560307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:42.806: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:43.560572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:44.561560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:44.817: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:45.561946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:46.562901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:46.827: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:47.563074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:48.563395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:48.835: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:49.563499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:50.564513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:50.845: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:51.564758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:52.565539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:52.858: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:53.565918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:54.567099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:54.872: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:55.567180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:56.567739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:56.881: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:57.567871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:12:58.568375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:12:58.890: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:12:59.568517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:00.568797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:00.901: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:01.568903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:02.569667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:02.913: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:03.570931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:04.571448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:04.924: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:05.572441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:06.572715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:06.935: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:07.573294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:08.573736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:08.944: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:09.574091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:10.575232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:10.953: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:11.576159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:12.576400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:12.963: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:13.577519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:14.577818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:14.972: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:15.578281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:16.579296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:16.985: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:17.579639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:18.580362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:18.998: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:19.580794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:20.581569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:21.009: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:21.581972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:22.582800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:23.024: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:23.583146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:24.583846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:25.032: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:25.584748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:26.585103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:27.040: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:27.585410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:28.585901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:29.050: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:29.589157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:30.590407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:31.059: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:31.590931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:32.591355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:33.071: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:33.592033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:34.593308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:35.081: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:35.594096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:36.594807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:37.096: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:37.595250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:38.595526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:39.106: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:39.595620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:40.595915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:41.117: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:41.596117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:42.596368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:43.131: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:43.596530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:44.597097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:45.145: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:45.597262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:46.597759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:47.156: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:47.598786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:48.599225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:49.171: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:49.600014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:50.601119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:51.183: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:51.601306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:52.601927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:53.197: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:53.602766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:54.603349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:55.208: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:55.604121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:56.604574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:57.226: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:57.604889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:13:58.605473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:13:59.237: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:13:59.605695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:00.605960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:01.246: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:01.606208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:02.606234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:03.259: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:03.607112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:04.607371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:05.271: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:05.607982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:06.608834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:07.283: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:07.610124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:08.610367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:09.294: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:09.610428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:10.611330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:11.306: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:11.611942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:12.612121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:13.320: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:13.612418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:14.612901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:15.330: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:15.613518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:16.613853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:17.340: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:17.614091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:18.614888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:19.349: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:19.615854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:20.616442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:21.359: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:21.617257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:22.617837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:23.373: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:23.618915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:24.619577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:25.381: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:25.620938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:26.620900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:27.392: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:27.621825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:28.622837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:29.401: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:29.622995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:30.623182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:31.411: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:31.623328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:32.623442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:33.424: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:33.624521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:34.624704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:35.470: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:35.625344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:36.625699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:37.481: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:37.625816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:38.626137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:39.492: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:39.626669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:40.626824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:41.503: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:41.627080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:42.627549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:43.526: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:43.627905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:44.628484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:45.534: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:45.629680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:46.630241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:47.544: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:47.630338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:48.630677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:49.554: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:49.630767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:50.630949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:51.566: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:51.631470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:52.631808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:53.578: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:53.632002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:54.632128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:55.585: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:55.632767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:56.632895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:57.596: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:57.633564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:14:58.634284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:14:59.605: INFO: Get pod busybox-2e0dcbed-b8cd-44b4-a9df-20ac6d16ebaa in namespace container-probe-7301
  E0327 20:14:59.635239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:00.636036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:01.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 20:15:01.625
  E0327 20:15:01.637070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-7301" for this suite. @ 03/27/24 20:15:01.675
• [243.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 03/27/24 20:15:01.71
  Mar 27 20:15:01.710: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 20:15:01.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:15:01.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:15:01.769
  STEP: Setting up server cert @ 03/27/24 20:15:01.854
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 20:15:02.443
  STEP: Deploying the webhook pod @ 03/27/24 20:15:02.472
  STEP: Wait for the deployment to be ready @ 03/27/24 20:15:02.501
  Mar 27 20:15:02.524: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 20:15:02.637116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:03.637281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:04.543: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:15:04.637861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:05.638430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:06.552: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:15:06.638886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:07.642833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:08.552: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:15:08.643885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:09.644214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:10.558: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:15:10.644618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:11.644997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:12.554: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 15, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:15:12.645254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:13.645844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 20:15:14.554
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 20:15:14.578
  E0327 20:15:14.646812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:15.579: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 03/27/24 20:15:15.594
  STEP: create a pod that should be updated by the webhook @ 03/27/24 20:15:15.632
  E0327 20:15:15.647312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:15.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8484" for this suite. @ 03/27/24 20:15:15.884
  STEP: Destroying namespace "webhook-markers-265" for this suite. @ 03/27/24 20:15:15.912
• [14.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 03/27/24 20:15:15.944
  Mar 27 20:15:15.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 20:15:15.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:15:15.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:15:15.997
  STEP: Creating a test headless service @ 03/27/24 20:15:16.006
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9198 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9198;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9198 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9198;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9198.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9198.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9198.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9198.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9198.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9198.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9198.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9198.svc;check="$$(dig +notcp +noall +answer +search 142.16.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.16.142_udp@PTR;check="$$(dig +tcp +noall +answer +search 142.16.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.16.142_tcp@PTR;sleep 1; done
   @ 03/27/24 20:15:16.052
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9198 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9198;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9198 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9198;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9198.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9198.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9198.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9198.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9198.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9198.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9198.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9198.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9198.svc;check="$$(dig +notcp +noall +answer +search 142.16.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.16.142_udp@PTR;check="$$(dig +tcp +noall +answer +search 142.16.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.16.142_tcp@PTR;sleep 1; done
   @ 03/27/24 20:15:16.053
  STEP: creating a pod to probe DNS @ 03/27/24 20:15:16.054
  STEP: submitting the pod to kubernetes @ 03/27/24 20:15:16.054
  E0327 20:15:16.647381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:17.648039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:18.648917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:19.649238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 20:15:20.116
  STEP: looking for the results for each expected name from probers @ 03/27/24 20:15:20.128
  Mar 27 20:15:20.143: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.154: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.184: INFO: Unable to read wheezy_udp@dns-test-service.dns-9198 from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.196: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9198 from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.212: INFO: Unable to read wheezy_udp@dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.225: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.237: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.252: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.335: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.347: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.356: INFO: Unable to read jessie_udp@dns-test-service.dns-9198 from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.364: INFO: Unable to read jessie_tcp@dns-test-service.dns-9198 from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.373: INFO: Unable to read jessie_udp@dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.385: INFO: Unable to read jessie_tcp@dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.395: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.403: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9198.svc from pod dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c: the server could not find the requested resource (get pods dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c)
  Mar 27 20:15:20.479: INFO: Lookups using dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9198 wheezy_tcp@dns-test-service.dns-9198 wheezy_udp@dns-test-service.dns-9198.svc wheezy_tcp@dns-test-service.dns-9198.svc wheezy_udp@_http._tcp.dns-test-service.dns-9198.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9198.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9198 jessie_tcp@dns-test-service.dns-9198 jessie_udp@dns-test-service.dns-9198.svc jessie_tcp@dns-test-service.dns-9198.svc jessie_udp@_http._tcp.dns-test-service.dns-9198.svc jessie_tcp@_http._tcp.dns-test-service.dns-9198.svc]

  Mar 27 20:15:20.536: INFO: Pod client logs for webserver: 
  Mar 27 20:15:20.553: INFO: Pod client logs for querier: 
  Mar 27 20:15:20.575: INFO: Pod client logs for jessie-querier: 
  E0327 20:15:20.649850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:21.650065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:22.651381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:23.651465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:24.651822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:25.652292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:15:25.844: INFO: DNS probes using dns-9198/dns-test-07dc9ec2-7788-4c44-8c42-3b564b359f6c succeeded

  Mar 27 20:15:25.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 20:15:25.859
  STEP: deleting the test service @ 03/27/24 20:15:25.912
  STEP: deleting the test headless service @ 03/27/24 20:15:26.008
  STEP: Destroying namespace "dns-9198" for this suite. @ 03/27/24 20:15:26.064
• [10.142 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 03/27/24 20:15:26.087
  Mar 27 20:15:26.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:15:26.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:15:26.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:15:26.157
  STEP: Creating configMap with name projected-configmap-test-volume-ee137c10-c9d2-490d-9556-d19315c11e90 @ 03/27/24 20:15:26.171
  STEP: Creating a pod to test consume configMaps @ 03/27/24 20:15:26.197
  E0327 20:15:26.653149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:27.653783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:28.653839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:29.654273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:15:30.259
  Mar 27 20:15:30.270: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-cd103b45-212c-4441-a35b-2316f8d821a1 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:15:30.299
  Mar 27 20:15:30.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2648" for this suite. @ 03/27/24 20:15:30.385
• [4.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 03/27/24 20:15:30.417
  Mar 27 20:15:30.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename cronjob @ 03/27/24 20:15:30.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:15:30.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:15:30.496
  STEP: Creating a suspended cronjob @ 03/27/24 20:15:30.504
  STEP: Ensuring no jobs are scheduled @ 03/27/24 20:15:30.528
  E0327 20:15:30.654636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:31.655211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:32.656332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:33.656773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:34.657218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:35.657644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:36.657837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:37.658058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:38.658605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:39.658998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:40.659262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:41.660049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:42.660360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:43.660993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:44.661013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:45.662040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:46.662634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:47.663238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:48.663777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:49.664315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:50.665296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:51.666233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:52.666041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:53.666473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:54.667164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:55.667528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:56.667929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:57.668470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:58.668680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:15:59.669200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:00.669680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:01.670036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:02.670901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:03.671360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:04.671504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:05.672034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:06.673079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:07.673454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:08.673675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:09.675232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:10.675339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:11.675539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:12.675759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:13.676351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:14.677281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:15.678515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:16.678834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:17.679054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:18.679571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:19.680120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:20.680621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:21.680984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:22.681511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:23.682019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:24.682326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:25.682919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:26.682995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:27.683328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:28.684435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:29.684496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:30.685446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:31.686271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:32.687263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:33.687693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:34.688742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:35.689004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:36.689182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:37.689461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:38.690438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:39.690586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:40.691328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:41.691513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:42.692376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:43.692605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:44.692677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:45.694388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:46.695092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:47.695211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:48.695904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:49.696339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:50.696789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:51.696882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:52.697458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:53.698521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:54.698006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:55.698209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:56.698948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:57.699733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:58.700145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:16:59.700439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:00.700564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:01.700952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:02.701955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:03.702301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:04.702450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:05.702903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:06.703356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:07.703757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:08.703994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:09.704593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:10.704713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:11.705261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:12.706016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:13.706312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:14.706365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:15.706549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:16.707671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:17.707682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:18.708936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:19.709232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:20.710006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:21.710262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:22.710770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:23.711446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:24.711725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:25.712975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:26.713514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:27.713947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:28.713904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:29.714656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:30.714598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:31.714946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:32.715601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:33.715852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:34.717220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:35.717460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:36.718395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:37.718525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:38.718511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:39.719385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:40.720238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:41.720720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:42.721194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:43.721409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:44.722115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:45.722748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:46.723890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:47.724395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:48.724627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:49.725157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:50.725739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:51.725863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:52.726415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:53.727010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:54.726971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:55.727266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:56.727367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:57.727563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:58.727863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:17:59.728373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:00.729484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:01.729867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:02.730072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:03.730779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:04.731000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:05.731400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:06.731425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:07.732043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:08.732684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:09.733468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:10.733697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:11.734140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:12.735229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:13.735674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:14.736282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:15.736406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:16.737410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:17.737955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:18.738617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:19.739204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:20.739257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:21.739731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:22.740170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:23.740501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:24.741880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:25.742904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:26.743688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:27.744084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:28.744091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:29.744602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:30.745109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:31.745553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:32.745840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:33.746361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:34.747711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:35.748449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:36.749336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:37.749675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:38.749838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:39.750879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:40.751509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:41.752288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:42.752174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:43.752565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:44.752694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:45.752881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:46.753656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:47.754130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:48.755089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:49.755639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:50.755870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:51.756381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:52.756449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:53.756864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:54.757587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:55.758368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:56.759109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:57.759444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:58.760250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:18:59.760879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:00.761905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:01.762314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:02.763109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:03.763198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:04.763847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:05.764869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:06.765086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:07.765725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:08.766537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:09.766647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:10.768178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:11.768216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:12.768452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:13.768690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:14.769447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:15.769307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:16.770220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:17.770193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:18.771019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:19.771388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:20.772038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:21.772314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:22.772983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:23.773243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:24.774259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:25.775129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:26.776455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:27.776386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:28.776561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:29.776768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:30.777500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:31.777861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:32.777900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:33.778628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:34.779196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:35.780238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:36.781415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:37.781541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:38.781873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:39.782419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:40.783442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:41.784008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:42.784362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:43.784594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:44.784897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:45.785946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:46.786230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:47.786921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:48.787701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:49.788429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:50.788904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:51.789597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:52.789624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:53.790091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:54.790608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:55.790886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:56.792028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:57.792378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:58.792484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:19:59.792920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:00.793660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:01.794006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:02.794185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:03.794600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:04.795403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:05.796134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:06.796304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:07.796753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:08.797643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:09.797895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:10.798880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:11.799201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:12.799606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:13.800120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:14.800271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:15.801094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:16.801813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:17.802439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:18.803158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:19.803747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:20.804110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:21.804314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:22.805111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:23.805217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:24.805414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:25.805635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:26.806448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:27.806730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:28.807524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:29.808047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 03/27/24 20:20:30.544
  STEP: Removing cronjob @ 03/27/24 20:20:30.552
  Mar 27 20:20:30.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3470" for this suite. @ 03/27/24 20:20:30.585
• [300.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 03/27/24 20:20:30.615
  Mar 27 20:20:30.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 20:20:30.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:20:30.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:20:30.688
  STEP: Creating service test in namespace statefulset-3716 @ 03/27/24 20:20:30.697
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 03/27/24 20:20:30.718
  STEP: Creating stateful set ss in namespace statefulset-3716 @ 03/27/24 20:20:30.735
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3716 @ 03/27/24 20:20:30.772
  Mar 27 20:20:30.780: INFO: Found 0 stateful pods, waiting for 1
  E0327 20:20:30.808953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:31.809480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:32.809949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:33.810811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:34.811332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:35.811596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:36.811893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:37.812441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:38.812644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:39.812974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:40.791: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 03/27/24 20:20:40.791
  Mar 27 20:20:40.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0327 20:20:40.813496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:41.122: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:20:41.122: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:20:41.122: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:20:41.133: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0327 20:20:41.813795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:42.813870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:43.814899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:44.815504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:45.816558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:46.817223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:47.817915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:48.818680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:49.818813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:20:50.819208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:51.144: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:20:51.144: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 27 20:20:51.182: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999427s
  E0327 20:20:51.819539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:52.192: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.990608916s
  E0327 20:20:52.820357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:53.202: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.981360354s
  E0327 20:20:53.821186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:54.210: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.9714251s
  E0327 20:20:54.822372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:55.218: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.962850041s
  E0327 20:20:55.822437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:56.227: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.9550226s
  E0327 20:20:56.823070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:57.236: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.946638454s
  E0327 20:20:57.823309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:58.246: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.937355386s
  E0327 20:20:58.823569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:20:59.259: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.927152141s
  E0327 20:20:59.824702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:00.269: INFO: Verifying statefulset ss doesn't scale past 1 for another 914.187547ms
  E0327 20:21:00.825478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3716 @ 03/27/24 20:21:01.27
  Mar 27 20:21:01.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 27 20:21:01.575: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 27 20:21:01.575: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 20:21:01.575: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 20:21:01.592: INFO: Found 1 stateful pods, waiting for 3
  E0327 20:21:01.826087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:02.826264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:03.826703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:04.826908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:05.827675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:06.828127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:07.828239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:08.828806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:09.829416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:10.829665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:11.604: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:21:11.604: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:21:11.604: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 03/27/24 20:21:11.604
  STEP: Scale down will halt with unhealthy stateful pod @ 03/27/24 20:21:11.604
  Mar 27 20:21:11.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0327 20:21:11.829844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:11.987: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:21:11.987: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:21:11.987: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:21:11.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 27 20:21:12.332: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:21:12.332: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:21:12.332: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:21:12.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 27 20:21:12.692: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:21:12.692: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:21:12.692: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:21:12.692: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 27 20:21:12.703: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0327 20:21:12.830628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:13.831676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:14.831933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:15.832330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:16.832428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:17.832697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:18.833084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:19.833292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:20.833679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:21.834140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:22.729: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:21:22.729: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:21:22.729: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:21:22.763: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999953s
  E0327 20:21:22.834847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:23.777: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.986194721s
  E0327 20:21:23.835028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:24.788: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.973612562s
  E0327 20:21:24.835460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:25.796: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.963188341s
  E0327 20:21:25.835696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:26.810: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.954218303s
  E0327 20:21:26.836336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:27.819: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.941079678s
  E0327 20:21:27.837199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:28.828: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.932230063s
  E0327 20:21:28.837780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:29.838232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:29.838: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.922690099s
  E0327 20:21:30.838666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:30.853: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.912788315s
  E0327 20:21:31.838931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:31.865: INFO: Verifying statefulset ss doesn't scale past 3 for another 898.21468ms
  E0327 20:21:32.839088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3716 @ 03/27/24 20:21:32.866
  Mar 27 20:21:32.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 27 20:21:33.265: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 27 20:21:33.265: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 20:21:33.265: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 20:21:33.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 27 20:21:33.605: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 27 20:21:33.605: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 20:21:33.605: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 20:21:33.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-3716 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0327 20:21:33.839963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:33.938: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 27 20:21:33.938: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 20:21:33.938: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 20:21:33.938: INFO: Scaling statefulset ss to 0
  E0327 20:21:34.841009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:35.841281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:36.842278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:37.842389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:38.842891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:39.843285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:40.844462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:41.844778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:42.845247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:43.845986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 03/27/24 20:21:44
  Mar 27 20:21:44.000: INFO: Deleting all statefulset in ns statefulset-3716
  Mar 27 20:21:44.010: INFO: Scaling statefulset ss to 0
  Mar 27 20:21:44.037: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 20:21:44.043: INFO: Deleting statefulset ss
  Mar 27 20:21:44.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3716" for this suite. @ 03/27/24 20:21:44.09
• [73.496 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 03/27/24 20:21:44.112
  Mar 27 20:21:44.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename runtimeclass @ 03/27/24 20:21:44.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:21:44.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:21:44.176
  STEP: Deleting RuntimeClass runtimeclass-334-delete-me @ 03/27/24 20:21:44.193
  STEP: Waiting for the RuntimeClass to disappear @ 03/27/24 20:21:44.214
  Mar 27 20:21:44.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-334" for this suite. @ 03/27/24 20:21:44.256
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 03/27/24 20:21:44.277
  Mar 27 20:21:44.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 20:21:44.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:21:44.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:21:44.342
  STEP: Setting up server cert @ 03/27/24 20:21:44.414
  E0327 20:21:44.846581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:45.847097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 20:21:45.941
  STEP: Deploying the webhook pod @ 03/27/24 20:21:45.967
  STEP: Wait for the deployment to be ready @ 03/27/24 20:21:45.998
  Mar 27 20:21:46.025: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0327 20:21:46.847510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:47.847677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 20:21:48.055
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 20:21:48.095
  E0327 20:21:48.848357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:21:49.097: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 27 20:21:49.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:21:49.849505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:50.849830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:51.850786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:52.850991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:53.851706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8230-crds.webhook.example.com via the AdmissionRegistration API @ 03/27/24 20:21:54.649
  STEP: Creating a custom resource while v1 is storage version @ 03/27/24 20:21:54.695
  E0327 20:21:54.851759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:55.852457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 03/27/24 20:21:56.824
  E0327 20:21:56.853138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching the custom resource while v2 is storage version @ 03/27/24 20:21:56.877
  Mar 27 20:21:56.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9923" for this suite. @ 03/27/24 20:21:57.806
  STEP: Destroying namespace "webhook-markers-3503" for this suite. @ 03/27/24 20:21:57.819
• [13.562 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 03/27/24 20:21:57.841
  Mar 27 20:21:57.841: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename prestop @ 03/27/24 20:21:57.843
  E0327 20:21:57.853154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:21:57.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:21:57.921
  STEP: Creating server pod server in namespace prestop-9621 @ 03/27/24 20:21:57.927
  STEP: Waiting for pods to come up. @ 03/27/24 20:21:57.946
  E0327 20:21:58.853647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:21:59.854244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9621 @ 03/27/24 20:21:59.986
  E0327 20:22:00.854874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:01.855464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 03/27/24 20:22:02.026
  E0327 20:22:02.855607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:03.856169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:04.856813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:05.857070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:06.857657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:22:07.058: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Mar 27 20:22:07.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 03/27/24 20:22:07.07
  STEP: Destroying namespace "prestop-9621" for this suite. @ 03/27/24 20:22:07.099
• [9.279 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 03/27/24 20:22:07.122
  Mar 27 20:22:07.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:22:07.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:22:07.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:22:07.176
  STEP: Creating secret with name secret-test-2b74e866-0a49-404c-a40c-291a948a12bb @ 03/27/24 20:22:07.185
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:22:07.199
  E0327 20:22:07.858008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:08.858278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:09.858558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:10.858872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:22:11.27
  Mar 27 20:22:11.278: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-7e29b2ff-71ff-4bfb-8a1f-a748e3e85417 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:22:11.333
  Mar 27 20:22:11.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8639" for this suite. @ 03/27/24 20:22:11.404
• [4.300 seconds]
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 03/27/24 20:22:11.422
  Mar 27 20:22:11.422: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 20:22:11.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:22:11.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:22:11.483
  STEP: creating the pod @ 03/27/24 20:22:11.495
  STEP: waiting for pod running @ 03/27/24 20:22:11.522
  E0327 20:22:11.858896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:12.859732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 03/27/24 20:22:13.551
  Mar 27 20:22:13.559: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1419 PodName:var-expansion-4a8c6728-fd9b-4ab5-bbbd-04cbf4ef4a43 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:22:13.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:22:13.560: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:22:13.560: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1419/pods/var-expansion-4a8c6728-fd9b-4ab5-bbbd-04cbf4ef4a43/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 03/27/24 20:22:13.746
  Mar 27 20:22:13.765: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1419 PodName:var-expansion-4a8c6728-fd9b-4ab5-bbbd-04cbf4ef4a43 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:22:13.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:22:13.766: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:22:13.766: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1419/pods/var-expansion-4a8c6728-fd9b-4ab5-bbbd-04cbf4ef4a43/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  E0327 20:22:13.860747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the annotation value @ 03/27/24 20:22:13.895
  Mar 27 20:22:14.430: INFO: Successfully updated pod "var-expansion-4a8c6728-fd9b-4ab5-bbbd-04cbf4ef4a43"
  STEP: waiting for annotated pod running @ 03/27/24 20:22:14.43
  STEP: deleting the pod gracefully @ 03/27/24 20:22:14.444
  Mar 27 20:22:14.444: INFO: Deleting pod "var-expansion-4a8c6728-fd9b-4ab5-bbbd-04cbf4ef4a43" in namespace "var-expansion-1419"
  Mar 27 20:22:14.463: INFO: Wait up to 5m0s for pod "var-expansion-4a8c6728-fd9b-4ab5-bbbd-04cbf4ef4a43" to be fully deleted
  E0327 20:22:14.861189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:15.865748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:16.866483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:17.867264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:18.868104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:19.868765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:20.869484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:21.869906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:22.870844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:23.871247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:24.871546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:25.871746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:26.871952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:27.872563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:28.873344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:29.873979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:30.874766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:31.875466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:32.875629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:33.876153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:34.876807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:35.877592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:36.878106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:37.878613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:38.878864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:39.879392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:40.879542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:41.880342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:42.881415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:43.881862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:44.882908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:45.883611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:22:46.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1419" for this suite. @ 03/27/24 20:22:46.737
• [35.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 03/27/24 20:22:46.769
  Mar 27 20:22:46.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 20:22:46.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:22:46.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:22:46.875
  STEP: set up a multi version CRD @ 03/27/24 20:22:46.881
  Mar 27 20:22:46.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:22:46.884048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:47.885062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:48.885945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:49.886996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:50.887213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:51.887970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:52.888724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:53.889050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:54.889295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:55.890306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:56.890589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:57.890843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:58.891685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:22:59.892922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:00.893755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 03/27/24 20:23:01.61
  STEP: check the new version name is served @ 03/27/24 20:23:01.671
  E0327 20:23:01.894471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:02.895016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:03.896032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:04.896153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 03/27/24 20:23:05.27
  E0327 20:23:05.900160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 03/27/24 20:23:06.755
  E0327 20:23:06.900718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:07.901827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:08.902985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:09.903671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:10.904569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:11.906321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:12.906139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:13.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3355" for this suite. @ 03/27/24 20:23:13.772
• [27.018 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 03/27/24 20:23:13.789
  Mar 27 20:23:13.789: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename disruption @ 03/27/24 20:23:13.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:13.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:13.838
  STEP: creating the pdb @ 03/27/24 20:23:13.845
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:23:13.859
  E0327 20:23:13.906272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:14.906628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 03/27/24 20:23:15.875
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:23:15.897
  E0327 20:23:15.906542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:16.907664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:17.907653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 03/27/24 20:23:17.918
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:23:17.94
  E0327 20:23:18.908289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:19.909037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 03/27/24 20:23:19.974
  Mar 27 20:23:19.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3301" for this suite. @ 03/27/24 20:23:20.015
• [6.245 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 03/27/24 20:23:20.038
  Mar 27 20:23:20.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:23:20.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:20.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:20.122
  STEP: Starting the proxy @ 03/27/24 20:23:20.131
  Mar 27 20:23:20.131: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5105 proxy --unix-socket=/tmp/kubectl-proxy-unix2835911070/test'
  STEP: retrieving proxy /api/ output @ 03/27/24 20:23:20.278
  Mar 27 20:23:20.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5105" for this suite. @ 03/27/24 20:23:20.292
• [0.267 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 03/27/24 20:23:20.309
  Mar 27 20:23:20.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 20:23:20.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:20.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:20.413
  Mar 27 20:23:20.422: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:23:20.909096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:21.910379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:22.910417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:23.910973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:24.911330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:25.912421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:26.912598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:27.912897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:28.913176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 03/27/24 20:23:29.675
  Mar 27 20:23:29.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 create -f -'
  E0327 20:23:29.913776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:30.913996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:31.815: INFO: stderr: ""
  Mar 27 20:23:31.815: INFO: stdout: "e2e-test-crd-publish-openapi-6528-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Mar 27 20:23:31.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 delete e2e-test-crd-publish-openapi-6528-crds test-foo'
  E0327 20:23:31.915074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:32.048: INFO: stderr: ""
  Mar 27 20:23:32.048: INFO: stdout: "e2e-test-crd-publish-openapi-6528-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Mar 27 20:23:32.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 apply -f -'
  E0327 20:23:32.915104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:33.823: INFO: stderr: ""
  Mar 27 20:23:33.823: INFO: stdout: "e2e-test-crd-publish-openapi-6528-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Mar 27 20:23:33.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 delete e2e-test-crd-publish-openapi-6528-crds test-foo'
  E0327 20:23:33.916078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:34.009: INFO: stderr: ""
  Mar 27 20:23:34.009: INFO: stdout: "e2e-test-crd-publish-openapi-6528-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 03/27/24 20:23:34.009
  Mar 27 20:23:34.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 create -f -'
  E0327 20:23:34.916155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:35.916305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:35.952: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 03/27/24 20:23:35.952
  Mar 27 20:23:35.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 create -f -'
  Mar 27 20:23:36.544: INFO: rc: 1
  Mar 27 20:23:36.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 apply -f -'
  E0327 20:23:36.917517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:37.028: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 03/27/24 20:23:37.028
  Mar 27 20:23:37.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 create -f -'
  Mar 27 20:23:37.551: INFO: rc: 1
  Mar 27 20:23:37.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 --namespace=crd-publish-openapi-8335 apply -f -'
  E0327 20:23:37.918356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:38.029: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 03/27/24 20:23:38.029
  Mar 27 20:23:38.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 explain e2e-test-crd-publish-openapi-6528-crds'
  Mar 27 20:23:38.519: INFO: stderr: ""
  Mar 27 20:23:38.520: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6528-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 03/27/24 20:23:38.521
  Mar 27 20:23:38.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 explain e2e-test-crd-publish-openapi-6528-crds.metadata'
  E0327 20:23:38.918559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:39.042: INFO: stderr: ""
  Mar 27 20:23:39.042: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6528-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Mar 27 20:23:39.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 explain e2e-test-crd-publish-openapi-6528-crds.spec'
  Mar 27 20:23:39.561: INFO: stderr: ""
  Mar 27 20:23:39.561: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6528-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Mar 27 20:23:39.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 explain e2e-test-crd-publish-openapi-6528-crds.spec.bars'
  E0327 20:23:39.918951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:40.136: INFO: stderr: ""
  Mar 27 20:23:40.136: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6528-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 03/27/24 20:23:40.137
  Mar 27 20:23:40.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=crd-publish-openapi-8335 explain e2e-test-crd-publish-openapi-6528-crds.spec.bars2'
  Mar 27 20:23:40.613: INFO: rc: 1
  E0327 20:23:40.919622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:41.920401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:42.921483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:43.921958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:44.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8335" for this suite. @ 03/27/24 20:23:44.596
• [24.304 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 03/27/24 20:23:44.613
  Mar 27 20:23:44.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename ingressclass @ 03/27/24 20:23:44.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:44.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:44.672
  STEP: getting /apis @ 03/27/24 20:23:44.68
  STEP: getting /apis/networking.k8s.io @ 03/27/24 20:23:44.692
  STEP: getting /apis/networking.k8s.iov1 @ 03/27/24 20:23:44.696
  STEP: creating @ 03/27/24 20:23:44.7
  STEP: getting @ 03/27/24 20:23:44.735
  STEP: listing @ 03/27/24 20:23:44.743
  STEP: watching @ 03/27/24 20:23:44.751
  Mar 27 20:23:44.751: INFO: starting watch
  STEP: patching @ 03/27/24 20:23:44.754
  STEP: updating @ 03/27/24 20:23:44.768
  Mar 27 20:23:44.780: INFO: waiting for watch events with expected annotations
  Mar 27 20:23:44.781: INFO: saw patched and updated annotations
  STEP: deleting @ 03/27/24 20:23:44.782
  STEP: deleting a collection @ 03/27/24 20:23:44.808
  Mar 27 20:23:44.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-117" for this suite. @ 03/27/24 20:23:44.855
• [0.254 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 03/27/24 20:23:44.87
  Mar 27 20:23:44.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/27/24 20:23:44.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:44.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:44.921
  E0327 20:23:44.923024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating two CSIDrivers @ 03/27/24 20:23:44.929
  STEP: Getting "inline-driver-4c8ea25f-1346-4589-a8aa-2f2cc79d0414" & "inline-driver-d07752ee-a018-4ca6-aa64-623667386773" @ 03/27/24 20:23:44.966
  STEP: Patching the CSIDriver "inline-driver-d07752ee-a018-4ca6-aa64-623667386773" @ 03/27/24 20:23:44.98
  STEP: Updating the CSIDriver "inline-driver-d07752ee-a018-4ca6-aa64-623667386773" @ 03/27/24 20:23:44.995
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8852" @ 03/27/24 20:23:45.01
  STEP: Deleting CSIDriver "inline-driver-4c8ea25f-1346-4589-a8aa-2f2cc79d0414" @ 03/27/24 20:23:45.028
  STEP: Confirm deletion of CSIDriver "inline-driver-4c8ea25f-1346-4589-a8aa-2f2cc79d0414" @ 03/27/24 20:23:45.043
  STEP: Deleting CSIDriver "inline-driver-d07752ee-a018-4ca6-aa64-623667386773" via DeleteCollection @ 03/27/24 20:23:45.049
  STEP: Confirm deletion of CSIDriver "inline-driver-d07752ee-a018-4ca6-aa64-623667386773" @ 03/27/24 20:23:45.07
  Mar 27 20:23:45.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8852" for this suite. @ 03/27/24 20:23:45.09
• [0.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 03/27/24 20:23:45.12
  Mar 27 20:23:45.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename deployment @ 03/27/24 20:23:45.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:45.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:45.176
  Mar 27 20:23:45.182: INFO: Creating deployment "test-recreate-deployment"
  Mar 27 20:23:45.194: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Mar 27 20:23:45.214: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0327 20:23:45.922468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:46.923313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:23:47.233: INFO: Waiting deployment "test-recreate-deployment" to complete
  Mar 27 20:23:47.245: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Mar 27 20:23:47.268: INFO: Updating deployment test-recreate-deployment
  Mar 27 20:23:47.268: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Mar 27 20:23:47.507: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9854",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b49f86c1-c075-449f-8432-ca0b1c9e1260",
      ResourceVersion: (string) (len=9) "210787344",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 27 20:23:47.520: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9854",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be051741-30d6-4a50-919f-f780e2e3300e",
      ResourceVersion: (string) (len=9) "210787342",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "b49f86c1-c075-449f-8432-ca0b1c9e1260",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 34 39 66 38 36  63 31 2d 63 30 37 35 2d  |\"b49f86c1-c075-|
              00000120  34 34 39 66 2d 38 34 33  32 2d 63 61 30 62 31 63  |449f-8432-ca0b1c|
              00000130  39 65 31 32 36 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9e1260\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:23:47.522: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Mar 27 20:23:47.523: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9854",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e75e2e20-9f64-46a9-a8f6-feb2c9c6878a",
      ResourceVersion: (string) (len=9) "210787332",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "b49f86c1-c075-449f-8432-ca0b1c9e1260",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 34 39 66 38 36  63 31 2d 63 30 37 35 2d  |\"b49f86c1-c075-|
              00000120  34 34 39 66 2d 38 34 33  32 2d 63 61 30 62 31 63  |449f-8432-ca0b1c|
              00000130  39 65 31 32 36 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9e1260\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:23:47.535: INFO: Pod "test-recreate-deployment-76fb77d45-d7ltx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-d7ltx",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-9854",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca7564a9-96e8-4a28-9f13-c14d00a7c9f9",
      ResourceVersion: (string) (len=9) "210787343",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "be051741-30d6-4a50-919f-f780e2e3300e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 65  30 35 31 37 34 31 2d 33  |d\":\"be051741-3|
              00000090  30 64 36 2d 34 61 35 30  2d 39 31 39 66 2d 66 37  |0d6-4a50-919f-f7|
              000000a0  38 30 65 32 65 33 33 30  30 65 5c 22 7d 22 3a 7b  |80e2e3300e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-57grf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-57grf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 20:23:47.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9854" for this suite. @ 03/27/24 20:23:47.567
• [2.464 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 03/27/24 20:23:47.586
  Mar 27 20:23:47.586: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename deployment @ 03/27/24 20:23:47.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:47.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:47.64
  Mar 27 20:23:47.649: INFO: Creating simple deployment test-new-deployment
  Mar 27 20:23:47.699: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0327 20:23:47.923887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:48.924934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 03/27/24 20:23:49.741
  STEP: updating a scale subresource @ 03/27/24 20:23:49.752
  STEP: verifying the deployment Spec.Replicas was modified @ 03/27/24 20:23:49.774
  STEP: Patch a scale subresource @ 03/27/24 20:23:49.783
  Mar 27 20:23:49.830: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13ee8a7a-d90f-451d-ab86-e167e141307e",
      ResourceVersion: (string) (len=9) "210787378",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 27 20:23:49.847: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3252dce5-e6c2-4af6-96ab-80a1bcc5d412",
      ResourceVersion: (string) (len=9) "210787379",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "13ee8a7a-d90f-451d-ab86-e167e141307e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 33 65 65 38 61  37 61 2d 64 39 30 66 2d  |\"13ee8a7a-d90f-|
              00000120  34 35 31 64 2d 61 62 38  36 2d 65 31 36 37 65 31  |451d-ab86-e167e1|
              00000130  34 31 33 30 37 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |41307e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:23:49.871: INFO: Pod "test-new-deployment-557759b7c7-gtstx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-gtstx",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "310bc07a-6440-4de4-8bab-f7eb5d7d5fa3",
      ResourceVersion: (string) (len=9) "210787372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3252dce5-e6c2-4af6-96ab-80a1bcc5d412",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  35 32 64 63 65 35 2d 65  |d\":\"3252dce5-e|
              00000090  36 63 32 2d 34 61 66 36  2d 39 36 61 62 2d 38 30  |6c2-4af6-96ab-80|
              000000a0  61 31 62 63 63 35 64 34  31 32 5c 22 7d 22 3a 7b  |a1bcc5d412\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 35 33 5c 22 7d  |10.233.69.153\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ts7t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ts7t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847167828,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0bd1a09721e9f3f850bd99a6040cf7723a1dd460e230e9268eed5c61be2fb8e2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 20:23:49.886: INFO: Pod "test-new-deployment-557759b7c7-nbwc5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-nbwc5",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "121c1e7f-fb29-4e56-a65e-882f0a132efe",
      ResourceVersion: (string) (len=9) "210787383",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847167829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3252dce5-e6c2-4af6-96ab-80a1bcc5d412",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  35 32 64 63 65 35 2d 65  |d\":\"3252dce5-e|
              00000090  36 63 32 2d 34 61 66 36  2d 39 36 61 62 2d 38 30  |6c2-4af6-96ab-80|
              000000a0  61 31 62 63 63 35 64 34  31 32 5c 22 7d 22 3a 7b  |a1bcc5d412\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4475x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4475x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847167829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 20:23:49.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6657" for this suite. @ 03/27/24 20:23:49.908
  E0327 20:23:49.925683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.344 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 03/27/24 20:23:49.932
  Mar 27 20:23:49.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 20:23:49.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:50.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:50.049
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 20:23:50.056
  E0327 20:23:50.926102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:51.926376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:52.926621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:53.926708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:23:54.125
  Mar 27 20:23:54.141: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-c3bec83c-bde7-4a1a-9c4d-641f73002827 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 20:23:54.185
  Mar 27 20:23:54.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9799" for this suite. @ 03/27/24 20:23:54.256
• [4.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 03/27/24 20:23:54.275
  Mar 27 20:23:54.275: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename cronjob @ 03/27/24 20:23:54.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:23:54.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:23:54.315
  STEP: Creating a ForbidConcurrent cronjob @ 03/27/24 20:23:54.324
  STEP: Ensuring a job is scheduled @ 03/27/24 20:23:54.338
  E0327 20:23:54.927224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:55.927078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:56.927189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:57.927793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:58.928524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:23:59.928817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 03/27/24 20:24:00.347
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/27/24 20:24:00.369
  STEP: Ensuring no more jobs are scheduled @ 03/27/24 20:24:00.387
  E0327 20:24:00.928876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:01.929424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:02.929640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:03.930201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:04.931300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:05.931322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:06.931741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:07.932186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:08.933345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:09.933824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:10.934801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:11.934984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:12.935784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:13.936400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:14.937276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:15.937290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:16.938282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:17.938536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:18.938831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:19.939071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:20.939386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:21.939950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:22.940185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:23.940663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:24.941550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:25.941688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:26.942051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:27.942731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:28.942649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:29.943119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:30.943259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:31.943852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:32.944031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:33.944561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:34.944626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:35.944846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:36.945941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:37.946589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:38.947593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:39.948236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:40.948375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:41.948997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:42.949110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:43.950567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:44.949806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:45.950213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:46.950886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:47.951355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:48.951589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:49.951805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:50.952922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:51.953610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:52.953709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:53.954523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:54.955280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:55.957666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:56.957788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:57.958917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:58.959023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:24:59.959526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:00.959683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:01.960152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:02.960836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:03.961135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:04.961826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:05.962780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:06.963617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:07.964396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:08.965462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:09.966159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:10.967054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:11.968084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:12.968993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:13.969975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:14.970474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:15.971371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:16.971474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:17.971664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:18.971870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:19.972218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:20.973048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:21.973718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:22.973963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:23.974148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:24.974676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:25.974678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:26.974868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:27.975117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:28.976560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:29.976688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:30.977335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:31.977911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:32.979007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:33.979879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:34.980052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:35.980238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:36.980346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:37.980627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:38.980979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:39.982073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:40.982011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:41.982953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:42.983606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:43.983366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:44.984215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:45.985406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:46.985922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:47.986787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:48.986655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:49.987430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:50.987166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:51.988024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:52.988287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:53.989217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:54.989507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:55.990476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:56.990792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:57.991013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:58.992098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:25:59.992608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:00.992862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:01.993140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:02.993459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:03.993697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:04.994081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:05.994278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:06.994474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:07.994767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:08.995060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:09.995704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:10.996078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:11.996382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:12.996934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:13.997259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:14.997542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:15.998185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:16.998610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:17.999335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:19.000116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:20.000599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:21.000914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:22.001773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:23.001915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:24.002461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:25.002771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:26.003349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:27.003556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:28.003907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:29.004058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:30.004951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:31.005815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:32.006433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:33.007350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:34.007653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:35.007711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:36.007935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:37.008551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:38.009168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:39.009801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:40.010463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:41.010655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:42.012104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:43.012206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:44.012905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:45.013202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:46.014064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:47.014314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:48.014889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:49.015279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:50.015935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:51.016324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:52.016866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:53.017961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:54.018246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:55.018393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:56.019488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:57.020281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:58.021122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:26:59.021544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:00.021870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:01.022947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:02.023280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:03.024205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:04.024619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:05.024735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:06.024878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:07.025138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:08.025999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:09.026495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:10.026602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:11.027636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:12.028150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:13.028613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:14.029513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:15.030495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:16.031402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:17.031459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:18.031709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:19.031877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:20.032142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:21.033447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:22.034031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:23.034361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:24.034844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:25.035771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:26.036091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:27.036560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:28.036839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:29.037947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:30.038509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:31.038744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:32.039012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:33.040153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:34.040995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:35.041187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:36.041493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:37.041912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:38.042877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:39.043092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:40.043272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:41.043596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:42.043829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:43.044041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:44.044907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:45.044781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:46.045058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:47.046218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:48.046624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:49.046703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:50.047512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:51.048599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:52.049223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:53.049743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:54.050025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:55.050095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:56.050320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:57.050611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:58.050837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:27:59.051701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:00.051918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:01.052464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:02.052792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:03.053832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:04.053994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:05.055069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:06.054988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:07.055224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:08.055764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:09.056122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:10.056643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:11.057169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:12.057412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:13.057536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:14.058187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:15.058471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:16.059514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:17.059472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:18.060437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:19.060679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:20.061080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:21.061429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:22.062673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:23.062798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:24.063603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:25.064298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:26.064398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:27.064641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:28.064771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:29.065186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:30.065643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:31.066719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:32.067209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:33.067651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:34.068244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:35.069185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:36.069821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:37.070187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:38.070793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:39.071053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:40.072013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:41.072831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:42.073191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:43.073461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:44.074199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:45.075291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:46.075509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:47.075702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:48.076050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:49.076245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:50.076467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:51.076771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:52.077281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:53.078075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:54.077559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:55.077715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:56.077949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:57.078887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:58.079225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:28:59.079482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:00.079774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 03/27/24 20:29:00.406
  Mar 27 20:29:00.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7413" for this suite. @ 03/27/24 20:29:00.456
• [306.218 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 03/27/24 20:29:00.496
  Mar 27 20:29:00.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 20:29:00.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:00.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:00.597
  E0327 20:29:01.079991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:02.080891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:03.081107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:04.081323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:05.082099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:06.082533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:29:06.752
  Mar 27 20:29:06.770: INFO: Trying to get logs from node env1-test-worker-2 pod client-envvars-34614116-8d8c-4296-a148-3ee1507a3709 container env3cont: <nil>
  STEP: delete the pod @ 03/27/24 20:29:06.834
  Mar 27 20:29:06.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4874" for this suite. @ 03/27/24 20:29:06.923
• [6.449 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 03/27/24 20:29:06.947
  Mar 27 20:29:06.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 20:29:06.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:07.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:07.049
  STEP: creating service nodeport-test with type=NodePort in namespace services-8996 @ 03/27/24 20:29:07.058
  E0327 20:29:07.083348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller nodeport-test in namespace services-8996 @ 03/27/24 20:29:07.104
  I0327 20:29:07.143280      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-8996, replica count: 2
  E0327 20:29:08.083844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:09.084583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:10.085516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 20:29:10.195690      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 20:29:10.195: INFO: Creating new exec pod
  E0327 20:29:11.086634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:12.088174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:13.089249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:13.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-8996 exec execpodfd7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Mar 27 20:29:13.659: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Mar 27 20:29:13.659: INFO: stdout: "nodeport-test-2vnsh"
  Mar 27 20:29:13.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-8996 exec execpodfd7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.1.123 80'
  Mar 27 20:29:13.984: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.1.123 80\nConnection to 10.233.1.123 80 port [tcp/http] succeeded!\n"
  Mar 27 20:29:13.984: INFO: stdout: "nodeport-test-82htb"
  Mar 27 20:29:13.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-8996 exec execpodfd7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 31526'
  E0327 20:29:14.090139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:14.320: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 31526\nConnection to 10.61.1.200 31526 port [tcp/*] succeeded!\n"
  Mar 27 20:29:14.320: INFO: stdout: "nodeport-test-2vnsh"
  Mar 27 20:29:14.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-8996 exec execpodfd7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.201 31526'
  Mar 27 20:29:14.648: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.201 31526\nConnection to 10.61.1.201 31526 port [tcp/*] succeeded!\n"
  Mar 27 20:29:14.648: INFO: stdout: "nodeport-test-2vnsh"
  Mar 27 20:29:14.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8996" for this suite. @ 03/27/24 20:29:14.664
• [7.733 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 03/27/24 20:29:14.694
  Mar 27 20:29:14.694: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/27/24 20:29:14.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:14.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:14.753
  STEP: create the container to handle the HTTPGet hook request. @ 03/27/24 20:29:14.775
  E0327 20:29:15.091365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:16.091475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/27/24 20:29:16.854
  E0327 20:29:17.091880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:18.092636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/27/24 20:29:18.917
  STEP: delete the pod with lifecycle hook @ 03/27/24 20:29:18.97
  E0327 20:29:19.093267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:20.093845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:21.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8236" for this suite. @ 03/27/24 20:29:21.029
• [6.361 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 03/27/24 20:29:21.056
  Mar 27 20:29:21.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename daemonsets @ 03/27/24 20:29:21.06
  E0327 20:29:21.094166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:21.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:21.113
  STEP: Creating simple DaemonSet "daemon-set" @ 03/27/24 20:29:21.213
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/27/24 20:29:21.227
  Mar 27 20:29:21.242: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:21.242: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:21.242: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:21.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:29:21.251: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:29:22.094967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:22.267: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:22.268: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:22.268: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:22.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:29:22.278: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:29:23.095291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:23.264: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:23.265: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:23.265: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:23.275: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:29:23.275: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0327 20:29:24.095663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:24.267: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:24.268: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:24.268: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:29:24.279: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 20:29:24.279: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 03/27/24 20:29:24.291
  STEP: DeleteCollection of the DaemonSets @ 03/27/24 20:29:24.305
  STEP: Verify that ReplicaSets have been deleted @ 03/27/24 20:29:24.344
  Mar 27 20:29:24.400: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210788906"},"items":null}

  Mar 27 20:29:24.428: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210788907"},"items":[{"metadata":{"name":"daemon-set-6h5kj","generateName":"daemon-set-","namespace":"daemonsets-7660","uid":"2d066cc1-0aeb-442e-9cc9-4a28937db557","resourceVersion":"210788887","creationTimestamp":"2024-03-27T20:29:21Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8bd7dd9c-199d-4c75-b52d-4c4ca218bafb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-03-27T20:29:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8bd7dd9c-199d-4c75-b52d-4c4ca218bafb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-03-27T20:29:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.67.33\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-z8bx2","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-z8bx2","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:21Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:22Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:22Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:21Z"}],"hostIP":"10.61.1.200","podIP":"10.233.67.33","podIPs":[{"ip":"10.233.67.33"}],"startTime":"2024-03-27T20:29:21Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-03-27T20:29:22Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8fd63c874c557919ce1f19807d4ecb5b0b9283b6b131a28c8b9014b0df24c726","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-drlkt","generateName":"daemon-set-","namespace":"daemonsets-7660","uid":"87cc9bb3-4a67-4329-afec-84d4458a74e9","resourceVersion":"210788898","creationTimestamp":"2024-03-27T20:29:21Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8bd7dd9c-199d-4c75-b52d-4c4ca218bafb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-03-27T20:29:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8bd7dd9c-199d-4c75-b52d-4c4ca218bafb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-03-27T20:29:23Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.68.232\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-d9rqb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-d9rqb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:21Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:23Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:23Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:21Z"}],"hostIP":"10.61.1.201","podIP":"10.233.68.232","podIPs":[{"ip":"10.233.68.232"}],"startTime":"2024-03-27T20:29:21Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-03-27T20:29:22Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://6b87430b61d5b4c0782b6dfdfd69f0b5c67f96318df78762589445d1c8361b87","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wm5vl","generateName":"daemon-set-","namespace":"daemonsets-7660","uid":"313f933c-719a-41cf-9fd3-deae711b7be0","resourceVersion":"210788896","creationTimestamp":"2024-03-27T20:29:21Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8bd7dd9c-199d-4c75-b52d-4c4ca218bafb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-03-27T20:29:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8bd7dd9c-199d-4c75-b52d-4c4ca218bafb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-03-27T20:29:23Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.69.161\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6pcj6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6pcj6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:21Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:23Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:23Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-27T20:29:21Z"}],"hostIP":"10.61.1.202","podIP":"10.233.69.161","podIPs":[{"ip":"10.233.69.161"}],"startTime":"2024-03-27T20:29:21Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-03-27T20:29:22Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8d84b14daeec47cdbf77f848f3eec5e3581eca51d830e7d4410c56e0ce2882ba","started":true}],"qosClass":"BestEffort"}}]}

  Mar 27 20:29:24.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7660" for this suite. @ 03/27/24 20:29:24.52
• [3.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 03/27/24 20:29:24.55
  Mar 27 20:29:24.550: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:29:24.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:24.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:24.622
  STEP: Creating projection with secret that has name projected-secret-test-map-eed93dd0-daa6-43cd-9097-20bcdcc2cb58 @ 03/27/24 20:29:24.636
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:29:24.651
  E0327 20:29:25.095870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:26.096049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:27.096914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:28.097276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:29:28.729
  Mar 27 20:29:28.752: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-c7f242ce-35ad-44ed-a2ae-ed2911991f6a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:29:28.774
  Mar 27 20:29:28.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6888" for this suite. @ 03/27/24 20:29:28.826
• [4.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 03/27/24 20:29:28.848
  Mar 27 20:29:28.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:29:28.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:28.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:28.901
  STEP: Creating projection with secret that has name projected-secret-test-6bddcd24-6744-4b80-8f28-a36beba4e573 @ 03/27/24 20:29:28.907
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:29:28.918
  E0327 20:29:29.097838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:30.097868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:31.098663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:32.099241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:29:32.976
  Mar 27 20:29:32.985: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-cf9f01c3-1da3-4582-9958-604349dfdc80 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:29:33.003
  Mar 27 20:29:33.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-426" for this suite. @ 03/27/24 20:29:33.085
  E0327 20:29:33.099487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.254 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 03/27/24 20:29:33.103
  Mar 27 20:29:33.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/27/24 20:29:33.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:33.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:33.151
  STEP: fetching the /apis discovery document @ 03/27/24 20:29:33.158
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 03/27/24 20:29:33.162
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 03/27/24 20:29:33.162
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 03/27/24 20:29:33.162
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 03/27/24 20:29:33.165
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 03/27/24 20:29:33.165
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 03/27/24 20:29:33.167
  Mar 27 20:29:33.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2108" for this suite. @ 03/27/24 20:29:33.182
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 03/27/24 20:29:33.203
  Mar 27 20:29:33.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:29:33.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:33.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:33.254
  STEP: creating all guestbook components @ 03/27/24 20:29:33.262
  Mar 27 20:29:33.263: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Mar 27 20:29:33.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 create -f -'
  E0327 20:29:34.099532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:35.099699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:35.740: INFO: stderr: ""
  Mar 27 20:29:35.740: INFO: stdout: "service/agnhost-replica created\n"
  Mar 27 20:29:35.741: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Mar 27 20:29:35.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 create -f -'
  E0327 20:29:36.100930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:37.100798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:37.679: INFO: stderr: ""
  Mar 27 20:29:37.679: INFO: stdout: "service/agnhost-primary created\n"
  Mar 27 20:29:37.679: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Mar 27 20:29:37.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 create -f -'
  E0327 20:29:38.101758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:39.102456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:39.898: INFO: stderr: ""
  Mar 27 20:29:39.898: INFO: stdout: "service/frontend created\n"
  Mar 27 20:29:39.898: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Mar 27 20:29:39.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 create -f -'
  E0327 20:29:40.103566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:40.568: INFO: stderr: ""
  Mar 27 20:29:40.568: INFO: stdout: "deployment.apps/frontend created\n"
  Mar 27 20:29:40.569: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Mar 27 20:29:40.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 create -f -'
  E0327 20:29:41.103717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:41.285: INFO: stderr: ""
  Mar 27 20:29:41.285: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Mar 27 20:29:41.285: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Mar 27 20:29:41.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 create -f -'
  Mar 27 20:29:42.052: INFO: stderr: ""
  Mar 27 20:29:42.052: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 03/27/24 20:29:42.052
  Mar 27 20:29:42.052: INFO: Waiting for all frontend pods to be Running.
  E0327 20:29:42.104582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:43.104866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:44.105192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:45.106179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:46.106326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:47.103: INFO: Waiting for frontend to serve content.
  E0327 20:29:47.106342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:47.130: INFO: Trying to add a new entry to the guestbook.
  Mar 27 20:29:47.159: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 03/27/24 20:29:47.186
  Mar 27 20:29:47.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 delete --grace-period=0 --force -f -'
  Mar 27 20:29:47.431: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 20:29:47.431: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 03/27/24 20:29:47.432
  Mar 27 20:29:47.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 delete --grace-period=0 --force -f -'
  Mar 27 20:29:47.653: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 20:29:47.653: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/27/24 20:29:47.653
  Mar 27 20:29:47.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 delete --grace-period=0 --force -f -'
  Mar 27 20:29:47.910: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 20:29:47.910: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/27/24 20:29:47.91
  Mar 27 20:29:47.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 delete --grace-period=0 --force -f -'
  Mar 27 20:29:48.084: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 20:29:48.084: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/27/24 20:29:48.085
  Mar 27 20:29:48.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 delete --grace-period=0 --force -f -'
  E0327 20:29:48.107095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:48.315: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 20:29:48.315: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/27/24 20:29:48.316
  Mar 27 20:29:48.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-4451 delete --grace-period=0 --force -f -'
  Mar 27 20:29:48.561: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 20:29:48.562: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Mar 27 20:29:48.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4451" for this suite. @ 03/27/24 20:29:48.579
• [15.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 03/27/24 20:29:48.604
  Mar 27 20:29:48.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 20:29:48.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:48.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:48.7
  STEP: Creating the pod @ 03/27/24 20:29:48.706
  E0327 20:29:49.107322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:50.107493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:51.107662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:51.318: INFO: Successfully updated pod "annotationupdatede194d21-fdf1-493b-8a69-24e13e90e3d7"
  E0327 20:29:52.108356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:53.108323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:53.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3819" for this suite. @ 03/27/24 20:29:53.384
• [4.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 03/27/24 20:29:53.402
  Mar 27 20:29:53.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename security-context-test @ 03/27/24 20:29:53.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:53.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:53.475
  E0327 20:29:54.108406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:55.109151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:56.109389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:57.109685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:29:57.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8416" for this suite. @ 03/27/24 20:29:57.559
• [4.180 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 03/27/24 20:29:57.582
  Mar 27 20:29:57.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 20:29:57.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:29:57.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:29:57.646
  STEP: Creating service test in namespace statefulset-8518 @ 03/27/24 20:29:57.656
  STEP: Creating statefulset ss in namespace statefulset-8518 @ 03/27/24 20:29:57.679
  Mar 27 20:29:57.705: INFO: Found 0 stateful pods, waiting for 1
  E0327 20:29:58.110254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:29:59.110333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:00.111023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:01.111917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:02.112314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:03.112706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:04.113216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:05.113761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:06.114998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:07.115326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:07.717: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 03/27/24 20:30:07.735
  STEP: Getting /status @ 03/27/24 20:30:07.766
  Mar 27 20:30:07.789: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 03/27/24 20:30:07.789
  Mar 27 20:30:07.812: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 03/27/24 20:30:07.812
  Mar 27 20:30:07.816: INFO: Observed &StatefulSet event: ADDED
  Mar 27 20:30:07.816: INFO: Found Statefulset ss in namespace statefulset-8518 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 27 20:30:07.816: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 03/27/24 20:30:07.816
  Mar 27 20:30:07.817: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Mar 27 20:30:07.834: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 03/27/24 20:30:07.834
  Mar 27 20:30:07.838: INFO: Observed &StatefulSet event: ADDED
  Mar 27 20:30:07.839: INFO: Deleting all statefulset in ns statefulset-8518
  Mar 27 20:30:07.850: INFO: Scaling statefulset ss to 0
  E0327 20:30:08.116469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:09.117102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:10.117684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:11.117855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:12.118166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:13.118639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:14.119116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:15.119545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:16.120559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:17.120882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:17.902: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 20:30:17.911: INFO: Deleting statefulset ss
  Mar 27 20:30:17.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8518" for this suite. @ 03/27/24 20:30:17.952
• [20.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 03/27/24 20:30:17.995
  Mar 27 20:30:17.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:30:17.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:30:18.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:30:18.051
  STEP: Creating secret with name secret-test-94f58d2d-92a4-4187-acff-2aa45af5aff4 @ 03/27/24 20:30:18.057
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:30:18.065
  E0327 20:30:18.121616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:19.121876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:20.122815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:21.122989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:30:22.111
  Mar 27 20:30:22.120: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-b52c4295-4e49-4dff-80bf-f4caade957a3 container secret-env-test: <nil>
  E0327 20:30:22.123117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/27/24 20:30:22.136
  Mar 27 20:30:22.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8231" for this suite. @ 03/27/24 20:30:22.181
• [4.204 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 03/27/24 20:30:22.2
  Mar 27 20:30:22.200: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename events @ 03/27/24 20:30:22.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:30:22.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:30:22.246
  STEP: Create set of events @ 03/27/24 20:30:22.251
  Mar 27 20:30:22.263: INFO: created test-event-1
  Mar 27 20:30:22.273: INFO: created test-event-2
  Mar 27 20:30:22.281: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 03/27/24 20:30:22.281
  STEP: delete collection of events @ 03/27/24 20:30:22.289
  Mar 27 20:30:22.289: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 03/27/24 20:30:22.37
  Mar 27 20:30:22.370: INFO: requesting list of events to confirm quantity
  Mar 27 20:30:22.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9546" for this suite. @ 03/27/24 20:30:22.389
• [0.204 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 03/27/24 20:30:22.404
  Mar 27 20:30:22.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 20:30:22.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:30:22.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:30:22.444
  STEP: Setting up server cert @ 03/27/24 20:30:22.511
  E0327 20:30:23.123293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 20:30:23.895
  STEP: Deploying the webhook pod @ 03/27/24 20:30:23.926
  STEP: Wait for the deployment to be ready @ 03/27/24 20:30:23.968
  Mar 27 20:30:24.034: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 20:30:24.125635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:25.126754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:26.058: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:30:26.127168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:27.127506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:28.068: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:30:28.128549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:29.128997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:30.066: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:30:30.129405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:31.129767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:32.068: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:30:32.130722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:33.130889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:34.066: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:30:34.132131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:35.132690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 20:30:36.067
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 20:30:36.094
  E0327 20:30:36.133802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:37.094: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0327 20:30:37.134821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 03/27/24 20:30:37.277
  STEP: Creating a configMap that should be mutated @ 03/27/24 20:30:37.314
  STEP: Deleting the collection of validation webhooks @ 03/27/24 20:30:37.388
  STEP: Creating a configMap that should not be mutated @ 03/27/24 20:30:37.551
  Mar 27 20:30:37.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8641" for this suite. @ 03/27/24 20:30:37.808
  STEP: Destroying namespace "webhook-markers-9350" for this suite. @ 03/27/24 20:30:37.833
• [15.451 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 03/27/24 20:30:37.857
  Mar 27 20:30:37.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename limitrange @ 03/27/24 20:30:37.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:30:37.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:30:37.921
  STEP: Creating a LimitRange @ 03/27/24 20:30:37.93
  STEP: Setting up watch @ 03/27/24 20:30:37.931
  STEP: Submitting a LimitRange @ 03/27/24 20:30:38.042
  STEP: Verifying LimitRange creation was observed @ 03/27/24 20:30:38.06
  STEP: Fetching the LimitRange to ensure it has proper values @ 03/27/24 20:30:38.062
  Mar 27 20:30:38.077: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Mar 27 20:30:38.078: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 03/27/24 20:30:38.078
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 03/27/24 20:30:38.098
  Mar 27 20:30:38.116: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Mar 27 20:30:38.116: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 03/27/24 20:30:38.116
  E0327 20:30:38.138038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 03/27/24 20:30:38.138
  Mar 27 20:30:38.149: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Mar 27 20:30:38.150: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 03/27/24 20:30:38.15
  STEP: Failing to create a Pod with more than max resources @ 03/27/24 20:30:38.159
  STEP: Updating a LimitRange @ 03/27/24 20:30:38.166
  STEP: Verifying LimitRange updating is effective @ 03/27/24 20:30:38.186
  E0327 20:30:39.139189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:40.139478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 03/27/24 20:30:40.198
  STEP: Failing to create a Pod with more than max resources @ 03/27/24 20:30:40.212
  STEP: Deleting a LimitRange @ 03/27/24 20:30:40.22
  STEP: Verifying the LimitRange was deleted @ 03/27/24 20:30:40.25
  E0327 20:30:41.139856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:42.140337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:43.140562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:44.140648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:45.141821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:45.260: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 03/27/24 20:30:45.26
  Mar 27 20:30:45.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5763" for this suite. @ 03/27/24 20:30:45.303
• [7.462 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 03/27/24 20:30:45.319
  Mar 27 20:30:45.319: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 20:30:45.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:30:45.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:30:45.383
  STEP: Creating a pod to test substitution in volume subpath @ 03/27/24 20:30:45.39
  E0327 20:30:46.142316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:47.142359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:48.142764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:49.143351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:30:49.462
  Mar 27 20:30:49.479: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-0ea99baf-6643-4531-887e-d4e73cb441de container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 20:30:49.494
  Mar 27 20:30:49.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9558" for this suite. @ 03/27/24 20:30:49.552
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 03/27/24 20:30:49.584
  Mar 27 20:30:49.584: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename watch @ 03/27/24 20:30:49.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:30:49.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:30:49.637
  STEP: creating a watch on configmaps @ 03/27/24 20:30:49.646
  STEP: creating a new configmap @ 03/27/24 20:30:49.649
  STEP: modifying the configmap once @ 03/27/24 20:30:49.663
  STEP: closing the watch once it receives two notifications @ 03/27/24 20:30:49.687
  Mar 27 20:30:49.687: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5880  5c79807c-834c-4a29-9be8-702659e507b6 210789841 0 2024-03-27 20:30:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-27 20:30:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 20:30:49.688: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5880  5c79807c-834c-4a29-9be8-702659e507b6 210789842 0 2024-03-27 20:30:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-27 20:30:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 03/27/24 20:30:49.688
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 03/27/24 20:30:49.709
  STEP: deleting the configmap @ 03/27/24 20:30:49.712
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 03/27/24 20:30:49.727
  Mar 27 20:30:49.727: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5880  5c79807c-834c-4a29-9be8-702659e507b6 210789843 0 2024-03-27 20:30:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-27 20:30:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 20:30:49.728: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5880  5c79807c-834c-4a29-9be8-702659e507b6 210789844 0 2024-03-27 20:30:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-27 20:30:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 27 20:30:49.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5880" for this suite. @ 03/27/24 20:30:49.744
• [0.177 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 03/27/24 20:30:49.765
  Mar 27 20:30:49.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename gc @ 03/27/24 20:30:49.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:30:49.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:30:49.819
  STEP: create the rc @ 03/27/24 20:30:49.846
  W0327 20:30:49.857310      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0327 20:30:50.143222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:51.143542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:52.143472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:53.144532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:54.149920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:30:55.150842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/27/24 20:30:55.878
  STEP: wait for the rc to be deleted @ 03/27/24 20:30:55.897
  E0327 20:30:56.152762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:57.021: INFO: 81 pods remaining
  Mar 27 20:30:57.021: INFO: 81 pods has nil DeletionTimestamp
  Mar 27 20:30:57.021: INFO: 
  E0327 20:30:57.152985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:57.947: INFO: 70 pods remaining
  Mar 27 20:30:57.947: INFO: 70 pods has nil DeletionTimestamp
  Mar 27 20:30:57.947: INFO: 
  E0327 20:30:58.153613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:58.931: INFO: 60 pods remaining
  Mar 27 20:30:58.931: INFO: 60 pods has nil DeletionTimestamp
  Mar 27 20:30:58.931: INFO: 
  E0327 20:30:59.154606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:30:59.928: INFO: 41 pods remaining
  Mar 27 20:30:59.928: INFO: 40 pods has nil DeletionTimestamp
  Mar 27 20:30:59.928: INFO: 
  E0327 20:31:00.155585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:00.918: INFO: 31 pods remaining
  Mar 27 20:31:00.918: INFO: 31 pods has nil DeletionTimestamp
  Mar 27 20:31:00.918: INFO: 
  E0327 20:31:01.155918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:01.915: INFO: 20 pods remaining
  Mar 27 20:31:01.916: INFO: 20 pods has nil DeletionTimestamp
  Mar 27 20:31:01.916: INFO: 
  E0327 20:31:02.156099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/27/24 20:31:02.908
  Mar 27 20:31:03.089: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 27 20:31:03.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7008" for this suite. @ 03/27/24 20:31:03.099
• [13.346 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 03/27/24 20:31:03.111
  Mar 27 20:31:03.111: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 20:31:03.113
  E0327 20:31:03.156277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:03.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:03.167
  STEP: Create a pod @ 03/27/24 20:31:03.174
  E0327 20:31:04.156553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:05.156802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 03/27/24 20:31:05.21
  Mar 27 20:31:05.227: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Mar 27 20:31:05.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9797" for this suite. @ 03/27/24 20:31:05.249
• [2.152 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 03/27/24 20:31:05.265
  Mar 27 20:31:05.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 20:31:05.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:05.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:05.316
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 20:31:05.322
  E0327 20:31:06.157241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:07.157971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:08.158873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:09.160325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:31:09.395
  Mar 27 20:31:09.406: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-6f2fa6b0-2865-4871-be95-72892d5b2fdb container client-container: <nil>
  STEP: delete the pod @ 03/27/24 20:31:09.43
  Mar 27 20:31:09.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9384" for this suite. @ 03/27/24 20:31:09.496
• [4.267 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 03/27/24 20:31:09.535
  Mar 27 20:31:09.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 20:31:09.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:09.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:09.608
  STEP: Counting existing ResourceQuota @ 03/27/24 20:31:09.616
  E0327 20:31:10.160464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:11.160579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:12.160834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:13.161721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:14.162284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/27/24 20:31:14.628
  STEP: Ensuring resource quota status is calculated @ 03/27/24 20:31:14.639
  E0327 20:31:15.163001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:16.163043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 03/27/24 20:31:16.65
  STEP: Ensuring ResourceQuota status captures the pod usage @ 03/27/24 20:31:16.72
  E0327 20:31:17.164185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:18.164501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 03/27/24 20:31:18.734
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 03/27/24 20:31:18.74
  STEP: Ensuring a pod cannot update its resource requirements @ 03/27/24 20:31:18.746
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 03/27/24 20:31:18.761
  E0327 20:31:19.165548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:20.166036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/27/24 20:31:20.773
  STEP: Ensuring resource quota status released the pod usage @ 03/27/24 20:31:20.796
  E0327 20:31:21.166725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:22.167338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:22.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7764" for this suite. @ 03/27/24 20:31:22.82
• [13.305 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 03/27/24 20:31:22.84
  Mar 27 20:31:22.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 20:31:22.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:22.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:22.896
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/27/24 20:31:22.905
  E0327 20:31:23.167631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:24.168420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:25.168651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:26.169231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:31:26.957
  Mar 27 20:31:26.966: INFO: Trying to get logs from node env1-test-worker-2 pod pod-6f0c2383-c118-4095-aa3b-33f77f2c4059 container test-container: <nil>
  STEP: delete the pod @ 03/27/24 20:31:26.984
  Mar 27 20:31:27.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3838" for this suite. @ 03/27/24 20:31:27.042
• [4.218 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 03/27/24 20:31:27.062
  Mar 27 20:31:27.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:31:27.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:27.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:27.115
  STEP: validating cluster-info @ 03/27/24 20:31:27.123
  Mar 27 20:31:27.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-149 cluster-info'
  E0327 20:31:27.169870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:27.334: INFO: stderr: ""
  Mar 27 20:31:27.334: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Mar 27 20:31:27.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-149" for this suite. @ 03/27/24 20:31:27.348
• [0.298 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 03/27/24 20:31:27.361
  Mar 27 20:31:27.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:31:27.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:27.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:27.455
  Mar 27 20:31:27.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5217 create -f -'
  Mar 27 20:31:28.136: INFO: stderr: ""
  Mar 27 20:31:28.136: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Mar 27 20:31:28.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5217 create -f -'
  E0327 20:31:28.170353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:28.755: INFO: stderr: ""
  Mar 27 20:31:28.755: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/27/24 20:31:28.755
  E0327 20:31:29.171111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:29.765: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 20:31:29.765: INFO: Found 1 / 1
  Mar 27 20:31:29.765: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Mar 27 20:31:29.772: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 20:31:29.772: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 27 20:31:29.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5217 describe pod agnhost-primary-l4sk2'
  Mar 27 20:31:29.965: INFO: stderr: ""
  Mar 27 20:31:29.966: INFO: stdout: "Name:             agnhost-primary-l4sk2\nNamespace:        kubectl-5217\nPriority:         0\nService Account:  default\nNode:             env1-test-worker-2/10.61.1.202\nStart Time:       Wed, 27 Mar 2024 20:31:28 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.69.210\nIPs:\n  IP:           10.233.69.210\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://1de3816f07f91672f11833cbcfa7b26f487e77479ef91cbe6f934b10a63e012f\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 27 Mar 2024 20:31:29 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-kws6p (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-kws6p:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-5217/agnhost-primary-l4sk2 to env1-test-worker-2\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  Mar 27 20:31:29.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5217 describe rc agnhost-primary'
  Mar 27 20:31:30.159: INFO: stderr: ""
  Mar 27 20:31:30.160: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5217\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-l4sk2\n"
  Mar 27 20:31:30.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5217 describe service agnhost-primary'
  E0327 20:31:30.171745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:30.325: INFO: stderr: ""
  Mar 27 20:31:30.325: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5217\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.43.246\nIPs:               10.233.43.246\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.69.210:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Mar 27 20:31:30.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5217 describe node env1-test-master-0'
  Mar 27 20:31:30.608: INFO: stderr: ""
  Mar 27 20:31:30.608: INFO: stdout: "Name:               env1-test-master-0\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=vsphere-vm.cpu-2.mem-7gb.os-ubuntu\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=env1-test-master-0\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\n                    node.kubernetes.io/instance-type=vsphere-vm.cpu-2.mem-7gb.os-ubuntu\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 10.61.1.197\n                    csi.volume.kubernetes.io/nodeid: {\"csi.vsphere.vmware.com\":\"42086e21-1067-e398-4609-6a5784f3d5d6\"}\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":4096,\"VtepMAC\":\"26:d1:5d:16:e7:71\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 10.61.1.197\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 30 Mar 2022 13:31:56 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  env1-test-master-0\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 27 Mar 2024 20:31:28 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 09 Jan 2024 16:25:58 +0000   Tue, 09 Jan 2024 16:25:58 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Wed, 27 Mar 2024 20:31:21 +0000   Mon, 26 Feb 2024 17:13:26 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 27 Mar 2024 20:31:21 +0000   Mon, 26 Feb 2024 17:13:26 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 27 Mar 2024 20:31:21 +0000   Mon, 26 Feb 2024 17:13:26 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 27 Mar 2024 20:31:21 +0000   Tue, 05 Mar 2024 18:33:06 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  Hostname:    env1-test-master-0\n  InternalIP:  10.61.1.197\n  ExternalIP:  10.61.1.197\nCapacity:\n  cpu:                2\n  ephemeral-storage:  60795672Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8054876Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  56029291223\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7952476Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 4284f3e04f9c47a4b59e54ce697ed9a6\n  System UUID:                42086e21-1067-e398-4609-6a5784f3d5d6\n  Boot ID:                    24165872-ba8d-4771-a127-74ef58934caf\n  Kernel Version:             5.4.0-67-generic\n  OS Image:                   Ubuntu 20.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.13\n  Kubelet Version:            v1.28.6\n  Kube-Proxy Version:         v1.28.6\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nProviderID:                   vsphere://42086e21-1067-e398-4609-6a5784f3d5d6\nNon-terminated Pods:          (14 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  filebeat                    filebeat-filebeat-sksgw                                    200m (10%)    1 (50%)     200Mi (2%)       1000Mi (12%)   6h35m\n  kube-system                 coredns-95d7f9467-p7bp9                                    100m (5%)     0 (0%)      70Mi (0%)        300Mi (3%)     30d\n  kube-system                 dns-autoscaler-57dd6f8494-r5w5d                            20m (1%)      0 (0%)      10Mi (0%)        0 (0%)         30d\n  kube-system                 kube-apiserver-env1-test-master-0                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         30d\n  kube-system                 kube-controller-manager-env1-test-master-0                 200m (10%)    0 (0%)      0 (0%)           0 (0%)         30d\n  kube-system                 kube-flannel-pxzh2                                         150m (7%)     300m (15%)  64M (0%)         500M (6%)      78d\n  kube-system                 kube-proxy-vsh82                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h17m\n  kube-system                 kube-scheduler-env1-test-master-0                          100m (5%)     0 (0%)      0 (0%)           0 (0%)         30d\n  kube-system                 nodelocaldns-djlnb                                         100m (5%)     0 (0%)      70Mi (0%)        200Mi (2%)     30d\n  kube-system                 vsphere-cloud-controller-manager-6b25h                     200m (10%)    0 (0%)      0 (0%)           0 (0%)         30d\n  kube-system                 vsphere-csi-controller-798cd9cc56-gbn9t                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h8m\n  kube-system                 vsphere-csi-node-xphzj                                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h8m\n  prometheus                  prometheus-prometheus-node-exporter-5brzj                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         20d\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-hmc7j    0 (0%)        0 (0%)      0 (0%)           0 (0%)         73m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests       Limits\n  --------           --------       ------\n  cpu                1320m (66%)    1300m (65%)\n  memory             420900Ki (5%)  2072864000 (25%)\n  ephemeral-storage  0 (0%)         0 (0%)\n  hugepages-1Gi      0 (0%)         0 (0%)\n  hugepages-2Mi      0 (0%)         0 (0%)\nEvents:              <none>\n"
  Mar 27 20:31:30.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5217 describe namespace kubectl-5217'
  Mar 27 20:31:30.797: INFO: stderr: ""
  Mar 27 20:31:30.797: INFO: stdout: "Name:         kubectl-5217\nLabels:       e2e-framework=kubectl\n              e2e-run=0467a516-72b3-4db0-a236-cc970def17f2\n              kubernetes.io/metadata.name=kubectl-5217\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Mar 27 20:31:30.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5217" for this suite. @ 03/27/24 20:31:30.811
• [3.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 03/27/24 20:31:30.836
  Mar 27 20:31:30.836: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 20:31:30.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:30.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:30.881
  Mar 27 20:31:30.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: creating the pod @ 03/27/24 20:31:30.888
  STEP: submitting the pod to kubernetes @ 03/27/24 20:31:30.888
  E0327 20:31:31.172573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:32.173326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:33.173817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:33.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5273" for this suite. @ 03/27/24 20:31:33.218
• [2.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 03/27/24 20:31:33.266
  Mar 27 20:31:33.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubelet-test @ 03/27/24 20:31:33.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:33.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:33.337
  STEP: Waiting for pod completion @ 03/27/24 20:31:33.41
  E0327 20:31:34.174586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:35.174691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:36.175053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:37.175417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:31:37.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6412" for this suite. @ 03/27/24 20:31:37.489
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 03/27/24 20:31:37.505
  Mar 27 20:31:37.505: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename gc @ 03/27/24 20:31:37.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:37.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:37.561
  STEP: create the deployment @ 03/27/24 20:31:37.57
  W0327 20:31:37.584363      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/27/24 20:31:37.585
  STEP: delete the deployment @ 03/27/24 20:31:38.109
  STEP: wait for all rs to be garbage collected @ 03/27/24 20:31:38.126
  STEP: expected 0 pods, got 2 pods @ 03/27/24 20:31:38.139
  E0327 20:31:38.175921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/27/24 20:31:38.689
  Mar 27 20:31:38.891: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 27 20:31:38.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3994" for this suite. @ 03/27/24 20:31:38.907
• [1.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 03/27/24 20:31:38.937
  Mar 27 20:31:38.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename subpath @ 03/27/24 20:31:38.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:31:38.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:31:38.988
  STEP: Setting up data @ 03/27/24 20:31:38.994
  STEP: Creating pod pod-subpath-test-configmap-k9cp @ 03/27/24 20:31:39.023
  STEP: Creating a pod to test atomic-volume-subpath @ 03/27/24 20:31:39.023
  E0327 20:31:39.176936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:40.177986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:41.178950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:42.179133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:43.179209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:44.180254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:45.180262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:46.180581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:47.181048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:48.182128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:49.183025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:50.184375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:51.185001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:52.185748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:53.186824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:54.187249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:55.188327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:56.189234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:57.190158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:58.190716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:31:59.191514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:00.191737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:01.193035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:02.193052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:32:03.19
  E0327 20:32:03.193742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:32:03.198: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-configmap-k9cp container test-container-subpath-configmap-k9cp: <nil>
  STEP: delete the pod @ 03/27/24 20:32:03.223
  STEP: Deleting pod pod-subpath-test-configmap-k9cp @ 03/27/24 20:32:03.268
  Mar 27 20:32:03.268: INFO: Deleting pod "pod-subpath-test-configmap-k9cp" in namespace "subpath-3526"
  Mar 27 20:32:03.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3526" for this suite. @ 03/27/24 20:32:03.294
• [24.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 03/27/24 20:32:03.317
  Mar 27 20:32:03.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 20:32:03.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:32:03.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:32:03.366
  E0327 20:32:04.194253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:05.194591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:06.195412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:07.195459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:08.196420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:09.197005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:10.197234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:11.197701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:12.197972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:13.197974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:14.198243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:15.198786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:16.199156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:17.199721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:18.200609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:19.201105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:20.201872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 03/27/24 20:32:20.379
  E0327 20:32:21.202937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:22.203104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:23.203760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:24.204923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:25.205182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/27/24 20:32:25.388
  STEP: Ensuring resource quota status is calculated @ 03/27/24 20:32:25.403
  E0327 20:32:26.205593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:27.206690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 03/27/24 20:32:27.412
  STEP: Ensuring resource quota status captures configMap creation @ 03/27/24 20:32:27.434
  E0327 20:32:28.207452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:29.208289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 03/27/24 20:32:29.445
  STEP: Ensuring resource quota status released usage @ 03/27/24 20:32:29.459
  E0327 20:32:30.209859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:31.210527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:32:31.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5436" for this suite. @ 03/27/24 20:32:31.484
• [28.182 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 03/27/24 20:32:31.502
  Mar 27 20:32:31.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:32:31.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:32:31.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:32:31.553
  Mar 27 20:32:31.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5228" for this suite. @ 03/27/24 20:32:31.692
• [0.207 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 03/27/24 20:32:31.713
  Mar 27 20:32:31.713: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svcaccounts @ 03/27/24 20:32:31.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:32:31.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:32:31.768
  STEP: Creating ServiceAccount "e2e-sa-gw885"  @ 03/27/24 20:32:31.773
  Mar 27 20:32:31.795: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-gw885"  @ 03/27/24 20:32:31.795
  Mar 27 20:32:31.822: INFO: AutomountServiceAccountToken: true
  Mar 27 20:32:31.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1575" for this suite. @ 03/27/24 20:32:31.838
• [0.145 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 03/27/24 20:32:31.859
  Mar 27 20:32:31.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename endpointslice @ 03/27/24 20:32:31.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:32:31.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:32:31.971
  Mar 27 20:32:32.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9090" for this suite. @ 03/27/24 20:32:32.189
• [0.350 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 03/27/24 20:32:32.211
  Mar 27 20:32:32.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:32:32.213778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename deployment @ 03/27/24 20:32:32.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:32:32.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:32:32.27
  Mar 27 20:32:32.278: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Mar 27 20:32:32.301: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0327 20:32:33.214617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:34.214899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:35.215513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:36.215667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:37.215929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:32:37.318: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/27/24 20:32:37.318
  Mar 27 20:32:37.318: INFO: Creating deployment "test-rolling-update-deployment"
  Mar 27 20:32:37.331: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Mar 27 20:32:37.381: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0327 20:32:38.216133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:39.217045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:32:39.401: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Mar 27 20:32:39.410: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Mar 27 20:32:39.438: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4142",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4dac955-13de-4424-98cc-bf0ba2588f2e",
      ResourceVersion: (string) (len=9) "210792402",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847168357,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 27 20:32:39.472: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4142",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d44a96a3-9ad0-4aad-b775-a79b5bb7727f",
      ResourceVersion: (string) (len=9) "210792388",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847168357,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a4dac955-13de-4424-98cc-bf0ba2588f2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 34 64 61 63 39  35 35 2d 31 33 64 65 2d  |\"a4dac955-13de-|
              00000120  34 34 32 34 2d 39 38 63  63 2d 62 66 30 62 61 32  |4424-98cc-bf0ba2|
              00000130  35 38 38 66 32 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |588f2e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:32:39.476: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Mar 27 20:32:39.477: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4142",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90b73d8c-a995-4c86-a6d3-29cbf5431714",
      ResourceVersion: (string) (len=9) "210792400",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847168352,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a4dac955-13de-4424-98cc-bf0ba2588f2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 34 64 61 63 39 35  |"uid\":\"a4dac95|
              000000b0  35 2d 31 33 64 65 2d 34  34 32 34 2d 39 38 63 63  |5-13de-4424-98cc|
              000000c0  2d 62 66 30 62 61 32 35  38 38 66 32 65 5c 22 7d  |-bf0ba2588f2e\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:32:39.491: INFO: Pod "test-rolling-update-deployment-7f5c55c64-lmfvc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-lmfvc",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-4142",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "139d6fcb-bcf4-4b5a-b9bc-4a76cf419d38",
      ResourceVersion: (string) (len=9) "210792387",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847168357,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "d44a96a3-9ad0-4aad-b775-a79b5bb7727f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  34 61 39 36 61 33 2d 39  |d\":\"d44a96a3-9|
              00000090  61 64 30 2d 34 61 61 64  2d 62 37 37 35 2d 61 37  |ad0-4aad-b775-a7|
              000000a0  39 62 35 62 62 37 37 32  37 66 5c 22 7d 22 3a 7b  |9b5bb7727f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 32 31 36 5c 22 7d  |10.233.69.216\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2vpx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2vpx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847168357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847168357,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847168358,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://99fc90e62f11f52d6b148ffa2dbc2a7b80231f2a34b4c0e2ea52bf5b2977709e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 20:32:39.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4142" for this suite. @ 03/27/24 20:32:39.517
• [7.335 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 03/27/24 20:32:39.548
  Mar 27 20:32:39.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:32:39.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:32:39.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:32:39.616
  STEP: Creating secret with name secret-test-f5172abe-3a74-4dbf-805d-3e2b8bd8e927 @ 03/27/24 20:32:39.621
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:32:39.634
  E0327 20:32:40.217212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:41.217468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:42.217864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:43.217970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:32:43.692
  Mar 27 20:32:43.700: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-66528424-f5c3-46e1-a719-609a174d2a40 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:32:43.718
  Mar 27 20:32:43.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8621" for this suite. @ 03/27/24 20:32:43.778
• [4.256 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 03/27/24 20:32:43.805
  Mar 27 20:32:43.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 20:32:43.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:32:43.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:32:43.853
  STEP: Creating service test in namespace statefulset-9206 @ 03/27/24 20:32:43.859
  Mar 27 20:32:43.907: INFO: Found 0 stateful pods, waiting for 1
  E0327 20:32:44.218430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:45.219192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:46.219622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:47.220257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:48.220776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:49.221774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:50.222816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:51.223620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:52.223699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:53.224074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:32:53.920: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 03/27/24 20:32:53.936
  W0327 20:32:53.955141      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Mar 27 20:32:53.973: INFO: Found 1 stateful pods, waiting for 2
  E0327 20:32:54.224867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:55.225129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:56.225248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:57.225710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:58.225886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:32:59.227063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:00.227225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:01.227841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:02.228097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:03.228679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:33:03.983: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:33:03.983: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 03/27/24 20:33:04.016
  STEP: Delete all of the StatefulSets @ 03/27/24 20:33:04.027
  STEP: Verify that StatefulSets have been deleted @ 03/27/24 20:33:04.056
  Mar 27 20:33:04.063: INFO: Deleting all statefulset in ns statefulset-9206
  Mar 27 20:33:04.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 20:33:04.229470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "statefulset-9206" for this suite. @ 03/27/24 20:33:04.248
• [20.473 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 03/27/24 20:33:04.29
  Mar 27 20:33:04.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename server-version @ 03/27/24 20:33:04.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:33:04.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:33:04.385
  STEP: Request ServerVersion @ 03/27/24 20:33:04.396
  STEP: Confirm major version @ 03/27/24 20:33:04.399
  Mar 27 20:33:04.399: INFO: Major version: 1
  STEP: Confirm minor version @ 03/27/24 20:33:04.4
  Mar 27 20:33:04.400: INFO: cleanMinorVersion: 28
  Mar 27 20:33:04.400: INFO: Minor version: 28
  Mar 27 20:33:04.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-290" for this suite. @ 03/27/24 20:33:04.414
• [0.143 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 03/27/24 20:33:04.434
  Mar 27 20:33:04.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 20:33:04.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:33:04.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:33:04.521
  STEP: creating the pod @ 03/27/24 20:33:04.529
  STEP: submitting the pod to kubernetes @ 03/27/24 20:33:04.529
  STEP: verifying QOS class is set on the pod @ 03/27/24 20:33:04.545
  Mar 27 20:33:04.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9749" for this suite. @ 03/27/24 20:33:04.559
• [0.137 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 03/27/24 20:33:04.576
  Mar 27 20:33:04.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 20:33:04.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:33:04.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:33:04.683
  STEP: Setting up server cert @ 03/27/24 20:33:04.744
  E0327 20:33:05.230258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:06.230623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 20:33:06.819
  STEP: Deploying the webhook pod @ 03/27/24 20:33:06.843
  STEP: Wait for the deployment to be ready @ 03/27/24 20:33:06.894
  Mar 27 20:33:06.917: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0327 20:33:07.231307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:08.232136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 20:33:08.947
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 20:33:08.989
  E0327 20:33:09.232706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:33:09.990: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 03/27/24 20:33:10.229
  E0327 20:33:10.233426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/27/24 20:33:10.393
  STEP: Deleting the collection of validation webhooks @ 03/27/24 20:33:10.504
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/27/24 20:33:10.858
  Mar 27 20:33:10.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7812" for this suite. @ 03/27/24 20:33:11.151
  STEP: Destroying namespace "webhook-markers-615" for this suite. @ 03/27/24 20:33:11.206
  E0327 20:33:11.237587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [6.705 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 03/27/24 20:33:11.282
  Mar 27 20:33:11.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-watch @ 03/27/24 20:33:11.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:33:11.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:33:11.408
  Mar 27 20:33:11.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:33:12.238512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:13.239716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:14.240734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:15.241808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:16.243035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:17.243779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:18.244153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 03/27/24 20:33:19.06
  Mar 27 20:33:19.072: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-27T20:33:19Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-27T20:33:19Z]] name:name1 resourceVersion:210792850 uid:087f1ae3-543d-401c-848f-ceff11608d6d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0327 20:33:19.245344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:20.245869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:21.246694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:22.247368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:23.247604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:24.248831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:25.249710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:26.250098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:27.250583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:28.251137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 03/27/24 20:33:29.074
  Mar 27 20:33:29.087: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-27T20:33:29Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-27T20:33:29Z]] name:name2 resourceVersion:210792887 uid:6a2d3f2c-9b79-4200-bfc1-7a747ed872f2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0327 20:33:29.251395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:30.251755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:31.252308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:32.252767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:33.253115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:34.253494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:35.253557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:36.253873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:37.254875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:38.255125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 03/27/24 20:33:39.087
  Mar 27 20:33:39.106: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-27T20:33:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-27T20:33:39Z]] name:name1 resourceVersion:210792925 uid:087f1ae3-543d-401c-848f-ceff11608d6d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0327 20:33:39.256187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:40.256151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:41.256876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:42.257028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:43.257684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:44.258401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:45.258540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:46.259374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:47.259572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:48.260510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 03/27/24 20:33:49.107
  Mar 27 20:33:49.125: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-27T20:33:29Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-27T20:33:49Z]] name:name2 resourceVersion:210792959 uid:6a2d3f2c-9b79-4200-bfc1-7a747ed872f2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0327 20:33:49.261517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:50.262173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:51.262875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:52.263278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:53.263858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:54.264246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:55.265475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:56.265871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:57.266360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:33:58.266877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 03/27/24 20:33:59.126
  Mar 27 20:33:59.149: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-27T20:33:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-27T20:33:39Z]] name:name1 resourceVersion:210792996 uid:087f1ae3-543d-401c-848f-ceff11608d6d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0327 20:33:59.266941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:00.267971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:01.268191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:02.268615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:03.269424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:04.269920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:05.270803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:06.271219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:07.272747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:08.273053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 03/27/24 20:34:09.15
  Mar 27 20:34:09.168: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-27T20:33:29Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-27T20:33:49Z]] name:name2 resourceVersion:210793034 uid:6a2d3f2c-9b79-4200-bfc1-7a747ed872f2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0327 20:34:09.273771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:10.273803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:11.275466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:12.276150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:13.276642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:14.276718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:15.277255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:16.277858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:17.278848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:18.279791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:19.280805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:34:19.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6926" for this suite. @ 03/27/24 20:34:19.731
• [68.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 03/27/24 20:34:19.771
  Mar 27 20:34:19.771: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 20:34:19.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:34:19.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:34:19.83
  STEP: creating service in namespace services-4063 @ 03/27/24 20:34:19.836
  STEP: creating service affinity-clusterip-transition in namespace services-4063 @ 03/27/24 20:34:19.836
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4063 @ 03/27/24 20:34:19.87
  I0327 20:34:19.892164      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-4063, replica count: 3
  E0327 20:34:20.281032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:21.281154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:22.282216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 20:34:22.943389      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 20:34:22.962: INFO: Creating new exec pod
  E0327 20:34:23.282357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:24.282667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:25.283758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:34:26.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4063 exec execpod-affinity9bwq9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0327 20:34:26.284059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:34:26.385: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Mar 27 20:34:26.385: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 20:34:26.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4063 exec execpod-affinity9bwq9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.188 80'
  Mar 27 20:34:26.737: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.188 80\nConnection to 10.233.14.188 80 port [tcp/http] succeeded!\n"
  Mar 27 20:34:26.737: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 20:34:26.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4063 exec execpod-affinity9bwq9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.14.188:80/ ; done'
  E0327 20:34:27.284505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:34:27.413: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n"
  Mar 27 20:34:27.413: INFO: stdout: "\naffinity-clusterip-transition-xqn2j\naffinity-clusterip-transition-rpv7m\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-xqn2j\naffinity-clusterip-transition-rpv7m\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-xqn2j\naffinity-clusterip-transition-rpv7m\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-xqn2j\naffinity-clusterip-transition-rpv7m\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-xqn2j\naffinity-clusterip-transition-rpv7m\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-xqn2j"
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-xqn2j
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-rpv7m
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-xqn2j
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-rpv7m
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-xqn2j
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-rpv7m
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-xqn2j
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-rpv7m
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-xqn2j
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-rpv7m
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.413: INFO: Received response from host: affinity-clusterip-transition-xqn2j
  Mar 27 20:34:27.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-4063 exec execpod-affinity9bwq9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.14.188:80/ ; done'
  Mar 27 20:34:27.898: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.188:80/\n"
  Mar 27 20:34:27.898: INFO: stdout: "\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv\naffinity-clusterip-transition-b4tgv"
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.898: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.899: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.899: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.899: INFO: Received response from host: affinity-clusterip-transition-b4tgv
  Mar 27 20:34:27.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 20:34:27.912: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4063, will wait for the garbage collector to delete the pods @ 03/27/24 20:34:27.94
  Mar 27 20:34:28.020: INFO: Deleting ReplicationController affinity-clusterip-transition took: 16.907842ms
  Mar 27 20:34:28.121: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.526868ms
  E0327 20:34:28.284572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:29.285263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:30.286223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:31.286663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4063" for this suite. @ 03/27/24 20:34:31.576
• [11.830 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 03/27/24 20:34:31.605
  Mar 27 20:34:31.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-preemption @ 03/27/24 20:34:31.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:34:31.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:34:31.671
  Mar 27 20:34:31.714: INFO: Waiting up to 1m0s for all nodes to be ready
  E0327 20:34:32.287259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:33.288208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:34.289277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:35.289613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:36.289695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:37.289973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:38.290712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:39.291432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:40.292482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:41.293270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:42.293285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:43.293776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:44.294733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:45.294921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:46.295295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:47.296012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:48.295976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:49.297010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:50.297786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:51.298638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:52.299150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:53.299543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:54.299911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:55.299945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:56.300327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:57.300529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:58.300754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:34:59.300939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:00.302038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:01.302192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:02.303052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:03.303461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:04.303638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:05.303870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:06.304031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:07.304756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:08.305049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:09.305158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:10.305582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:11.305987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:12.306493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:13.306967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:14.307802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:15.308583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:16.308853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:17.309197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:18.310222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:19.310801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:20.311017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:21.311618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:22.312218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:23.312871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:24.313024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:25.313767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:26.314987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:27.315571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:28.315936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:29.316041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:30.317021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:31.317140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:35:31.851: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/27/24 20:35:31.86
  Mar 27 20:35:31.921: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Mar 27 20:35:31.953: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Mar 27 20:35:32.022: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Mar 27 20:35:32.034: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Mar 27 20:35:32.090: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Mar 27 20:35:32.105: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/27/24 20:35:32.105
  E0327 20:35:32.317705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:33.317729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 03/27/24 20:35:34.239
  E0327 20:35:34.318833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:35.319326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:36.319321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:37.319804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:38.321950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:35:38.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5828" for this suite. @ 03/27/24 20:35:38.619
• [67.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 03/27/24 20:35:38.642
  Mar 27 20:35:38.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 20:35:38.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:35:38.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:35:38.702
  STEP: Creating configMap with name cm-test-opt-del-853b5d97-d52e-4bdb-bba9-f9d89bdf942a @ 03/27/24 20:35:38.729
  STEP: Creating configMap with name cm-test-opt-upd-50ddf656-e199-45d2-9e6f-7019c1dfdf9b @ 03/27/24 20:35:38.74
  STEP: Creating the pod @ 03/27/24 20:35:38.756
  E0327 20:35:39.322948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:40.323489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-853b5d97-d52e-4bdb-bba9-f9d89bdf942a @ 03/27/24 20:35:40.899
  STEP: Updating configmap cm-test-opt-upd-50ddf656-e199-45d2-9e6f-7019c1dfdf9b @ 03/27/24 20:35:40.918
  STEP: Creating configMap with name cm-test-opt-create-1ab4f94d-8b67-4bb4-8d4f-9d4bc6147603 @ 03/27/24 20:35:40.93
  STEP: waiting to observe update in volume @ 03/27/24 20:35:40.94
  E0327 20:35:41.324294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:42.324939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:35:43.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-678" for this suite. @ 03/27/24 20:35:43.029
• [4.406 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 03/27/24 20:35:43.05
  Mar 27 20:35:43.050: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/27/24 20:35:43.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:35:43.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:35:43.094
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 03/27/24 20:35:43.1
  Mar 27 20:35:43.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:35:43.325130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:44.325996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:45.326237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:46.326387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:47.327250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:48.327993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:49.328083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:50.328996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:51.329297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:52.330326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:53.334392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:35:53.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:35:54.334588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:55.334910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:56.336397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:57.336523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:58.337168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:35:59.337532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:00.337842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:01.338138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:02.338766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:03.339138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:04.343711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:05.344031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:06.344958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:07.345491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:08.346467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:09.347560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:10.348614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:11.348969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:12.350035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:13.351242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:14.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4493" for this suite. @ 03/27/24 20:36:14.248
• [31.213 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 03/27/24 20:36:14.269
  Mar 27 20:36:14.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:36:14.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:36:14.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:36:14.319
  STEP: creating Agnhost RC @ 03/27/24 20:36:14.327
  Mar 27 20:36:14.327: INFO: namespace kubectl-3659
  Mar 27 20:36:14.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-3659 create -f -'
  E0327 20:36:14.351425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:15.046: INFO: stderr: ""
  Mar 27 20:36:15.046: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/27/24 20:36:15.046
  E0327 20:36:15.351729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:16.057: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 20:36:16.057: INFO: Found 0 / 1
  E0327 20:36:16.353010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:17.057: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 20:36:17.057: INFO: Found 1 / 1
  Mar 27 20:36:17.057: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Mar 27 20:36:17.065: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 27 20:36:17.065: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 27 20:36:17.065: INFO: wait on agnhost-primary startup in kubectl-3659 
  Mar 27 20:36:17.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-3659 logs agnhost-primary-wcczq agnhost-primary'
  Mar 27 20:36:17.285: INFO: stderr: ""
  Mar 27 20:36:17.285: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 03/27/24 20:36:17.285
  Mar 27 20:36:17.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-3659 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  E0327 20:36:17.354103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:17.505: INFO: stderr: ""
  Mar 27 20:36:17.505: INFO: stdout: "service/rm2 exposed\n"
  Mar 27 20:36:17.515: INFO: Service rm2 in namespace kubectl-3659 found.
  E0327 20:36:18.354162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:19.355128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 03/27/24 20:36:19.529
  Mar 27 20:36:19.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-3659 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Mar 27 20:36:19.792: INFO: stderr: ""
  Mar 27 20:36:19.792: INFO: stdout: "service/rm3 exposed\n"
  Mar 27 20:36:19.808: INFO: Service rm3 in namespace kubectl-3659 found.
  E0327 20:36:20.356136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:21.356332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:21.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3659" for this suite. @ 03/27/24 20:36:21.839
• [7.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 03/27/24 20:36:21.859
  Mar 27 20:36:21.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename job @ 03/27/24 20:36:21.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:36:21.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:36:21.912
  STEP: Creating a suspended job @ 03/27/24 20:36:21.926
  STEP: Patching the Job @ 03/27/24 20:36:21.938
  STEP: Watching for Job to be patched @ 03/27/24 20:36:21.998
  Mar 27 20:36:22.002: INFO: Event ADDED observed for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-job-label:e2e-jbrrj] and annotations: map[]
  Mar 27 20:36:22.002: INFO: Event MODIFIED observed for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-job-label:e2e-jbrrj] and annotations: map[]
  Mar 27 20:36:22.002: INFO: Event MODIFIED found for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[]
  STEP: Updating the job @ 03/27/24 20:36:22.003
  STEP: Watching for Job to be updated @ 03/27/24 20:36:22.037
  Mar 27 20:36:22.041: INFO: Event MODIFIED found for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[updated:true]
  Mar 27 20:36:22.041: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 03/27/24 20:36:22.041
  Mar 27 20:36:22.052: INFO: Job: e2e-jbrrj as labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj]
  STEP: Waiting for job to complete @ 03/27/24 20:36:22.052
  E0327 20:36:22.356662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:23.357834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:24.358752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:25.359772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:26.359887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:27.360680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:28.360760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:29.361038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:30.361807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:31.361967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 03/27/24 20:36:32.06
  STEP: Watching for Job to be deleted @ 03/27/24 20:36:32.079
  Mar 27 20:36:32.084: INFO: Event MODIFIED observed for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[updated:true]
  Mar 27 20:36:32.084: INFO: Event MODIFIED observed for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[updated:true]
  Mar 27 20:36:32.085: INFO: Event MODIFIED observed for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[updated:true]
  Mar 27 20:36:32.085: INFO: Event MODIFIED observed for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[updated:true]
  Mar 27 20:36:32.085: INFO: Event MODIFIED observed for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[updated:true]
  Mar 27 20:36:32.085: INFO: Event DELETED found for Job e2e-jbrrj in namespace job-4709 with labels: map[e2e-jbrrj:patched e2e-job-label:e2e-jbrrj] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 03/27/24 20:36:32.085
  Mar 27 20:36:32.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4709" for this suite. @ 03/27/24 20:36:32.132
• [10.317 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 03/27/24 20:36:32.177
  Mar 27 20:36:32.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-pred @ 03/27/24 20:36:32.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:36:32.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:36:32.225
  Mar 27 20:36:32.232: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 27 20:36:32.257: INFO: Waiting for terminating namespaces to be deleted...
  Mar 27 20:36:32.269: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Mar 27 20:36:32.312: INFO: filebeat-filebeat-k4hfb from filebeat started at 2024-03-27 13:56:12 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:36:32.312: INFO: kube-flannel-r8g5h from kube-system started at 2024-01-09 16:24:44 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: kube-proxy-dd6db from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: nodelocaldns-9mtv9 from kube-system started at 2024-02-26 17:16:13 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: vsphere-csi-node-254vc from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: prometheus-kube-prometheus-operator-59885c5d4b-hkhxh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: prometheus-kube-state-metrics-6967744598-dt2rh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: prometheus-prometheus-node-exporter-rmr74 from prometheus started at 2024-03-06 21:46:58 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: sonobuoy from sonobuoy started at 2024-03-27 19:17:40 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: sonobuoy-e2e-job-951e43e969974e8d from sonobuoy started at 2024-03-27 19:17:41 +0000 UTC (2 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container e2e ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-xgb4f from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:36:32.312: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:36:32.312: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:36:32.313: INFO: traefik-ingress-r65nd from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.313: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 20:36:32.313: INFO: velero-549955fd6-nv4rr from velero started at 2024-03-27 19:23:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.313: INFO: 	Container velero ready: true, restart count 0
  Mar 27 20:36:32.313: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Mar 27 20:36:32.346: INFO: filebeat-filebeat-vtxl5 from filebeat started at 2024-03-27 13:56:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.346: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:36:32.346: INFO: kube-flannel-jxf5s from kube-system started at 2024-01-09 16:24:09 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.346: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:36:32.346: INFO: kube-proxy-hkdmw from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.346: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:36:32.346: INFO: metrics-server-6b9559b787-jbq7p from kube-system started at 2024-02-26 17:54:21 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container metrics-server ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: nodelocaldns-qntdt from kube-system started at 2024-02-26 17:16:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: vsphere-csi-node-8bf9l from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-03-06 21:46:51 +0000 UTC (3 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container config-reloader ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: 	Container prometheus ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: prometheus-prometheus-node-exporter-9zlbg from prometheus started at 2024-03-06 21:46:32 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: thanos-query-755b649898-rkp2f from prometheus started at 2024-03-27 19:23:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container query ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-zcz72 from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: traefik-ingress-4xq5p from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.347: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 20:36:32.347: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  E0327 20:36:32.362940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:32.384: INFO: filebeat-filebeat-z9sm8 from filebeat started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.385: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:36:32.385: INFO: kube-flannel-hlhld from kube-system started at 2024-01-11 00:55:50 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.385: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:36:32.385: INFO: kube-proxy-k2g55 from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.385: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:36:32.385: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-03-05 18:33:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.385: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:36:32.385: INFO: nodelocaldns-d8b8p from kube-system started at 2024-02-26 17:16:09 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.385: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:36:32.385: INFO: vsphere-csi-node-tmrkr from kube-system started at 2024-03-27 16:22:46 +0000 UTC (3 container statuses recorded)
  Mar 27 20:36:32.385: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:36:32.385: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:36:32.385: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:36:32.385: INFO: prometheus-prometheus-node-exporter-24q6b from prometheus started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.385: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:36:32.386: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-669rl from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:36:32.386: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:36:32.386: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:36:32.386: INFO: traefik-ingress-sblkr from traefik-ingress started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:36:32.386: INFO: 	Container traefik-ingress ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 03/27/24 20:36:32.386
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c0b97a1b538ea1], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 6 Preemption is not helpful for scheduling..] @ 03/27/24 20:36:32.517
  E0327 20:36:33.363123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:36:33.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8597" for this suite. @ 03/27/24 20:36:33.523
• [1.377 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 03/27/24 20:36:33.555
  Mar 27 20:36:33.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 20:36:33.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:36:33.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:36:33.62
  STEP: Creating resourceQuota "e2e-rq-status-m6dqm" @ 03/27/24 20:36:33.638
  Mar 27 20:36:33.663: INFO: Resource quota "e2e-rq-status-m6dqm" reports spec: hard cpu limit of 500m
  Mar 27 20:36:33.663: INFO: Resource quota "e2e-rq-status-m6dqm" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-m6dqm" /status @ 03/27/24 20:36:33.663
  STEP: Confirm /status for "e2e-rq-status-m6dqm" resourceQuota via watch @ 03/27/24 20:36:33.688
  Mar 27 20:36:33.691: INFO: observed resourceQuota "e2e-rq-status-m6dqm" in namespace "resourcequota-3921" with hard status: v1.ResourceList(nil)
  Mar 27 20:36:33.691: INFO: Found resourceQuota "e2e-rq-status-m6dqm" in namespace "resourcequota-3921" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Mar 27 20:36:33.691: INFO: ResourceQuota "e2e-rq-status-m6dqm" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 03/27/24 20:36:33.698
  Mar 27 20:36:33.717: INFO: Resource quota "e2e-rq-status-m6dqm" reports spec: hard cpu limit of 1
  Mar 27 20:36:33.717: INFO: Resource quota "e2e-rq-status-m6dqm" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-m6dqm" /status @ 03/27/24 20:36:33.717
  STEP: Confirm /status for "e2e-rq-status-m6dqm" resourceQuota via watch @ 03/27/24 20:36:33.738
  Mar 27 20:36:33.743: INFO: observed resourceQuota "e2e-rq-status-m6dqm" in namespace "resourcequota-3921" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Mar 27 20:36:33.743: INFO: Found resourceQuota "e2e-rq-status-m6dqm" in namespace "resourcequota-3921" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Mar 27 20:36:33.743: INFO: ResourceQuota "e2e-rq-status-m6dqm" /status was patched
  STEP: Get "e2e-rq-status-m6dqm" /status @ 03/27/24 20:36:33.744
  Mar 27 20:36:33.757: INFO: Resourcequota "e2e-rq-status-m6dqm" reports status: hard cpu of 1
  Mar 27 20:36:33.757: INFO: Resourcequota "e2e-rq-status-m6dqm" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-m6dqm" /status before checking Spec is unchanged @ 03/27/24 20:36:33.772
  Mar 27 20:36:33.791: INFO: Resourcequota "e2e-rq-status-m6dqm" reports status: hard cpu of 2
  Mar 27 20:36:33.791: INFO: Resourcequota "e2e-rq-status-m6dqm" reports status: hard memory of 2Gi
  Mar 27 20:36:33.796: INFO: Found resourceQuota "e2e-rq-status-m6dqm" in namespace "resourcequota-3921" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0327 20:36:34.364232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:35.364338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:36.364768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:37.365672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:38.366050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:39.367370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:40.368189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:41.368351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:42.368730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:43.368829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:44.369724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:45.369854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:46.370121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:47.370404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:48.370604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:49.370779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:50.371536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:51.371502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:52.371998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:53.372209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:54.371985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:55.373416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:56.373801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:57.374108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:58.374433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:36:59.375519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:00.376609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:01.376772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:02.376924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:03.377267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:04.378391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:05.378334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:06.379368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:07.379824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:08.380690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:09.383546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:10.384550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:11.384758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:12.385572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:13.386337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:14.386504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:15.387175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:16.388017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:17.388402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:18.388590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:19.388705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:20.389191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:21.390003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:22.389580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:23.389936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:24.391029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:25.392043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:26.393791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:27.394375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:28.394515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:29.395366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:30.396187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:31.396649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:32.396880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:33.397168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:34.397710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:35.398889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:36.399332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:37.399644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:38.399800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:39.400689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:40.401501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:41.402129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:42.402791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:43.403687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:44.403722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:45.404052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:46.404251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:47.404599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:48.404883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:49.405047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:50.405542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:51.406119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:52.406180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:53.406796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:54.407226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:55.408135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:56.408207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:57.408583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:58.409177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:37:59.409549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:00.409820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:01.410445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:02.410601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:03.410779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:04.411900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:05.412681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:06.413678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:07.414112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:08.414286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:09.415340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:10.416591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:11.417113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:12.417688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:13.417888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:14.418046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:15.419040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:16.419356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:17.419518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:18.419829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:19.419973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:20.420258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:21.420676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:22.420861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:23.421337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:24.421805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:25.422836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:26.423114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:27.423547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:28.423947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:29.424674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:30.425739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:31.426063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:32.426622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:33.427650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:34.428089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:35.428720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:36.432822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:37.432992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:38.433319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:39.433658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:40.433787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:41.433982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:42.434117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:43.434355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:44.435319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:45.436101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:46.437456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:47.437714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:48.438123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:49.438974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:50.439100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:51.439568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:52.439940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:53.440120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:54.440589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:55.441065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:56.441717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:57.441789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:58.441938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:38:59.442210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:00.443130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:01.443368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:02.443911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:03.444635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:04.445411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:05.446643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:06.447720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:07.448482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:08.448962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:09.449273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:10.449394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:11.449749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:12.450215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:13.450823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:14.452125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:15.452319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:16.452764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:17.453616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:18.453996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:19.454225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:20.454399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:21.454835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:22.455214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:23.455957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:24.456991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:25.458215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:26.458217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:27.458688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:28.458999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:29.459228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:30.459330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:31.459655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:32.460484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:33.460899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:34.461284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:35.462591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:36.463221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:37.463638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:38.463999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:38.823: INFO: ResourceQuota "e2e-rq-status-m6dqm" Spec was unchanged and /status reset
  Mar 27 20:39:38.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3921" for this suite. @ 03/27/24 20:39:38.839
• [185.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 03/27/24 20:39:38.862
  Mar 27 20:39:38.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 20:39:38.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:39:38.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:39:38.915
  STEP: Creating pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982 @ 03/27/24 20:39:38.922
  E0327 20:39:39.465051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:40.465428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 20:39:40.966
  Mar 27 20:39:40.975: INFO: Initial restart count of pod liveness-1974a412-517c-4b56-bd27-256f47e98373 is 0
  Mar 27 20:39:40.982: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:41.466396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:42.466903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:42.992: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:43.467292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:44.467832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:45.003: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:45.468579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:46.468987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:47.018: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:47.469003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:48.469528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:49.026: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:49.469832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:50.470116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:51.038: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:51.470331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:52.470775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:53.047: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:53.471801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:54.472096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:55.056: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:55.473009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:56.473546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:57.064: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:57.474159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:39:58.474785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:39:59.073: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:39:59.474816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:00.475055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:01.084: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:01.475929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:02.476450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:03.092: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:03.476887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:04.477264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:05.103: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:05.477277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:06.477669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:07.110: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:07.478805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:08.479387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:09.119: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:09.479715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:10.479854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:11.129: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:11.480250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:12.480878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:13.144: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:13.481711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:14.481750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:15.154: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:15.482405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:16.482548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:17.162: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:17.482728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:18.483024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:19.177: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:19.483956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:20.484223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:21.194: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:21.484848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:22.485699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:23.202: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:23.485842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:24.486722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:25.214: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:25.487512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:26.487764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:27.229: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:27.487921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:28.488384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:29.238: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:29.493838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:30.493978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:31.252: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:31.494166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:32.495126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:33.262: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:33.495583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:34.495990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:35.278: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:35.496147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:36.496599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:37.288: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:37.497318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:38.497951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:39.298: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:39.499419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:40.500679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:41.310: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:41.500590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:42.501179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:43.327: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:43.501847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:44.501781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:45.344: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:45.502450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:46.502886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:47.360: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:47.503356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:48.503854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:49.369: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:49.504605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:50.505111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:51.379: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:51.505270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:52.505679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:53.389: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:53.506058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:54.506195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:55.398: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:55.507753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:56.508162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:57.409: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:57.509532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:40:58.509880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:40:59.418: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:40:59.510298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:00.511175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:01.430: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:01.511435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:02.511853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:03.450: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:03.512357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:04.512915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:05.458: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:05.514068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:06.514642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:07.468: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:07.515508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:08.515990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:09.478: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:09.516275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:10.517619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:11.487: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:11.518088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:12.518765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:13.499: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:13.519229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:14.519742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:15.509: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:15.520282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:16.520582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:17.520954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:17.521: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:18.523239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:19.521565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:19.530: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:20.522015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:21.522991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:21.543: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:22.523757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:23.524350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:23.552: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:24.524802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:25.524901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:25.561: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:26.525576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:27.525837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:27.574: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:28.526033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:29.526266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:29.584: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:30.527105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:31.527839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:31.598: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:32.529984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:33.528125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:33.607: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:34.528479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:35.529601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:35.616: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:36.529666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:37.530060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:37.626: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:38.530219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:39.530664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:39.648: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:40.530854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:41.531592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:41.660: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:42.532114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:43.532547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:43.669: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:44.532542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:45.532765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:45.679: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:46.533713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:47.533895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:47.690: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:48.534054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:49.534314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:49.700: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:50.535138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:51.535236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:51.711: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:52.535429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:53.535709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:53.720: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:54.536021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:55.536694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:55.729: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:56.536941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:57.537230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:57.739: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:41:58.537480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:41:59.537561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:41:59.751: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:00.537837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:01.538488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:01.760: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:02.538390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:03.539269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:03.786: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:04.539867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:05.540256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:05.797: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:06.540522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:07.540740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:07.808: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:08.540893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:09.541627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:09.821: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:10.542095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:11.542157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:11.837: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:12.542831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:13.543085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:13.846: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:14.543748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:15.544481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:15.857: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:16.544512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:17.544813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:17.866: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:18.545557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:19.545686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:19.886: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:20.546099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:21.546731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:21.897: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:22.546948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:23.547360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:23.906: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:24.547387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:25.548436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:25.918: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:26.548322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:27.548574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:27.929: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:28.549125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:29.549699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:29.938: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:30.549958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:31.550443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:31.948: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:32.551481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:33.551453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:33.958: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:34.552359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:35.553228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:35.969: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:36.553703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:37.553893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:37.984: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:38.554816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:39.555402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:39.994: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:40.556148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:41.556564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:42.003: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:42.556879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:43.557017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:44.012: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:44.558232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:45.558891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:46.021: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:46.559093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:47.559315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:48.034: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:48.559520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:49.560067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:50.045: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:50.560606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:51.561167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:52.056: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:52.561340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:53.561668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:54.065: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:54.562761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:55.563447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:56.074: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:56.564462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:57.564499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:42:58.082: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:42:58.565482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:42:59.565885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:00.089: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:00.566850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:01.567398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:02.102: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:02.567955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:03.568597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:04.114: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:04.569530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:05.570412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:06.124: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:06.570702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:07.571340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:08.135: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:08.571547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:09.572306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:10.143: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:10.572413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:11.572887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:12.156: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:12.574447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:13.574748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:14.166: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:14.574927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:15.575108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:16.179: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:16.575351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:17.575612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:18.188: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:18.576625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:19.577062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:20.200: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:20.577843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:21.578389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:22.212: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:22.578635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:23.579181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:24.219: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:24.579318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:25.579865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:26.227: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:26.580397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:27.580831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:28.234: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:28.581201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:29.581272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:30.244: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:30.581762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:31.582462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:32.262: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:32.582595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:33.582964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:34.273: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:34.583494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:35.583907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:36.283: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:36.588752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:37.586226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:38.293: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:38.586150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:39.586875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:40.302: INFO: Get pod liveness-1974a412-517c-4b56-bd27-256f47e98373 in namespace container-probe-2982
  E0327 20:43:40.587196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:41.587707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:42.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 20:43:42.32
  STEP: Destroying namespace "container-probe-2982" for this suite. @ 03/27/24 20:43:42.346
• [243.513 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 03/27/24 20:43:42.377
  Mar 27 20:43:42.377: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 20:43:42.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:43:42.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:43:42.436
  STEP: Creating a ResourceQuota @ 03/27/24 20:43:42.445
  STEP: Getting a ResourceQuota @ 03/27/24 20:43:42.462
  STEP: Listing all ResourceQuotas with LabelSelector @ 03/27/24 20:43:42.471
  STEP: Patching the ResourceQuota @ 03/27/24 20:43:42.48
  STEP: Deleting a Collection of ResourceQuotas @ 03/27/24 20:43:42.502
  STEP: Verifying the deleted ResourceQuota @ 03/27/24 20:43:42.543
  Mar 27 20:43:42.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2794" for this suite. @ 03/27/24 20:43:42.569
  E0327 20:43:42.589887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.213 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 03/27/24 20:43:42.59
  Mar 27 20:43:42.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 20:43:42.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:43:42.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:43:42.693
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6709 @ 03/27/24 20:43:42.701
  STEP: changing the ExternalName service to type=NodePort @ 03/27/24 20:43:42.718
  STEP: creating replication controller externalname-service in namespace services-6709 @ 03/27/24 20:43:42.769
  I0327 20:43:42.787886      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6709, replica count: 2
  E0327 20:43:43.590921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:44.591718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:45.591958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0327 20:43:45.839547      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 27 20:43:45.839: INFO: Creating new exec pod
  E0327 20:43:46.592978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:47.593218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:48.594336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:48.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-6709 exec execpoddzhcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Mar 27 20:43:49.305: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 27 20:43:49.305: INFO: stdout: ""
  E0327 20:43:49.594725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:50.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-6709 exec execpoddzhcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0327 20:43:50.594854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:50.657: INFO: stderr: "+ + nc -v -techo -w 2 hostName\n externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 27 20:43:50.657: INFO: stdout: ""
  Mar 27 20:43:51.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-6709 exec execpoddzhcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0327 20:43:51.595526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:51.660: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 27 20:43:51.660: INFO: stdout: ""
  Mar 27 20:43:52.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-6709 exec execpoddzhcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0327 20:43:52.596519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:52.655: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 27 20:43:52.655: INFO: stdout: "externalname-service-w4qrd"
  Mar 27 20:43:52.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-6709 exec execpoddzhcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.20 80'
  Mar 27 20:43:52.978: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.20 80\nConnection to 10.233.35.20 80 port [tcp/http] succeeded!\n"
  Mar 27 20:43:52.978: INFO: stdout: "externalname-service-xjdsz"
  Mar 27 20:43:52.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-6709 exec execpoddzhcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.201 30735'
  Mar 27 20:43:53.318: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.201 30735\nConnection to 10.61.1.201 30735 port [tcp/*] succeeded!\n"
  Mar 27 20:43:53.318: INFO: stdout: "externalname-service-xjdsz"
  Mar 27 20:43:53.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-6709 exec execpoddzhcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 30735'
  E0327 20:43:53.596729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:43:53.636: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.202 30735\nConnection to 10.61.1.202 30735 port [tcp/*] succeeded!\n"
  Mar 27 20:43:53.636: INFO: stdout: "externalname-service-xjdsz"
  Mar 27 20:43:53.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 20:43:53.649: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-6709" for this suite. @ 03/27/24 20:43:53.73
• [11.156 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 03/27/24 20:43:53.747
  Mar 27 20:43:53.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:43:53.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:43:53.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:43:53.821
  STEP: Creating secret with name secret-test-04d2b62b-3674-49af-b66b-0f3df2f3da8a @ 03/27/24 20:43:53.944
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:43:53.975
  E0327 20:43:54.597055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:55.598207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:56.598767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:43:57.599425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:43:58.054
  Mar 27 20:43:58.065: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-5c103938-45f7-4961-8a27-2a61d5e120f7 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:43:58.107
  Mar 27 20:43:58.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1233" for this suite. @ 03/27/24 20:43:58.156
  STEP: Destroying namespace "secret-namespace-3100" for this suite. @ 03/27/24 20:43:58.177
• [4.445 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 03/27/24 20:43:58.194
  Mar 27 20:43:58.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:43:58.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:43:58.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:43:58.249
  STEP: creating a secret @ 03/27/24 20:43:58.258
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 03/27/24 20:43:58.27
  STEP: patching the secret @ 03/27/24 20:43:58.377
  STEP: deleting the secret using a LabelSelector @ 03/27/24 20:43:58.408
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 03/27/24 20:43:58.425
  Mar 27 20:43:58.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7882" for this suite. @ 03/27/24 20:43:58.556
• [0.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 03/27/24 20:43:58.585
  Mar 27 20:43:58.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename disruption @ 03/27/24 20:43:58.588
  E0327 20:43:58.601744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:43:58.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:43:58.65
  STEP: Creating a pdb that targets all three pods in a test replica set @ 03/27/24 20:43:58.66
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:43:58.67
  STEP: First trying to evict a pod which shouldn't be evictable @ 03/27/24 20:43:58.699
  STEP: Waiting for all pods to be running @ 03/27/24 20:43:58.699
  Mar 27 20:43:58.706: INFO: pods: 0 < 3
  E0327 20:43:59.601858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:00.602674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 03/27/24 20:44:00.717
  STEP: Updating the pdb to allow a pod to be evicted @ 03/27/24 20:44:00.75
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:44:00.766
  E0327 20:44:01.602698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:02.602923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/27/24 20:44:02.792
  STEP: Waiting for all pods to be running @ 03/27/24 20:44:02.792
  STEP: Waiting for the pdb to observed all healthy pods @ 03/27/24 20:44:02.807
  STEP: Patching the pdb to disallow a pod to be evicted @ 03/27/24 20:44:02.886
  STEP: Waiting for the pdb to be processed @ 03/27/24 20:44:03.004
  E0327 20:44:03.604610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:04.605044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 03/27/24 20:44:05.034
  STEP: locating a running pod @ 03/27/24 20:44:05.046
  STEP: Deleting the pdb to allow a pod to be evicted @ 03/27/24 20:44:05.069
  STEP: Waiting for the pdb to be deleted @ 03/27/24 20:44:05.085
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/27/24 20:44:05.094
  STEP: Waiting for all pods to be running @ 03/27/24 20:44:05.094
  Mar 27 20:44:05.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1719" for this suite. @ 03/27/24 20:44:05.147
• [6.574 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 03/27/24 20:44:05.16
  Mar 27 20:44:05.160: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename crd-webhook @ 03/27/24 20:44:05.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:44:05.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:44:05.259
  STEP: Setting up server cert @ 03/27/24 20:44:05.269
  E0327 20:44:05.605343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:06.605608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/27/24 20:44:07.363
  STEP: Deploying the custom resource conversion webhook pod @ 03/27/24 20:44:07.378
  STEP: Wait for the deployment to be ready @ 03/27/24 20:44:07.41
  Mar 27 20:44:07.457: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0327 20:44:07.605862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:08.606059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 20:44:09.482
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 20:44:09.519
  E0327 20:44:09.609541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:10.519: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Mar 27 20:44:10.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:44:10.610021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:11.611369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:12.611997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:13.612740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:14.613426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:15.612871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:16.613570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:17.614592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 03/27/24 20:44:18.246
  STEP: v2 custom resource should be converted @ 03/27/24 20:44:18.27
  Mar 27 20:44:18.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 20:44:18.615411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-8164" for this suite. @ 03/27/24 20:44:18.997
• [13.854 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 03/27/24 20:44:19.015
  Mar 27 20:44:19.015: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 20:44:19.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:44:19.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:44:19.102
  STEP: Creating a ResourceQuota with terminating scope @ 03/27/24 20:44:19.111
  STEP: Ensuring ResourceQuota status is calculated @ 03/27/24 20:44:19.127
  E0327 20:44:19.615712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:20.615792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 03/27/24 20:44:21.137
  STEP: Ensuring ResourceQuota status is calculated @ 03/27/24 20:44:21.15
  E0327 20:44:21.616968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:22.617097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 03/27/24 20:44:23.161
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 03/27/24 20:44:23.192
  E0327 20:44:23.617529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:24.618018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 03/27/24 20:44:25.199
  E0327 20:44:25.618711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:26.619044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/27/24 20:44:27.208
  STEP: Ensuring resource quota status released the pod usage @ 03/27/24 20:44:27.252
  E0327 20:44:27.619485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:28.619914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 03/27/24 20:44:29.262
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 03/27/24 20:44:29.291
  E0327 20:44:29.620229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:30.620357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 03/27/24 20:44:31.304
  E0327 20:44:31.620669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:32.620859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/27/24 20:44:33.316
  STEP: Ensuring resource quota status released the pod usage @ 03/27/24 20:44:33.345
  E0327 20:44:33.621648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:34.622115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:35.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8837" for this suite. @ 03/27/24 20:44:35.372
• [16.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 03/27/24 20:44:35.415
  Mar 27 20:44:35.415: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 20:44:35.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:44:35.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:44:35.472
  STEP: Creating service test in namespace statefulset-2291 @ 03/27/24 20:44:35.478
  STEP: Creating stateful set ss in namespace statefulset-2291 @ 03/27/24 20:44:35.507
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2291 @ 03/27/24 20:44:35.534
  Mar 27 20:44:35.552: INFO: Found 0 stateful pods, waiting for 1
  E0327 20:44:35.622794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:36.623377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:37.623953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:38.624524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:39.625150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:40.626223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:41.626725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:42.627134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:43.627570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:44.628147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:45.561: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 03/27/24 20:44:45.561
  Mar 27 20:44:45.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-2291 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0327 20:44:45.628469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:45.878: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:44:45.878: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:44:45.878: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:44:45.887: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0327 20:44:46.628959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:47.629722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:48.630228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:49.630935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:50.631221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:51.631438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:52.631920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:53.632288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:54.632315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:44:55.633208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:55.899: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:44:55.899: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 27 20:44:55.941: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
  Mar 27 20:44:55.941: INFO: ss-0  env1-test-worker-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:35 +0000 UTC  }]
  Mar 27 20:44:55.941: INFO: 
  Mar 27 20:44:55.941: INFO: StatefulSet ss has not reached scale 3, at 1
  E0327 20:44:56.633673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:56.953: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.989884512s
  E0327 20:44:57.634921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:57.965: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.978885925s
  E0327 20:44:58.635092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:58.975: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.967259906s
  E0327 20:44:59.635124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:44:59.986: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.955914643s
  E0327 20:45:00.635878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:00.997: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.945798586s
  E0327 20:45:01.636912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:02.008: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.935064343s
  E0327 20:45:02.637930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:03.018: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.924276571s
  E0327 20:45:03.638574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:04.029: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.913533198s
  E0327 20:45:04.639554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:05.041: INFO: Verifying statefulset ss doesn't scale past 3 for another 901.711581ms
  E0327 20:45:05.640574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2291 @ 03/27/24 20:45:06.041
  Mar 27 20:45:06.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-2291 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 27 20:45:06.409: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 27 20:45:06.410: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 20:45:06.410: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 20:45:06.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-2291 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0327 20:45:06.640757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:06.761: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Mar 27 20:45:06.761: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 20:45:06.761: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 20:45:06.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-2291 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 27 20:45:07.043: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Mar 27 20:45:07.043: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 27 20:45:07.043: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 27 20:45:07.053: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:45:07.053: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:45:07.053: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 03/27/24 20:45:07.053
  Mar 27 20:45:07.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-2291 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 27 20:45:07.346: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:45:07.346: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:45:07.346: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:45:07.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-2291 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 27 20:45:07.583: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:45:07.583: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:45:07.583: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:45:07.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=statefulset-2291 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0327 20:45:07.641384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:07.810: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 27 20:45:07.810: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 27 20:45:07.810: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 27 20:45:07.810: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 27 20:45:07.817: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0327 20:45:08.642216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:09.642499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:10.642597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:11.642988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:12.642977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:13.643211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:14.645629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:15.645911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:16.646130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:17.646238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:17.835: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:45:17.835: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:45:17.835: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Mar 27 20:45:17.865: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
  Mar 27 20:45:17.865: INFO: ss-0  env1-test-worker-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:45:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:45:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:35 +0000 UTC  }]
  Mar 27 20:45:17.866: INFO: ss-1  env1-test-worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:45:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:45:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:55 +0000 UTC  }]
  Mar 27 20:45:17.866: INFO: ss-2  env1-test-worker-0  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:45:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:45:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-27 20:44:55 +0000 UTC  }]
  Mar 27 20:45:17.866: INFO: 
  Mar 27 20:45:17.866: INFO: StatefulSet ss has not reached scale 0, at 3
  E0327 20:45:18.646666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:18.873: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.989024215s
  E0327 20:45:19.648428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:19.883: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.982225225s
  E0327 20:45:20.648656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:20.892: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.971995124s
  E0327 20:45:21.648803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:21.899: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.962852536s
  E0327 20:45:22.649155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:22.908: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.956183047s
  E0327 20:45:23.650186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:23.918: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.947168333s
  E0327 20:45:24.650642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:24.928: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.936764473s
  E0327 20:45:25.650911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:25.938: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.926516504s
  E0327 20:45:26.651253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:26.945: INFO: Verifying statefulset ss doesn't scale past 0 for another 917.201732ms
  E0327 20:45:27.651771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2291 @ 03/27/24 20:45:27.946
  Mar 27 20:45:27.957: INFO: Scaling statefulset ss to 0
  Mar 27 20:45:27.985: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 20:45:27.993: INFO: Deleting all statefulset in ns statefulset-2291
  Mar 27 20:45:27.999: INFO: Scaling statefulset ss to 0
  Mar 27 20:45:28.024: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 20:45:28.030: INFO: Deleting statefulset ss
  Mar 27 20:45:28.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2291" for this suite. @ 03/27/24 20:45:28.079
• [52.690 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 03/27/24 20:45:28.108
  Mar 27 20:45:28.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename daemonsets @ 03/27/24 20:45:28.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:45:28.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:45:28.158
  Mar 27 20:45:28.224: INFO: Create a RollingUpdate DaemonSet
  Mar 27 20:45:28.243: INFO: Check that daemon pods launch on every node of the cluster
  Mar 27 20:45:28.261: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:28.261: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:28.261: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:28.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:45:28.272: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:45:28.651713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:29.291: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:29.291: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:29.291: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:29.299: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:45:29.299: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:45:29.653046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:30.286: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:30.286: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:30.286: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:30.295: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 20:45:30.296: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Mar 27 20:45:30.296: INFO: Update the DaemonSet to trigger a rollout
  Mar 27 20:45:30.323: INFO: Updating DaemonSet daemon-set
  E0327 20:45:30.653542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:31.384: INFO: Roll back the DaemonSet before rollout is complete
  Mar 27 20:45:31.406: INFO: Updating DaemonSet daemon-set
  Mar 27 20:45:31.406: INFO: Make sure DaemonSet rollback is complete
  Mar 27 20:45:31.419: INFO: Wrong image for pod: daemon-set-j92qp. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Mar 27 20:45:31.419: INFO: Pod daemon-set-j92qp is not available
  Mar 27 20:45:31.436: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:31.436: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:31.437: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0327 20:45:31.654344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:32.498: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:32.498: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:32.498: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0327 20:45:32.654522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:33.492: INFO: Pod daemon-set-chnr5 is not available
  Mar 27 20:45:33.508: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:33.509: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:45:33.509: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 03/27/24 20:45:33.527
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1407, will wait for the garbage collector to delete the pods @ 03/27/24 20:45:33.527
  Mar 27 20:45:33.613: INFO: Deleting DaemonSet.extensions daemon-set took: 28.716506ms
  E0327 20:45:33.655587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:33.714: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.894175ms
  E0327 20:45:34.655922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:35.655989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:45:36.036: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:45:36.036: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 27 20:45:36.046: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210796724"},"items":null}

  Mar 27 20:45:36.057: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210796724"},"items":null}

  Mar 27 20:45:36.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1407" for this suite. @ 03/27/24 20:45:36.129
• [8.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 03/27/24 20:45:36.158
  Mar 27 20:45:36.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 20:45:36.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:45:36.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:45:36.212
  STEP: creating the pod with failed condition @ 03/27/24 20:45:36.221
  E0327 20:45:36.656597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:37.656898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:38.657442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:39.657813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:40.658002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:41.658352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:42.659254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:43.660164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:44.660928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:45.661158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:46.661754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:47.662393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:48.663048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:49.664018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:50.664884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:51.664923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:52.665672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:53.666074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:54.666354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:55.667262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:56.667074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:57.667651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:58.667996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:45:59.669267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:00.670162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:01.670759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:02.671350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:03.671512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:04.671970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:05.672619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:06.673245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:07.673586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:08.674196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:09.674925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:10.676110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:11.677034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:12.677795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:13.678680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:14.680781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:15.682208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:16.681412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:17.681813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:18.682257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:19.682630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:20.683150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:21.683270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:22.684458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:23.684767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:24.684902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:25.686112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:26.686886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:27.687257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:28.687790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:29.687921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:30.688151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:31.688670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:32.689052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:33.689633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:34.690524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:35.690481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:36.691554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:37.692254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:38.693077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:39.693920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:40.695043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:41.695621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:42.696219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:43.696619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:44.696864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:45.697750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:46.698778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:47.699009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:48.700075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:49.700531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:50.701320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:51.701669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:52.702702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:53.702906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:54.703336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:55.704548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:56.705107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:57.705405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:58.705414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:46:59.705631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:00.706812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:01.707222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:02.707739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:03.708031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:04.708538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:05.708744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:06.709542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:07.710602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:08.711126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:09.711464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:10.712533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:11.713080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:12.714467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:13.714575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:14.715121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:15.715469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:16.715921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:17.716301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:18.716886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:19.717068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:20.717198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:21.717816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:22.719163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:23.719266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:24.719517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:25.720227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:26.721062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:27.721682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:28.722199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:29.722422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:30.723703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:31.723903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:32.724179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:33.724215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:34.724727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:35.725704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 03/27/24 20:47:36.25
  E0327 20:47:36.726796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:47:36.793: INFO: Successfully updated pod "var-expansion-9a57aa62-1985-403c-9656-66655193ad60"
  STEP: waiting for pod running @ 03/27/24 20:47:36.793
  E0327 20:47:37.728059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:38.728371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 03/27/24 20:47:38.833
  Mar 27 20:47:38.833: INFO: Deleting pod "var-expansion-9a57aa62-1985-403c-9656-66655193ad60" in namespace "var-expansion-875"
  Mar 27 20:47:38.855: INFO: Wait up to 5m0s for pod "var-expansion-9a57aa62-1985-403c-9656-66655193ad60" to be fully deleted
  E0327 20:47:39.729161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:40.729303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:41.729692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:42.730166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:43.730622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:44.731174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:45.731686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:46.732114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:47.732200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:48.732488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:49.732781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:50.733713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:51.734076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:52.734267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:53.734578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:54.734944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:55.735876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:56.736009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:57.736332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:58.736500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:47:59.736931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:00.736983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:01.737331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:02.738099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:03.738917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:04.739249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:05.739456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:06.740020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:07.740292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:08.740554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:09.740678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:10.740775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:11.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-875" for this suite. @ 03/27/24 20:48:11.062
• [154.925 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 03/27/24 20:48:11.083
  Mar 27 20:48:11.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:48:11.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:48:11.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:48:11.132
  STEP: creating the pod @ 03/27/24 20:48:11.139
  Mar 27 20:48:11.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 create -f -'
  E0327 20:48:11.741815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:12.017: INFO: stderr: ""
  Mar 27 20:48:12.017: INFO: stdout: "pod/pause created\n"
  E0327 20:48:12.742005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:13.742384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 03/27/24 20:48:14.037
  Mar 27 20:48:14.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 label pods pause testing-label=testing-label-value'
  Mar 27 20:48:14.218: INFO: stderr: ""
  Mar 27 20:48:14.218: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 03/27/24 20:48:14.218
  Mar 27 20:48:14.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 get pod pause -L testing-label'
  Mar 27 20:48:14.380: INFO: stderr: ""
  Mar 27 20:48:14.380: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 03/27/24 20:48:14.38
  Mar 27 20:48:14.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 label pods pause testing-label-'
  Mar 27 20:48:14.519: INFO: stderr: ""
  Mar 27 20:48:14.519: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 03/27/24 20:48:14.519
  Mar 27 20:48:14.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 get pod pause -L testing-label'
  Mar 27 20:48:14.681: INFO: stderr: ""
  Mar 27 20:48:14.681: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 03/27/24 20:48:14.681
  Mar 27 20:48:14.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 delete --grace-period=0 --force -f -'
  E0327 20:48:14.742647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:14.883: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 27 20:48:14.883: INFO: stdout: "pod \"pause\" force deleted\n"
  Mar 27 20:48:14.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 get rc,svc -l name=pause --no-headers'
  Mar 27 20:48:15.053: INFO: stderr: "No resources found in kubectl-8134 namespace.\n"
  Mar 27 20:48:15.053: INFO: stdout: ""
  Mar 27 20:48:15.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-8134 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Mar 27 20:48:15.240: INFO: stderr: ""
  Mar 27 20:48:15.240: INFO: stdout: ""
  Mar 27 20:48:15.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8134" for this suite. @ 03/27/24 20:48:15.255
• [4.193 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 03/27/24 20:48:15.276
  Mar 27 20:48:15.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/27/24 20:48:15.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:48:15.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:48:15.337
  STEP: Creating 50 configmaps @ 03/27/24 20:48:15.343
  E0327 20:48:15.742828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 03/27/24 20:48:15.967
  Mar 27 20:48:16.005: INFO: Pod name wrapped-volume-race-f853d70e-0d6a-4148-ad24-73955f628940: Found 0 pods out of 5
  E0327 20:48:16.743769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:17.744801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:18.745182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:19.745632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:20.746709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:21.020: INFO: Pod name wrapped-volume-race-f853d70e-0d6a-4148-ad24-73955f628940: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/27/24 20:48:21.02
  STEP: Creating RC which spawns configmap-volume pods @ 03/27/24 20:48:21.101
  Mar 27 20:48:21.171: INFO: Pod name wrapped-volume-race-b6e8dbac-4f66-4fb0-bf1b-87f3abcbd01d: Found 0 pods out of 5
  E0327 20:48:21.747430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:22.747408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:23.747640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:24.748339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:25.749290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:26.194: INFO: Pod name wrapped-volume-race-b6e8dbac-4f66-4fb0-bf1b-87f3abcbd01d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/27/24 20:48:26.195
  STEP: Creating RC which spawns configmap-volume pods @ 03/27/24 20:48:26.255
  Mar 27 20:48:26.305: INFO: Pod name wrapped-volume-race-c619863f-8cfd-4f0e-aade-b0a070faf763: Found 0 pods out of 5
  E0327 20:48:26.750263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:27.751471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:28.752177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:29.752456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:30.753551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:31.346: INFO: Pod name wrapped-volume-race-c619863f-8cfd-4f0e-aade-b0a070faf763: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/27/24 20:48:31.347
  Mar 27 20:48:31.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-c619863f-8cfd-4f0e-aade-b0a070faf763 in namespace emptydir-wrapper-2012, will wait for the garbage collector to delete the pods @ 03/27/24 20:48:31.428
  Mar 27 20:48:31.525: INFO: Deleting ReplicationController wrapped-volume-race-c619863f-8cfd-4f0e-aade-b0a070faf763 took: 37.296599ms
  Mar 27 20:48:31.727: INFO: Terminating ReplicationController wrapped-volume-race-c619863f-8cfd-4f0e-aade-b0a070faf763 pods took: 201.803237ms
  E0327 20:48:31.753721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:32.754006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:33.754452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b6e8dbac-4f66-4fb0-bf1b-87f3abcbd01d in namespace emptydir-wrapper-2012, will wait for the garbage collector to delete the pods @ 03/27/24 20:48:34.129
  Mar 27 20:48:34.224: INFO: Deleting ReplicationController wrapped-volume-race-b6e8dbac-4f66-4fb0-bf1b-87f3abcbd01d took: 17.803618ms
  Mar 27 20:48:34.326: INFO: Terminating ReplicationController wrapped-volume-race-b6e8dbac-4f66-4fb0-bf1b-87f3abcbd01d pods took: 101.607411ms
  E0327 20:48:34.755175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:35.755328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f853d70e-0d6a-4148-ad24-73955f628940 in namespace emptydir-wrapper-2012, will wait for the garbage collector to delete the pods @ 03/27/24 20:48:36.527
  Mar 27 20:48:36.617: INFO: Deleting ReplicationController wrapped-volume-race-f853d70e-0d6a-4148-ad24-73955f628940 took: 19.788153ms
  E0327 20:48:36.756396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:36.818: INFO: Terminating ReplicationController wrapped-volume-race-f853d70e-0d6a-4148-ad24-73955f628940 pods took: 201.361689ms
  E0327 20:48:37.757408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:38.757506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 03/27/24 20:48:39.02
  E0327 20:48:39.758604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-2012" for this suite. @ 03/27/24 20:48:40.007
• [24.748 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 03/27/24 20:48:40.03
  Mar 27 20:48:40.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replicaset @ 03/27/24 20:48:40.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:48:40.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:48:40.093
  STEP: Create a Replicaset @ 03/27/24 20:48:40.11
  STEP: Verify that the required pods have come up. @ 03/27/24 20:48:40.121
  Mar 27 20:48:40.128: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0327 20:48:40.759203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:41.759820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:42.760779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:43.761418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:44.761905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:45.145: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/27/24 20:48:45.145
  STEP: Getting /status @ 03/27/24 20:48:45.146
  Mar 27 20:48:45.159: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 03/27/24 20:48:45.159
  Mar 27 20:48:45.186: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 03/27/24 20:48:45.186
  Mar 27 20:48:45.190: INFO: Observed &ReplicaSet event: ADDED
  Mar 27 20:48:45.191: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 27 20:48:45.191: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 27 20:48:45.192: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 27 20:48:45.192: INFO: Found replicaset test-rs in namespace replicaset-8944 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 27 20:48:45.192: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 03/27/24 20:48:45.192
  Mar 27 20:48:45.192: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Mar 27 20:48:45.212: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 03/27/24 20:48:45.212
  Mar 27 20:48:45.216: INFO: Observed &ReplicaSet event: ADDED
  Mar 27 20:48:45.216: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 27 20:48:45.216: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 27 20:48:45.216: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 27 20:48:45.216: INFO: Observed replicaset test-rs in namespace replicaset-8944 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 27 20:48:45.217: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 27 20:48:45.217: INFO: Found replicaset test-rs in namespace replicaset-8944 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Mar 27 20:48:45.218: INFO: Replicaset test-rs has a patched status
  Mar 27 20:48:45.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8944" for this suite. @ 03/27/24 20:48:45.245
• [5.238 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 03/27/24 20:48:45.269
  Mar 27 20:48:45.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 20:48:45.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:48:45.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:48:45.332
  STEP: Counting existing ResourceQuota @ 03/27/24 20:48:45.339
  E0327 20:48:45.762182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:46.762959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:47.763264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:48.764214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:49.765070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/27/24 20:48:50.357
  STEP: Ensuring resource quota status is calculated @ 03/27/24 20:48:50.373
  E0327 20:48:50.766210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:51.766491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:52.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6533" for this suite. @ 03/27/24 20:48:52.398
• [7.144 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 03/27/24 20:48:52.418
  Mar 27 20:48:52.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename podtemplate @ 03/27/24 20:48:52.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:48:52.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:48:52.473
  STEP: Create a pod template @ 03/27/24 20:48:52.478
  STEP: Replace a pod template @ 03/27/24 20:48:52.49
  Mar 27 20:48:52.513: INFO: Found updated podtemplate annotation: "true"

  Mar 27 20:48:52.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7446" for this suite. @ 03/27/24 20:48:52.533
• [0.135 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 03/27/24 20:48:52.553
  Mar 27 20:48:52.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svcaccounts @ 03/27/24 20:48:52.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:48:52.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:48:52.611
  STEP: creating a ServiceAccount @ 03/27/24 20:48:52.617
  STEP: watching for the ServiceAccount to be added @ 03/27/24 20:48:52.634
  STEP: patching the ServiceAccount @ 03/27/24 20:48:52.642
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 03/27/24 20:48:52.655
  STEP: deleting the ServiceAccount @ 03/27/24 20:48:52.682
  Mar 27 20:48:52.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2742" for this suite. @ 03/27/24 20:48:52.731
• [0.189 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 03/27/24 20:48:52.744
  Mar 27 20:48:52.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 20:48:52.746
  E0327 20:48:52.766826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:48:52.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:48:52.786
  STEP: Setting up server cert @ 03/27/24 20:48:52.845
  E0327 20:48:53.767978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 20:48:54.695
  STEP: Deploying the webhook pod @ 03/27/24 20:48:54.711
  STEP: Wait for the deployment to be ready @ 03/27/24 20:48:54.735
  Mar 27 20:48:54.749: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0327 20:48:54.772590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:55.773119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:56.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:48:56.773161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:57.773822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:48:58.774525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:48:58.779: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:48:59.775720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:00.775972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:00.779: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:49:01.776551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:02.777680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:02.782: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:49:03.778157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:04.778224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:04.779: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 48, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:49:05.779307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:06.780541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 20:49:06.78
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 20:49:06.816
  E0327 20:49:07.780676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:07.819: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 27 20:49:07.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:49:08.781662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:09.782818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:10.782946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:11.783156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:12.783793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 03/27/24 20:49:13.363
  STEP: Creating a custom resource that should be denied by the webhook @ 03/27/24 20:49:13.408
  E0327 20:49:13.784839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:14.785479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 03/27/24 20:49:15.468
  STEP: Updating the custom resource with disallowed data should be denied @ 03/27/24 20:49:15.488
  STEP: Deleting the custom resource should be denied @ 03/27/24 20:49:15.513
  STEP: Remove the offending key and value from the custom resource data @ 03/27/24 20:49:15.533
  STEP: Deleting the updated custom resource should be successful @ 03/27/24 20:49:15.556
  Mar 27 20:49:15.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 20:49:15.785907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-2359" for this suite. @ 03/27/24 20:49:16.36
  STEP: Destroying namespace "webhook-markers-2065" for this suite. @ 03/27/24 20:49:16.382
• [23.680 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 03/27/24 20:49:16.425
  Mar 27 20:49:16.425: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename field-validation @ 03/27/24 20:49:16.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:49:16.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:49:16.62
  STEP: apply creating a deployment @ 03/27/24 20:49:16.627
  Mar 27 20:49:16.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5618" for this suite. @ 03/27/24 20:49:16.709
• [0.306 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 03/27/24 20:49:16.733
  Mar 27 20:49:16.733: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 20:49:16.736
  E0327 20:49:16.786642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:49:16.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:49:16.793
  STEP: Creating service test in namespace statefulset-704 @ 03/27/24 20:49:16.828
  STEP: Looking for a node to schedule stateful set and pod @ 03/27/24 20:49:16.857
  STEP: Creating pod with conflicting port in namespace statefulset-704 @ 03/27/24 20:49:16.88
  STEP: Waiting until pod test-pod will start running in namespace statefulset-704 @ 03/27/24 20:49:16.916
  E0327 20:49:17.787169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:18.788078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-704 @ 03/27/24 20:49:18.94
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-704 @ 03/27/24 20:49:18.952
  Mar 27 20:49:18.999: INFO: Observed stateful pod in namespace: statefulset-704, name: ss-0, uid: 06036a18-182a-4816-84a8-7c3b437729d6, status phase: Pending. Waiting for statefulset controller to delete.
  Mar 27 20:49:19.040: INFO: Observed stateful pod in namespace: statefulset-704, name: ss-0, uid: 06036a18-182a-4816-84a8-7c3b437729d6, status phase: Failed. Waiting for statefulset controller to delete.
  Mar 27 20:49:19.084: INFO: Observed stateful pod in namespace: statefulset-704, name: ss-0, uid: 06036a18-182a-4816-84a8-7c3b437729d6, status phase: Failed. Waiting for statefulset controller to delete.
  Mar 27 20:49:19.099: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-704
  STEP: Removing pod with conflicting port in namespace statefulset-704 @ 03/27/24 20:49:19.099
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-704 and will be in running state @ 03/27/24 20:49:19.154
  E0327 20:49:19.789121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:20.789661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:21.186: INFO: Deleting all statefulset in ns statefulset-704
  Mar 27 20:49:21.195: INFO: Scaling statefulset ss to 0
  E0327 20:49:21.789722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:22.790731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:23.791135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:24.791638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:25.792244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:26.792515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:27.793120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:28.793477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:29.793642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:30.793922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:31.249: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 20:49:31.257: INFO: Deleting statefulset ss
  Mar 27 20:49:31.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-704" for this suite. @ 03/27/24 20:49:31.305
• [14.591 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 03/27/24 20:49:31.327
  Mar 27 20:49:31.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 20:49:31.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:49:31.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:49:31.4
  STEP: creating a Service @ 03/27/24 20:49:31.419
  STEP: watching for the Service to be added @ 03/27/24 20:49:31.441
  Mar 27 20:49:31.445: INFO: Found Service test-service-8snwv in namespace services-2889 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Mar 27 20:49:31.445: INFO: Service test-service-8snwv created
  STEP: Getting /status @ 03/27/24 20:49:31.446
  Mar 27 20:49:31.455: INFO: Service test-service-8snwv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 03/27/24 20:49:31.455
  STEP: watching for the Service to be patched @ 03/27/24 20:49:31.475
  Mar 27 20:49:31.480: INFO: observed Service test-service-8snwv in namespace services-2889 with annotations: map[] & LoadBalancer: {[]}
  Mar 27 20:49:31.480: INFO: Found Service test-service-8snwv in namespace services-2889 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Mar 27 20:49:31.480: INFO: Service test-service-8snwv has service status patched
  STEP: updating the ServiceStatus @ 03/27/24 20:49:31.48
  Mar 27 20:49:31.502: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 03/27/24 20:49:31.502
  Mar 27 20:49:31.508: INFO: Observed Service test-service-8snwv in namespace services-2889 with annotations: map[] & Conditions: {[]}
  Mar 27 20:49:31.508: INFO: Observed event: &Service{ObjectMeta:{test-service-8snwv  services-2889  0ae838c5-c3c7-4f3e-a87d-cc4b0249b739 210798349 0 2024-03-27 20:49:31 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-03-27 20:49:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-03-27 20:49:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.30.29,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.30.29],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Mar 27 20:49:31.508: INFO: Found Service test-service-8snwv in namespace services-2889 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 27 20:49:31.508: INFO: Service test-service-8snwv has service status updated
  STEP: patching the service @ 03/27/24 20:49:31.508
  STEP: watching for the Service to be patched @ 03/27/24 20:49:31.539
  Mar 27 20:49:31.543: INFO: observed Service test-service-8snwv in namespace services-2889 with labels: map[test-service-static:true]
  Mar 27 20:49:31.544: INFO: observed Service test-service-8snwv in namespace services-2889 with labels: map[test-service-static:true]
  Mar 27 20:49:31.545: INFO: observed Service test-service-8snwv in namespace services-2889 with labels: map[test-service-static:true]
  Mar 27 20:49:31.546: INFO: Found Service test-service-8snwv in namespace services-2889 with labels: map[test-service:patched test-service-static:true]
  Mar 27 20:49:31.547: INFO: Service test-service-8snwv patched
  STEP: deleting the service @ 03/27/24 20:49:31.548
  STEP: watching for the Service to be deleted @ 03/27/24 20:49:31.579
  Mar 27 20:49:31.584: INFO: Observed event: ADDED
  Mar 27 20:49:31.584: INFO: Observed event: MODIFIED
  Mar 27 20:49:31.584: INFO: Observed event: MODIFIED
  Mar 27 20:49:31.585: INFO: Observed event: MODIFIED
  Mar 27 20:49:31.585: INFO: Found Service test-service-8snwv in namespace services-2889 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Mar 27 20:49:31.586: INFO: Service test-service-8snwv deleted
  Mar 27 20:49:31.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2889" for this suite. @ 03/27/24 20:49:31.616
• [0.309 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 03/27/24 20:49:31.643
  Mar 27 20:49:31.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename gc @ 03/27/24 20:49:31.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:49:31.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:49:31.729
  STEP: create the deployment @ 03/27/24 20:49:31.738
  W0327 20:49:31.751091      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/27/24 20:49:31.751
  E0327 20:49:31.794406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 03/27/24 20:49:32.28
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 03/27/24 20:49:32.298
  E0327 20:49:32.795837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/27/24 20:49:32.86
  Mar 27 20:49:33.094: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 27 20:49:33.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9638" for this suite. @ 03/27/24 20:49:33.116
• [1.486 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 03/27/24 20:49:33.136
  Mar 27 20:49:33.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubelet-test @ 03/27/24 20:49:33.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:49:33.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:49:33.201
  E0327 20:49:33.796787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:34.797629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:35.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4068" for this suite. @ 03/27/24 20:49:35.32
• [2.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 03/27/24 20:49:35.347
  Mar 27 20:49:35.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename field-validation @ 03/27/24 20:49:35.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:49:35.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:49:35.405
  Mar 27 20:49:35.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:49:35.798035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:36.798178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:37.798883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:38.799381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:39.800265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:40.801568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:41.803150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:42.802949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0327 20:49:43.044321      22 warnings.go:70] unknown field "alpha"
  W0327 20:49:43.045315      22 warnings.go:70] unknown field "beta"
  W0327 20:49:43.045953      22 warnings.go:70] unknown field "delta"
  W0327 20:49:43.046304      22 warnings.go:70] unknown field "epsilon"
  W0327 20:49:43.046669      22 warnings.go:70] unknown field "gamma"
  Mar 27 20:49:43.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2682" for this suite. @ 03/27/24 20:49:43.651
• [8.320 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 03/27/24 20:49:43.667
  Mar 27 20:49:43.667: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename deployment @ 03/27/24 20:49:43.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:49:43.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:49:43.718
  Mar 27 20:49:43.749: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0327 20:49:43.804071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:44.804798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:45.805080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:46.805637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:47.805697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:48.761: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/27/24 20:49:48.762
  Mar 27 20:49:48.762: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0327 20:49:48.806577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:49.807342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:50.770: INFO: Creating deployment "test-rollover-deployment"
  Mar 27 20:49:50.793: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0327 20:49:50.807523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:51.808074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:52.809218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:52.810: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Mar 27 20:49:52.826: INFO: Ensure that both replica sets have 1 created replica
  Mar 27 20:49:52.852: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Mar 27 20:49:52.880: INFO: Updating deployment test-rollover-deployment
  Mar 27 20:49:52.880: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0327 20:49:53.809777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:54.810450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:54.907: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Mar 27 20:49:54.956: INFO: Make sure deployment "test-rollover-deployment" is complete
  Mar 27 20:49:54.973: INFO: all replica sets need to contain the pod-template-hash label
  Mar 27 20:49:54.973: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:49:55.810790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:56.811301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:56.992: INFO: all replica sets need to contain the pod-template-hash label
  Mar 27 20:49:56.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:49:57.811918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:49:58.812109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:49:58.999: INFO: all replica sets need to contain the pod-template-hash label
  Mar 27 20:49:58.999: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:49:59.812267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:00.813234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:00.990: INFO: all replica sets need to contain the pod-template-hash label
  Mar 27 20:50:00.990: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:50:01.812941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:02.813173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:02.989: INFO: all replica sets need to contain the pod-template-hash label
  Mar 27 20:50:02.989: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:50:03.813196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:04.813710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:05.008: INFO: 
  Mar 27 20:50:05.008: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 20, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 20, 49, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 20:50:05.813819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:06.814425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:06.990: INFO: 
  Mar 27 20:50:06.990: INFO: Ensure that both old replica sets have no replicas
  Mar 27 20:50:07.018: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1c9f22f-6997-4ab4-a671-295da2a19ab0",
      ResourceVersion: (string) (len=9) "210798671",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847169390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 27 20:50:07.034: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa7fd1ab-7107-4cd1-8d10-6dfa0136209e",
      ResourceVersion: (string) (len=9) "210798660",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847169392,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e1c9f22f-6997-4ab4-a671-295da2a19ab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 31 63 39 66 32  32 66 2d 36 39 39 37 2d  |\"e1c9f22f-6997-|
              00000120  34 61 62 34 2d 61 36 37  31 2d 32 39 35 64 61 32  |4ab4-a671-295da2|
              00000130  61 31 39 61 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a19ab0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:50:07.037: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Mar 27 20:50:07.037: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2203d4d8-b985-4746-97a5-afe4ab007dea",
      ResourceVersion: (string) (len=9) "210798669",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847169383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e1c9f22f-6997-4ab4-a671-295da2a19ab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 31 63 39 66 32 32 66  2d 36 39 39 37 2d 34 61  |e1c9f22f-6997-4a|
              000000c0  62 34 2d 61 36 37 31 2d  32 39 35 64 61 32 61 31  |b4-a671-295da2a1|
              000000d0  39 61 62 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |9ab0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:50:07.040: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "966a5c36-8f2d-4163-8081-c7a262b9b3d6",
      ResourceVersion: (string) (len=9) "210798607",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847169390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e1c9f22f-6997-4ab4-a671-295da2a19ab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 31 63 39 66 32  32 66 2d 36 39 39 37 2d  |\"e1c9f22f-6997-|
              00000120  34 61 62 34 2d 61 36 37  31 2d 32 39 35 64 61 32  |4ab4-a671-295da2|
              00000130  61 31 39 61 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a19ab0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 20:50:07.053: INFO: Pod "test-rollover-deployment-5d484bf7f9-p2x4c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-p2x4c",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97e72f24-e6c7-4d4b-92ab-fa7762aa0f1c",
      ResourceVersion: (string) (len=9) "210798621",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847169392,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "aa7fd1ab-7107-4cd1-8d10-6dfa0136209e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  37 66 64 31 61 62 2d 37  |d\":\"aa7fd1ab-7|
              00000090  31 30 37 2d 34 63 64 31  2d 38 64 31 30 2d 36 64  |107-4cd1-8d10-6d|
              000000a0  66 61 30 31 33 36 32 30  39 65 5c 22 7d 22 3a 7b  |fa0136209e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 37 5c 22 7d 22 3a  |10.233.69.7\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mndpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mndpg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847169393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.233.69.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.69.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847169393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847169393,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://4e01a0d6b3a1a566b5269e8c435e4ccf960f223aa781beff940e68ef2a1cacfc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 20:50:07.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8495" for this suite. @ 03/27/24 20:50:07.073
• [23.431 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 03/27/24 20:50:07.102
  Mar 27 20:50:07.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename limitrange @ 03/27/24 20:50:07.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:50:07.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:50:07.167
  STEP: Creating LimitRange "e2e-limitrange-qf52g" in namespace "limitrange-946" @ 03/27/24 20:50:07.175
  STEP: Creating another limitRange in another namespace @ 03/27/24 20:50:07.188
  Mar 27 20:50:07.231: INFO: Namespace "e2e-limitrange-qf52g-6271" created
  Mar 27 20:50:07.232: INFO: Creating LimitRange "e2e-limitrange-qf52g" in namespace "e2e-limitrange-qf52g-6271"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-qf52g" @ 03/27/24 20:50:07.249
  Mar 27 20:50:07.259: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-qf52g" in "limitrange-946" namespace @ 03/27/24 20:50:07.26
  Mar 27 20:50:07.279: INFO: LimitRange "e2e-limitrange-qf52g" has been patched
  STEP: Delete LimitRange "e2e-limitrange-qf52g" by Collection with labelSelector: "e2e-limitrange-qf52g=patched" @ 03/27/24 20:50:07.279
  STEP: Confirm that the limitRange "e2e-limitrange-qf52g" has been deleted @ 03/27/24 20:50:07.301
  Mar 27 20:50:07.301: INFO: Requesting list of LimitRange to confirm quantity
  Mar 27 20:50:07.308: INFO: Found 0 LimitRange with label "e2e-limitrange-qf52g=patched"
  Mar 27 20:50:07.309: INFO: LimitRange "e2e-limitrange-qf52g" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-qf52g" @ 03/27/24 20:50:07.309
  Mar 27 20:50:07.321: INFO: Found 1 limitRange
  Mar 27 20:50:07.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-946" for this suite. @ 03/27/24 20:50:07.337
  STEP: Destroying namespace "e2e-limitrange-qf52g-6271" for this suite. @ 03/27/24 20:50:07.355
• [0.269 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 03/27/24 20:50:07.373
  Mar 27 20:50:07.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename statefulset @ 03/27/24 20:50:07.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:50:07.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:50:07.422
  STEP: Creating service test in namespace statefulset-2100 @ 03/27/24 20:50:07.43
  STEP: Creating a new StatefulSet @ 03/27/24 20:50:07.45
  Mar 27 20:50:07.484: INFO: Found 0 stateful pods, waiting for 3
  E0327 20:50:07.814925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:08.815044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:09.815909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:10.815817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:11.815885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:12.815981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:13.816605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:14.816510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:15.817335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:16.817980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:17.494: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:50:17.494: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:50:17.494: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 03/27/24 20:50:17.527
  Mar 27 20:50:17.557: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 03/27/24 20:50:17.557
  E0327 20:50:17.818046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:18.818542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:19.819291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:20.820648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:21.821274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:22.821669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:23.822058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:24.822481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:25.822570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:26.822766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 03/27/24 20:50:27.596
  STEP: Performing a canary update @ 03/27/24 20:50:27.597
  Mar 27 20:50:27.637: INFO: Updating stateful set ss2
  Mar 27 20:50:27.658: INFO: Waiting for Pod statefulset-2100/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0327 20:50:27.823589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:28.823897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:29.824036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:30.824750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:31.825581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:32.825764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:33.826310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:34.827012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:35.827847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:36.828997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 03/27/24 20:50:37.681
  Mar 27 20:50:37.797: INFO: Found 1 stateful pods, waiting for 3
  E0327 20:50:37.828653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:38.829340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:39.833691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:40.833937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:41.834309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:42.834959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:43.835334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:44.835708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:45.836156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:46.836625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:47.810: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:50:47.810: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 27 20:50:47.810: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 03/27/24 20:50:47.824
  E0327 20:50:47.837040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:47.860: INFO: Updating stateful set ss2
  Mar 27 20:50:47.882: INFO: Waiting for Pod statefulset-2100/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0327 20:50:48.837855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:49.838119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:50.838411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:51.839011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:52.839706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:53.840790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:54.841269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:55.842455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:56.842938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:57.843183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:50:57.933: INFO: Updating stateful set ss2
  Mar 27 20:50:57.971: INFO: Waiting for StatefulSet statefulset-2100/ss2 to complete update
  Mar 27 20:50:57.971: INFO: Waiting for Pod statefulset-2100/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0327 20:50:58.843421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:50:59.843561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:00.843716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:01.844999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:02.845633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:03.846776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:04.847532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:05.847778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:06.848021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:07.848571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:51:07.988: INFO: Deleting all statefulset in ns statefulset-2100
  Mar 27 20:51:07.995: INFO: Scaling statefulset ss2 to 0
  E0327 20:51:08.848877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:09.848944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:10.849217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:11.849512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:12.849673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:13.850286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:14.850872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:15.852028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:16.852611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:17.852941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:51:18.032: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 27 20:51:18.039: INFO: Deleting statefulset ss2
  Mar 27 20:51:18.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2100" for this suite. @ 03/27/24 20:51:18.077
• [70.720 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 03/27/24 20:51:18.095
  Mar 27 20:51:18.095: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/27/24 20:51:18.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:18.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:18.135
  STEP: creating a target pod @ 03/27/24 20:51:18.141
  E0327 20:51:18.853424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:19.853515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 03/27/24 20:51:20.199
  E0327 20:51:20.854502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:21.855023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 03/27/24 20:51:22.243
  Mar 27 20:51:22.243: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1580 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:51:22.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:51:22.245: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:51:22.245: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-1580/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Mar 27 20:51:22.401: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 03/27/24 20:51:22.443
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 03/27/24 20:51:22.456
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 03/27/24 20:51:22.482
  Mar 27 20:51:22.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1580" for this suite. @ 03/27/24 20:51:22.513
• [4.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 03/27/24 20:51:22.543
  Mar 27 20:51:22.543: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename containers @ 03/27/24 20:51:22.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:22.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:22.591
  STEP: Creating a pod to test override arguments @ 03/27/24 20:51:22.598
  E0327 20:51:22.855782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:23.856072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:24.856861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:25.857484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:51:26.646
  Mar 27 20:51:26.653: INFO: Trying to get logs from node env1-test-worker-2 pod client-containers-a8c92bf4-d3a5-4e8b-88b2-00c2ecbc0538 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 20:51:26.669
  Mar 27 20:51:26.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7723" for this suite. @ 03/27/24 20:51:26.714
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 03/27/24 20:51:26.737
  Mar 27 20:51:26.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename security-context @ 03/27/24 20:51:26.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:26.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:26.776
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/27/24 20:51:26.781
  E0327 20:51:26.857496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:27.858256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:28.858789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:29.859075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:51:30.841
  Mar 27 20:51:30.848: INFO: Trying to get logs from node env1-test-worker-2 pod security-context-191da01c-11c3-41e0-8f09-cf07568e2568 container test-container: <nil>
  E0327 20:51:30.859927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/27/24 20:51:30.862
  Mar 27 20:51:30.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5575" for this suite. @ 03/27/24 20:51:30.906
• [4.187 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 03/27/24 20:51:30.928
  Mar 27 20:51:30.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename watch @ 03/27/24 20:51:30.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:30.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:30.973
  STEP: getting a starting resourceVersion @ 03/27/24 20:51:30.979
  STEP: starting a background goroutine to produce watch events @ 03/27/24 20:51:30.986
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 03/27/24 20:51:30.986
  E0327 20:51:31.859902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:32.860870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:51:33.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2282" for this suite. @ 03/27/24 20:51:33.795
• [2.918 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 03/27/24 20:51:33.849
  Mar 27 20:51:33.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename emptydir @ 03/27/24 20:51:33.852
  E0327 20:51:33.861867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:33.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:33.906
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/27/24 20:51:33.912
  E0327 20:51:34.862359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:35.862851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:36.863539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:37.864440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:51:37.968
  Mar 27 20:51:37.975: INFO: Trying to get logs from node env1-test-worker-2 pod pod-4b95ab12-8357-40fb-9b14-85699875c44f container test-container: <nil>
  STEP: delete the pod @ 03/27/24 20:51:38
  Mar 27 20:51:38.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2116" for this suite. @ 03/27/24 20:51:38.066
• [4.238 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 03/27/24 20:51:38.089
  Mar 27 20:51:38.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename runtimeclass @ 03/27/24 20:51:38.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:38.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:38.141
  Mar 27 20:51:38.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4834" for this suite. @ 03/27/24 20:51:38.181
• [0.112 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 03/27/24 20:51:38.203
  Mar 27 20:51:38.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 20:51:38.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:38.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:38.246
  STEP: Creating configMap with name configmap-test-volume-071391e9-d520-4d81-bac9-a2d54656e6d6 @ 03/27/24 20:51:38.267
  STEP: Creating a pod to test consume configMaps @ 03/27/24 20:51:38.287
  E0327 20:51:38.865951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:39.865889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:40.866098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:41.866533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:51:42.338
  Mar 27 20:51:42.347: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-237e22bf-623a-4713-a4b4-f951faa67009 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 20:51:42.369
  Mar 27 20:51:42.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8523" for this suite. @ 03/27/24 20:51:42.436
• [4.252 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 03/27/24 20:51:42.48
  Mar 27 20:51:42.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replicaset @ 03/27/24 20:51:42.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:42.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:42.545
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 03/27/24 20:51:42.552
  Mar 27 20:51:42.585: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0327 20:51:42.866879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:43.867251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:44.867935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:45.868375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:46.870004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:51:47.596: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/27/24 20:51:47.596
  STEP: getting scale subresource @ 03/27/24 20:51:47.596
  STEP: updating a scale subresource @ 03/27/24 20:51:47.604
  STEP: verifying the replicaset Spec.Replicas was modified @ 03/27/24 20:51:47.619
  STEP: Patch a scale subresource @ 03/27/24 20:51:47.637
  Mar 27 20:51:47.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8275" for this suite. @ 03/27/24 20:51:47.699
• [5.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 03/27/24 20:51:47.731
  Mar 27 20:51:47.731: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename hostport @ 03/27/24 20:51:47.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:51:47.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:51:47.823
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 03/27/24 20:51:47.848
  E0327 20:51:47.869895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:48.870693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:49.871744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:50.872412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:51.873155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:52.874496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:53.875231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:54.875425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:55.875649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:56.876137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:57.876664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:58.876565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:51:59.876722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.61.1.201 on the node which pod1 resides and expect scheduled @ 03/27/24 20:51:59.958
  E0327 20:52:00.877832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:01.880185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:02.879658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:03.879963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:04.880415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:05.881963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:06.881764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:07.882628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:08.883690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:09.884085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:10.884049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:11.884380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.61.1.201 but use UDP protocol on the node which pod2 resides @ 03/27/24 20:52:12.05
  E0327 20:52:12.884474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:13.885138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:14.885503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:15.885853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:16.886212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:17.887268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:18.887677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:19.888418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:20.888371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:21.888978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:22.889198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:23.889861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:24.890951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:25.891028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:26.891640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:27.892140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:28.892746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:29.892996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:30.893228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:31.893854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:32.894241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:33.895227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:34.895350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:35.895343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 03/27/24 20:52:36.26
  Mar 27 20:52:36.260: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.61.1.201 http://127.0.0.1:54323/hostname] Namespace:hostport-5994 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:52:36.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:52:36.262: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:52:36.262: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5994/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.61.1.201+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.61.1.201, port: 54323 @ 03/27/24 20:52:36.613
  Mar 27 20:52:36.613: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.61.1.201:54323/hostname] Namespace:hostport-5994 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:52:36.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:52:36.614: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:52:36.614: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5994/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.61.1.201%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.61.1.201, port: 54323 UDP @ 03/27/24 20:52:36.783
  Mar 27 20:52:36.783: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.61.1.201 54323] Namespace:hostport-5994 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:52:36.783: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:52:36.784: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:52:36.784: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5994/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.61.1.201+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0327 20:52:36.895982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:37.896497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:38.897228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:39.897735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:40.898185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:41.898887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:52:41.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5994" for this suite. @ 03/27/24 20:52:41.945
• [54.244 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 03/27/24 20:52:41.979
  Mar 27 20:52:41.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:52:41.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:52:42.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:52:42.03
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 20:52:42.035
  E0327 20:52:42.899374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:43.900534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:44.901284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:45.901304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:52:46.085
  Mar 27 20:52:46.092: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-59083be9-b881-4388-8a02-73d4d0146e03 container client-container: <nil>
  STEP: delete the pod @ 03/27/24 20:52:46.113
  Mar 27 20:52:46.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4142" for this suite. @ 03/27/24 20:52:46.17
• [4.206 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 03/27/24 20:52:46.189
  Mar 27 20:52:46.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 20:52:46.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:52:46.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:52:46.245
  STEP: Creating the pod @ 03/27/24 20:52:46.252
  E0327 20:52:46.901682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:47.902143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:52:48.853: INFO: Successfully updated pod "labelsupdatec157a8d5-b40f-4060-aeff-4d7b3881e4a9"
  E0327 20:52:48.901923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:49.902195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:52:50.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 20:52:50.902552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "downward-api-554" for this suite. @ 03/27/24 20:52:50.909
• [4.745 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 03/27/24 20:52:50.936
  Mar 27 20:52:50.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 20:52:50.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:52:50.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:52:50.989
  STEP: Creating a test externalName service @ 03/27/24 20:52:50.994
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5298.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5298.svc.cluster.local; sleep 1; done
   @ 03/27/24 20:52:51.009
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5298.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5298.svc.cluster.local; sleep 1; done
   @ 03/27/24 20:52:51.009
  STEP: creating a pod to probe DNS @ 03/27/24 20:52:51.009
  STEP: submitting the pod to kubernetes @ 03/27/24 20:52:51.009
  E0327 20:52:51.902980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:52.903251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 20:52:53.055
  STEP: looking for the results for each expected name from probers @ 03/27/24 20:52:53.065
  Mar 27 20:52:53.086: INFO: DNS probes using dns-test-7c9d12af-c677-4c3b-89c0-b692cc91895d succeeded

  STEP: changing the externalName to bar.example.com @ 03/27/24 20:52:53.086
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5298.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5298.svc.cluster.local; sleep 1; done
   @ 03/27/24 20:52:53.104
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5298.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5298.svc.cluster.local; sleep 1; done
   @ 03/27/24 20:52:53.104
  STEP: creating a second pod to probe DNS @ 03/27/24 20:52:53.104
  STEP: submitting the pod to kubernetes @ 03/27/24 20:52:53.104
  E0327 20:52:53.903968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:54.904770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 20:52:55.144
  STEP: looking for the results for each expected name from probers @ 03/27/24 20:52:55.152
  Mar 27 20:52:55.163: INFO: File wheezy_udp@dns-test-service-3.dns-5298.svc.cluster.local from pod  dns-5298/dns-test-c4704637-518d-46b3-84d8-3b16c30eb6b4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Mar 27 20:52:55.170: INFO: File jessie_udp@dns-test-service-3.dns-5298.svc.cluster.local from pod  dns-5298/dns-test-c4704637-518d-46b3-84d8-3b16c30eb6b4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Mar 27 20:52:55.170: INFO: Lookups using dns-5298/dns-test-c4704637-518d-46b3-84d8-3b16c30eb6b4 failed for: [wheezy_udp@dns-test-service-3.dns-5298.svc.cluster.local jessie_udp@dns-test-service-3.dns-5298.svc.cluster.local]

  Mar 27 20:52:55.186: INFO: Pod client logs for webserver: 
  Mar 27 20:52:55.208: INFO: Pod client logs for querier: 
  Mar 27 20:52:55.227: INFO: Pod client logs for jessie-querier: 
  E0327 20:52:55.905713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:56.906486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:57.906852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:58.907047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:52:59.907379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:53:00.249: INFO: DNS probes using dns-test-c4704637-518d-46b3-84d8-3b16c30eb6b4 succeeded

  STEP: changing the service to type=ClusterIP @ 03/27/24 20:53:00.249
  W0327 20:53:00.282096      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5298.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5298.svc.cluster.local; sleep 1; done
   @ 03/27/24 20:53:00.282
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5298.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5298.svc.cluster.local; sleep 1; done
   @ 03/27/24 20:53:00.282
  STEP: creating a third pod to probe DNS @ 03/27/24 20:53:00.282
  STEP: submitting the pod to kubernetes @ 03/27/24 20:53:00.29
  E0327 20:53:00.907895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:01.908510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 20:53:02.346
  STEP: looking for the results for each expected name from probers @ 03/27/24 20:53:02.366
  Mar 27 20:53:02.393: INFO: DNS probes using dns-test-204d021d-28ba-42dc-b0e5-faa6c3361ec2 succeeded

  Mar 27 20:53:02.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 20:53:02.412
  STEP: deleting the pod @ 03/27/24 20:53:02.467
  STEP: deleting the pod @ 03/27/24 20:53:02.501
  STEP: deleting the test externalName service @ 03/27/24 20:53:02.558
  STEP: Destroying namespace "dns-5298" for this suite. @ 03/27/24 20:53:02.596
• [11.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 03/27/24 20:53:02.616
  Mar 27 20:53:02.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename events @ 03/27/24 20:53:02.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:02.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:02.688
  STEP: creating a test event @ 03/27/24 20:53:02.696
  STEP: listing events in all namespaces @ 03/27/24 20:53:02.716
  STEP: listing events in test namespace @ 03/27/24 20:53:02.728
  STEP: listing events with field selection filtering on source @ 03/27/24 20:53:02.737
  STEP: listing events with field selection filtering on reportingController @ 03/27/24 20:53:02.746
  STEP: getting the test event @ 03/27/24 20:53:02.756
  STEP: patching the test event @ 03/27/24 20:53:02.762
  STEP: getting the test event @ 03/27/24 20:53:02.788
  STEP: updating the test event @ 03/27/24 20:53:02.798
  STEP: getting the test event @ 03/27/24 20:53:02.818
  STEP: deleting the test event @ 03/27/24 20:53:02.825
  STEP: listing events in all namespaces @ 03/27/24 20:53:02.843
  STEP: listing events in test namespace @ 03/27/24 20:53:02.854
  Mar 27 20:53:02.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1933" for this suite. @ 03/27/24 20:53:02.876
• [0.280 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 03/27/24 20:53:02.897
  Mar 27 20:53:02.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename subpath @ 03/27/24 20:53:02.899
  E0327 20:53:02.909760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:02.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:02.96
  STEP: Setting up data @ 03/27/24 20:53:02.969
  STEP: Creating pod pod-subpath-test-downwardapi-wkcb @ 03/27/24 20:53:03.006
  STEP: Creating a pod to test atomic-volume-subpath @ 03/27/24 20:53:03.006
  E0327 20:53:03.909796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:04.910048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:05.910312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:06.911225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:07.912325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:08.913071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:09.913176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:10.914271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:11.914852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:12.915209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:13.915495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:14.915702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:15.916218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:16.916514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:17.916728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:18.917675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:19.918024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:20.918443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:21.918946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:22.919532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:23.919783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:24.920424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:25.920632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:26.921222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:53:27.171
  Mar 27 20:53:27.180: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-downwardapi-wkcb container test-container-subpath-downwardapi-wkcb: <nil>
  STEP: delete the pod @ 03/27/24 20:53:27.202
  STEP: Deleting pod pod-subpath-test-downwardapi-wkcb @ 03/27/24 20:53:27.234
  Mar 27 20:53:27.235: INFO: Deleting pod "pod-subpath-test-downwardapi-wkcb" in namespace "subpath-9846"
  Mar 27 20:53:27.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9846" for this suite. @ 03/27/24 20:53:27.253
• [24.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 03/27/24 20:53:27.283
  Mar 27 20:53:27.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/27/24 20:53:27.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:27.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:27.34
  Mar 27 20:53:27.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 20:53:27.921923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:28.922997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:29.923437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:30.924038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:31.924360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:32.925219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:33.925287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:34.925940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:53:35.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4686" for this suite. @ 03/27/24 20:53:35.775
• [8.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 03/27/24 20:53:35.81
  Mar 27 20:53:35.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:53:35.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:35.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:35.871
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 20:53:35.877
  E0327 20:53:35.926939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:36.927502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:37.928166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:38.928377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:53:39.929
  E0327 20:53:39.929630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:53:39.939: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-3b5e8dc7-4b0b-4ada-a1ca-0074909b29fd container client-container: <nil>
  STEP: delete the pod @ 03/27/24 20:53:39.956
  Mar 27 20:53:39.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4165" for this suite. @ 03/27/24 20:53:40.02
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 03/27/24 20:53:40.045
  Mar 27 20:53:40.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename field-validation @ 03/27/24 20:53:40.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:40.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:40.11
  STEP: apply creating a deployment @ 03/27/24 20:53:40.117
  Mar 27 20:53:40.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6382" for this suite. @ 03/27/24 20:53:40.175
• [0.148 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 03/27/24 20:53:40.196
  Mar 27 20:53:40.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 20:53:40.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:40.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:40.263
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/27/24 20:53:40.269
  Mar 27 20:53:40.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-3671 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Mar 27 20:53:40.486: INFO: stderr: ""
  Mar 27 20:53:40.486: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 03/27/24 20:53:40.486
  Mar 27 20:53:40.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-3671 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Mar 27 20:53:40.730: INFO: stderr: ""
  Mar 27 20:53:40.730: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/27/24 20:53:40.73
  Mar 27 20:53:40.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-3671 delete pods e2e-test-httpd-pod'
  E0327 20:53:40.930863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:41.931308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:42.931996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:53:43.260: INFO: stderr: ""
  Mar 27 20:53:43.260: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Mar 27 20:53:43.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3671" for this suite. @ 03/27/24 20:53:43.275
• [3.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 03/27/24 20:53:43.295
  Mar 27 20:53:43.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 20:53:43.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:43.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:43.37
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 20:53:43.377
  E0327 20:53:43.932885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:44.933900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:45.938091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:46.938134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:53:47.431
  Mar 27 20:53:47.438: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-7cd57847-a2b5-47b1-870d-b622c950766a container client-container: <nil>
  STEP: delete the pod @ 03/27/24 20:53:47.456
  Mar 27 20:53:47.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2903" for this suite. @ 03/27/24 20:53:47.513
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 03/27/24 20:53:47.536
  Mar 27 20:53:47.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 20:53:47.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:47.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:47.595
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8915.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8915.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 03/27/24 20:53:47.6
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8915.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8915.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 03/27/24 20:53:47.601
  STEP: creating a pod to probe /etc/hosts @ 03/27/24 20:53:47.602
  STEP: submitting the pod to kubernetes @ 03/27/24 20:53:47.603
  E0327 20:53:47.938527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:48.939485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 20:53:49.645
  STEP: looking for the results for each expected name from probers @ 03/27/24 20:53:49.656
  Mar 27 20:53:49.713: INFO: DNS probes using dns-8915/dns-test-97b13cb9-9cd7-4bc2-add2-dc22a68f90a0 succeeded

  Mar 27 20:53:49.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 20:53:49.735
  STEP: Destroying namespace "dns-8915" for this suite. @ 03/27/24 20:53:49.774
• [2.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 03/27/24 20:53:49.817
  Mar 27 20:53:49.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:53:49.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:49.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:49.889
  STEP: creating secret secrets-3146/secret-test-f5e671ba-cc23-49a9-8063-179bbe53e1af @ 03/27/24 20:53:49.896
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:53:49.914
  E0327 20:53:49.940337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:50.941047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:51.941652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:52.942039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:53.942929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:53:53.979
  Mar 27 20:53:53.988: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-a80037dd-8130-450a-afa6-900835c014e3 container env-test: <nil>
  STEP: delete the pod @ 03/27/24 20:53:54.005
  Mar 27 20:53:54.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3146" for this suite. @ 03/27/24 20:53:54.06
• [4.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 03/27/24 20:53:54.082
  Mar 27 20:53:54.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 20:53:54.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:54.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:54.129
  STEP: Creating a pod to test downward API volume plugin @ 03/27/24 20:53:54.138
  E0327 20:53:54.943366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:55.943909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:56.944286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:57.944743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:53:58.186
  Mar 27 20:53:58.193: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-601e4111-cfbc-4863-917c-0139e40de6cb container client-container: <nil>
  STEP: delete the pod @ 03/27/24 20:53:58.208
  Mar 27 20:53:58.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7837" for this suite. @ 03/27/24 20:53:58.256
• [4.189 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 03/27/24 20:53:58.273
  Mar 27 20:53:58.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename secrets @ 03/27/24 20:53:58.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:53:58.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:53:58.328
  STEP: Creating secret with name secret-test-ba65f24f-29a7-4982-9536-45e3557180c1 @ 03/27/24 20:53:58.342
  STEP: Creating a pod to test consume secrets @ 03/27/24 20:53:58.363
  E0327 20:53:58.945166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:53:59.945655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:00.946714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:01.946710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:54:02.428
  Mar 27 20:54:02.439: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-14ccb615-5d43-464a-9c2f-9a117029ac94 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:54:02.458
  Mar 27 20:54:02.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1541" for this suite. @ 03/27/24 20:54:02.516
• [4.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 03/27/24 20:54:02.556
  Mar 27 20:54:02.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename field-validation @ 03/27/24 20:54:02.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:54:02.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:54:02.603
  Mar 27 20:54:02.612: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  W0327 20:54:02.614494      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00684c8b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0327 20:54:02.947221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:03.948111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:04.948865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:05.949474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:06.949990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:07.950228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:08.950712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:09.951206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0327 20:54:10.251741      22 warnings.go:70] unknown field "alpha"
  W0327 20:54:10.251812      22 warnings.go:70] unknown field "beta"
  W0327 20:54:10.251832      22 warnings.go:70] unknown field "delta"
  W0327 20:54:10.251849      22 warnings.go:70] unknown field "epsilon"
  W0327 20:54:10.251865      22 warnings.go:70] unknown field "gamma"
  Mar 27 20:54:10.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9931" for this suite. @ 03/27/24 20:54:10.874
• [8.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 03/27/24 20:54:10.892
  Mar 27 20:54:10.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 20:54:10.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:54:10.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:54:10.948
  E0327 20:54:10.951134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create set of pods @ 03/27/24 20:54:10.953
  Mar 27 20:54:10.976: INFO: created test-pod-1
  Mar 27 20:54:10.993: INFO: created test-pod-2
  Mar 27 20:54:11.024: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 03/27/24 20:54:11.024
  E0327 20:54:11.951601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:12.952250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 03/27/24 20:54:13.158
  Mar 27 20:54:13.169: INFO: Pod quantity 3 is different from expected quantity 0
  E0327 20:54:13.952354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:54:14.182: INFO: Pod quantity 3 is different from expected quantity 0
  E0327 20:54:14.953089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:54:15.182: INFO: Pod quantity 1 is different from expected quantity 0
  E0327 20:54:15.953918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:54:16.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4343" for this suite. @ 03/27/24 20:54:16.196
• [5.348 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 03/27/24 20:54:16.246
  Mar 27 20:54:16.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pod-network-test @ 03/27/24 20:54:16.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:54:16.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:54:16.314
  STEP: Performing setup for networking test in namespace pod-network-test-6785 @ 03/27/24 20:54:16.324
  STEP: creating a selector @ 03/27/24 20:54:16.325
  STEP: Creating the service pods in kubernetes @ 03/27/24 20:54:16.326
  Mar 27 20:54:16.326: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0327 20:54:16.955211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:17.955414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:18.956032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:19.956396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:20.956661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:21.956934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:22.957787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:23.958362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:24.958678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:25.958938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:26.959823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:27.960239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:28.961196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:29.961919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:30.962747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:31.963523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:32.963996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:33.964890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:34.965148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:35.966392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:36.966837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:37.967194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:38.967908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:39.969217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:40.969952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:41.970642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:42.971627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:43.972317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:44.972379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:45.972597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:46.973834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:47.975039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:48.975348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:49.976276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:50.977269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:51.977992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/27/24 20:54:52.792
  E0327 20:54:52.978165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:53.979296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:54:54.849: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 27 20:54:54.849: INFO: Breadth first check of 10.233.67.84 on host 10.61.1.200...
  Mar 27 20:54:54.857: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.69.35:9080/dial?request=hostname&protocol=http&host=10.233.67.84&port=8083&tries=1'] Namespace:pod-network-test-6785 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:54:54.858: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:54:54.861: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:54:54.861: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6785/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.69.35%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.67.84%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0327 20:54:54.980362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:54:54.995: INFO: Waiting for responses: map[]
  Mar 27 20:54:54.995: INFO: reached 10.233.67.84 after 0/1 tries
  Mar 27 20:54:54.995: INFO: Breadth first check of 10.233.68.33 on host 10.61.1.201...
  Mar 27 20:54:55.004: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.69.35:9080/dial?request=hostname&protocol=http&host=10.233.68.33&port=8083&tries=1'] Namespace:pod-network-test-6785 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:54:55.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:54:55.006: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:54:55.007: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6785/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.69.35%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.68.33%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 27 20:54:55.148: INFO: Waiting for responses: map[]
  Mar 27 20:54:55.149: INFO: reached 10.233.68.33 after 0/1 tries
  Mar 27 20:54:55.149: INFO: Breadth first check of 10.233.69.34 on host 10.61.1.202...
  Mar 27 20:54:55.158: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.69.35:9080/dial?request=hostname&protocol=http&host=10.233.69.34&port=8083&tries=1'] Namespace:pod-network-test-6785 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 27 20:54:55.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  Mar 27 20:54:55.160: INFO: ExecWithOptions: Clientset creation
  Mar 27 20:54:55.160: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6785/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.69.35%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.69.34%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 27 20:54:55.323: INFO: Waiting for responses: map[]
  Mar 27 20:54:55.323: INFO: reached 10.233.69.34 after 0/1 tries
  Mar 27 20:54:55.324: INFO: Going to retry 0 out of 3 pods....
  Mar 27 20:54:55.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6785" for this suite. @ 03/27/24 20:54:55.339
• [39.119 seconds]
------------------------------
S
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 03/27/24 20:54:55.366
  Mar 27 20:54:55.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 20:54:55.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:54:55.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:54:55.412
  STEP: creating a collection of services @ 03/27/24 20:54:55.418
  Mar 27 20:54:55.418: INFO: Creating e2e-svc-a-zk5qf
  Mar 27 20:54:55.443: INFO: Creating e2e-svc-b-h2r5n
  Mar 27 20:54:55.484: INFO: Creating e2e-svc-c-rlv4f
  STEP: deleting service collection @ 03/27/24 20:54:55.522
  Mar 27 20:54:55.607: INFO: Collection of services has been deleted
  Mar 27 20:54:55.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-524" for this suite. @ 03/27/24 20:54:55.621
• [0.271 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 03/27/24 20:54:55.64
  Mar 27 20:54:55.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename replication-controller @ 03/27/24 20:54:55.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:54:55.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:54:55.695
  STEP: Creating replication controller my-hostname-basic-42732fb5-1f80-4d22-ae98-88ff00f2ca3b @ 03/27/24 20:54:55.703
  Mar 27 20:54:55.730: INFO: Pod name my-hostname-basic-42732fb5-1f80-4d22-ae98-88ff00f2ca3b: Found 0 pods out of 1
  E0327 20:54:55.981125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:56.981994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:57.982693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:58.983685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:54:59.984260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:00.739: INFO: Pod name my-hostname-basic-42732fb5-1f80-4d22-ae98-88ff00f2ca3b: Found 1 pods out of 1
  Mar 27 20:55:00.739: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-42732fb5-1f80-4d22-ae98-88ff00f2ca3b" are running
  Mar 27 20:55:00.748: INFO: Pod "my-hostname-basic-42732fb5-1f80-4d22-ae98-88ff00f2ca3b-jsr9j" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:54:55 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:54:56 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:54:56 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-27 20:54:55 +0000 UTC Reason: Message:}])
  Mar 27 20:55:00.748: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/27/24 20:55:00.748
  Mar 27 20:55:00.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3352" for this suite. @ 03/27/24 20:55:00.815
• [5.197 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 03/27/24 20:55:00.839
  Mar 27 20:55:00.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 20:55:00.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:55:00.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:55:00.916
  STEP: Creating configMap with name configmap-test-volume-eab0e05f-61f2-49e8-805c-eaefb67ea79d @ 03/27/24 20:55:00.923
  STEP: Creating a pod to test consume configMaps @ 03/27/24 20:55:00.936
  E0327 20:55:00.985311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:01.985785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:02.986484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:03.986822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:55:04.983
  E0327 20:55:04.987013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:04.989: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-226fde9d-f98e-466c-9dac-7de5007208ce container configmap-volume-test: <nil>
  STEP: delete the pod @ 03/27/24 20:55:05.009
  Mar 27 20:55:05.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9080" for this suite. @ 03/27/24 20:55:05.063
• [4.239 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 03/27/24 20:55:05.079
  Mar 27 20:55:05.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 20:55:05.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:55:05.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:55:05.136
  STEP: Creating configMap with name configmap-test-volume-map-14032598-17f0-4e51-93f0-55c5e6b1091d @ 03/27/24 20:55:05.145
  STEP: Creating a pod to test consume configMaps @ 03/27/24 20:55:05.161
  E0327 20:55:05.987900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:06.988109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:07.989528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:08.990200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:55:09.215
  Mar 27 20:55:09.222: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-e5cc012d-f44b-4182-9f24-de3409416e7a container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 20:55:09.238
  Mar 27 20:55:09.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5674" for this suite. @ 03/27/24 20:55:09.286
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 03/27/24 20:55:09.303
  Mar 27 20:55:09.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-pred @ 03/27/24 20:55:09.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:55:09.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:55:09.379
  Mar 27 20:55:09.388: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 27 20:55:09.415: INFO: Waiting for terminating namespaces to be deleted...
  Mar 27 20:55:09.424: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Mar 27 20:55:09.457: INFO: filebeat-filebeat-k4hfb from filebeat started at 2024-03-27 13:56:12 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.457: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:55:09.458: INFO: kube-flannel-r8g5h from kube-system started at 2024-01-09 16:24:44 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.458: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:55:09.458: INFO: kube-proxy-dd6db from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.459: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:55:09.459: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.459: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:55:09.459: INFO: nodelocaldns-9mtv9 from kube-system started at 2024-02-26 17:16:13 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.460: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:55:09.460: INFO: vsphere-csi-node-254vc from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:09.461: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:55:09.461: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:55:09.461: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:55:09.461: INFO: prometheus-kube-prometheus-operator-59885c5d4b-hkhxh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.461: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Mar 27 20:55:09.462: INFO: prometheus-kube-state-metrics-6967744598-dt2rh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.462: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Mar 27 20:55:09.462: INFO: prometheus-prometheus-node-exporter-rmr74 from prometheus started at 2024-03-06 21:46:58 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.462: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:55:09.463: INFO: sonobuoy from sonobuoy started at 2024-03-27 19:17:40 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.463: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 27 20:55:09.463: INFO: sonobuoy-e2e-job-951e43e969974e8d from sonobuoy started at 2024-03-27 19:17:41 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:09.463: INFO: 	Container e2e ready: true, restart count 0
  Mar 27 20:55:09.464: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:09.464: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-xgb4f from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:09.464: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:09.465: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:55:09.465: INFO: traefik-ingress-r65nd from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.465: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 20:55:09.466: INFO: velero-549955fd6-nv4rr from velero started at 2024-03-27 19:23:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.466: INFO: 	Container velero ready: true, restart count 0
  Mar 27 20:55:09.466: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Mar 27 20:55:09.503: INFO: filebeat-filebeat-vtxl5 from filebeat started at 2024-03-27 13:56:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.503: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:55:09.503: INFO: kube-flannel-jxf5s from kube-system started at 2024-01-09 16:24:09 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.503: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:55:09.503: INFO: kube-proxy-hkdmw from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.503: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:55:09.503: INFO: metrics-server-6b9559b787-jbq7p from kube-system started at 2024-02-26 17:54:21 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.503: INFO: 	Container metrics-server ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: nodelocaldns-qntdt from kube-system started at 2024-02-26 17:16:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: vsphere-csi-node-8bf9l from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-03-06 21:46:51 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container config-reloader ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: 	Container prometheus ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: prometheus-prometheus-node-exporter-9zlbg from prometheus started at 2024-03-06 21:46:32 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: thanos-query-755b649898-rkp2f from prometheus started at 2024-03-27 19:23:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container query ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-zcz72 from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: traefik-ingress-4xq5p from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.504: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 20:55:09.504: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  Mar 27 20:55:09.549: INFO: filebeat-filebeat-z9sm8 from filebeat started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.550: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:55:09.551: INFO: kube-flannel-hlhld from kube-system started at 2024-01-11 00:55:50 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.551: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:55:09.552: INFO: kube-proxy-k2g55 from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.552: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:55:09.552: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-03-05 18:33:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.553: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:55:09.553: INFO: nodelocaldns-d8b8p from kube-system started at 2024-02-26 17:16:09 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.554: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:55:09.554: INFO: vsphere-csi-node-tmrkr from kube-system started at 2024-03-27 16:22:46 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:09.555: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:55:09.555: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:55:09.556: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:55:09.556: INFO: prometheus-prometheus-node-exporter-24q6b from prometheus started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.557: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:55:09.557: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-669rl from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:09.558: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:09.559: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:55:09.559: INFO: traefik-ingress-sblkr from traefik-ingress started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:09.560: INFO: 	Container traefik-ingress ready: true, restart count 0
  STEP: verifying the node has the label node env1-test-worker-0 @ 03/27/24 20:55:09.904
  STEP: verifying the node has the label node env1-test-worker-1 @ 03/27/24 20:55:09.965
  E0327 20:55:09.992515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node has the label node env1-test-worker-2 @ 03/27/24 20:55:10.035
  Mar 27 20:55:10.092: INFO: Pod filebeat-filebeat-k4hfb requesting resource cpu=200m on Node env1-test-worker-0
  Mar 27 20:55:10.092: INFO: Pod filebeat-filebeat-vtxl5 requesting resource cpu=200m on Node env1-test-worker-1
  Mar 27 20:55:10.092: INFO: Pod filebeat-filebeat-z9sm8 requesting resource cpu=200m on Node env1-test-worker-2
  Mar 27 20:55:10.092: INFO: Pod kube-flannel-hlhld requesting resource cpu=150m on Node env1-test-worker-2
  Mar 27 20:55:10.092: INFO: Pod kube-flannel-jxf5s requesting resource cpu=150m on Node env1-test-worker-1
  Mar 27 20:55:10.092: INFO: Pod kube-flannel-r8g5h requesting resource cpu=150m on Node env1-test-worker-0
  Mar 27 20:55:10.092: INFO: Pod kube-proxy-dd6db requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.092: INFO: Pod kube-proxy-hkdmw requesting resource cpu=0m on Node env1-test-worker-1
  Mar 27 20:55:10.092: INFO: Pod kube-proxy-k2g55 requesting resource cpu=0m on Node env1-test-worker-2
  Mar 27 20:55:10.092: INFO: Pod metrics-server-6b9559b787-jbq7p requesting resource cpu=100m on Node env1-test-worker-1
  Mar 27 20:55:10.092: INFO: Pod nginx-proxy-env1-test-worker-0 requesting resource cpu=25m on Node env1-test-worker-0
  Mar 27 20:55:10.092: INFO: Pod nginx-proxy-env1-test-worker-1 requesting resource cpu=25m on Node env1-test-worker-1
  Mar 27 20:55:10.092: INFO: Pod nginx-proxy-env1-test-worker-2 requesting resource cpu=25m on Node env1-test-worker-2
  Mar 27 20:55:10.093: INFO: Pod nodelocaldns-9mtv9 requesting resource cpu=100m on Node env1-test-worker-0
  Mar 27 20:55:10.093: INFO: Pod nodelocaldns-d8b8p requesting resource cpu=100m on Node env1-test-worker-2
  Mar 27 20:55:10.093: INFO: Pod nodelocaldns-qntdt requesting resource cpu=100m on Node env1-test-worker-1
  Mar 27 20:55:10.093: INFO: Pod vsphere-csi-node-254vc requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.093: INFO: Pod vsphere-csi-node-8bf9l requesting resource cpu=0m on Node env1-test-worker-1
  Mar 27 20:55:10.093: INFO: Pod vsphere-csi-node-tmrkr requesting resource cpu=0m on Node env1-test-worker-2
  Mar 27 20:55:10.093: INFO: Pod prometheus-kube-prometheus-operator-59885c5d4b-hkhxh requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.093: INFO: Pod prometheus-kube-state-metrics-6967744598-dt2rh requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.093: INFO: Pod prometheus-prometheus-kube-prometheus-prometheus-0 requesting resource cpu=400m on Node env1-test-worker-1
  Mar 27 20:55:10.093: INFO: Pod prometheus-prometheus-node-exporter-24q6b requesting resource cpu=0m on Node env1-test-worker-2
  Mar 27 20:55:10.093: INFO: Pod prometheus-prometheus-node-exporter-9zlbg requesting resource cpu=0m on Node env1-test-worker-1
  Mar 27 20:55:10.093: INFO: Pod prometheus-prometheus-node-exporter-rmr74 requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.093: INFO: Pod thanos-query-755b649898-rkp2f requesting resource cpu=10m on Node env1-test-worker-1
  Mar 27 20:55:10.093: INFO: Pod sonobuoy requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.093: INFO: Pod sonobuoy-e2e-job-951e43e969974e8d requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.093: INFO: Pod sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-669rl requesting resource cpu=0m on Node env1-test-worker-2
  Mar 27 20:55:10.093: INFO: Pod sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-xgb4f requesting resource cpu=0m on Node env1-test-worker-0
  Mar 27 20:55:10.094: INFO: Pod sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-zcz72 requesting resource cpu=0m on Node env1-test-worker-1
  Mar 27 20:55:10.094: INFO: Pod traefik-ingress-4xq5p requesting resource cpu=300m on Node env1-test-worker-1
  Mar 27 20:55:10.094: INFO: Pod traefik-ingress-r65nd requesting resource cpu=300m on Node env1-test-worker-0
  Mar 27 20:55:10.094: INFO: Pod traefik-ingress-sblkr requesting resource cpu=300m on Node env1-test-worker-2
  Mar 27 20:55:10.094: INFO: Pod velero-549955fd6-nv4rr requesting resource cpu=500m on Node env1-test-worker-0
  STEP: Starting Pods to consume most of the cluster CPU. @ 03/27/24 20:55:10.094
  Mar 27 20:55:10.094: INFO: Creating a pod which consumes cpu=1907m on Node env1-test-worker-0
  Mar 27 20:55:10.126: INFO: Creating a pod which consumes cpu=1900m on Node env1-test-worker-1
  Mar 27 20:55:10.148: INFO: Creating a pod which consumes cpu=2257m on Node env1-test-worker-2
  E0327 20:55:10.994984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:11.994269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 03/27/24 20:55:12.214
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9a6500a9-19b2-46ef-a1fb-8e60137771f3.17c0ba7e56f69bbb], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7360/filler-pod-9a6500a9-19b2-46ef-a1fb-8e60137771f3 to env1-test-worker-2] @ 03/27/24 20:55:12.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9a6500a9-19b2-46ef-a1fb-8e60137771f3.17c0ba7e7d4844f6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9a6500a9-19b2-46ef-a1fb-8e60137771f3.17c0ba7e7e3897d3], Reason = [Created], Message = [Created container filler-pod-9a6500a9-19b2-46ef-a1fb-8e60137771f3] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9a6500a9-19b2-46ef-a1fb-8e60137771f3.17c0ba7e8ab2cc53], Reason = [Started], Message = [Started container filler-pod-9a6500a9-19b2-46ef-a1fb-8e60137771f3] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cdb38053-12a2-4402-a1d3-88a1f865aa6f.17c0ba7e56f2e1d3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7360/filler-pod-cdb38053-12a2-4402-a1d3-88a1f865aa6f to env1-test-worker-1] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cdb38053-12a2-4402-a1d3-88a1f865aa6f.17c0ba7e7ddf0be3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cdb38053-12a2-4402-a1d3-88a1f865aa6f.17c0ba7e7f02ae20], Reason = [Created], Message = [Created container filler-pod-cdb38053-12a2-4402-a1d3-88a1f865aa6f] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cdb38053-12a2-4402-a1d3-88a1f865aa6f.17c0ba7e8b2ece0d], Reason = [Started], Message = [Started container filler-pod-cdb38053-12a2-4402-a1d3-88a1f865aa6f] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e41f7618-f464-428e-a9e3-7611a3bd58d0.17c0ba7e53ed2e43], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7360/filler-pod-e41f7618-f464-428e-a9e3-7611a3bd58d0 to env1-test-worker-0] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e41f7618-f464-428e-a9e3-7611a3bd58d0.17c0ba7e7cee8f7a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e41f7618-f464-428e-a9e3-7611a3bd58d0.17c0ba7e7de96ad0], Reason = [Created], Message = [Created container filler-pod-e41f7618-f464-428e-a9e3-7611a3bd58d0] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e41f7618-f464-428e-a9e3-7611a3bd58d0.17c0ba7e8a29f675], Reason = [Started], Message = [Started container filler-pod-e41f7618-f464-428e-a9e3-7611a3bd58d0] @ 03/27/24 20:55:12.227
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c0ba7ed1abaae5], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 3 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling..] @ 03/27/24 20:55:12.266
  E0327 20:55:12.995151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node env1-test-worker-1 @ 03/27/24 20:55:13.266
  STEP: verifying the node doesn't have the label node @ 03/27/24 20:55:13.31
  STEP: removing the label node off the node env1-test-worker-2 @ 03/27/24 20:55:13.324
  STEP: verifying the node doesn't have the label node @ 03/27/24 20:55:13.361
  STEP: removing the label node off the node env1-test-worker-0 @ 03/27/24 20:55:13.371
  STEP: verifying the node doesn't have the label node @ 03/27/24 20:55:13.414
  Mar 27 20:55:13.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7360" for this suite. @ 03/27/24 20:55:13.443
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 03/27/24 20:55:13.463
  Mar 27 20:55:13.463: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename downward-api @ 03/27/24 20:55:13.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:55:13.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:55:13.525
  STEP: Creating a pod to test downward api env vars @ 03/27/24 20:55:13.535
  E0327 20:55:13.996097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:14.996411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:15.996761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:16.997484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 20:55:17.622
  Mar 27 20:55:17.630: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-cd0296e1-0051-4140-a128-9a1868601790 container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 20:55:17.648
  Mar 27 20:55:17.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9383" for this suite. @ 03/27/24 20:55:17.715
• [4.267 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 03/27/24 20:55:17.731
  Mar 27 20:55:17.731: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename daemonsets @ 03/27/24 20:55:17.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:55:17.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:55:17.81
  STEP: Creating simple DaemonSet "daemon-set" @ 03/27/24 20:55:17.902
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/27/24 20:55:17.922
  Mar 27 20:55:17.940: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:17.940: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:17.940: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:17.949: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:55:17.949: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:55:17.997475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:18.967: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:18.968: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:18.968: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:18.979: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:55:18.979: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:55:18.998296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:19.966: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:19.966: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:19.967: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:19.974: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 20:55:19.974: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 03/27/24 20:55:19.996
  E0327 20:55:19.998528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:20.005: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 03/27/24 20:55:20.005
  Mar 27 20:55:20.039: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 03/27/24 20:55:20.039
  Mar 27 20:55:20.043: INFO: Observed &DaemonSet event: ADDED
  Mar 27 20:55:20.044: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.044: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.045: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.045: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.045: INFO: Found daemon set daemon-set in namespace daemonsets-1527 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 27 20:55:20.045: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 03/27/24 20:55:20.045
  STEP: watching for the daemon set status to be patched @ 03/27/24 20:55:20.072
  Mar 27 20:55:20.076: INFO: Observed &DaemonSet event: ADDED
  Mar 27 20:55:20.077: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.077: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.078: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.079: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.079: INFO: Observed daemon set daemon-set in namespace daemonsets-1527 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 27 20:55:20.080: INFO: Observed &DaemonSet event: MODIFIED
  Mar 27 20:55:20.080: INFO: Found daemon set daemon-set in namespace daemonsets-1527 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Mar 27 20:55:20.081: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 03/27/24 20:55:20.102
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1527, will wait for the garbage collector to delete the pods @ 03/27/24 20:55:20.103
  Mar 27 20:55:20.194: INFO: Deleting DaemonSet.extensions daemon-set took: 25.052867ms
  Mar 27 20:55:20.295: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.709206ms
  E0327 20:55:21.000286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:22.001060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:23.001531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:23.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:55:23.007: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 27 20:55:23.019: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210801453"},"items":null}

  Mar 27 20:55:23.029: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210801453"},"items":null}

  Mar 27 20:55:23.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1527" for this suite. @ 03/27/24 20:55:23.094
• [5.382 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 03/27/24 20:55:23.119
  Mar 27 20:55:23.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename daemonsets @ 03/27/24 20:55:23.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:55:23.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:55:23.188
  STEP: Creating a simple DaemonSet "daemon-set" @ 03/27/24 20:55:23.269
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/27/24 20:55:23.289
  Mar 27 20:55:23.315: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:23.315: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:23.316: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:23.331: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:55:23.332: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:55:24.002568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:24.348: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:24.349: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:24.349: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:24.367: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:55:24.367: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0327 20:55:25.002925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:25.345: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:25.346: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:25.347: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:25.356: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:55:25.356: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0327 20:55:26.003590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:26.365: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:26.365: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:26.365: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:26.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 20:55:26.390: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 03/27/24 20:55:26.399
  Mar 27 20:55:26.455: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:26.455: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:26.455: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:26.515: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:55:26.515: INFO: Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E0327 20:55:27.004536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:27.542: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:27.542: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:27.542: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:27.553: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 27 20:55:27.553: INFO: Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E0327 20:55:28.004712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:28.532: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:28.533: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:28.533: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Mar 27 20:55:28.544: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 27 20:55:28.544: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 03/27/24 20:55:28.544
  STEP: Deleting DaemonSet "daemon-set" @ 03/27/24 20:55:28.569
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3309, will wait for the garbage collector to delete the pods @ 03/27/24 20:55:28.569
  Mar 27 20:55:28.642: INFO: Deleting DaemonSet.extensions daemon-set took: 15.376269ms
  Mar 27 20:55:28.743: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.895275ms
  E0327 20:55:29.005657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:30.006407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:31.007084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 20:55:31.051: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 27 20:55:31.051: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 27 20:55:31.058: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210801585"},"items":null}

  Mar 27 20:55:31.066: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210801585"},"items":null}

  Mar 27 20:55:31.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3309" for this suite. @ 03/27/24 20:55:31.123
• [8.021 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 03/27/24 20:55:31.145
  Mar 27 20:55:31.145: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-pred @ 03/27/24 20:55:31.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 20:55:31.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 20:55:31.195
  Mar 27 20:55:31.200: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 27 20:55:31.227: INFO: Waiting for terminating namespaces to be deleted...
  Mar 27 20:55:31.235: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Mar 27 20:55:31.264: INFO: filebeat-filebeat-k4hfb from filebeat started at 2024-03-27 13:56:12 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.264: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:55:31.264: INFO: kube-flannel-r8g5h from kube-system started at 2024-01-09 16:24:44 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.264: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:55:31.264: INFO: kube-proxy-dd6db from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.264: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:55:31.264: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.264: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:55:31.264: INFO: nodelocaldns-9mtv9 from kube-system started at 2024-02-26 17:16:13 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.264: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:55:31.264: INFO: vsphere-csi-node-254vc from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:31.265: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:55:31.265: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:55:31.265: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:55:31.266: INFO: prometheus-kube-prometheus-operator-59885c5d4b-hkhxh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.266: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Mar 27 20:55:31.266: INFO: prometheus-kube-state-metrics-6967744598-dt2rh from prometheus started at 2024-03-06 21:46:19 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.266: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Mar 27 20:55:31.266: INFO: prometheus-prometheus-node-exporter-rmr74 from prometheus started at 2024-03-06 21:46:58 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.267: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:55:31.267: INFO: sonobuoy from sonobuoy started at 2024-03-27 19:17:40 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.267: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 27 20:55:31.267: INFO: sonobuoy-e2e-job-951e43e969974e8d from sonobuoy started at 2024-03-27 19:17:41 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:31.267: INFO: 	Container e2e ready: true, restart count 0
  Mar 27 20:55:31.267: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:31.268: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-xgb4f from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:31.268: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:31.269: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:55:31.270: INFO: traefik-ingress-r65nd from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.270: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 20:55:31.271: INFO: velero-549955fd6-nv4rr from velero started at 2024-03-27 19:23:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.272: INFO: 	Container velero ready: true, restart count 0
  Mar 27 20:55:31.273: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Mar 27 20:55:31.300: INFO: filebeat-filebeat-vtxl5 from filebeat started at 2024-03-27 13:56:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:55:31.300: INFO: kube-flannel-jxf5s from kube-system started at 2024-01-09 16:24:09 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: kube-proxy-hkdmw from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: metrics-server-6b9559b787-jbq7p from kube-system started at 2024-02-26 17:54:21 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container metrics-server ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-03-05 18:33:06 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: nodelocaldns-qntdt from kube-system started at 2024-02-26 17:16:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: vsphere-csi-node-8bf9l from kube-system started at 2024-03-27 16:22:45 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-03-06 21:46:51 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container config-reloader ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: 	Container prometheus ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: prometheus-prometheus-node-exporter-9zlbg from prometheus started at 2024-03-06 21:46:32 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: thanos-query-755b649898-rkp2f from prometheus started at 2024-03-27 19:23:14 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container query ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-zcz72 from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: traefik-ingress-4xq5p from traefik-ingress started at 2024-03-13 22:10:20 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.300: INFO: 	Container traefik-ingress ready: true, restart count 0
  Mar 27 20:55:31.300: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  Mar 27 20:55:31.323: INFO: filebeat-filebeat-z9sm8 from filebeat started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container filebeat ready: false, restart count 0
  Mar 27 20:55:31.323: INFO: kube-flannel-hlhld from kube-system started at 2024-01-11 00:55:50 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container kube-flannel ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: kube-proxy-k2g55 from kube-system started at 2024-03-27 16:14:03 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container kube-proxy ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-03-05 18:33:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container nginx-proxy ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: nodelocaldns-d8b8p from kube-system started at 2024-02-26 17:16:09 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container node-cache ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: vsphere-csi-node-tmrkr from kube-system started at 2024-03-27 16:22:46 +0000 UTC (3 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container liveness-probe ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: prometheus-prometheus-node-exporter-24q6b from prometheus started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container node-exporter ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: sonobuoy-systemd-logs-daemon-set-4ec153f3d6544a33-669rl from sonobuoy started at 2024-03-27 19:17:42 +0000 UTC (2 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 27 20:55:31.323: INFO: traefik-ingress-sblkr from traefik-ingress started at 2024-03-27 19:29:07 +0000 UTC (1 container statuses recorded)
  Mar 27 20:55:31.323: INFO: 	Container traefik-ingress ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/27/24 20:55:31.324
  E0327 20:55:32.008880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:33.008900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/27/24 20:55:33.368
  STEP: Trying to apply a random label on the found node. @ 03/27/24 20:55:33.406
  STEP: verifying the node has the label kubernetes.io/e2e-5349e2fc-adf0-4fc5-a307-2fa0a4881d23 95 @ 03/27/24 20:55:33.44
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 03/27/24 20:55:33.45
  E0327 20:55:34.009216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:35.009804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.61.1.202 on the node which pod4 resides and expect not scheduled @ 03/27/24 20:55:35.494
  E0327 20:55:36.010643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:37.011199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:38.012135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:39.013084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:40.014144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:41.015065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:42.015512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:43.016071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:44.016331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:45.016939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:46.016931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:47.017276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:48.018416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:49.020216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:50.021157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:51.021837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:52.022604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:53.022844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:54.023754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:55.023897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:56.024838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:57.025194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:58.026388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:55:59.026296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:00.027264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:01.027594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:02.028126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:03.028690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:04.028998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:05.029612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:06.029997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:07.030952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:08.031095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:09.031481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:10.032320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:11.032797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:12.032859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:13.033420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:14.034525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:15.034779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:16.035128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:17.035921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:18.036834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:19.037338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:20.037824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:21.038114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:22.038968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:23.038945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:24.039121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:25.039933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:26.040657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:27.041556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:28.041765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:29.041787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:30.042822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:31.042973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:32.043109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:33.043275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:34.043664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:35.044338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:36.044493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:37.044653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:38.045281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:39.045658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:40.046601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:41.046964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:42.047952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:43.048581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:44.049790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:45.050896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:46.052050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:47.052648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:48.053283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:49.053650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:50.054369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:51.055566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:52.055766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:53.055917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:54.056109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:55.057176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:56.057699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:57.058034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:58.058498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:56:59.059017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:00.059280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:01.060133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:02.060475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:03.061738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:04.062818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:05.063347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:06.064114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:07.064462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:08.065429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:09.065816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:10.066364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:11.066763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:12.067254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:13.067388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:14.067885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:15.068024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:16.068304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:17.068464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:18.069535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:19.069720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:20.069869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:21.069968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:22.070740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:23.070856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:24.071140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:25.071253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:26.071435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:27.071617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:28.071810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:29.072109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:30.072400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:31.072715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:32.073012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:33.073511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:34.073575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:35.074424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:36.074618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:37.075336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:38.075239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:39.075534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:40.075830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:41.076088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:42.077579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:43.077825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:44.078664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:45.078412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:46.079506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:47.079605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:48.079870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:49.080286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:50.080622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:51.080703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:52.081294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:53.081769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:54.082547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:55.082985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:56.083415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:57.084270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:58.084724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:57:59.085105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:00.085207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:01.085731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:02.085663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:03.086525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:04.086582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:05.087604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:06.088570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:07.088835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:08.089040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:09.089800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:10.089789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:11.090189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:12.090257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:13.090734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:14.091338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:15.092306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:16.092525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:17.093414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:18.093852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:19.094101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:20.095306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:21.095460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:22.095921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:23.096192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:24.097080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:25.097526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:26.097841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:27.098004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:28.098978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:29.099345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:30.100367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:31.100917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:32.101447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:33.101900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:34.102127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:35.102368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:36.102529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:37.103469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:38.103668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:39.103955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:40.103914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:41.105099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:42.106092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:43.107356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:44.107518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:45.109220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:46.109646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:47.109697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:48.110180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:49.110599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:50.111657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:51.112036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:52.113016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:53.113140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:54.113797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:55.113745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:56.114457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:57.115466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:58.115995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:58:59.116501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:00.117506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:01.118708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:02.119161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:03.119310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:04.119661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:05.120278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:06.120441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:07.120660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:08.120900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:09.121174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:10.121764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:11.122954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:12.123722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:13.124580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:14.125587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:15.126592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:16.127174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:17.127597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:18.128312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:19.128867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:20.129685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:21.129879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:22.130330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:23.131487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:24.132206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:25.133185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:26.133478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:27.133560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:28.134053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:29.134882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:30.135651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:31.136494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:32.137675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:33.138328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:34.138998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:35.139101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:36.139680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:37.139728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:38.140198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:39.140508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:40.140763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:41.140973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:42.141583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:43.142215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:44.142276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:45.143201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:46.143819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:47.143981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:48.144587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:49.145724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:50.145650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:51.146546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:52.146794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:53.146981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:54.147213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:55.147712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:56.147842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:57.148231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:58.148866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 20:59:59.149931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:00.150919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:01.151588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:02.151588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:03.152120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:04.152116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:05.152334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:06.152568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:07.153502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:08.153809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:09.154867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:10.155869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:11.156645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:12.156964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:13.157442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:14.157413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:15.157726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:16.158486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:17.158957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:18.159741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:19.160548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:20.160774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:21.161506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:22.161663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:23.162281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:24.162796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:25.163132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:26.163864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:27.164938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:28.165708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:29.166205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:30.166662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:31.166787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:32.167199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:33.167569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:34.168176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:35.169115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5349e2fc-adf0-4fc5-a307-2fa0a4881d23 off the node env1-test-worker-2 @ 03/27/24 21:00:35.514
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5349e2fc-adf0-4fc5-a307-2fa0a4881d23 @ 03/27/24 21:00:35.544
  Mar 27 21:00:35.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5868" for this suite. @ 03/27/24 21:00:35.57
• [304.438 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 03/27/24 21:00:35.586
  Mar 27 21:00:35.586: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 21:00:35.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:00:35.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:00:35.671
  Mar 27 21:00:35.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6972" for this suite. @ 03/27/24 21:00:35.823
• [0.254 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 03/27/24 21:00:35.843
  Mar 27 21:00:35.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename cronjob @ 03/27/24 21:00:35.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:00:35.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:00:35.904
  STEP: Creating a cronjob @ 03/27/24 21:00:35.91
  STEP: creating @ 03/27/24 21:00:35.911
  STEP: getting @ 03/27/24 21:00:35.922
  STEP: listing @ 03/27/24 21:00:35.934
  STEP: watching @ 03/27/24 21:00:35.941
  Mar 27 21:00:35.941: INFO: starting watch
  STEP: cluster-wide listing @ 03/27/24 21:00:35.944
  STEP: cluster-wide watching @ 03/27/24 21:00:35.959
  Mar 27 21:00:35.959: INFO: starting watch
  STEP: patching @ 03/27/24 21:00:35.964
  STEP: updating @ 03/27/24 21:00:35.986
  Mar 27 21:00:36.004: INFO: waiting for watch events with expected annotations
  Mar 27 21:00:36.004: INFO: saw patched and updated annotations
  STEP: patching /status @ 03/27/24 21:00:36.005
  STEP: updating /status @ 03/27/24 21:00:36.017
  STEP: get /status @ 03/27/24 21:00:36.035
  STEP: deleting @ 03/27/24 21:00:36.044
  STEP: deleting a collection @ 03/27/24 21:00:36.077
  Mar 27 21:00:36.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3261" for this suite. @ 03/27/24 21:00:36.125
• [0.311 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 03/27/24 21:00:36.155
  Mar 27 21:00:36.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-runtime @ 03/27/24 21:00:36.156
  E0327 21:00:36.169990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:00:36.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:00:36.194
  STEP: create the container @ 03/27/24 21:00:36.2
  W0327 21:00:36.217823      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/27/24 21:00:36.218
  E0327 21:00:37.170985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:38.172002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:39.172259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/27/24 21:00:39.256
  STEP: the container should be terminated @ 03/27/24 21:00:39.262
  STEP: the termination message should be set @ 03/27/24 21:00:39.262
  Mar 27 21:00:39.262: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/27/24 21:00:39.262
  Mar 27 21:00:39.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8497" for this suite. @ 03/27/24 21:00:39.3
• [3.162 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 03/27/24 21:00:39.32
  Mar 27 21:00:39.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename dns @ 03/27/24 21:00:39.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:00:39.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:00:39.372
  STEP: Creating a test headless service @ 03/27/24 21:00:39.376
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9727.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9727.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9727.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9727.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 0.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.0_udp@PTR;check="$$(dig +tcp +noall +answer +search 0.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.0_tcp@PTR;sleep 1; done
   @ 03/27/24 21:00:39.455
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9727.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9727.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9727.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9727.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9727.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 0.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.0_udp@PTR;check="$$(dig +tcp +noall +answer +search 0.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.0_tcp@PTR;sleep 1; done
   @ 03/27/24 21:00:39.455
  STEP: creating a pod to probe DNS @ 03/27/24 21:00:39.455
  STEP: submitting the pod to kubernetes @ 03/27/24 21:00:39.455
  E0327 21:00:40.173041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:41.173160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/27/24 21:00:41.527
  STEP: looking for the results for each expected name from probers @ 03/27/24 21:00:41.536
  Mar 27 21:00:41.549: INFO: Unable to read wheezy_udp@dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.566: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.579: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.599: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.657: INFO: Unable to read jessie_udp@dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.673: INFO: Unable to read jessie_tcp@dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.685: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.697: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:41.745: INFO: Lookups using dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0 failed for: [wheezy_udp@dns-test-service.dns-9727.svc.cluster.local wheezy_tcp@dns-test-service.dns-9727.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local jessie_udp@dns-test-service.dns-9727.svc.cluster.local jessie_tcp@dns-test-service.dns-9727.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local]

  Mar 27 21:00:41.801: INFO: Pod client logs for webserver: 
  Mar 27 21:00:41.830: INFO: Pod client logs for querier: 
  Mar 27 21:00:41.845: INFO: Pod client logs for jessie-querier: 
  E0327 21:00:42.173478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:43.173953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:44.174493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:45.175207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:46.175675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:00:46.868: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:46.877: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:46.887: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local from pod dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0: the server could not find the requested resource (get pods dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0)
  Mar 27 21:00:47.020: INFO: Lookups using dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0 failed for: [wheezy_tcp@dns-test-service.dns-9727.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9727.svc.cluster.local]

  Mar 27 21:00:47.048: INFO: Pod client logs for webserver: 
  Mar 27 21:00:47.072: INFO: Pod client logs for querier: 
  Mar 27 21:00:47.092: INFO: Pod client logs for jessie-querier: 
  E0327 21:00:47.176357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:48.176896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:49.177766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:50.178846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:51.179552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:00:52.001: INFO: DNS probes using dns-9727/dns-test-a21e0e23-f0fd-4f38-a031-d8390aeebfe0 succeeded

  Mar 27 21:00:52.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 21:00:52.015
  STEP: deleting the test service @ 03/27/24 21:00:52.075
  STEP: deleting the test headless service @ 03/27/24 21:00:52.139
  E0327 21:00:52.179727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-9727" for this suite. @ 03/27/24 21:00:52.197
• [12.889 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 03/27/24 21:00:52.223
  Mar 27 21:00:52.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 21:00:52.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:00:52.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:00:52.288
  STEP: Creating configMap with name configmap-test-volume-5deca7b3-71f3-408a-9c65-4831a6cbb65d @ 03/27/24 21:00:52.295
  STEP: Creating a pod to test consume configMaps @ 03/27/24 21:00:52.305
  E0327 21:00:53.180087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:54.180203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:55.181658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:56.181155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 21:00:56.386
  Mar 27 21:00:56.394: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-43a42a03-2e72-4502-868e-d371450ca46e container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 21:00:56.419
  Mar 27 21:00:56.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1002" for this suite. @ 03/27/24 21:00:56.527
• [4.326 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 03/27/24 21:00:56.55
  Mar 27 21:00:56.550: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename resourcequota @ 03/27/24 21:00:56.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:00:56.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:00:56.614
  STEP: Creating a ResourceQuota @ 03/27/24 21:00:56.619
  STEP: Getting a ResourceQuota @ 03/27/24 21:00:56.627
  STEP: Updating a ResourceQuota @ 03/27/24 21:00:56.636
  STEP: Verifying a ResourceQuota was modified @ 03/27/24 21:00:56.667
  STEP: Deleting a ResourceQuota @ 03/27/24 21:00:56.678
  STEP: Verifying the deleted ResourceQuota @ 03/27/24 21:00:56.692
  Mar 27 21:00:56.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4784" for this suite. @ 03/27/24 21:00:56.708
• [0.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 03/27/24 21:00:56.725
  Mar 27 21:00:56.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 21:00:56.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:00:56.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:00:56.783
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-b298c6bb-0260-47c1-8e28-12824f2e6177 @ 03/27/24 21:00:56.804
  STEP: Creating the pod @ 03/27/24 21:00:56.812
  E0327 21:00:57.182017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:00:58.182453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-b298c6bb-0260-47c1-8e28-12824f2e6177 @ 03/27/24 21:00:58.888
  STEP: waiting to observe update in volume @ 03/27/24 21:00:58.898
  E0327 21:00:59.183497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:00.184214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:01.184939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:02.185668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:03.187119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:04.190600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:05.191502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:06.192377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:07.192633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:08.192875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:09.193092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:10.193313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:11.194364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:12.194831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:13.195418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:14.196014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:15.196151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:16.196340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:17.197113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:18.197551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:19.197733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:20.197762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:21.198394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:22.198554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:23.199629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:24.199998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:25.200595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:26.201121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:27.202148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:28.202402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:29.202766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:30.203202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:31.203682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:32.204547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:33.204820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:34.205134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:35.206236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:36.206904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:37.207109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:38.207232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:39.207593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:40.207955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:41.208657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:42.208589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:43.208979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:44.209282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:45.209827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:46.210165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:47.210591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:48.210892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:49.210999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:50.211886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:51.212151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:52.212209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:53.212477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:54.212697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:55.212809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:56.213830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:57.214154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:58.214262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:01:59.214541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:00.217994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:01.217950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:02.218135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:03.218575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:03.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-49" for this suite. @ 03/27/24 21:02:03.678
• [66.966 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 03/27/24 21:02:03.692
  Mar 27 21:02:03.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename webhook @ 03/27/24 21:02:03.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:03.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:03.737
  STEP: Setting up server cert @ 03/27/24 21:02:03.802
  E0327 21:02:04.219109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:05.219069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/27/24 21:02:05.879
  STEP: Deploying the webhook pod @ 03/27/24 21:02:05.9
  STEP: Wait for the deployment to be ready @ 03/27/24 21:02:05.934
  Mar 27 21:02:05.949: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0327 21:02:06.220124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:07.220826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:07.972: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 21:02:08.221022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:09.221201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:09.982: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 21:02:10.221694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:11.222569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:11.984: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 21:02:12.221955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:13.222761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:13.983: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 21:02:14.223791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:15.224609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:15.981: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0327 21:02:16.225470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:17.225771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/27/24 21:02:17.983
  STEP: Verifying the service has paired with the endpoint @ 03/27/24 21:02:18.02
  E0327 21:02:18.225880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:19.021: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 03/27/24 21:02:19.043
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 03/27/24 21:02:19.047
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 03/27/24 21:02:19.048
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 03/27/24 21:02:19.048
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 03/27/24 21:02:19.052
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/27/24 21:02:19.052
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/27/24 21:02:19.054
  Mar 27 21:02:19.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 21:02:19.226210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1638" for this suite. @ 03/27/24 21:02:19.247
  STEP: Destroying namespace "webhook-markers-5710" for this suite. @ 03/27/24 21:02:19.267
• [15.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 03/27/24 21:02:19.296
  Mar 27 21:02:19.296: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename services @ 03/27/24 21:02:19.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:19.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:19.361
  STEP: creating service multi-endpoint-test in namespace services-9657 @ 03/27/24 21:02:19.371
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9657 to expose endpoints map[] @ 03/27/24 21:02:19.417
  Mar 27 21:02:19.423: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0327 21:02:20.226823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:20.442: INFO: successfully validated that service multi-endpoint-test in namespace services-9657 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9657 @ 03/27/24 21:02:20.443
  E0327 21:02:21.227693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:22.228482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9657 to expose endpoints map[pod1:[100]] @ 03/27/24 21:02:22.496
  Mar 27 21:02:22.524: INFO: successfully validated that service multi-endpoint-test in namespace services-9657 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9657 @ 03/27/24 21:02:22.524
  E0327 21:02:23.229458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:24.229842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9657 to expose endpoints map[pod1:[100] pod2:[101]] @ 03/27/24 21:02:24.576
  Mar 27 21:02:24.648: INFO: successfully validated that service multi-endpoint-test in namespace services-9657 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 03/27/24 21:02:24.648
  Mar 27 21:02:24.648: INFO: Creating new exec pod
  E0327 21:02:25.229954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:26.230280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:27.230615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:27.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0327 21:02:28.231245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:29.231317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:30.059: INFO: rc: 1
  Mar 27 21:02:30.059: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 multi-endpoint-test 80
  + echo hostName
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0327 21:02:30.232045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:31.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0327 21:02:31.232232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:32.232925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:33.233928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:33.356: INFO: rc: 1
  Mar 27 21:02:33.356: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Mar 27 21:02:34.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0327 21:02:34.234181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:35.234355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:36.234768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:36.414: INFO: rc: 1
  Mar 27 21:02:36.414: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Mar 27 21:02:37.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0327 21:02:37.235490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:37.406: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Mar 27 21:02:37.406: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 21:02:37.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.36.11 80'
  Mar 27 21:02:37.710: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.36.11 80\nConnection to 10.233.36.11 80 port [tcp/http] succeeded!\n"
  Mar 27 21:02:37.710: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 21:02:37.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Mar 27 21:02:38.021: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Mar 27 21:02:38.021: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 27 21:02:38.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=services-9657 exec execpodtdtlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.36.11 81'
  E0327 21:02:38.235999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:38.341: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.36.11 81\nConnection to 10.233.36.11 81 port [tcp/*] succeeded!\n"
  Mar 27 21:02:38.341: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9657 @ 03/27/24 21:02:38.341
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9657 to expose endpoints map[pod2:[101]] @ 03/27/24 21:02:38.388
  Mar 27 21:02:38.425: INFO: successfully validated that service multi-endpoint-test in namespace services-9657 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9657 @ 03/27/24 21:02:38.425
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9657 to expose endpoints map[] @ 03/27/24 21:02:38.476
  Mar 27 21:02:38.501: INFO: successfully validated that service multi-endpoint-test in namespace services-9657 exposes endpoints map[]
  Mar 27 21:02:38.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9657" for this suite. @ 03/27/24 21:02:38.569
• [19.291 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 03/27/24 21:02:38.589
  Mar 27 21:02:38.589: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 21:02:38.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:38.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:38.639
  STEP: Creating the pod @ 03/27/24 21:02:38.645
  E0327 21:02:39.236680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:40.237127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:41.237972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:41.247: INFO: Successfully updated pod "labelsupdate403de063-d964-4d1e-9c70-fa86d7b2a1bb"
  E0327 21:02:42.238331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:43.239071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:02:43.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6640" for this suite. @ 03/27/24 21:02:43.303
• [4.738 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 03/27/24 21:02:43.328
  Mar 27 21:02:43.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename namespaces @ 03/27/24 21:02:43.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:43.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:43.386
  STEP: Creating a test namespace @ 03/27/24 21:02:43.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:43.437
  STEP: Creating a service in the namespace @ 03/27/24 21:02:43.447
  STEP: Deleting the namespace @ 03/27/24 21:02:43.476
  STEP: Waiting for the namespace to be removed. @ 03/27/24 21:02:43.501
  E0327 21:02:44.239194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:45.240166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:46.240468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:47.240985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:48.241440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:49.241631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:50.242399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 03/27/24 21:02:50.511
  STEP: Verifying there is no service in the namespace @ 03/27/24 21:02:50.551
  Mar 27 21:02:50.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9928" for this suite. @ 03/27/24 21:02:50.575
  STEP: Destroying namespace "nsdeletetest-7997" for this suite. @ 03/27/24 21:02:50.593
  Mar 27 21:02:50.599: INFO: Namespace nsdeletetest-7997 was already deleted
  STEP: Destroying namespace "nsdeletetest-8444" for this suite. @ 03/27/24 21:02:50.6
• [7.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 03/27/24 21:02:50.628
  Mar 27 21:02:50.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename var-expansion @ 03/27/24 21:02:50.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:50.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:50.682
  STEP: Creating a pod to test substitution in container's args @ 03/27/24 21:02:50.689
  E0327 21:02:51.242778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:52.243087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:53.243359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:54.244160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 21:02:54.751
  Mar 27 21:02:54.758: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-b4c4f7ab-8976-4f5b-9ac9-50b2c0c17bfc container dapi-container: <nil>
  STEP: delete the pod @ 03/27/24 21:02:54.775
  Mar 27 21:02:54.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3080" for this suite. @ 03/27/24 21:02:54.844
• [4.232 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 03/27/24 21:02:54.863
  Mar 27 21:02:54.863: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename deployment @ 03/27/24 21:02:54.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:54.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:54.925
  STEP: creating a Deployment @ 03/27/24 21:02:54.946
  Mar 27 21:02:54.947: INFO: Creating simple deployment test-deployment-mcv9q
  Mar 27 21:02:54.984: INFO: deployment "test-deployment-mcv9q" doesn't have the required revision set
  E0327 21:02:55.244808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:56.245030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 03/27/24 21:02:57.055
  Mar 27 21:02:57.069: INFO: Deployment test-deployment-mcv9q has Conditions: [{Available True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcv9q-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 03/27/24 21:02:57.07
  Mar 27 21:02:57.101: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 27, 21, 2, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 27, 21, 2, 54, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-mcv9q-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 03/27/24 21:02:57.101
  Mar 27 21:02:57.107: INFO: Observed &Deployment event: ADDED
  Mar 27 21:02:57.107: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:54 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcv9q-5d576bd769"}
  Mar 27 21:02:57.108: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.108: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:54 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcv9q-5d576bd769"}
  Mar 27 21:02:57.108: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 27 21:02:57.108: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.109: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 27 21:02:57.109: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mcv9q-5d576bd769" is progressing.}
  Mar 27 21:02:57.109: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.109: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 27 21:02:57.110: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcv9q-5d576bd769" has successfully progressed.}
  Mar 27 21:02:57.110: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.110: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 27 21:02:57.111: INFO: Observed Deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcv9q-5d576bd769" has successfully progressed.}
  Mar 27 21:02:57.111: INFO: Found Deployment test-deployment-mcv9q in namespace deployment-556 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 27 21:02:57.111: INFO: Deployment test-deployment-mcv9q has an updated status
  STEP: patching the Statefulset Status @ 03/27/24 21:02:57.112
  Mar 27 21:02:57.112: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Mar 27 21:02:57.160: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 03/27/24 21:02:57.16
  Mar 27 21:02:57.165: INFO: Observed &Deployment event: ADDED
  Mar 27 21:02:57.166: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:54 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcv9q-5d576bd769"}
  Mar 27 21:02:57.166: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.166: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:54 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcv9q-5d576bd769"}
  Mar 27 21:02:57.166: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 27 21:02:57.167: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.167: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 27 21:02:57.168: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mcv9q-5d576bd769" is progressing.}
  Mar 27 21:02:57.170: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.171: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 27 21:02:57.171: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcv9q-5d576bd769" has successfully progressed.}
  Mar 27 21:02:57.172: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.172: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 27 21:02:57.173: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-27 21:02:55 +0000 UTC 2024-03-27 21:02:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcv9q-5d576bd769" has successfully progressed.}
  Mar 27 21:02:57.173: INFO: Observed deployment test-deployment-mcv9q in namespace deployment-556 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 27 21:02:57.174: INFO: Observed &Deployment event: MODIFIED
  Mar 27 21:02:57.174: INFO: Found deployment test-deployment-mcv9q in namespace deployment-556 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Mar 27 21:02:57.175: INFO: Deployment test-deployment-mcv9q has a patched status
  Mar 27 21:02:57.188: INFO: Deployment "test-deployment-mcv9q":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-mcv9q",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-556",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "726adeb3-0607-487d-b83e-0781198d5500",
      ResourceVersion: (string) (len=9) "210803663",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847170174,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170174,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 27 21:02:57.211: INFO: New ReplicaSet "test-deployment-mcv9q-5d576bd769" of Deployment "test-deployment-mcv9q":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-mcv9q-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-556",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15d5408e-5e94-49b1-816a-1a3cdf2b276d",
      ResourceVersion: (string) (len=9) "210803653",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847170174,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-mcv9q",
          UID: (types.UID) (len=36) "726adeb3-0607-487d-b83e-0781198d5500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170174,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 32 36  |k:{\"uid\":\"726|
              00000120  61 64 65 62 33 2d 30 36  30 37 2d 34 38 37 64 2d  |adeb3-0607-487d-|
              00000130  62 38 33 65 2d 30 37 38  31 31 39 38 64 35 35 30  |b83e-0781198d550|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 27 21:02:57.231: INFO: Pod "test-deployment-mcv9q-5d576bd769-6vshj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-mcv9q-5d576bd769-6vshj",
      GenerateName: (string) (len=33) "test-deployment-mcv9q-5d576bd769-",
      Namespace: (string) (len=14) "deployment-556",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7932663f-6ad8-4268-8619-7720304219b4",
      ResourceVersion: (string) (len=9) "210803652",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847170174,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-mcv9q-5d576bd769",
          UID: (types.UID) (len=36) "15d5408e-5e94-49b1-816a-1a3cdf2b276d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170174,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 35 64 35 34 30 38  65 2d 35 65 39 34 2d 34  |"15d5408e-5e94-4|
              000000a0  39 62 31 2d 38 31 36 61  2d 31 61 33 63 64 66 32  |9b1-816a-1a3cdf2|
              000000b0  62 32 37 36 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b276d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 35 35 5c 22 7d 22  |10.233.69.55\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94tff",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94tff",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63847170175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.69.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.69.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63847170175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63847170175,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ba9c72e84d708eddc1b4fa6c99e9e59f9f10bc702ee1041f76c6d050f683761e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 27 21:02:57.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0327 21:02:57.246001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-556" for this suite. @ 03/27/24 21:02:57.253
• [2.411 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 03/27/24 21:02:57.275
  Mar 27 21:02:57.275: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/27/24 21:02:57.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:57.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:57.488
  STEP: creating @ 03/27/24 21:02:57.495
  STEP: getting @ 03/27/24 21:02:57.534
  STEP: listing in namespace @ 03/27/24 21:02:57.542
  STEP: patching @ 03/27/24 21:02:57.548
  STEP: deleting @ 03/27/24 21:02:57.566
  Mar 27 21:02:57.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3583" for this suite. @ 03/27/24 21:02:57.609
• [0.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 03/27/24 21:02:57.649
  Mar 27 21:02:57.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename container-probe @ 03/27/24 21:02:57.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:02:57.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:02:57.743
  STEP: Creating pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108 @ 03/27/24 21:02:57.752
  E0327 21:02:58.246865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:02:59.247750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/27/24 21:02:59.803
  Mar 27 21:02:59.812: INFO: Initial restart count of pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 is 0
  Mar 27 21:02:59.819: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:00.248906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:01.249691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:01.832: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:02.250583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:03.251268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:03.838: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:04.252090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:05.252881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:05.851: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:06.253703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:07.254360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:07.863: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:08.254555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:09.254871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:09.874: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:10.255788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:11.256257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:11.880: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:12.256373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:13.256681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:13.890: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:14.257819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:15.258430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:15.897: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:16.259268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:17.259771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:17.910: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:18.260782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:19.261315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:19.919: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:20.261617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:21.262128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:21.928: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:22.263083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:23.263288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:23.939: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:24.263362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:25.264066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:25.947: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:26.264466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:27.264967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:27.957: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:28.265816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:29.266338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:29.967: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:30.266479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:31.267011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:31.977: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:32.267791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:33.268620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:33.992: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:34.269279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:35.269390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:36.002: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:36.269743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:37.270574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:38.016: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:38.271598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:39.271845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:40.026: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:40.272847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:41.273476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:42.046: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:42.274314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:43.275125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:44.054: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:44.275927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:45.276877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:46.063: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:46.277913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:47.278179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:48.074: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:48.279307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:49.279528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:50.082: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:50.280600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:51.281040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:52.092: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:52.281795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:53.282107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:54.100: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:54.283056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:55.283800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:56.109: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:56.284968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:57.285814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:03:58.119: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:03:58.286158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:03:59.286741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:00.128: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:00.287472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:01.287684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:02.138: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:02.288106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:03.288425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:04.145: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:04.289149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:05.290058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:06.156: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:06.291025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:07.291859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:08.167: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:08.293006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:09.293719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:10.176: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:10.293671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:11.294628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:12.186: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:12.295262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:13.295460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:14.201: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:14.295976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:15.296483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:16.210: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:16.297459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:17.298926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:18.222: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:18.299855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:19.300433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:20.231: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:20.301559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:21.301583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:22.240: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:22.301979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:23.302177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:24.256: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:24.303209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:25.304179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:26.264: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:26.305038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:27.305738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:28.275: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:28.306106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:29.306755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:30.285: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:30.307469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:31.307683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:32.294: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:32.308806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:33.309454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:34.301: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:34.309493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:35.310351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:36.310729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:36.310: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:37.311076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:38.311186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:38.322: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:39.312096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:40.312486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:40.332: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:41.313435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:42.314021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:42.344: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:43.314534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:44.314850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:44.365: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:45.315704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:46.316005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:46.377: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:47.316297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:48.316516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:48.388: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:49.316793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:50.317254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:50.395: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:51.317594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:52.317743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:52.408: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:53.318446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:54.318682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:54.418: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:55.318887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:56.319449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:56.428: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:57.319632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:04:58.320074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:04:58.442: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:04:59.320205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:00.321195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:00.451: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:01.321428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:02.321588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:02.459: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:03.321993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:04.322212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:04.468: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:05.322929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:06.323521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:06.487: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:07.323830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:08.324364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:08.500: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:09.324598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:10.325041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:10.511: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:11.325188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:12.325640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:12.523: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:13.325884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:14.326160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:14.532: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:15.326937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:16.327410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:16.570: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:17.327936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:18.328516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:18.579: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:19.328894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:20.328920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:20.590: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:21.330228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:22.329877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:22.600: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:23.330001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:24.330169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:24.611: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:25.331007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:26.331659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:26.618: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:27.331793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:28.332021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:28.628: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:29.332138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:30.332698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:30.638: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:31.332913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:32.333590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:32.646: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:33.334512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:34.334761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:34.658: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:35.335743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:36.336632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:36.667: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:37.336950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:38.337539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:38.678: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:39.337780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:40.338061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:40.688: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:41.339162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:42.339505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:42.697: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:43.340086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:44.340750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:44.711: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:45.340905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:46.341213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:46.722: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:47.342395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:48.342405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:48.733: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:49.343447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:50.343970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:50.744: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:51.344524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:52.344888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:52.761: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:53.345875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:54.346781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:54.772: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:55.347508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:56.348019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:56.785: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:57.348215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:05:58.348674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:05:58.797: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:05:59.349830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:00.350037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:00.807: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:01.350173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:02.350338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:02.815: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:03.350684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:04.351006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:04.824: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:05.351726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:06.351899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:06.841: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:07.352904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:08.353151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:08.850: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:09.353511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:10.353669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:10.859: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:11.353816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:12.354262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:12.870: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:13.355018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:14.355529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:14.879: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:15.355757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:16.355942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:16.893: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:17.356142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:18.356382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:18.915: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:19.357297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:20.358023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:20.931: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:21.359093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:22.359168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:22.940: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:23.359512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:24.360026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:24.950: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:25.360713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:26.361309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:26.959: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:27.361796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:28.362058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:28.973: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:29.362962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:30.363256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:30.983: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:31.364003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:32.364590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:32.993: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:33.364836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:34.365187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:35.003: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:35.365617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:36.365780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:37.014: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:37.366782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:38.367706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:39.025: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:39.368089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:40.368249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:41.035: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:41.368942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:42.369471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:43.047: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:43.370177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:44.370710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:45.053: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:45.371394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:46.371886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:47.064: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:47.372021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:48.373209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:49.075: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:49.373552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:50.374523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:51.085: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:51.374486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:52.374963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:53.093: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:53.375805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:54.376030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:55.102: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:55.376299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:56.376776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:57.111: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:57.377255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:06:58.377999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:06:59.122: INFO: Get pod test-grpc-326cd898-80e1-453e-89e4-28ebcfa738a7 in namespace container-probe-8108
  E0327 21:06:59.377909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:00.378034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:07:01.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/27/24 21:07:01.141
  STEP: Destroying namespace "container-probe-8108" for this suite. @ 03/27/24 21:07:01.18
• [243.547 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 03/27/24 21:07:01.199
  Mar 27 21:07:01.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename configmap @ 03/27/24 21:07:01.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:07:01.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:07:01.254
  STEP: Creating configMap configmap-6404/configmap-test-f53165a7-7b15-4267-8002-06a7aa13a152 @ 03/27/24 21:07:01.261
  STEP: Creating a pod to test consume configMaps @ 03/27/24 21:07:01.271
  E0327 21:07:01.378882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:02.380014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:03.380593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:04.381119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 21:07:05.342
  Mar 27 21:07:05.355: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-92002fb5-f3c0-4874-b2df-68d70fdf4f32 container env-test: <nil>
  E0327 21:07:05.382376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/27/24 21:07:05.398
  Mar 27 21:07:05.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6404" for this suite. @ 03/27/24 21:07:05.473
• [4.293 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 03/27/24 21:07:05.492
  Mar 27 21:07:05.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename pods @ 03/27/24 21:07:05.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:07:05.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:07:05.604
  STEP: creating the pod @ 03/27/24 21:07:05.611
  STEP: setting up watch @ 03/27/24 21:07:05.611
  STEP: submitting the pod to kubernetes @ 03/27/24 21:07:05.726
  STEP: verifying the pod is in kubernetes @ 03/27/24 21:07:05.746
  STEP: verifying pod creation was observed @ 03/27/24 21:07:05.757
  E0327 21:07:06.382771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:07.383190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 03/27/24 21:07:07.811
  STEP: verifying pod deletion was observed @ 03/27/24 21:07:07.831
  E0327 21:07:08.383376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:07:09.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8164" for this suite. @ 03/27/24 21:07:09.049
• [3.572 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 03/27/24 21:07:09.068
  Mar 27 21:07:09.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-preemption @ 03/27/24 21:07:09.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:07:09.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:07:09.122
  Mar 27 21:07:09.200: INFO: Waiting up to 1m0s for all nodes to be ready
  E0327 21:07:09.384284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:10.384611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:11.385284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:12.385933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:13.386299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:14.386613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:15.387160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:16.387617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:17.387713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:18.387874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:19.388075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:20.388950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:21.389337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:22.389495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:23.389542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:24.390124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:25.390724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:26.390860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:27.391433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:28.392127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:29.393077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:30.393484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:31.393942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:32.394658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:33.395080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:34.395668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:35.396085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:36.396797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:37.397689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:38.397965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:39.398815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:40.399128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:41.399959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:42.400856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:43.400992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:44.401712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:45.401820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:46.402484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:47.402606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:48.402914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:49.403705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:50.403847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:51.404131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:52.404491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:53.405149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:54.405828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:55.406858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:56.408997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:57.409146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:58.410244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:07:59.411061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:00.411550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:01.412314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:02.412683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:03.413258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:04.413677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:05.414872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:06.415336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:07.416043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:08.416665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:08:09.321: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/27/24 21:08:09.335
  Mar 27 21:08:09.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/27/24 21:08:09.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:08:09.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:08:09.398
  E0327 21:08:09.416644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:08:09.466: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Mar 27 21:08:09.480: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Mar 27 21:08:09.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 27 21:08:09.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9755" for this suite. @ 03/27/24 21:08:09.799
  STEP: Destroying namespace "sched-preemption-927" for this suite. @ 03/27/24 21:08:09.816
• [60.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 03/27/24 21:08:09.89
  Mar 27 21:08:09.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 21:08:09.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:08:09.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:08:09.949
  STEP: Creating configMap with name projected-configmap-test-volume-map-f8d6cea3-3f01-41c1-a718-4a570fe745dd @ 03/27/24 21:08:09.956
  STEP: Creating a pod to test consume configMaps @ 03/27/24 21:08:09.967
  E0327 21:08:10.417673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:11.418112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:12.418675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:13.419314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 21:08:14.026
  Mar 27 21:08:14.034: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-ccb3e0de-de3d-47b7-a9e1-ebcf9a82b092 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 21:08:14.05
  Mar 27 21:08:14.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3516" for this suite. @ 03/27/24 21:08:14.097
• [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 03/27/24 21:08:14.121
  Mar 27 21:08:14.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename svcaccounts @ 03/27/24 21:08:14.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:08:14.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:08:14.167
  Mar 27 21:08:14.183: INFO: Got root ca configmap in namespace "svcaccounts-3039"
  Mar 27 21:08:14.202: INFO: Deleted root ca configmap in namespace "svcaccounts-3039"
  E0327 21:08:14.420393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 03/27/24 21:08:14.704
  Mar 27 21:08:14.710: INFO: Recreated root ca configmap in namespace "svcaccounts-3039"
  Mar 27 21:08:14.719: INFO: Updated root ca configmap in namespace "svcaccounts-3039"
  STEP: waiting for the root ca configmap reconciled @ 03/27/24 21:08:15.222
  Mar 27 21:08:15.239: INFO: Reconciled root ca configmap in namespace "svcaccounts-3039"
  Mar 27 21:08:15.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3039" for this suite. @ 03/27/24 21:08:15.259
• [1.164 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 03/27/24 21:08:15.287
  Mar 27 21:08:15.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename projected @ 03/27/24 21:08:15.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:08:15.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:08:15.346
  STEP: Creating configMap with name projected-configmap-test-volume-map-66a9dd3b-ab55-4247-b7d7-facc5508d3f7 @ 03/27/24 21:08:15.351
  STEP: Creating a pod to test consume configMaps @ 03/27/24 21:08:15.368
  E0327 21:08:15.420958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:16.422174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:17.422441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:18.422636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:19.422873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/27/24 21:08:19.443
  Mar 27 21:08:19.451: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-c0e2407c-041f-40d2-af7f-3f8c0bc62317 container agnhost-container: <nil>
  STEP: delete the pod @ 03/27/24 21:08:19.487
  Mar 27 21:08:19.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7746" for this suite. @ 03/27/24 21:08:19.591
• [4.327 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 03/27/24 21:08:19.616
  Mar 27 21:08:19.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename kubectl @ 03/27/24 21:08:19.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:08:19.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:08:19.695
  Mar 27 21:08:19.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3422658598 --namespace=kubectl-5918 version'
  Mar 27 21:08:19.866: INFO: stderr: ""
  Mar 27 21:08:19.866: INFO: stdout: "Client Version: v1.28.6\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.6\n"
  Mar 27 21:08:19.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5918" for this suite. @ 03/27/24 21:08:19.884
• [0.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 03/27/24 21:08:19.921
  Mar 27 21:08:19.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  STEP: Building a namespace api object, basename field-validation @ 03/27/24 21:08:19.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/27/24 21:08:19.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/27/24 21:08:19.981
  Mar 27 21:08:19.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3422658598
  E0327 21:08:20.424087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:21.424432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:22.424910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:23.426069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:24.426339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:25.426999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:26.427187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0327 21:08:27.427990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 27 21:08:28.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6041" for this suite. @ 03/27/24 21:08:28.264
• [8.359 seconds]
------------------------------
SSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Mar 27 21:08:28.283: INFO: Running AfterSuite actions on node 1
  Mar 27 21:08:28.283: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.101 seconds]
------------------------------

Ran 380 of 7389 Specs in 6607.645 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h50m8.47046704s
Test Suite Passed
